android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    193:198:void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.b:
    40:41:void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.c:
    29:30:void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.d:
    boolean SUPPORTS_TRANSITIONS -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    android.support.v4.app.BackStackRecord$Op mHead -> c
    android.support.v4.app.BackStackRecord$Op mTail -> d
    int mNumOp -> e
    int mEnterAnim -> f
    int mExitAnim -> g
    int mPopEnterAnim -> h
    int mPopExitAnim -> i
    int mTransition -> j
    int mTransitionStyle -> k
    boolean mAddToBackStack -> l
    boolean mAllowAddToBackStack -> m
    java.lang.String mName -> n
    boolean mCommitted -> o
    int mIndex -> p
    int mBreadCrumbTitleRes -> q
    java.lang.CharSequence mBreadCrumbTitleText -> r
    int mBreadCrumbShortTitleRes -> s
    java.lang.CharSequence mBreadCrumbShortTitleText -> t
    java.util.ArrayList mSharedElementSourceNames -> u
    java.util.ArrayList mSharedElementTargetNames -> v
    245:257:java.lang.String toString() -> toString
    261:262:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    265:355:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    230:359:void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    388:400:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    592:614:void bumpBackStackNesting(int) -> a
    643:747:void run() -> run
    751:763:void setFirstOut(android.util.SparseArray,android.util.SparseArray,android.support.v4.app.Fragment) -> a
    767:778:void setLastIn(android.util.SparseArray,android.util.SparseArray,android.support.v4.app.Fragment) -> b
    791:837:void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    850:886:void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    890:984:android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    988:988:java.lang.String getName() -> a
    1036:1068:android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    1076:1084:void ensureFragmentsAreInitialized(android.util.SparseArray) -> a
    1087:1090:java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> a
    1095:1098:java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> b
    1104:1107:java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> a
    1114:1118:java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> a
    1123:1148:android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    1165:1259:boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    1266:1291:void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> a
    1295:1303:void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    1306:1314:void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    1319:1336:android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    1349:1360:android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    1374:1387:android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> b
    1392:1400:void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    1403:1422:void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    1426:1435:void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    1439:1446:void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> a
    1450:1464:void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    1468:1478:void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    192:192:android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    192:192:void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    192:192:void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    192:192:void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    195:195:void <clinit>() -> <clinit>
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.d$1:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    1221:1221:void <init>(android.support.v4.app.BackStackRecord,android.support.v4.app.Fragment) -> <init>
    1224:1224:android.view.View getView() -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.d$2:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    1267:1267:void <init>(android.support.v4.app.BackStackRecord,android.view.View,java.lang.Object,java.util.ArrayList,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> <init>
    1270:1288:boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.d$3:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    1393:1393:void <init>(android.support.v4.app.BackStackRecord,android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> <init>
    1395:1397:boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.d$a:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    208:208:void <init>() -> <init>
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.d$b:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    1480:1484:void <init>(android.support.v4.app.BackStackRecord) -> <init>
android.support.v4.app.BackStackState -> android.support.v4.app.e:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    48:91:void <init>(android.support.v4.app.BackStackRecord) -> <init>
    93:105:void <init>(android.os.Parcel) -> <init>
    108:156:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    160:160:int describeContents() -> describeContents
    164:175:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    177:177:void <clinit>() -> <clinit>
android.support.v4.app.BackStackState$1 -> android.support.v4.app.e$1:
    178:178:void <init>() -> <init>
    180:180:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    184:184:android.support.v4.app.BackStackState[] newArray(int) -> a
    178:178:java.lang.Object[] newArray(int) -> newArray
    178:178:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BaseFragmentActivityDonut -> android.support.v4.app.f:
    29:29:void <init>() -> <init>
    33:40:void onCreate(android.os.Bundle) -> onCreate
    44:48:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.app.BaseFragmentActivityHoneycomb -> android.support.v4.app.g:
    27:27:void <init>() -> <init>
    31:36:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.Fragment -> android.support.v4.app.h:
    android.support.v4.util.SimpleArrayMap sClassMap -> Z
    java.lang.Object USE_DEFAULT_TRANSITION -> a
    int mState -> b
    android.view.View mAnimatingAway -> c
    int mStateAfterAnimating -> d
    android.os.Bundle mSavedFragmentState -> e
    android.util.SparseArray mSavedViewState -> f
    int mIndex -> g
    java.lang.String mWho -> h
    android.os.Bundle mArguments -> i
    android.support.v4.app.Fragment mTarget -> j
    int mTargetIndex -> k
    int mTargetRequestCode -> l
    boolean mAdded -> m
    boolean mRemoving -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentHostCallback mHost -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    java.lang.Object mEnterTransition -> P
    java.lang.Object mReturnTransition -> Q
    java.lang.Object mExitTransition -> R
    java.lang.Object mReenterTransition -> S
    java.lang.Object mSharedElementEnterTransition -> T
    java.lang.Object mSharedElementReturnTransition -> U
    java.lang.Boolean mAllowReturnTransitionOverlap -> V
    java.lang.Boolean mAllowEnterTransitionOverlap -> W
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> X
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> Y
    181:388:void <init>() -> <init>
    395:395:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    414:435:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    451:459:boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    464:474:void restoreViewState(android.os.Bundle) -> a
    477:483:void setIndex(int,android.support.v4.app.Fragment) -> a
    486:486:boolean isInBackStack() -> a
    493:493:boolean equals(java.lang.Object) -> equals
    500:500:int hashCode() -> hashCode
    505:520:java.lang.String toString() -> toString
    620:620:android.support.v4.app.FragmentActivity getActivity() -> b
    635:638:android.content.res.Resources getResources() -> c
    693:705:android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    720:720:boolean isAdded() -> e
    778:778:boolean isHidden() -> f
    799:799:void onHiddenChanged(boolean) -> a
    958:958:void onActivityResult(int,int,android.content.Intent) -> a
    1054:1054:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
    1089:1092:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    1138:1144:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> a
    1153:1154:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    1161:1167:void onAttach(android.content.Context) -> a
    1176:1177:void onAttach(android.app.Activity) -> a
    1183:1183:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    1201:1202:void onCreate(android.os.Bundle) -> c
    1226:1226:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    1240:1240:void onViewCreated(android.view.View,android.os.Bundle) -> a
    1250:1250:android.view.View getView() -> g
    1267:1268:void onActivityCreated(android.os.Bundle) -> d
    1282:1283:void onViewStateRestored(android.os.Bundle) -> e
    1291:1303:void onStart() -> h
    1312:1313:void onResume() -> i
    1335:1335:void onSaveInstanceState(android.os.Bundle) -> f
    1338:1339:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1347:1348:void onPause() -> j
    1356:1357:void onStop() -> k
    1360:1361:void onLowMemory() -> onLowMemory
    1373:1374:void onDestroyView() -> l
    1381:1391:void onDestroy() -> m
    1400:1420:void initState() -> n
    1427:1428:void onDetach() -> o
    1444:1444:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1461:1461:void onPrepareOptionsMenu(android.view.Menu) -> a
    1471:1471:void onDestroyOptionsMenu() -> p
    1492:1492:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    1503:1503:void onOptionsMenuClosed(android.view.Menu) -> b
    1524:1525:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1570:1570:boolean onContextItemSelected(android.view.MenuItem) -> b
    1619:1619:java.lang.Object getEnterTransition() -> q
    1653:1653:java.lang.Object getReturnTransition() -> r
    1687:1687:java.lang.Object getExitTransition() -> s
    1720:1720:java.lang.Object getReenterTransition() -> t
    1747:1747:java.lang.Object getSharedElementEnterTransition() -> u
    1779:1779:java.lang.Object getSharedElementReturnTransition() -> v
    1804:1804:boolean getAllowEnterTransitionOverlap() -> w
    1828:1828:boolean getAllowReturnTransitionOverlap() -> x
    1841:1914:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    1917:1923:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    1927:1943:void instantiateChildFragmentManager() -> y
    1946:1967:void performCreate(android.os.Bundle) -> g
    1971:1974:android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    1978:1991:void performActivityCreated(android.os.Bundle) -> h
    1994:2011:void performStart() -> z
    2014:2029:void performResume() -> A
    2032:2036:void performConfigurationChanged(android.content.res.Configuration) -> a
    2039:2043:void performLowMemory() -> B
    2055:2065:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    2069:2079:boolean performPrepareOptionsMenu(android.view.Menu) -> c
    2083:2095:boolean performOptionsItemSelected(android.view.MenuItem) -> c
    2099:2109:boolean performContextItemSelected(android.view.MenuItem) -> d
    2113:2121:void performOptionsMenuClosed(android.view.Menu) -> d
    2124:2131:void performSaveInstanceState(android.os.Bundle) -> i
    2134:2144:void performPause() -> C
    2147:2157:void performStop() -> D
    2160:2178:void performReallyStop() -> E
    2181:2194:void performDestroyView() -> F
    2197:2207:void performDestroy() -> G
    169:172:void <clinit>() -> <clinit>
android.support.v4.app.Fragment$1 -> android.support.v4.app.h$1:
    android.support.v4.app.Fragment this$0 -> a
    1928:1928:void <init>(android.support.v4.app.Fragment) -> <init>
    1932:1935:android.view.View onFindViewById(int) -> a
    1940:1940:boolean onHasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.h$a:
    366:367:void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentController mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    int mNextCandidateRequestIndex -> i
    boolean mStartedActivityFromFragment -> j
    android.support.v4.util.SparseArrayCompat mPendingFragmentActivityResults -> k
    80:972:void <init>() -> <init>
    161:182:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    189:192:void onBackPressed() -> onBackPressed
    237:238:void supportFinishAfterTransition() -> a
    286:288:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    296:333:void onCreate(android.os.Bundle) -> onCreate
    340:351:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    365:371:void onDestroy() -> onDestroy
    378:387:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    395:397:void onLowMemory() -> onLowMemory
    404:416:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    425:431:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    438:445:void onPause() -> onPause
    459:461:void onNewIntent(android.content.Intent) -> onNewIntent
    467:468:void onStateNotSaved() -> onStateNotSaved
    481:485:void onResume() -> onResume
    492:496:void onPostResume() -> onPostResume
    505:506:void onResumeFragments() -> b
    513:523:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    530:530:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    540:557:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    565:582:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    590:610:void onStart() -> onStart
    617:623:void onStop() -> onStop
    634:634:java.lang.Object onRetainCustomNonConfigurationInstance() -> c
    656:666:void supportInvalidateOptionsMenu() -> d
    679:696:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    699:761:java.lang.String viewToString(android.view.View) -> a
    765:783:void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    786:792:void doReallyStop(boolean) -> a
    802:805:void onReallyStop() -> e
    816:816:void onAttachFragment(android.support.v4.app.Fragment) -> a
    838:844:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    880:897:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    80:80:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    80:80:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> a
    97:97:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    100:113:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$a:
    android.support.v4.app.FragmentActivity this$0 -> a
    973:975:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    979:980:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    984:984:boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> a
    989:989:android.view.LayoutInflater onGetLayoutInflater() -> b
    999:1000:void onSupportInvalidateOptionsMenu() -> c
    1028:1028:boolean onHasWindowAnimations() -> d
    1033:1034:int onGetWindowAnimations() -> e
    1039:1040:void onAttachFragment(android.support.v4.app.Fragment) -> b
    1045:1045:android.view.View onFindViewById(int) -> a
    1050:1051:boolean onHasView() -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$b:
    java.lang.Object custom -> a
    java.util.List fragments -> b
    android.support.v4.util.SimpleArrayMap loaders -> c
    144:144:void <init>() -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.i:
    11:11:void <init>() -> <init>
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> a
android.support.v4.app.FragmentController -> android.support.v4.app.j:
    android.support.v4.app.FragmentHostCallback mHost -> a
    48:48:android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> a
    51:53:void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    59:59:android.support.v4.app.FragmentManager getSupportFragmentManager() -> a
    74:74:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    104:106:void attachHost(android.support.v4.app.Fragment) -> a
    120:120:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    127:128:void noteStateNotSaved() -> b
    134:134:android.os.Parcelable saveAllState() -> c
    144:145:void restoreAllState(android.os.Parcelable,java.util.List) -> a
    152:152:java.util.List retainNonConfig() -> d
    163:164:void dispatchCreate() -> e
    174:175:void dispatchActivityCreated() -> f
    185:186:void dispatchStart() -> g
    196:197:void dispatchResume() -> h
    207:208:void dispatchPause() -> i
    218:219:void dispatchStop() -> j
    222:223:void dispatchReallyStop() -> k
    244:245:void dispatchDestroy() -> l
    255:256:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    267:268:void dispatchLowMemory() -> m
    279:279:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    291:291:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    304:304:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    317:317:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    328:329:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    339:339:boolean execPendingActions() -> n
    346:347:void doLoaderStart() -> o
    357:358:void doLoaderStop(boolean) -> a
    371:372:void doLoaderDestroy() -> p
    378:379:void reportLoaderStart() -> q
    386:386:android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> r
    396:397:void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> a
    403:404:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.k:
    android.app.Activity mActivity -> a
    android.content.Context mContext -> b
    android.os.Handler mHandler -> e
    int mWindowAnimations -> c
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> d
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> f
    boolean mRetainLoaders -> g
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    61:62:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    45:70:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    82:82:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    88:88:boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> a
    96:96:android.view.LayoutInflater onGetLayoutInflater() -> b
    112:112:void onSupportInvalidateOptionsMenu() -> c
    155:155:boolean onHasWindowAnimations() -> d
    162:162:int onGetWindowAnimations() -> e
    168:168:android.view.View onFindViewById(int) -> a
    173:173:boolean onHasView() -> a
    177:177:android.app.Activity getActivity() -> f
    181:181:android.content.Context getContext() -> g
    185:185:android.os.Handler getHandler() -> h
    189:189:android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> i
    203:210:void inactivateFragment(java.lang.String) -> a
    213:213:void onAttachFragment(android.support.v4.app.Fragment) -> b
    216:216:boolean getRetainLoaders() -> j
    220:235:void doLoaderStart() -> k
    239:255:void doLoaderStop(boolean) -> a
    265:269:void doLoaderDestroy() -> l
    272:284:void reportLoaderStart() -> m
    287:299:android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
    303:326:android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> n
    330:331:void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> a
    334:342:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> b
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    71:128:void <init>() -> <init>
    boolean popBackStackImmediate() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.l$a:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentHostCallback mHost -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    java.lang.reflect.Field sAnimationListenerField -> r
    boolean mNeedMenuInvalidate -> s
    boolean mStateSaved -> t
    boolean mDestroyed -> u
    java.lang.String mNoTransactionsBecause -> v
    boolean mHavePendingDeferredStart -> w
    android.os.Bundle mStateBundle -> x
    android.util.SparseArray mStateArray -> y
    java.lang.Runnable mExecCommit -> z
    android.view.animation.Interpolator DECELERATE_QUINT -> A
    android.view.animation.Interpolator DECELERATE_CUBIC -> B
    android.view.animation.Interpolator ACCELERATE_QUINT -> C
    android.view.animation.Interpolator ACCELERATE_CUBIC -> D
    405:2335:void <init>() -> <init>
    522:532:boolean modifiesAlpha(android.view.animation.Animation) -> a
    536:536:boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation) -> a
    543:560:void throwException(java.lang.RuntimeException) -> a
    570:570:boolean executePendingTransactions() -> b
    584:586:boolean popBackStackImmediate() -> a
    654:659:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    663:676:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    704:714:java.lang.String toString() -> toString
    719:828:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    839:849:android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    853:856:android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    861:915:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    919:928:void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    938:960:void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation) -> b
    965:1227:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    1230:1231:void moveToState(android.support.v4.app.Fragment) -> b
    1234:1235:void moveToState(int,boolean) -> a
    1238:1268:void moveToState(int,int,int,boolean) -> a
    1271:1279:void startPendingDeferredFragments() -> c
    1282:1298:void makeActive(android.support.v4.app.Fragment) -> c
    1301:1313:void makeInactive(android.support.v4.app.Fragment) -> d
    1316:1335:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1338:1352:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1355:1372:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1375:1392:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1395:1411:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1414:1433:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1436:1454:android.support.v4.app.Fragment findFragmentById(int) -> a
    1458:1476:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1480:1488:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    1492:1500:void checkStateLoss() -> t
    1549:1571:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1574:1582:void freeBackStackIndex(int) -> b
    1588:1637:boolean execPendingActions() -> d
    1641:1646:void reportBackStackChanged() -> e
    1649:1654:void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    1658:1727:boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    1731:1746:java.util.ArrayList retainNonConfig() -> f
    1750:1763:void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    1766:1795:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    1801:1911:android.os.Parcelable saveAllState() -> g
    1917:2025:void restoreAllState(android.os.Parcelable,java.util.List) -> a
    2029:2033:void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    2036:2037:void noteStateNotSaved() -> h
    2040:2042:void dispatchCreate() -> i
    2045:2047:void dispatchActivityCreated() -> j
    2050:2052:void dispatchStart() -> k
    2055:2057:void dispatchResume() -> l
    2060:2061:void dispatchPause() -> m
    2067:2070:void dispatchStop() -> n
    2073:2074:void dispatchReallyStop() -> o
    2077:2078:void dispatchDestroyView() -> p
    2081:2087:void dispatchDestroy() -> q
    2090:2098:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    2101:2109:void dispatchLowMemory() -> r
    2112:2140:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    2144:2155:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    2159:2169:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    2173:2183:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    2187:2195:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    2198:2210:int reverseTransit(int) -> c
    2222:2234:int transitToStyleIndex(int,boolean) -> b
    2239:2328:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    2332:2332:android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> s
    406:833:void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.m$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    514:514:void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    517:518:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.m$2:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    1152:1152:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment) -> <init>
    1155:1161:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.m$a:
    android.view.animation.Animation$AnimationListener mOrignalListener -> a
    boolean mShouldRunOnHWLayer -> b
    android.view.View mView -> c
    418:426:void <init>(android.view.View,android.view.animation.Animation) -> <init>
    418:435:void <init>(android.view.View,android.view.animation.Animation,android.view.animation.Animation$AnimationListener) -> <init>
    440:454:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    459:470:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    474:477:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    417:417:android.view.View access$000(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> a
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.m$a$1:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$0 -> a
    443:443:void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    446:447:void run() -> run
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2 -> android.support.v4.app.m$a$2:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$0 -> a
    460:460:void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    463:464:void run() -> run
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.m$b:
    int[] Fragment -> a
    2336:2336:void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerState -> android.support.v4.app.n:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    371:372:void <init>() -> <init>
    374:378:void <init>(android.os.Parcel) -> <init>
    381:381:int describeContents() -> describeContents
    385:388:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    390:390:void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.n$1:
    391:391:void <init>() -> <init>
    393:393:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    397:397:android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    391:391:java.lang.Object[] newArray(int) -> newArray
    391:391:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.o:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    67:77:void <init>(android.support.v4.app.Fragment) -> <init>
    79:90:void <init>(android.os.Parcel) -> <init>
    93:121:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment) -> a
    125:125:int describeContents() -> describeContents
    129:139:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    141:141:void <clinit>() -> <clinit>
android.support.v4.app.FragmentState$1 -> android.support.v4.app.o$1:
    142:142:void <init>() -> <init>
    144:144:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    148:148:android.support.v4.app.FragmentState[] newArray(int) -> a
    142:142:java.lang.Object[] newArray(int) -> newArray
    142:142:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.p:
    38:165:void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.q:
    33:33:java.lang.String getTransitionName(android.view.View) -> a
    37:40:java.lang.Object cloneTransition(java.lang.Object) -> a
    45:57:java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> a
    61:63:void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    66:68:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    71:80:void setEpicenter(java.lang.Object,android.view.View) -> a
    83:92:java.lang.Object wrapSharedElementTransition(java.lang.Object) -> b
    112:157:void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList) -> a
    162:214:java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    226:239:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList) -> a
    246:264:void bfsAddViewChildren(java.util.List,android.view.View) -> a
    271:276:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> a
    281:294:void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> a
    297:302:android.graphics.Rect getBoundsOnScreen(android.view.View) -> c
    306:322:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> b
    325:339:void findNamedViews(java.util.Map,android.view.View) -> a
    347:379:void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    387:405:void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    416:434:void addTargets(java.lang.Object,java.util.ArrayList) -> b
    437:437:boolean hasSimpleTarget(android.transition.Transition) -> a
    443:443:boolean isNullOrEmpty(java.util.List) -> a
    31:31:void access$000(java.util.ArrayList,android.view.View) -> a
    31:31:android.graphics.Rect access$100(android.view.View) -> b
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.q$1:
    android.graphics.Rect val$epicenter -> a
    74:74:void <init>(android.graphics.Rect) -> <init>
    77:77:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.q$2:
    android.view.View val$container -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> d
    java.util.Map val$nameOverrides -> e
    java.util.Map val$renamedViews -> f
    java.util.ArrayList val$enteringViews -> g
    124:124:void <init>(android.view.View,android.transition.Transition,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,java.util.Map,java.util.Map,java.util.ArrayList) -> <init>
    126:151:boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.q$3:
    android.graphics.Rect mEpicenter -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> a
    282:282:void <init>(android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> <init>
    287:290:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.q$4:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    java.util.ArrayList val$enteringViews -> c
    android.transition.Transition val$exitTransition -> d
    java.util.ArrayList val$exitingViews -> e
    android.transition.Transition val$sharedElementTransition -> f
    java.util.ArrayList val$sharedElementTargets -> g
    java.util.Map val$renamedViews -> h
    java.util.ArrayList val$hiddenViews -> i
    android.transition.Transition val$overallTransition -> j
    android.view.View val$nonExistentView -> k
    353:353:void <init>(android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.Map,java.util.ArrayList,android.transition.Transition,android.view.View) -> <init>
    355:375:boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.q$a:
    android.view.View epicenter -> a
    450:450:void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.q$b:
    android.view.View getView() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.r:
    39:43:void <init>() -> <init>
    184:184:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.r$a:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.s:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    android.support.v4.app.FragmentHostCallback mHost -> g
    197:530:void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean) -> <init>
    533:534:void updateHostController(android.support.v4.app.FragmentHostCallback) -> a
    752:767:void doStart() -> b
    770:782:void doStop() -> c
    785:798:void doRetain() -> d
    801:809:void finishRetain() -> e
    812:815:void doReportNextStart() -> f
    818:821:void doReportStart() -> g
    824:837:void doDestroy() -> h
    841:847:java.lang.String toString() -> toString
    852:872:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    876:882:boolean hasRunningLoaders() -> a
    190:190:android.support.v4.app.FragmentHostCallback access$000(android.support.v4.app.LoaderManagerImpl) -> a
    192:192:void <clinit>() -> <clinit>
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.s$a:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    242:275:void start() -> a
    278:283:void retain() -> b
    286:308:void finishRetain() -> c
    311:319:void reportStart() -> d
    322:333:void stop() -> e
    345:378:void destroy() -> f
    467:484:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    488:496:java.lang.String toString() -> toString
    500:523:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.t:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    45:46:void <init>(android.content.Context) -> <init>
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.u:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.v:
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompat -> android.support.v4.app.w:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    792:795:void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> b
    799:825:void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> b
    42:42:void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    42:42:void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    42:42:android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
    828:845:void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.w$a:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    1839:1839:int getIcon() -> a
    1844:1844:java.lang.CharSequence getTitle() -> b
    1849:1849:android.app.PendingIntent getActionIntent() -> c
    1857:1857:android.os.Bundle getExtras() -> d
    1866:1866:android.support.v4.app.RemoteInput[] getRemoteInputs() -> e
    1806:1806:android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
    2169:2169:void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.w$a$1:
    2169:2169:void <init>() -> <init>
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.w$b:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
    1634:1635:void <init>() -> <init>
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.w$c:
    java.lang.CharSequence mBigText -> a
    1701:1702:void <init>() -> <init>
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.w$d:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mShowWhen -> k
    boolean mUseChronometer -> l
    android.support.v4.app.NotificationCompat$Style mStyle -> m
    java.lang.CharSequence mSubText -> n
    int mProgressMax -> o
    int mProgress -> p
    boolean mProgressIndeterminate -> q
    java.lang.String mGroupKey -> r
    boolean mGroupSummary -> s
    java.lang.String mSortKey -> t
    java.util.ArrayList mActions -> u
    boolean mLocalOnly -> v
    java.lang.String mCategory -> w
    android.os.Bundle mExtras -> x
    int mColor -> y
    int mVisibility -> z
    android.app.Notification mPublicVersion -> A
    android.app.Notification mNotification -> B
    java.util.ArrayList mPeople -> C
    896:941:void <init>(android.content.Context) -> <init>
    948:949:android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    985:986:android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    1009:1010:android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    1017:1018:android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    1081:1082:android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    1126:1127:android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    1243:1244:android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    1289:1294:void setFlag(int,boolean) -> a
    1559:1559:android.app.Notification build() -> a
    1566:1566:android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> b
    1570:1574:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> d
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.w$e:
    469:469:void <init>() -> <init>
    471:471:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.w$f:
    java.util.ArrayList mTexts -> a
    1761:1764:void <init>() -> <init>
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.w$g:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.w$h:
    702:702:void <init>() -> <init>
    705:713:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.w$i:
    756:756:void <init>() -> <init>
    759:768:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.w$j:
    475:475:void <init>() -> <init>
    478:485:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.w$k:
    552:552:void <init>() -> <init>
    555:562:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.w$l:
    566:566:void <init>() -> <init>
    569:569:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.w$m:
    575:575:void <init>() -> <init>
    578:583:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.w$n:
    587:587:void <init>() -> <init>
    590:598:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.w$o:
    651:651:void <init>() -> <init>
    654:662:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.w$p:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
    1585:1589:void <init>() -> <init>
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.x:
    102:114:void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.x$a:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    43:82:void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    86:87:void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    91:91:android.app.Notification$Builder getBuilder() -> a
    96:97:android.app.Notification build() -> b
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.y:
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.y$a:
    android.app.Notification$Builder b -> a
    67:106:void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String) -> <init>
    110:111:void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    115:115:android.app.Notification$Builder getBuilder() -> a
    120:120:android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.z:
    62:63:android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.z$a:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.z$a$a:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.aa:
    27:29:android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.ab:
    30:52:android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ac:
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.v4.app.ac$a:
    android.app.Notification$Builder b -> a
    34:57:void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> <init>
    61:61:android.app.Notification$Builder getBuilder() -> a
    66:66:android.app.Notification build() -> b
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.ad:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    156:162:void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    168:177:void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    182:190:void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    194:204:android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    212:240:android.os.Bundle getExtras(android.app.Notification) -> a
    258:264:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
    52:56:void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.ad$a:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    68:120:void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    124:125:void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    129:129:android.app.Notification$Builder getBuilder() -> a
    133:149:android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.ae:
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.ae$a:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    35:93:void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    97:98:void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    102:102:android.app.Notification$Builder getBuilder() -> a
    107:115:android.app.Notification build() -> b
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    44:73:void <init>() -> <init>
android.support.v4.app.RemoteInput -> android.support.v4.app.af:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    57:57:java.lang.String getResultKey() -> a
    64:64:java.lang.CharSequence getLabel() -> b
    71:71:java.lang.CharSequence[] getChoices() -> c
    81:81:boolean getAllowFreeFormInput() -> d
    88:88:android.os.Bundle getExtras() -> e
    253:263:void <clinit>() -> <clinit>
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.af$1:
    263:263:void <init>() -> <init>
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.af$a:
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.af$b:
    240:240:void <init>() -> <init>
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.af$c:
    215:215:void <init>() -> <init>
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.af$d:
    228:228:void <init>() -> <init>
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.ag:
    39:52:android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.ah:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.ah$a:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.ah$a$a:
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.ai:
    47:53:android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> a
    69:76:android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.SharedElementCallback -> android.support.v4.app.aj:
    int MAX_IMAGE_SIZE -> a
    79:79:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    110:110:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    145:145:void onMapSharedElements(java.util.List,java.util.Map) -> a
    45:45:void <clinit>() -> <clinit>
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ak:
    23:24:void <init>(java.lang.String) -> <init>
android.support.v4.content.ContextCompat -> android.support.v4.a.a:
android.support.v4.content.Loader -> android.support.v4.a.b:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> c
    boolean mStarted -> d
    boolean mAbandoned -> e
    boolean mReset -> f
    boolean mContentChanged -> g
    boolean mProcessingChange -> h
    164:169:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    177:184:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    196:200:void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> a
    211:218:void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> b
    269:273:void startLoading() -> a
    281:281:void onStartLoading() -> b
    360:362:void stopLoading() -> c
    371:371:void onStopLoading() -> d
    420:426:void reset() -> e
    435:435:void onReset() -> f
    497:500:java.lang.String dataToString(java.lang.Object) -> a
    505:510:java.lang.String toString() -> toString
    522:533:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.a.b$a:
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b$b:
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.a:
android.support.v4.media.MediaBrowserCompat$1 -> android.support.v4.media.a$1:
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.a$a:
    int mFlags -> a
    android.support.v4.media.MediaDescriptionCompat mDescription -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    321:324:void <init>(android.os.Parcel) -> <init>
    328:328:int describeContents() -> describeContents
    333:335:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    339:343:java.lang.String toString() -> toString
    277:277:void <init>(android.os.Parcel,android.support.v4.media.MediaBrowserCompat$1) -> <init>
    346:346:void <clinit>() -> <clinit>
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.a$a$1:
    347:347:void <init>() -> <init>
    350:350:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> a
    355:355:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> a
    347:347:java.lang.Object[] newArray(int) -> newArray
    347:347:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaBrowserCompatUtils -> android.support.v4.media.b:
    28:37:boolean areSameOptions(android.os.Bundle,android.os.Bundle) -> a
    79:92:java.util.List applyOptions(java.util.List,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserServiceCompat -> android.support.v4.media.MediaBrowserServiceCompat:
    android.support.v4.util.ArrayMap mConnections -> b
    android.support.v4.media.MediaBrowserServiceCompat$ServiceHandler mHandler -> c
    android.support.v4.media.session.MediaSessionCompat$Token mSession -> a
    73:947:void <init>() -> <init>
    android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> a
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result) -> a
    684:686:void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result,android.os.Bundle) -> a
    705:706:void onLoadItem(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result) -> b
    807:818:boolean isValidPackage(java.lang.String,int) -> a
    826:839:void addSubscription(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle) -> a
    845:859:boolean removeSubscription(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle) -> b
    869:904:void performLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle) -> c
    925:941:void performLoadItem(java.lang.String,android.support.v4.os.ResultReceiver) -> a
    73:73:android.support.v4.media.MediaBrowserServiceCompat$ServiceHandler access$100(android.support.v4.media.MediaBrowserServiceCompat) -> a
    73:73:boolean access$400(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,int) -> a
    73:73:android.support.v4.util.ArrayMap access$500(android.support.v4.media.MediaBrowserServiceCompat) -> b
    73:73:void access$700(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle) -> a
    73:73:boolean access$800(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle) -> b
    73:73:void access$900(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,android.support.v4.os.ResultReceiver) -> a
android.support.v4.media.MediaBrowserServiceCompat$1 -> android.support.v4.media.MediaBrowserServiceCompat$1:
    android.support.v4.media.session.MediaSessionCompat$Token val$token -> a
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> b
    727:737:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$3 -> android.support.v4.media.MediaBrowserServiceCompat$2:
    android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord val$connection -> a
    java.lang.String val$parentId -> b
    android.os.Bundle val$options -> c
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> d
    870:870:void <init>(android.support.v4.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> <init>
    873:891:void onResultSent(java.util.List,int) -> a
    870:870:void onResultSent(java.lang.Object,int) -> a
android.support.v4.media.MediaBrowserServiceCompat$4 -> android.support.v4.media.MediaBrowserServiceCompat$3:
    android.support.v4.os.ResultReceiver val$receiver -> a
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> b
    926:926:void <init>(android.support.v4.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    929:932:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem,int) -> a
    926:926:void onResultSent(java.lang.Object,int) -> a
android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot -> android.support.v4.media.MediaBrowserServiceCompat$a:
    java.lang.String mRootId -> a
    android.os.Bundle mExtras -> b
    1022:1022:java.lang.String getRootId() -> a
    1029:1029:android.os.Bundle getExtras() -> b
android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord -> android.support.v4.media.MediaBrowserServiceCompat$b:
    java.lang.String pkg -> a
    android.os.Bundle rootHints -> b
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks callbacks -> c
    android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot root -> d
    java.util.HashMap subscriptions -> e
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> f
    220:225:void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    220:220:void <init>(android.support.v4.media.MediaBrowserServiceCompat,android.support.v4.media.MediaBrowserServiceCompat$1) -> <init>
android.support.v4.media.MediaBrowserServiceCompat$Result -> android.support.v4.media.MediaBrowserServiceCompat$c:
    java.lang.Object mDebug -> a
    boolean mDetachCalled -> b
    boolean mSendResultCalled -> c
    int mFlags -> d
    247:249:void <init>(java.lang.Object) -> <init>
    255:260:void sendResult(java.lang.Object) -> a
    279:279:boolean isDone() -> a
    283:284:void setFlags(int) -> a
    291:291:void onResultSent(java.lang.Object,int) -> a
android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks -> android.support.v4.media.MediaBrowserServiceCompat$d:
    android.os.IBinder asBinder() -> a
    void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> a
    void onConnectFailed() -> b
    void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacksCompat -> android.support.v4.media.MediaBrowserServiceCompat$e:
    android.os.Messenger mCallbacks -> a
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> b
    510:512:void <init>(android.support.v4.media.MediaBrowserServiceCompat,android.os.Messenger) -> <init>
    515:515:android.os.IBinder asBinder() -> a
    520:529:void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> a
    532:533:void onConnectFailed() -> b
    537:545:void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle) -> a
    548:553:void sendRequest(int,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserServiceCompat$ServiceHandler -> android.support.v4.media.MediaBrowserServiceCompat$f:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl mServiceImpl -> b
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> a
    154:155:void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    159:192:void handleMessage(android.os.Message) -> handleMessage
    198:201:boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
    205:210:void postOrRun(java.lang.Runnable) -> a
    154:154:void <init>(android.support.v4.media.MediaBrowserServiceCompat,android.support.v4.media.MediaBrowserServiceCompat$1) -> <init>
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl -> android.support.v4.media.MediaBrowserServiceCompat$g:
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> a
    294:294:void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    298:344:void connect(java.lang.String,int,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    347:359:void disconnect(android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    363:379:void addSubscription(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    383:401:void removeSubscription(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> b
    404:414:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver) -> a
    418:430:void registerCallbacks(android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> b
    434:441:void unregisterCallbacks(android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> c
    294:294:void <init>(android.support.v4.media.MediaBrowserServiceCompat,android.support.v4.media.MediaBrowserServiceCompat$1) -> <init>
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$1 -> android.support.v4.media.MediaBrowserServiceCompat$g$1:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    java.lang.String val$pkg -> b
    android.os.Bundle val$rootHints -> c
    int val$uid -> d
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> e
    303:303:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,int) -> <init>
    306:342:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$2 -> android.support.v4.media.MediaBrowserServiceCompat$g$2:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> b
    347:347:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    350:357:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$3 -> android.support.v4.media.MediaBrowserServiceCompat$g$3:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    java.lang.String val$id -> b
    android.os.Bundle val$options -> c
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> d
    363:363:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle) -> <init>
    366:377:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$4 -> android.support.v4.media.MediaBrowserServiceCompat$g$4:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    java.lang.String val$id -> b
    android.os.Bundle val$options -> c
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> d
    383:383:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle) -> <init>
    386:399:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$5 -> android.support.v4.media.MediaBrowserServiceCompat$g$5:
    java.lang.String val$mediaId -> a
    android.support.v4.os.ResultReceiver val$receiver -> b
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> c
    408:408:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,java.lang.String,android.support.v4.os.ResultReceiver) -> <init>
    411:412:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$6 -> android.support.v4.media.MediaBrowserServiceCompat$g$6:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> b
    418:418:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    421:428:void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl$7 -> android.support.v4.media.MediaBrowserServiceCompat$g$7:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl this$1 -> b
    434:434:void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    437:439:void run() -> run
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.c:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.net.Uri mMediaUri -> h
    java.lang.Object mDescriptionObj -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    87:96:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    98:107:void <init>(android.os.Parcel) -> <init>
    190:190:int describeContents() -> describeContents
    195:207:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    211:211:java.lang.String toString() -> toString
    226:254:java.lang.Object getMediaDescription() -> a
    270:307:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> a
    32:32:void <init>(android.os.Parcel,android.support.v4.media.MediaDescriptionCompat$1) -> <init>
    32:32:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri,android.support.v4.media.MediaDescriptionCompat$1) -> <init>
    310:310:void <clinit>() -> <clinit>
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.c$1:
    311:311:void <init>() -> <init>
    314:317:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> a
    323:323:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> a
    311:311:java.lang.Object[] newArray(int) -> newArray
    311:311:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.c$a:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.net.Uri mMediaUri -> h
    343:344:void <init>() -> <init>
    353:354:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> a
    364:365:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> a
    375:376:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> b
    387:388:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> c
    399:400:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> a
    411:412:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> a
    422:423:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> a
    433:434:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> b
    444:444:android.support.v4.media.MediaDescriptionCompat build() -> a
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.d:
    27:27:java.lang.String getMediaId(java.lang.Object) -> a
    31:31:java.lang.CharSequence getTitle(java.lang.Object) -> b
    35:35:java.lang.CharSequence getSubtitle(java.lang.Object) -> c
    39:39:java.lang.CharSequence getDescription(java.lang.Object) -> d
    43:43:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> e
    47:47:android.net.Uri getIconUri(java.lang.Object) -> f
    51:51:android.os.Bundle getExtras(java.lang.Object) -> g
    55:56:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    59:59:java.lang.Object fromParcel(android.os.Parcel) -> a
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.d$a:
    64:64:java.lang.Object newInstance() -> a
    69:70:void setMediaId(java.lang.Object,java.lang.String) -> a
    73:74:void setTitle(java.lang.Object,java.lang.CharSequence) -> a
    77:78:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> b
    81:82:void setDescription(java.lang.Object,java.lang.CharSequence) -> c
    85:86:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> a
    89:90:void setIconUri(java.lang.Object,android.net.Uri) -> a
    93:94:void setExtras(java.lang.Object,android.os.Bundle) -> a
    97:97:java.lang.Object build(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.e:
    23:23:android.net.Uri getMediaUri(java.lang.Object) -> h
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.e$a:
    28:29:void setMediaUri(java.lang.Object,android.net.Uri) -> b
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.a.a:
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.a.a$a:
    java.lang.Object mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    767:769:void <init>(java.lang.Object) -> <init>
    791:791:int describeContents() -> describeContents
    796:801:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    816:816:void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.a.a$a$1:
    817:817:void <init>() -> <init>
    821:826:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    831:831:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    817:817:java.lang.Object[] newArray(int) -> newArray
    817:817:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.IResultReceiver -> android.support.v4.b.a:
    void send(int,android.os.Bundle) -> a
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.b.a$a:
    15:17:void <init>() -> <init>
    24:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> a
    35:35:android.os.IBinder asBinder() -> asBinder
    39:62:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.b.a$a$a:
    android.os.IBinder mRemote -> a
    68:70:void <init>(android.os.IBinder) -> <init>
    73:73:android.os.IBinder asBinder() -> asBinder
    81:97:void send(int,android.os.Bundle) -> a
android.support.v4.os.ResultReceiver -> android.support.v4.b.b:
    boolean mLocal -> a
    android.os.Handler mHandler -> b
    android.support.v4.os.IResultReceiver mReceiver -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    88:103:void send(int,android.os.Bundle) -> a
    113:113:void onReceiveResult(int,android.os.Bundle) -> b
    116:116:int describeContents() -> describeContents
    120:126:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    128:132:void <init>(android.os.Parcel) -> <init>
    134:134:void <clinit>() -> <clinit>
android.support.v4.os.ResultReceiver$1 -> android.support.v4.b.b$1:
    135:135:void <init>() -> <init>
    137:137:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> a
    140:140:android.support.v4.os.ResultReceiver[] newArray(int) -> a
    135:135:java.lang.Object[] newArray(int) -> newArray
    135:135:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.b.b$a:
    android.support.v4.os.ResultReceiver this$0 -> a
    60:60:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    62:67:void send(int,android.os.Bundle) -> a
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.b.b$b:
    int mResultCode -> a
    android.os.Bundle mResultData -> b
    android.support.v4.os.ResultReceiver this$0 -> c
    50:53:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    56:57:void run() -> run
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    54:55:void <init>() -> <init>
    72:120:android.support.v4.util.MapCollections getCollection() -> b
    139:143:void putAll(java.util.Map) -> putAll
    161:161:boolean retainAll(java.util.Collection) -> a
    179:179:java.util.Set entrySet() -> entrySet
    191:191:java.util.Set keySet() -> keySet
    203:203:java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.a$1:
    android.support.v4.util.ArrayMap this$0 -> a
    73:73:void <init>(android.support.v4.util.ArrayMap) -> <init>
    76:76:int colGetSize() -> a
    81:81:java.lang.Object colGetEntry(int,int) -> a
    86:86:int colIndexOfKey(java.lang.Object) -> a
    91:91:int colIndexOfValue(java.lang.Object) -> b
    96:96:java.util.Map colGetMap() -> b
    101:102:void colPut(java.lang.Object,java.lang.Object) -> a
    106:106:java.lang.Object colSetValue(int,java.lang.Object) -> a
    111:112:void colRemoveAt(int) -> a
    116:117:void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.b:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    25:25:int idealIntArraySize(int) -> a
    33:37:int idealByteArraySize(int) -> b
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> a
    46:61:int binarySearch(int[],int,int) -> a
    20:22:void <clinit>() -> <clinit>
android.support.v4.util.DebugUtils -> android.support.v4.c.c:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.d:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    31:41:void <init>(java.lang.String) -> <init>
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.e:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    30:353:void <init>() -> <init>
    455:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    465:470:boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    474:481:boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    486:491:java.lang.Object[] toArrayHelper(int) -> b
    495:507:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    511:525:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    529:532:java.util.Set getEntrySet() -> d
    536:539:java.util.Set getKeySet() -> e
    543:546:java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.e$a:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    39:44:void <init>(android.support.v4.util.MapCollections,int) -> <init>
    48:48:boolean hasNext() -> hasNext
    53:56:java.lang.Object next() -> next
    61:68:void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.e$b:
    android.support.v4.util.MapCollections this$0 -> a
    163:163:void <init>(android.support.v4.util.MapCollections) -> <init>
    166:166:boolean add(java.util.Map$Entry) -> a
    171:175:boolean addAll(java.util.Collection) -> addAll
    180:181:void clear() -> clear
    185:193:boolean contains(java.lang.Object) -> contains
    198:204:boolean containsAll(java.util.Collection) -> containsAll
    209:209:boolean isEmpty() -> isEmpty
    214:214:java.util.Iterator iterator() -> iterator
    219:219:boolean remove(java.lang.Object) -> remove
    224:224:boolean removeAll(java.util.Collection) -> removeAll
    229:229:boolean retainAll(java.util.Collection) -> retainAll
    234:234:int size() -> size
    239:239:java.lang.Object[] toArray() -> toArray
    244:244:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    249:249:boolean equals(java.lang.Object) -> equals
    254:261:int hashCode() -> hashCode
    163:163:boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.e$c:
    android.support.v4.util.MapCollections this$0 -> a
    265:265:void <init>(android.support.v4.util.MapCollections) -> <init>
    269:269:boolean add(java.lang.Object) -> add
    274:274:boolean addAll(java.util.Collection) -> addAll
    279:280:void clear() -> clear
    284:284:boolean contains(java.lang.Object) -> contains
    289:289:boolean containsAll(java.util.Collection) -> containsAll
    294:294:boolean isEmpty() -> isEmpty
    299:299:java.util.Iterator iterator() -> iterator
    304:309:boolean remove(java.lang.Object) -> remove
    314:314:boolean removeAll(java.util.Collection) -> removeAll
    319:319:boolean retainAll(java.util.Collection) -> retainAll
    324:324:int size() -> size
    329:329:java.lang.Object[] toArray() -> toArray
    334:334:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    339:339:boolean equals(java.lang.Object) -> equals
    344:349:int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.e$d:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    74:79:void <init>(android.support.v4.util.MapCollections) -> <init>
    83:83:boolean hasNext() -> hasNext
    88:90:java.util.Map$Entry next() -> a
    95:102:void remove() -> remove
    106:110:java.lang.Object getKey() -> getKey
    115:119:java.lang.Object getValue() -> getValue
    124:128:java.lang.Object setValue(java.lang.Object) -> setValue
    133:141:boolean equals(java.lang.Object) -> equals
    147:153:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
    71:71:java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.e$e:
    android.support.v4.util.MapCollections this$0 -> a
    353:353:void <init>(android.support.v4.util.MapCollections) -> <init>
    357:357:boolean add(java.lang.Object) -> add
    362:362:boolean addAll(java.util.Collection) -> addAll
    367:368:void clear() -> clear
    372:372:boolean contains(java.lang.Object) -> contains
    377:383:boolean containsAll(java.util.Collection) -> containsAll
    388:388:boolean isEmpty() -> isEmpty
    393:393:java.util.Iterator iterator() -> iterator
    398:403:boolean remove(java.lang.Object) -> remove
    408:419:boolean removeAll(java.util.Collection) -> removeAll
    424:435:boolean retainAll(java.util.Collection) -> retainAll
    440:440:int size() -> size
    445:445:java.lang.Object[] toArray() -> toArray
    450:450:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.f:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    62:96:int indexOf(java.lang.Object,int) -> a
    100:134:int indexOfNull() -> a
    138:170:void allocArrays(int) -> e
    173:202:void freeArrays(int[],java.lang.Object[],int) -> a
    208:212:void <init>() -> <init>
    241:247:void clear() -> clear
    254:264:void ensureCapacity(int) -> a
    273:273:boolean containsKey(java.lang.Object) -> containsKey
    283:283:int indexOfKey(java.lang.Object) -> a
    287:302:int indexOfValue(java.lang.Object) -> b
    313:313:boolean containsValue(java.lang.Object) -> containsValue
    323:324:java.lang.Object get(java.lang.Object) -> get
    333:333:java.lang.Object keyAt(int) -> b
    342:342:java.lang.Object valueAt(int) -> c
    352:355:java.lang.Object setValueAt(int,java.lang.Object) -> a
    362:362:boolean isEmpty() -> isEmpty
    376:421:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    451:456:java.lang.Object remove(java.lang.Object) -> remove
    465:512:java.lang.Object removeAt(int) -> d
    519:519:int size() -> size
    532:561:boolean equals(java.lang.Object) -> equals
    569:576:int hashCode() -> hashCode
    588:613:java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.g:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    35:36:void <init>() -> <init>
    25:55:void <init>(int) -> <init>
    60:68:android.support.v4.util.SparseArrayCompat clone() -> a
    76:76:java.lang.Object get(int) -> a
    85:90:java.lang.Object get(int,java.lang.Object) -> a
    98:106:void delete(int) -> b
    112:113:void remove(int) -> c
    141:164:void gc() -> d
    172:216:void put(int,java.lang.Object) -> b
    223:227:int size() -> b
    236:240:int keyAt(int) -> d
    250:254:java.lang.Object valueAt(int) -> e
    309:318:void clear() -> c
    363:384:java.lang.String toString() -> toString
    23:23:java.lang.Object clone() -> clone
    24:24:void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.d.a:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> a
    85:86:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    61:69:void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.d.a$a:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.d.a$b:
    33:33:void <init>() -> <init>
    36:37:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.d.a$c:
    45:45:void <init>() -> <init>
    48:49:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.d.a$d:
    52:52:void <init>() -> <init>
    55:56:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.d.b:
    45:46:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.d.b$a:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> a
    30:32:void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    36:36:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    40:40:java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.d.c:
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    49:62:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    71:90:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.d.c$a:
    38:39:void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    44:44:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.d.d:
    24:26:void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.d.e:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.view.ViewCompat -> android.support.v4.d.f:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    2124:2125:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    2145:2145:int getLayerType(android.view.View) -> a
    2873:2874:void setSaveFromParentEnabled(android.view.View,boolean) -> a
    2904:2904:boolean hasOverlappingRendering(android.view.View) -> b
    1692:1716:void <clinit>() -> <clinit>
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.d.f$a:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    462:466:void <init>() -> <init>
    543:543:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    545:545:int getLayerType(android.view.View) -> a
    661:661:boolean hasOverlappingRendering(android.view.View) -> b
    890:890:void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.d.f$b:
    1071:1071:void <init>() -> <init>
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.d.f$c:
    1083:1083:void <init>() -> <init>
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.d.f$d:
    1094:1094:void <init>() -> <init>
    1105:1106:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    1109:1109:int getLayerType(android.view.View) -> a
    1241:1242:void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl -> android.support.v4.d.f$e:
    1338:1338:void <init>() -> <init>
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.d.f$f:
    boolean accessibilityDelegateCheckFailed -> b
    1265:1265:void <init>() -> <init>
    1267:1267:void <clinit>() -> <clinit>
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.d.f$g:
    1345:1345:void <init>() -> <init>
    1424:1424:boolean hasOverlappingRendering(android.view.View) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.d.f$h:
    1428:1428:void <init>() -> <init>
android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl -> android.support.v4.d.f$i:
    1481:1481:void <init>() -> <init>
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.d.f$j:
    1493:1493:void <init>() -> <init>
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.d.f$k:
    1520:1520:void <init>() -> <init>
android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl -> android.support.v4.d.f$l:
    1662:1662:void <init>() -> <init>
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.d.f$m:
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
    boolean hasOverlappingRendering(android.view.View) -> b
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.d.g:
    34:35:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    38:38:int getLayerType(android.view.View) -> a
    154:155:void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.d.h:
    90:90:boolean hasOverlappingRendering(android.view.View) -> a
com.google.common.annotations.Beta -> com.google.common.annotations.Beta:
com.google.common.annotations.GwtCompatible -> com.google.common.annotations.GwtCompatible:
    boolean serializable() -> serializable
    boolean emulated() -> emulated
com.google.common.annotations.GwtIncompatible -> com.google.common.annotations.GwtIncompatible:
    java.lang.String value() -> value
com.google.common.annotations.VisibleForTesting -> com.google.common.annotations.VisibleForTesting:
com.google.common.base.Absent -> com.google.common.base.Absent:
    com.google.common.base.Absent INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    37:37:com.google.common.base.Optional withType() -> withType
    40:40:void <init>() -> <init>
    44:44:boolean isPresent() -> isPresent
    49:49:java.lang.Object get() -> get
    54:54:java.lang.Object or(java.lang.Object) -> or
    60:60:com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    65:65:java.lang.Object or(com.google.common.base.Supplier) -> or
    72:72:java.lang.Object orNull() -> orNull
    77:77:java.util.Set asSet() -> asSet
    82:83:com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    88:88:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    98:98:java.lang.String toString() -> toString
    102:102:java.lang.Object readResolve() -> readResolve
    33:33:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator -> com.google.common.base.AbstractIterator:
    com.google.common.base.AbstractIterator$State state -> state
    java.lang.Object next -> next
    32:34:void <init>() -> <init>
    java.lang.Object computeNext() -> computeNext
    48:49:java.lang.Object endOfData() -> endOfData
    54:62:boolean hasNext() -> hasNext
    66:72:boolean tryToComputeNext() -> tryToComputeNext
    77:83:java.lang.Object next() -> next
    88:88:void remove() -> remove
com.google.common.base.AbstractIterator$1 -> com.google.common.base.AbstractIterator$1:
    int[] $SwitchMap$com$google$common$base$AbstractIterator$State -> $SwitchMap$com$google$common$base$AbstractIterator$State
    55:55:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator$State -> com.google.common.base.AbstractIterator$State:
    com.google.common.base.AbstractIterator$State READY -> READY
    com.google.common.base.AbstractIterator$State NOT_READY -> NOT_READY
    com.google.common.base.AbstractIterator$State DONE -> DONE
    com.google.common.base.AbstractIterator$State FAILED -> FAILED
    com.google.common.base.AbstractIterator$State[] $VALUES -> $VALUES
    36:36:com.google.common.base.AbstractIterator$State[] values() -> values
    36:36:com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:40:void <clinit>() -> <clinit>
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    byte NUL -> NUL
    byte SOH -> SOH
    byte STX -> STX
    byte ETX -> ETX
    byte EOT -> EOT
    byte ENQ -> ENQ
    byte ACK -> ACK
    byte BEL -> BEL
    byte BS -> BS
    byte HT -> HT
    byte LF -> LF
    byte NL -> NL
    byte VT -> VT
    byte FF -> FF
    byte CR -> CR
    byte SO -> SO
    byte SI -> SI
    byte DLE -> DLE
    byte DC1 -> DC1
    byte XON -> XON
    byte DC2 -> DC2
    byte DC3 -> DC3
    byte XOFF -> XOFF
    byte DC4 -> DC4
    byte NAK -> NAK
    byte SYN -> SYN
    byte ETB -> ETB
    byte CAN -> CAN
    byte EM -> EM
    byte SUB -> SUB
    byte ESC -> ESC
    byte FS -> FS
    byte GS -> GS
    byte RS -> RS
    byte US -> US
    byte SP -> SP
    byte SPACE -> SPACE
    byte DEL -> DEL
    char MIN -> MIN
    char MAX -> MAX
    48:48:void <init>() -> <init>
    439:452:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    463:471:java.lang.String toLowerCase(java.lang.CharSequence) -> toLowerCase
    479:479:char toLowerCase(char) -> toLowerCase
    488:501:java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    512:520:java.lang.String toUpperCase(java.lang.CharSequence) -> toUpperCase
    528:528:char toUpperCase(char) -> toUpperCase
    539:539:boolean isLowerCase(char) -> isLowerCase
    548:548:boolean isUpperCase(char) -> isUpperCase
    585:607:java.lang.String truncate(java.lang.CharSequence,int,java.lang.String) -> truncate
    636:657:boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> equalsIgnoreCase
    667:667:int getAlphaIndex(char) -> getAlphaIndex
com.google.common.base.CaseFormat -> com.google.common.base.CaseFormat:
    com.google.common.base.CaseFormat LOWER_HYPHEN -> LOWER_HYPHEN
    com.google.common.base.CaseFormat LOWER_UNDERSCORE -> LOWER_UNDERSCORE
    com.google.common.base.CaseFormat LOWER_CAMEL -> LOWER_CAMEL
    com.google.common.base.CaseFormat UPPER_CAMEL -> UPPER_CAMEL
    com.google.common.base.CaseFormat UPPER_UNDERSCORE -> UPPER_UNDERSCORE
    com.google.common.base.CharMatcher wordBoundary -> wordBoundary
    java.lang.String wordSeparator -> wordSeparator
    com.google.common.base.CaseFormat[] $VALUES -> $VALUES
    36:36:com.google.common.base.CaseFormat[] values() -> values
    36:36:com.google.common.base.CaseFormat valueOf(java.lang.String) -> valueOf
    125:128:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    136:138:java.lang.String to(com.google.common.base.CaseFormat,java.lang.String) -> to
    146:160:java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> convert
    172:172:com.google.common.base.Converter converterTo(com.google.common.base.CaseFormat) -> converterTo
    java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    221:221:java.lang.String normalizeFirstWord(java.lang.String) -> normalizeFirstWord
    225:225:java.lang.String firstCharOnlyToUpper(java.lang.String) -> firstCharOnlyToUpper
    38:38:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String,com.google.common.base.CaseFormat$1) -> <init>
    38:38:java.lang.String access$100(java.lang.String) -> access$100
    36:104:void <clinit>() -> <clinit>
com.google.common.base.CaseFormat$1 -> com.google.common.base.CaseFormat$1:
    42:42:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    45:45:java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    50:56:java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> convert
com.google.common.base.CaseFormat$2 -> com.google.common.base.CaseFormat$2:
    63:63:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    66:66:java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    71:77:java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> convert
com.google.common.base.CaseFormat$3 -> com.google.common.base.CaseFormat$3:
    84:84:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    87:87:java.lang.String normalizeWord(java.lang.String) -> normalizeWord
com.google.common.base.CaseFormat$4 -> com.google.common.base.CaseFormat$4:
    94:94:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    97:97:java.lang.String normalizeWord(java.lang.String) -> normalizeWord
com.google.common.base.CaseFormat$5 -> com.google.common.base.CaseFormat$5:
    104:104:void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    107:107:java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    112:118:java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> convert
com.google.common.base.CaseFormat$StringConverter -> com.google.common.base.CaseFormat$StringConverter:
    com.google.common.base.CaseFormat sourceFormat -> sourceFormat
    com.google.common.base.CaseFormat targetFormat -> targetFormat
    long serialVersionUID -> serialVersionUID
    181:184:void <init>(com.google.common.base.CaseFormat,com.google.common.base.CaseFormat) -> <init>
    188:188:java.lang.String doForward(java.lang.String) -> doForward
    193:193:java.lang.String doBackward(java.lang.String) -> doBackward
    198:202:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    212:212:java.lang.String toString() -> toString
    175:175:java.lang.Object doBackward(java.lang.Object) -> doBackward
    175:175:java.lang.Object doForward(java.lang.Object) -> doForward
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    com.google.common.base.CharMatcher WHITESPACE -> WHITESPACE
    com.google.common.base.CharMatcher BREAKING_WHITESPACE -> BREAKING_WHITESPACE
    com.google.common.base.CharMatcher ASCII -> ASCII
    com.google.common.base.CharMatcher DIGIT -> DIGIT
    com.google.common.base.CharMatcher JAVA_DIGIT -> JAVA_DIGIT
    com.google.common.base.CharMatcher JAVA_LETTER -> JAVA_LETTER
    com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT -> JAVA_LETTER_OR_DIGIT
    com.google.common.base.CharMatcher JAVA_UPPER_CASE -> JAVA_UPPER_CASE
    com.google.common.base.CharMatcher JAVA_LOWER_CASE -> JAVA_LOWER_CASE
    com.google.common.base.CharMatcher JAVA_ISO_CONTROL -> JAVA_ISO_CONTROL
    com.google.common.base.CharMatcher INVISIBLE -> INVISIBLE
    com.google.common.base.CharMatcher SINGLE_WIDTH -> SINGLE_WIDTH
    com.google.common.base.CharMatcher ANY -> ANY
    com.google.common.base.CharMatcher NONE -> NONE
    int DISTINCT_CHARS -> DISTINCT_CHARS
    69:69:com.google.common.base.CharMatcher any() -> any
    78:78:com.google.common.base.CharMatcher none() -> none
    94:94:com.google.common.base.CharMatcher whitespace() -> whitespace
    105:105:com.google.common.base.CharMatcher breakingWhitespace() -> breakingWhitespace
    114:114:com.google.common.base.CharMatcher ascii() -> ascii
    125:125:com.google.common.base.CharMatcher digit() -> digit
    136:136:com.google.common.base.CharMatcher javaDigit() -> javaDigit
    147:147:com.google.common.base.CharMatcher javaLetter() -> javaLetter
    157:157:com.google.common.base.CharMatcher javaLetterOrDigit() -> javaLetterOrDigit
    167:167:com.google.common.base.CharMatcher javaUpperCase() -> javaUpperCase
    177:177:com.google.common.base.CharMatcher javaLowerCase() -> javaLowerCase
    187:187:com.google.common.base.CharMatcher javaIsoControl() -> javaIsoControl
    198:198:com.google.common.base.CharMatcher invisible() -> invisible
    212:212:com.google.common.base.CharMatcher singleWidth() -> singleWidth
    318:318:com.google.common.base.CharMatcher is(char) -> is
    327:327:com.google.common.base.CharMatcher isNot(char) -> isNot
    335:345:com.google.common.base.CharMatcher anyOf(java.lang.CharSequence) -> anyOf
    354:354:com.google.common.base.CharMatcher noneOf(java.lang.CharSequence) -> noneOf
    365:365:com.google.common.base.CharMatcher inRange(char,char) -> inRange
    373:373:com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate) -> forPredicate
    382:382:void <init>() -> <init>
    boolean matches(char) -> matches
    395:395:com.google.common.base.CharMatcher negate() -> negate
    402:402:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    409:409:com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    422:422:com.google.common.base.CharMatcher precomputed() -> precomputed
    439:454:com.google.common.base.CharMatcher precomputedInternal() -> precomputedInternal
    470:480:com.google.common.base.CharMatcher precomputedPositive(int,java.util.BitSet,java.lang.String) -> precomputedPositive
    488:488:boolean isSmall(int,int) -> isSmall
    498:503:void setBits(java.util.BitSet) -> setBits
    519:519:boolean matchesAnyOf(java.lang.CharSequence) -> matchesAnyOf
    533:538:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    553:553:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    567:567:int indexIn(java.lang.CharSequence) -> indexIn
    586:593:int indexIn(java.lang.CharSequence,int) -> indexIn
    607:612:int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    619:625:int countIn(java.lang.CharSequence) -> countIn
    638:663:java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    676:676:java.lang.String retainFrom(java.lang.CharSequence) -> retainFrom
    698:710:java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    731:757:java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    776:791:java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    804:810:java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    823:829:java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    853:868:java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    879:891:java.lang.String trimAndCollapseFrom(java.lang.CharSequence,char) -> trimAndCollapseFrom
    904:916:java.lang.String finishCollapseFrom(java.lang.CharSequence,int,int,char,java.lang.StringBuilder,boolean) -> finishCollapseFrom
    926:926:boolean apply(java.lang.Character) -> apply
    935:935:java.lang.String toString() -> toString
    943:949:java.lang.String showCharacter(char) -> showCharacter
    1702:1702:com.google.common.base.CharMatcher$IsEither isEither(char,char) -> isEither
    57:57:boolean apply(java.lang.Object) -> apply
    59:59:java.lang.String access$100(char) -> access$100
    228:310:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$1 -> com.google.common.base.CharMatcher$1:
    java.lang.String val$description -> val$description
    com.google.common.base.CharMatcher this$0 -> this$0
    455:455:void <init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,java.lang.String) -> <init>
    458:458:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$And -> com.google.common.base.CharMatcher$And:
    com.google.common.base.CharMatcher first -> first
    com.google.common.base.CharMatcher second -> second
    1555:1558:void <init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher) -> <init>
    1562:1562:boolean matches(char) -> matches
    1568:1574:void setBits(java.util.BitSet) -> setBits
    1578:1578:java.lang.String toString() -> toString
    1550:1550:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$Any -> com.google.common.base.CharMatcher$Any:
    com.google.common.base.CharMatcher$Any INSTANCE -> INSTANCE
    1030:1031:void <init>() -> <init>
    1035:1035:boolean matches(char) -> matches
    1040:1040:int indexIn(java.lang.CharSequence) -> indexIn
    1045:1047:int indexIn(java.lang.CharSequence,int) -> indexIn
    1052:1052:int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    1057:1058:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    1063:1063:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    1068:1069:java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    1074:1076:java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    1081:1085:java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    1090:1090:java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    1095:1096:java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    1101:1101:int countIn(java.lang.CharSequence) -> countIn
    1106:1106:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1111:1112:com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    1117:1117:com.google.common.base.CharMatcher negate() -> negate
    1027:1027:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$AnyOf -> com.google.common.base.CharMatcher$AnyOf:
    char[] chars -> chars
    1739:1742:void <init>(java.lang.CharSequence) -> <init>
    1746:1746:boolean matches(char) -> matches
    1752:1755:void setBits(java.util.BitSet) -> setBits
    1759:1764:java.lang.String toString() -> toString
    1735:1735:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$Ascii -> com.google.common.base.CharMatcher$Ascii:
    com.google.common.base.CharMatcher$Ascii INSTANCE -> INSTANCE
    1296:1297:void <init>() -> <init>
    1301:1301:boolean matches(char) -> matches
    1293:1293:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$BitSetMatcher -> com.google.common.base.CharMatcher$BitSetMatcher:
    java.util.BitSet table -> table
    1003:1009:void <init>(java.util.BitSet,java.lang.String) -> <init>
    1013:1013:boolean matches(char) -> matches
    1018:1019:void setBits(java.util.BitSet) -> setBits
    998:998:void <init>(java.util.BitSet,java.lang.String,com.google.common.base.CharMatcher$1) -> <init>
com.google.common.base.CharMatcher$BreakingWhitespace -> com.google.common.base.CharMatcher$BreakingWhitespace:
    com.google.common.base.CharMatcher INSTANCE -> INSTANCE
    1257:1257:void <init>() -> <init>
    1263:1280:boolean matches(char) -> matches
    1286:1286:java.lang.String toString() -> toString
    1257:1257:boolean apply(java.lang.Object) -> apply
    1259:1259:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$Digit -> com.google.common.base.CharMatcher$Digit:
    java.lang.String ZEROES -> ZEROES
    com.google.common.base.CharMatcher$Digit INSTANCE -> INSTANCE
    1352:1352:char[] zeroes() -> zeroes
    1356:1360:char[] nines() -> nines
    1366:1367:void <init>() -> <init>
    1363:1363:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$FastMatcher -> com.google.common.base.CharMatcher$FastMatcher:
    955:955:void <init>() -> <init>
    959:959:com.google.common.base.CharMatcher precomputed() -> precomputed
    964:964:com.google.common.base.CharMatcher negate() -> negate
    955:955:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$ForPredicate -> com.google.common.base.CharMatcher$ForPredicate:
    com.google.common.base.Predicate predicate -> predicate
    1806:1808:void <init>(com.google.common.base.Predicate) -> <init>
    1812:1812:boolean matches(char) -> matches
    1818:1818:boolean apply(java.lang.Character) -> apply
    1823:1823:java.lang.String toString() -> toString
    1802:1802:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$InRange -> com.google.common.base.CharMatcher$InRange:
    char startInclusive -> startInclusive
    char endInclusive -> endInclusive
    1774:1778:void <init>(char,char) -> <init>
    1782:1782:boolean matches(char) -> matches
    1788:1789:void setBits(java.util.BitSet) -> setBits
    1793:1793:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$Invisible -> com.google.common.base.CharMatcher$Invisible:
    java.lang.String RANGE_STARTS -> RANGE_STARTS
    java.lang.String RANGE_ENDS -> RANGE_ENDS
    com.google.common.base.CharMatcher$Invisible INSTANCE -> INSTANCE
    1478:1482:void <init>() -> <init>
    1475:1475:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$Is -> com.google.common.base.CharMatcher$Is:
    char match -> match
    1618:1620:void <init>(char) -> <init>
    1624:1624:boolean matches(char) -> matches
    1629:1629:java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    1634:1634:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1639:1639:com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    1644:1644:com.google.common.base.CharMatcher negate() -> negate
    1650:1651:void setBits(java.util.BitSet) -> setBits
    1655:1655:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$IsEither -> com.google.common.base.CharMatcher$IsEither:
    char match1 -> match1
    char match2 -> match2
    1711:1714:void <init>(char,char) -> <init>
    1718:1718:boolean matches(char) -> matches
    1724:1726:void setBits(java.util.BitSet) -> setBits
    1730:1730:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$IsNot -> com.google.common.base.CharMatcher$IsNot:
    char match -> match
    1664:1666:void <init>(char) -> <init>
    1670:1670:boolean matches(char) -> matches
    1675:1675:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1680:1680:com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    1686:1688:void setBits(java.util.BitSet) -> setBits
    1692:1692:com.google.common.base.CharMatcher negate() -> negate
    1697:1697:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$JavaDigit -> com.google.common.base.CharMatcher$JavaDigit:
    com.google.common.base.CharMatcher$JavaDigit INSTANCE -> INSTANCE
    1371:1371:void <init>() -> <init>
    1377:1377:boolean matches(char) -> matches
    1382:1382:java.lang.String toString() -> toString
    1371:1371:boolean apply(java.lang.Object) -> apply
    1373:1373:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$JavaIsoControl -> com.google.common.base.CharMatcher$JavaIsoControl:
    com.google.common.base.CharMatcher$JavaIsoControl INSTANCE -> INSTANCE
    1456:1457:void <init>() -> <init>
    1461:1461:boolean matches(char) -> matches
    1453:1453:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$JavaLetter -> com.google.common.base.CharMatcher$JavaLetter:
    com.google.common.base.CharMatcher$JavaLetter INSTANCE -> INSTANCE
    1387:1387:void <init>() -> <init>
    1393:1393:boolean matches(char) -> matches
    1398:1398:java.lang.String toString() -> toString
    1387:1387:boolean apply(java.lang.Object) -> apply
    1389:1389:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$JavaLetterOrDigit -> com.google.common.base.CharMatcher$JavaLetterOrDigit:
    com.google.common.base.CharMatcher$JavaLetterOrDigit INSTANCE -> INSTANCE
    1403:1403:void <init>() -> <init>
    1409:1409:boolean matches(char) -> matches
    1414:1414:java.lang.String toString() -> toString
    1403:1403:boolean apply(java.lang.Object) -> apply
    1405:1405:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$JavaLowerCase -> com.google.common.base.CharMatcher$JavaLowerCase:
    com.google.common.base.CharMatcher$JavaLowerCase INSTANCE -> INSTANCE
    1435:1435:void <init>() -> <init>
    1441:1441:boolean matches(char) -> matches
    1446:1446:java.lang.String toString() -> toString
    1435:1435:boolean apply(java.lang.Object) -> apply
    1437:1437:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$JavaUpperCase -> com.google.common.base.CharMatcher$JavaUpperCase:
    com.google.common.base.CharMatcher$JavaUpperCase INSTANCE -> INSTANCE
    1419:1419:void <init>() -> <init>
    1425:1425:boolean matches(char) -> matches
    1430:1430:java.lang.String toString() -> toString
    1419:1419:boolean apply(java.lang.Object) -> apply
    1421:1421:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$NamedFastMatcher -> com.google.common.base.CharMatcher$NamedFastMatcher:
    java.lang.String description -> description
    973:975:void <init>(java.lang.String) -> <init>
    979:979:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$Negated -> com.google.common.base.CharMatcher$Negated:
    com.google.common.base.CharMatcher original -> original
    1505:1507:void <init>(com.google.common.base.CharMatcher) -> <init>
    1511:1511:boolean matches(char) -> matches
    1516:1516:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    1521:1521:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    1526:1526:int countIn(java.lang.CharSequence) -> countIn
    1532:1536:void setBits(java.util.BitSet) -> setBits
    1540:1540:com.google.common.base.CharMatcher negate() -> negate
    1545:1545:java.lang.String toString() -> toString
    1501:1501:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$NegatedFastMatcher -> com.google.common.base.CharMatcher$NegatedFastMatcher:
    987:988:void <init>(com.google.common.base.CharMatcher) -> <init>
    992:992:com.google.common.base.CharMatcher precomputed() -> precomputed
com.google.common.base.CharMatcher$None -> com.google.common.base.CharMatcher$None:
    com.google.common.base.CharMatcher$None INSTANCE -> INSTANCE
    1127:1128:void <init>() -> <init>
    1132:1132:boolean matches(char) -> matches
    1137:1138:int indexIn(java.lang.CharSequence) -> indexIn
    1143:1145:int indexIn(java.lang.CharSequence,int) -> indexIn
    1150:1151:int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    1156:1156:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    1161:1162:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    1167:1167:java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    1172:1172:java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    1177:1178:java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    1183:1183:java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    1188:1188:java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    1193:1193:java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    1198:1198:java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    1203:1204:int countIn(java.lang.CharSequence) -> countIn
    1209:1210:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1215:1215:com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    1220:1220:com.google.common.base.CharMatcher negate() -> negate
    1124:1124:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$Or -> com.google.common.base.CharMatcher$Or:
    com.google.common.base.CharMatcher first -> first
    com.google.common.base.CharMatcher second -> second
    1588:1591:void <init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher) -> <init>
    1596:1598:void setBits(java.util.BitSet) -> setBits
    1602:1602:boolean matches(char) -> matches
    1607:1607:java.lang.String toString() -> toString
    1583:1583:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$RangesMatcher -> com.google.common.base.CharMatcher$RangesMatcher:
    java.lang.String description -> description
    char[] rangeStarts -> rangeStarts
    char[] rangeEnds -> rangeEnds
    1312:1323:void <init>(java.lang.String,char[],char[]) -> <init>
    1327:1332:boolean matches(char) -> matches
    1338:1338:java.lang.String toString() -> toString
    1306:1306:boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$SingleWidth -> com.google.common.base.CharMatcher$SingleWidth:
    com.google.common.base.CharMatcher$SingleWidth INSTANCE -> INSTANCE
    1491:1495:void <init>() -> <init>
    1488:1488:void <clinit>() -> <clinit>
com.google.common.base.CharMatcher$Whitespace -> com.google.common.base.CharMatcher$Whitespace:
    java.lang.String TABLE -> TABLE
    int MULTIPLIER -> MULTIPLIER
    int SHIFT -> SHIFT
    com.google.common.base.CharMatcher$Whitespace INSTANCE -> INSTANCE
    1239:1240:void <init>() -> <init>
    1244:1244:boolean matches(char) -> matches
    1250:1253:void setBits(java.util.BitSet) -> setBits
    1234:1236:void <clinit>() -> <clinit>
com.google.common.base.Charsets -> com.google.common.base.Charsets:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_16 -> UTF_16
    39:39:void <init>() -> <init>
    49:99:void <clinit>() -> <clinit>
com.google.common.base.Converter -> com.google.common.base.Converter:
    boolean handleNullAutomatically -> handleNullAutomatically
    com.google.common.base.Converter reverse -> reverse
    124:125:void <init>() -> <init>
    130:132:void <init>(boolean) -> <init>
    java.lang.Object doForward(java.lang.Object) -> doForward
    java.lang.Object doBackward(java.lang.Object) -> doBackward
    168:168:java.lang.Object convert(java.lang.Object) -> convert
    173:177:java.lang.Object correctedDoForward(java.lang.Object) -> correctedDoForward
    183:187:java.lang.Object correctedDoBackward(java.lang.Object) -> correctedDoBackward
    200:201:java.lang.Iterable convertAll(java.lang.Iterable) -> convertAll
    234:235:com.google.common.base.Converter reverse() -> reverse
    310:310:com.google.common.base.Converter andThen(com.google.common.base.Converter) -> andThen
    317:317:com.google.common.base.Converter doAndThen(com.google.common.base.Converter) -> doAndThen
    388:388:java.lang.Object apply(java.lang.Object) -> apply
    404:404:boolean equals(java.lang.Object) -> equals
    426:426:com.google.common.base.Converter from(com.google.common.base.Function,com.google.common.base.Function) -> from
    477:477:com.google.common.base.Converter identity() -> identity
com.google.common.base.Converter$1 -> com.google.common.base.Converter$1:
    java.lang.Iterable val$fromIterable -> val$fromIterable
    com.google.common.base.Converter this$0 -> this$0
    201:201:void <init>(com.google.common.base.Converter,java.lang.Iterable) -> <init>
    204:204:java.util.Iterator iterator() -> iterator
com.google.common.base.Converter$1$1 -> com.google.common.base.Converter$1$1:
    java.util.Iterator fromIterator -> fromIterator
    com.google.common.base.Converter$1 this$1 -> this$1
    204:205:void <init>(com.google.common.base.Converter$1) -> <init>
    209:209:boolean hasNext() -> hasNext
    214:214:java.lang.Object next() -> next
    219:220:void remove() -> remove
com.google.common.base.Converter$ConverterComposition -> com.google.common.base.Converter$ConverterComposition:
    com.google.common.base.Converter first -> first
    com.google.common.base.Converter second -> second
    long serialVersionUID -> serialVersionUID
    325:328:void <init>(com.google.common.base.Converter,com.google.common.base.Converter) -> <init>
    339:339:java.lang.Object doForward(java.lang.Object) -> doForward
    344:344:java.lang.Object doBackward(java.lang.Object) -> doBackward
    350:350:java.lang.Object correctedDoForward(java.lang.Object) -> correctedDoForward
    356:356:java.lang.Object correctedDoBackward(java.lang.Object) -> correctedDoBackward
    361:365:boolean equals(java.lang.Object) -> equals
    370:370:int hashCode() -> hashCode
    375:375:java.lang.String toString() -> toString
com.google.common.base.Converter$FunctionBasedConverter -> com.google.common.base.Converter$FunctionBasedConverter:
    com.google.common.base.Function forwardFunction -> forwardFunction
    com.google.common.base.Function backwardFunction -> backwardFunction
    436:439:void <init>(com.google.common.base.Function,com.google.common.base.Function) -> <init>
    443:443:java.lang.Object doForward(java.lang.Object) -> doForward
    448:448:java.lang.Object doBackward(java.lang.Object) -> doBackward
    453:458:boolean equals(java.lang.Object) -> equals
    463:463:int hashCode() -> hashCode
    468:468:java.lang.String toString() -> toString
    429:429:void <init>(com.google.common.base.Function,com.google.common.base.Function,com.google.common.base.Converter$1) -> <init>
com.google.common.base.Converter$IdentityConverter -> com.google.common.base.Converter$IdentityConverter:
    com.google.common.base.Converter$IdentityConverter INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    484:484:void <init>() -> <init>
    489:489:java.lang.Object doForward(java.lang.Object) -> doForward
    494:494:java.lang.Object doBackward(java.lang.Object) -> doBackward
    499:499:com.google.common.base.Converter$IdentityConverter reverse() -> reverse
    504:504:com.google.common.base.Converter doAndThen(com.google.common.base.Converter) -> doAndThen
    514:514:java.lang.String toString() -> toString
    518:518:java.lang.Object readResolve() -> readResolve
    484:484:com.google.common.base.Converter reverse() -> reverse
    485:485:void <clinit>() -> <clinit>
com.google.common.base.Converter$ReverseConverter -> com.google.common.base.Converter$ReverseConverter:
    com.google.common.base.Converter original -> original
    long serialVersionUID -> serialVersionUID
    242:244:void <init>(com.google.common.base.Converter) -> <init>
    255:255:java.lang.Object doForward(java.lang.Object) -> doForward
    260:260:java.lang.Object doBackward(java.lang.Object) -> doBackward
    266:266:java.lang.Object correctedDoForward(java.lang.Object) -> correctedDoForward
    272:272:java.lang.Object correctedDoBackward(java.lang.Object) -> correctedDoBackward
    277:277:com.google.common.base.Converter reverse() -> reverse
    282:286:boolean equals(java.lang.Object) -> equals
    291:291:int hashCode() -> hashCode
    296:296:java.lang.String toString() -> toString
com.google.common.base.Defaults -> com.google.common.base.Defaults:
    java.util.Map DEFAULTS -> DEFAULTS
    36:36:void <init>() -> <init>
    55:56:void put(java.util.Map,java.lang.Class,java.lang.Object) -> put
    67:68:java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    42:52:void <clinit>() -> <clinit>
com.google.common.base.Enums -> com.google.common.base.Enums:
    java.util.Map enumConstantCache -> enumConstantCache
    48:48:void <init>() -> <init>
    59:63:java.lang.reflect.Field getField(java.lang.Enum) -> getField
    76:78:com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String) -> getIfPresent
    90:96:java.util.Map populateCache(java.lang.Class) -> populateCache
    102:108:java.util.Map getEnumConstants(java.lang.Class) -> getEnumConstants
    120:120:com.google.common.base.Converter stringConverter(java.lang.Class) -> stringConverter
    83:83:void <clinit>() -> <clinit>
com.google.common.base.Enums$StringConverter -> com.google.common.base.Enums$StringConverter:
    java.lang.Class enumClass -> enumClass
    long serialVersionUID -> serialVersionUID
    128:130:void <init>(java.lang.Class) -> <init>
    134:134:java.lang.Enum doForward(java.lang.String) -> doForward
    139:139:java.lang.String doBackward(java.lang.Enum) -> doBackward
    144:148:boolean equals(java.lang.Object) -> equals
    153:153:int hashCode() -> hashCode
    158:158:java.lang.String toString() -> toString
    123:123:java.lang.Object doBackward(java.lang.Object) -> doBackward
    123:123:java.lang.Object doForward(java.lang.Object) -> doForward
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    46:46:void <init>() -> <init>
    67:73:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    103:106:int hash(java.lang.Object) -> hash
    int doHash(java.lang.Object) -> doHash
    142:142:com.google.common.base.Equivalence onResultOf(com.google.common.base.Function) -> onResultOf
    153:153:com.google.common.base.Equivalence$Wrapper wrap(java.lang.Object) -> wrap
    250:250:com.google.common.base.Equivalence pairwise() -> pairwise
    261:261:com.google.common.base.Predicate equivalentTo(java.lang.Object) -> equivalentTo
    315:315:com.google.common.base.Equivalence equals() -> equals
    327:327:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$1 -> com.google.common.base.Equivalence$1:
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    com.google.common.base.Equivalence$Equals INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    330:330:void <init>() -> <init>
    336:336:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    341:341:int doHash(java.lang.Object) -> doHash
    345:345:java.lang.Object readResolve() -> readResolve
    332:332:void <clinit>() -> <clinit>
com.google.common.base.Equivalence$EquivalentToPredicate -> com.google.common.base.Equivalence$EquivalentToPredicate:
    com.google.common.base.Equivalence equivalence -> equivalence
    java.lang.Object target -> target
    long serialVersionUID -> serialVersionUID
    269:272:void <init>(com.google.common.base.Equivalence,java.lang.Object) -> <init>
    276:276:boolean apply(java.lang.Object) -> apply
    281:288:boolean equals(java.lang.Object) -> equals
    293:293:int hashCode() -> hashCode
    298:298:java.lang.String toString() -> toString
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    com.google.common.base.Equivalence$Identity INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    351:351:void <init>() -> <init>
    357:357:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    362:362:int doHash(java.lang.Object) -> doHash
    366:366:java.lang.Object readResolve() -> readResolve
    353:353:void <clinit>() -> <clinit>
com.google.common.base.Equivalence$Wrapper -> com.google.common.base.Equivalence$Wrapper:
    com.google.common.base.Equivalence equivalence -> equivalence
    java.lang.Object reference -> reference
    long serialVersionUID -> serialVersionUID
    178:181:void <init>(com.google.common.base.Equivalence,java.lang.Object) -> <init>
    186:186:java.lang.Object get() -> get
    196:212:boolean equals(java.lang.Object) -> equals
    220:220:int hashCode() -> hashCode
    229:229:java.lang.String toString() -> toString
    174:174:void <init>(com.google.common.base.Equivalence,java.lang.Object,com.google.common.base.Equivalence$1) -> <init>
com.google.common.base.FinalizablePhantomReference -> com.google.common.base.FinalizablePhantomReference:
    41:43:void <init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue) -> <init>
com.google.common.base.FinalizableReference -> com.google.common.base.FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.common.base.FinalizableReferenceQueue -> com.google.common.base.FinalizableReferenceQueue:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZER_CLASS_NAME -> FINALIZER_CLASS_NAME
    java.lang.reflect.Method startFinalizer -> startFinalizer
    java.lang.ref.ReferenceQueue queue -> queue
    java.lang.ref.PhantomReference frqRef -> frqRef
    boolean threadStarted -> threadStarted
    159:178:void <init>() -> <init>
    182:184:void close() -> close
    192:209:void cleanUp() -> cleanUp
    217:224:java.lang.Class loadFinalizer(com.google.common.base.FinalizableReferenceQueue$FinalizerLoader[]) -> loadFinalizer
    356:359:java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> getStartFinalizer
    94:94:java.util.logging.Logger access$000() -> access$000
    131:142:void <clinit>() -> <clinit>
com.google.common.base.FinalizableReferenceQueue$DecoupledLoader -> com.google.common.base.FinalizableReferenceQueue$DecoupledLoader:
    java.lang.String LOADING_ERROR -> LOADING_ERROR
    280:280:void <init>() -> <init>
    299:303:java.lang.Class loadFinalizer() -> loadFinalizer
    312:324:java.net.URL getBaseUrl() -> getBaseUrl
    332:332:java.net.URLClassLoader newLoader(java.net.URL) -> newLoader
com.google.common.base.FinalizableReferenceQueue$DirectLoader -> com.google.common.base.FinalizableReferenceQueue$DirectLoader:
    340:340:void <init>() -> <init>
    344:346:java.lang.Class loadFinalizer() -> loadFinalizer
com.google.common.base.FinalizableReferenceQueue$FinalizerLoader -> com.google.common.base.FinalizableReferenceQueue$FinalizerLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.common.base.FinalizableReferenceQueue$SystemLoader -> com.google.common.base.FinalizableReferenceQueue$SystemLoader:
    boolean disabled -> disabled
    245:245:void <init>() -> <init>
    252:270:java.lang.Class loadFinalizer() -> loadFinalizer
com.google.common.base.FinalizableSoftReference -> com.google.common.base.FinalizableSoftReference:
    39:41:void <init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue) -> <init>
com.google.common.base.FinalizableWeakReference -> com.google.common.base.FinalizableWeakReference:
    39:41:void <init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue) -> <init>
com.google.common.base.Function -> com.google.common.base.Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.FunctionalEquivalence -> com.google.common.base.FunctionalEquivalence:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function function -> function
    com.google.common.base.Equivalence resultEquivalence -> resultEquivalence
    43:46:void <init>(com.google.common.base.Function,com.google.common.base.Equivalence) -> <init>
    50:50:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    55:55:int doHash(java.lang.Object) -> doHash
    60:67:boolean equals(java.lang.Object) -> equals
    72:72:int hashCode() -> hashCode
    77:77:java.lang.String toString() -> toString
com.google.common.base.Functions -> com.google.common.base.Functions:
    47:47:void <init>() -> <init>
    58:58:com.google.common.base.Function toStringFunction() -> toStringFunction
    83:83:com.google.common.base.Function identity() -> identity
    112:112:com.google.common.base.Function forMap(java.util.Map) -> forMap
    162:162:com.google.common.base.Function forMap(java.util.Map,java.lang.Object) -> forMap
    213:213:com.google.common.base.Function compose(com.google.common.base.Function,com.google.common.base.Function) -> compose
    260:260:com.google.common.base.Function forPredicate(com.google.common.base.Predicate) -> forPredicate
    305:305:com.google.common.base.Function constant(java.lang.Object) -> constant
    350:350:com.google.common.base.Function forSupplier(com.google.common.base.Supplier) -> forSupplier
com.google.common.base.Functions$1 -> com.google.common.base.Functions$1:
com.google.common.base.Functions$ConstantFunction -> com.google.common.base.Functions$ConstantFunction:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    311:313:void <init>(java.lang.Object) -> <init>
    317:317:java.lang.Object apply(java.lang.Object) -> apply
    322:326:boolean equals(java.lang.Object) -> equals
    331:331:int hashCode() -> hashCode
    336:336:java.lang.String toString() -> toString
com.google.common.base.Functions$ForMapWithDefault -> com.google.common.base.Functions$ForMapWithDefault:
    java.util.Map map -> map
    java.lang.Object defaultValue -> defaultValue
    long serialVersionUID -> serialVersionUID
    169:172:void <init>(java.util.Map,java.lang.Object) -> <init>
    176:177:java.lang.Object apply(java.lang.Object) -> apply
    182:186:boolean equals(java.lang.Object) -> equals
    191:191:int hashCode() -> hashCode
    197:197:java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionComposition -> com.google.common.base.Functions$FunctionComposition:
    com.google.common.base.Function g -> g
    com.google.common.base.Function f -> f
    long serialVersionUID -> serialVersionUID
    220:223:void <init>(com.google.common.base.Function,com.google.common.base.Function) -> <init>
    227:227:java.lang.Object apply(java.lang.Object) -> apply
    232:236:boolean equals(java.lang.Object) -> equals
    241:241:int hashCode() -> hashCode
    247:247:java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionForMapNoDefault -> com.google.common.base.Functions$FunctionForMapNoDefault:
    java.util.Map map -> map
    long serialVersionUID -> serialVersionUID
    118:120:void <init>(java.util.Map) -> <init>
    124:126:java.lang.Object apply(java.lang.Object) -> apply
    131:135:boolean equals(java.lang.Object) -> equals
    140:140:int hashCode() -> hashCode
    145:145:java.lang.String toString() -> toString
com.google.common.base.Functions$IdentityFunction -> com.google.common.base.Functions$IdentityFunction:
    com.google.common.base.Functions$IdentityFunction INSTANCE -> INSTANCE
    com.google.common.base.Functions$IdentityFunction[] $VALUES -> $VALUES
    87:87:com.google.common.base.Functions$IdentityFunction[] values() -> values
    87:87:com.google.common.base.Functions$IdentityFunction valueOf(java.lang.String) -> valueOf
    87:87:void <init>(java.lang.String,int) -> <init>
    93:93:java.lang.Object apply(java.lang.Object) -> apply
    98:98:java.lang.String toString() -> toString
    87:88:void <clinit>() -> <clinit>
com.google.common.base.Functions$PredicateFunction -> com.google.common.base.Functions$PredicateFunction:
    com.google.common.base.Predicate predicate -> predicate
    long serialVersionUID -> serialVersionUID
    267:269:void <init>(com.google.common.base.Predicate) -> <init>
    273:273:java.lang.Boolean apply(java.lang.Object) -> apply
    278:282:boolean equals(java.lang.Object) -> equals
    287:287:int hashCode() -> hashCode
    292:292:java.lang.String toString() -> toString
    264:264:java.lang.Object apply(java.lang.Object) -> apply
    264:264:void <init>(com.google.common.base.Predicate,com.google.common.base.Functions$1) -> <init>
com.google.common.base.Functions$SupplierFunction -> com.google.common.base.Functions$SupplierFunction:
    com.google.common.base.Supplier supplier -> supplier
    long serialVersionUID -> serialVersionUID
    358:360:void <init>(com.google.common.base.Supplier) -> <init>
    364:364:java.lang.Object apply(java.lang.Object) -> apply
    369:373:boolean equals(java.lang.Object) -> equals
    378:378:int hashCode() -> hashCode
    383:383:java.lang.String toString() -> toString
    354:354:void <init>(com.google.common.base.Supplier,com.google.common.base.Functions$1) -> <init>
com.google.common.base.Functions$ToStringFunction -> com.google.common.base.Functions$ToStringFunction:
    com.google.common.base.Functions$ToStringFunction INSTANCE -> INSTANCE
    com.google.common.base.Functions$ToStringFunction[] $VALUES -> $VALUES
    62:62:com.google.common.base.Functions$ToStringFunction[] values() -> values
    62:62:com.google.common.base.Functions$ToStringFunction valueOf(java.lang.String) -> valueOf
    62:62:void <init>(java.lang.String,int) -> <init>
    67:68:java.lang.String apply(java.lang.Object) -> apply
    73:73:java.lang.String toString() -> toString
    62:62:java.lang.Object apply(java.lang.Object) -> apply
    62:63:void <clinit>() -> <clinit>
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    java.lang.String separator -> separator
    72:72:com.google.common.base.Joiner on(java.lang.String) -> on
    80:80:com.google.common.base.Joiner on(char) -> on
    85:87:void <init>(java.lang.String) -> <init>
    89:91:void <init>(com.google.common.base.Joiner) -> <init>
    98:98:java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    108:116:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    124:124:java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object[]) -> appendTo
    133:133:java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    142:142:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    154:158:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    167:167:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object[]) -> appendTo
    177:177:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    186:186:java.lang.String join(java.lang.Iterable) -> join
    197:197:java.lang.String join(java.util.Iterator) -> join
    206:206:java.lang.String join(java.lang.Object[]) -> join
    215:215:java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[]) -> join
    224:225:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    249:249:com.google.common.base.Joiner skipNulls() -> skipNulls
    289:289:com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    447:448:java.lang.CharSequence toString(java.lang.Object) -> toString
    453:454:java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[]) -> iterable
    66:66:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1) -> <init>
    66:66:java.lang.String access$100(com.google.common.base.Joiner) -> access$100
com.google.common.base.Joiner$1 -> com.google.common.base.Joiner$1:
    java.lang.String val$nullText -> val$nullText
    com.google.common.base.Joiner this$0 -> this$0
    225:225:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner,java.lang.String) -> <init>
    228:228:java.lang.CharSequence toString(java.lang.Object) -> toString
    233:233:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    238:238:com.google.common.base.Joiner skipNulls() -> skipNulls
com.google.common.base.Joiner$2 -> com.google.common.base.Joiner$2:
    com.google.common.base.Joiner this$0 -> this$0
    249:249:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner) -> <init>
    252:268:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    273:273:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    278:278:com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.common.base.Joiner$3 -> com.google.common.base.Joiner$3:
    java.lang.Object[] val$rest -> val$rest
    java.lang.Object val$first -> val$first
    java.lang.Object val$second -> val$second
    454:454:void <init>(java.lang.Object[],java.lang.Object,java.lang.Object) -> <init>
    457:457:int size() -> size
    462:468:java.lang.Object get(int) -> get
com.google.common.base.Joiner$MapJoiner -> com.google.common.base.Joiner$MapJoiner:
    com.google.common.base.Joiner joiner -> joiner
    java.lang.String keyValueSeparator -> keyValueSeparator
    314:317:void <init>(com.google.common.base.Joiner,java.lang.String) -> <init>
    324:324:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Map) -> appendTo
    333:333:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    342:342:java.lang.String join(java.util.Map) -> join
    354:354:java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    366:380:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    392:392:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    405:409:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    421:421:java.lang.String join(java.lang.Iterable) -> join
    433:433:java.lang.String join(java.util.Iterator) -> join
    442:442:com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String) -> useForNull
    310:310:void <init>(com.google.common.base.Joiner,java.lang.String,com.google.common.base.Joiner$1) -> <init>
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    56:56:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    100:100:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    115:115:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    128:128:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    380:380:void <init>() -> <init>
com.google.common.base.MoreObjects$1 -> com.google.common.base.MoreObjects$1:
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    java.lang.String className -> className
    com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderHead -> holderHead
    com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderTail -> holderTail
    boolean omitNullValues -> omitNullValues
    139:148:void <init>(java.lang.String) -> <init>
    158:159:com.google.common.base.MoreObjects$ToStringHelper omitNullValues() -> omitNullValues
    169:169:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    179:179:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean) -> add
    189:189:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,char) -> add
    199:199:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,double) -> add
    209:209:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,float) -> add
    219:219:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    229:229:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long) -> add
    239:239:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    251:251:com.google.common.base.MoreObjects$ToStringHelper addValue(boolean) -> addValue
    263:263:com.google.common.base.MoreObjects$ToStringHelper addValue(char) -> addValue
    275:275:com.google.common.base.MoreObjects$ToStringHelper addValue(double) -> addValue
    287:287:com.google.common.base.MoreObjects$ToStringHelper addValue(float) -> addValue
    299:299:com.google.common.base.MoreObjects$ToStringHelper addValue(int) -> addValue
    311:311:com.google.common.base.MoreObjects$ToStringHelper addValue(long) -> addValue
    328:351:java.lang.String toString() -> toString
    355:357:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    361:363:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    367:370:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    137:137:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    java.lang.String name -> name
    java.lang.Object value -> value
    com.google.common.base.MoreObjects$ToStringHelper$ValueHolder next -> next
    373:373:void <init>() -> <init>
    373:373:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    40:40:void <init>() -> <init>
    60:60:boolean equal(java.lang.Object,java.lang.Object) -> equal
    85:85:int hashCode(java.lang.Object[]) -> hashCode
    132:132:com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    150:150:com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    166:166:com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    191:191:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
com.google.common.base.Objects$1 -> com.google.common.base.Objects$1:
com.google.common.base.Objects$ToStringHelper -> com.google.common.base.Objects$ToStringHelper:
    java.lang.String className -> className
    com.google.common.base.Objects$ToStringHelper$ValueHolder holderHead -> holderHead
    com.google.common.base.Objects$ToStringHelper$ValueHolder holderTail -> holderTail
    boolean omitNullValues -> omitNullValues
    205:214:void <init>(java.lang.String) -> <init>
    224:225:com.google.common.base.Objects$ToStringHelper omitNullValues() -> omitNullValues
    235:235:com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    245:245:com.google.common.base.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    255:255:com.google.common.base.Objects$ToStringHelper add(java.lang.String,char) -> add
    265:265:com.google.common.base.Objects$ToStringHelper add(java.lang.String,double) -> add
    275:275:com.google.common.base.Objects$ToStringHelper add(java.lang.String,float) -> add
    285:285:com.google.common.base.Objects$ToStringHelper add(java.lang.String,int) -> add
    295:295:com.google.common.base.Objects$ToStringHelper add(java.lang.String,long) -> add
    305:305:com.google.common.base.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    317:317:com.google.common.base.Objects$ToStringHelper addValue(boolean) -> addValue
    329:329:com.google.common.base.Objects$ToStringHelper addValue(char) -> addValue
    341:341:com.google.common.base.Objects$ToStringHelper addValue(double) -> addValue
    353:353:com.google.common.base.Objects$ToStringHelper addValue(float) -> addValue
    365:365:com.google.common.base.Objects$ToStringHelper addValue(int) -> addValue
    377:377:com.google.common.base.Objects$ToStringHelper addValue(long) -> addValue
    393:409:java.lang.String toString() -> toString
    413:415:com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder() -> addHolder
    419:421:com.google.common.base.Objects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    425:428:com.google.common.base.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    203:203:void <init>(java.lang.String,com.google.common.base.Objects$1) -> <init>
com.google.common.base.Objects$ToStringHelper$ValueHolder -> com.google.common.base.Objects$ToStringHelper$ValueHolder:
    java.lang.String name -> name
    java.lang.Object value -> value
    com.google.common.base.Objects$ToStringHelper$ValueHolder next -> next
    431:431:void <init>() -> <init>
    431:431:void <init>(com.google.common.base.Objects$1) -> <init>
com.google.common.base.Optional -> com.google.common.base.Optional:
    long serialVersionUID -> serialVersionUID
    100:100:com.google.common.base.Optional absent() -> absent
    112:112:com.google.common.base.Optional of(java.lang.Object) -> of
    123:123:com.google.common.base.Optional fromNullable(java.lang.Object) -> fromNullable
    128:128:void <init>() -> <init>
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    296:297:java.lang.Iterable presentInstances(java.lang.Iterable) -> presentInstances
com.google.common.base.Optional$1 -> com.google.common.base.Optional$1:
    java.lang.Iterable val$optionals -> val$optionals
    297:297:void <init>(java.lang.Iterable) -> <init>
    300:300:java.util.Iterator iterator() -> iterator
com.google.common.base.Optional$1$1 -> com.google.common.base.Optional$1$1:
    java.util.Iterator iterator -> iterator
    com.google.common.base.Optional$1 this$0 -> this$0
    300:301:void <init>(com.google.common.base.Optional$1) -> <init>
    306:312:java.lang.Object computeNext() -> computeNext
com.google.common.base.PairwiseEquivalence -> com.google.common.base.PairwiseEquivalence:
    com.google.common.base.Equivalence elementEquivalence -> elementEquivalence
    long serialVersionUID -> serialVersionUID
    31:33:void <init>(com.google.common.base.Equivalence) -> <init>
    37:46:boolean doEquivalent(java.lang.Iterable,java.lang.Iterable) -> doEquivalent
    51:55:int doHash(java.lang.Iterable) -> doHash
    60:65:boolean equals(java.lang.Object) -> equals
    70:70:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
    26:26:int doHash(java.lang.Object) -> doHash
    26:26:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
com.google.common.base.Platform -> com.google.common.base.Platform:
    30:30:void <init>() -> <init>
    34:34:long systemNanoTime() -> systemNanoTime
    38:38:com.google.common.base.CharMatcher precomputeCharMatcher(com.google.common.base.CharMatcher) -> precomputeCharMatcher
    42:43:com.google.common.base.Optional getEnumIfPresent(java.lang.Class,java.lang.String) -> getEnumIfPresent
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    98:98:void <init>() -> <init>
    107:110:void checkArgument(boolean) -> checkArgument
    121:124:void checkArgument(boolean,java.lang.Object) -> checkArgument
    145:148:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    158:161:void checkState(boolean) -> checkState
    173:176:void checkState(boolean,java.lang.Object) -> checkState
    198:201:void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    211:214:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    227:230:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    249:253:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    293:293:int checkElementIndex(int,int) -> checkElementIndex
    309:312:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    316:321:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    336:336:int checkPositionIndex(int,int) -> checkPositionIndex
    352:355:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    359:364:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    382:385:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    388:395:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    410:438:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.common.base.Predicate -> com.google.common.base.Predicate:
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    com.google.common.base.Joiner COMMA_JOINER -> COMMA_JOINER
    51:51:void <init>() -> <init>
    61:61:com.google.common.base.Predicate alwaysTrue() -> alwaysTrue
    69:69:com.google.common.base.Predicate alwaysFalse() -> alwaysFalse
    78:78:com.google.common.base.Predicate isNull() -> isNull
    87:87:com.google.common.base.Predicate notNull() -> notNull
    95:95:com.google.common.base.Predicate not(com.google.common.base.Predicate) -> not
    108:108:com.google.common.base.Predicate and(java.lang.Iterable) -> and
    121:121:com.google.common.base.Predicate and(com.google.common.base.Predicate[]) -> and
    131:131:com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate) -> and
    144:144:com.google.common.base.Predicate or(java.lang.Iterable) -> or
    157:157:com.google.common.base.Predicate or(com.google.common.base.Predicate[]) -> or
    167:167:com.google.common.base.Predicate or(com.google.common.base.Predicate,com.google.common.base.Predicate) -> or
    175:175:com.google.common.base.Predicate equalTo(java.lang.Object) -> equalTo
    195:195:com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
    208:208:com.google.common.base.Predicate assignableFrom(java.lang.Class) -> assignableFrom
    225:225:com.google.common.base.Predicate in(java.util.Collection) -> in
    236:236:com.google.common.base.Predicate compose(com.google.common.base.Predicate,com.google.common.base.Function) -> compose
    250:250:com.google.common.base.Predicate containsPattern(java.lang.String) -> containsPattern
    263:263:com.google.common.base.Predicate contains(java.util.regex.Pattern) -> contains
    698:698:java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate) -> asList
    702:702:java.util.List defensiveCopy(java.lang.Object[]) -> defensiveCopy
    706:710:java.util.List defensiveCopy(java.lang.Iterable) -> defensiveCopy
    50:50:com.google.common.base.Joiner access$800() -> access$800
    360:360:void <clinit>() -> <clinit>
com.google.common.base.Predicates$1 -> com.google.common.base.Predicates$1:
com.google.common.base.Predicates$AndPredicate -> com.google.common.base.Predicates$AndPredicate:
    java.util.List components -> components
    long serialVersionUID -> serialVersionUID
    366:368:void <init>(java.util.List) -> <init>
    373:378:boolean apply(java.lang.Object) -> apply
    384:384:int hashCode() -> hashCode
    389:393:boolean equals(java.lang.Object) -> equals
    398:398:java.lang.String toString() -> toString
    363:363:void <init>(java.util.List,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$AssignableFromPredicate -> com.google.common.base.Predicates$AssignableFromPredicate:
    java.lang.Class clazz -> clazz
    long serialVersionUID -> serialVersionUID
    522:524:void <init>(java.lang.Class) -> <init>
    528:528:boolean apply(java.lang.Class) -> apply
    533:533:int hashCode() -> hashCode
    538:542:boolean equals(java.lang.Object) -> equals
    547:547:java.lang.String toString() -> toString
    518:518:boolean apply(java.lang.Object) -> apply
    519:519:void <init>(java.lang.Class,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$CompositionPredicate -> com.google.common.base.Predicates$CompositionPredicate:
    com.google.common.base.Predicate p -> p
    com.google.common.base.Function f -> f
    long serialVersionUID -> serialVersionUID
    599:602:void <init>(com.google.common.base.Predicate,com.google.common.base.Function) -> <init>
    606:606:boolean apply(java.lang.Object) -> apply
    611:615:boolean equals(java.lang.Object) -> equals
    620:620:int hashCode() -> hashCode
    626:626:java.lang.String toString() -> toString
    595:595:void <init>(com.google.common.base.Predicate,com.google.common.base.Function,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$ContainsPatternFromStringPredicate -> com.google.common.base.Predicates$ContainsPatternFromStringPredicate:
    long serialVersionUID -> serialVersionUID
    684:685:void <init>(java.lang.String) -> <init>
    689:689:java.lang.String toString() -> toString
com.google.common.base.Predicates$ContainsPatternPredicate -> com.google.common.base.Predicates$ContainsPatternPredicate:
    java.util.regex.Pattern pattern -> pattern
    long serialVersionUID -> serialVersionUID
    637:639:void <init>(java.util.regex.Pattern) -> <init>
    643:643:boolean apply(java.lang.CharSequence) -> apply
    651:651:int hashCode() -> hashCode
    656:664:boolean equals(java.lang.Object) -> equals
    669:673:java.lang.String toString() -> toString
    633:633:boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$InPredicate -> com.google.common.base.Predicates$InPredicate:
    java.util.Collection target -> target
    long serialVersionUID -> serialVersionUID
    557:559:void <init>(java.util.Collection) -> <init>
    564:568:boolean apply(java.lang.Object) -> apply
    574:578:boolean equals(java.lang.Object) -> equals
    583:583:int hashCode() -> hashCode
    588:588:java.lang.String toString() -> toString
    554:554:void <init>(java.util.Collection,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$InstanceOfPredicate -> com.google.common.base.Predicates$InstanceOfPredicate:
    java.lang.Class clazz -> clazz
    long serialVersionUID -> serialVersionUID
    486:488:void <init>(java.lang.Class) -> <init>
    492:492:boolean apply(java.lang.Object) -> apply
    497:497:int hashCode() -> hashCode
    502:506:boolean equals(java.lang.Object) -> equals
    511:511:java.lang.String toString() -> toString
    483:483:void <init>(java.lang.Class,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$IsEqualToPredicate -> com.google.common.base.Predicates$IsEqualToPredicate:
    java.lang.Object target -> target
    long serialVersionUID -> serialVersionUID
    450:452:void <init>(java.lang.Object) -> <init>
    456:456:boolean apply(java.lang.Object) -> apply
    461:461:int hashCode() -> hashCode
    466:470:boolean equals(java.lang.Object) -> equals
    475:475:java.lang.String toString() -> toString
    447:447:void <init>(java.lang.Object,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$NotPredicate -> com.google.common.base.Predicates$NotPredicate:
    com.google.common.base.Predicate predicate -> predicate
    long serialVersionUID -> serialVersionUID
    329:331:void <init>(com.google.common.base.Predicate) -> <init>
    335:335:boolean apply(java.lang.Object) -> apply
    340:340:int hashCode() -> hashCode
    345:349:boolean equals(java.lang.Object) -> equals
    354:354:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate -> com.google.common.base.Predicates$ObjectPredicate:
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE -> ALWAYS_TRUE
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE -> ALWAYS_FALSE
    com.google.common.base.Predicates$ObjectPredicate IS_NULL -> IS_NULL
    com.google.common.base.Predicates$ObjectPredicate NOT_NULL -> NOT_NULL
    com.google.common.base.Predicates$ObjectPredicate[] $VALUES -> $VALUES
    269:269:com.google.common.base.Predicates$ObjectPredicate[] values() -> values
    269:269:com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String) -> valueOf
    269:269:void <init>(java.lang.String,int) -> <init>
    321:321:com.google.common.base.Predicate withNarrowedType() -> withNarrowedType
    269:269:void <init>(java.lang.String,int,com.google.common.base.Predicates$1) -> <init>
    269:307:void <clinit>() -> <clinit>
com.google.common.base.Predicates$ObjectPredicate$1 -> com.google.common.base.Predicates$ObjectPredicate$1:
    271:271:void <init>(java.lang.String,int) -> <init>
    274:274:boolean apply(java.lang.Object) -> apply
    279:279:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate$2 -> com.google.common.base.Predicates$ObjectPredicate$2:
    283:283:void <init>(java.lang.String,int) -> <init>
    286:286:boolean apply(java.lang.Object) -> apply
    291:291:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate$3 -> com.google.common.base.Predicates$ObjectPredicate$3:
    295:295:void <init>(java.lang.String,int) -> <init>
    298:298:boolean apply(java.lang.Object) -> apply
    303:303:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate$4 -> com.google.common.base.Predicates$ObjectPredicate$4:
    307:307:void <init>(java.lang.String,int) -> <init>
    310:310:boolean apply(java.lang.Object) -> apply
    315:315:java.lang.String toString() -> toString
com.google.common.base.Predicates$OrPredicate -> com.google.common.base.Predicates$OrPredicate:
    java.util.List components -> components
    long serialVersionUID -> serialVersionUID
    408:410:void <init>(java.util.List) -> <init>
    415:420:boolean apply(java.lang.Object) -> apply
    426:426:int hashCode() -> hashCode
    431:435:boolean equals(java.lang.Object) -> equals
    440:440:java.lang.String toString() -> toString
    405:405:void <init>(java.util.List,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Present -> com.google.common.base.Present:
    java.lang.Object reference -> reference
    long serialVersionUID -> serialVersionUID
    35:37:void <init>(java.lang.Object) -> <init>
    41:41:boolean isPresent() -> isPresent
    46:46:java.lang.Object get() -> get
    51:52:java.lang.Object or(java.lang.Object) -> or
    57:58:com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    63:64:java.lang.Object or(com.google.common.base.Supplier) -> or
    69:69:java.lang.Object orNull() -> orNull
    74:74:java.util.Set asSet() -> asSet
    79:79:com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    87:91:boolean equals(java.lang.Object) -> equals
    96:96:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
com.google.common.base.SmallCharMatcher -> com.google.common.base.SmallCharMatcher:
    int MAX_SIZE -> MAX_SIZE
    char[] table -> table
    boolean containsZero -> containsZero
    long filter -> filter
    int C1 -> C1
    int C2 -> C2
    double DESIRED_LOAD_FACTOR -> DESIRED_LOAD_FACTOR
    39:43:void <init>(char[],long,boolean,java.lang.String) -> <init>
    57:57:int smear(int) -> smear
    61:61:boolean checkFilter(int) -> checkFilter
    78:87:int chooseTableSize(int) -> chooseTableSize
    92:112:com.google.common.base.CharMatcher from(java.util.BitSet,java.lang.String) -> from
    117:139:boolean matches(char) -> matches
    144:152:void setBits(java.util.BitSet) -> setBits
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    com.google.common.base.CharMatcher trimmer -> trimmer
    boolean omitEmptyStrings -> omitEmptyStrings
    com.google.common.base.Splitter$Strategy strategy -> strategy
    int limit -> limit
    110:111:void <init>(com.google.common.base.Splitter$Strategy) -> <init>
    113:118:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int) -> <init>
    130:130:com.google.common.base.Splitter on(char) -> on
    145:147:com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    176:180:com.google.common.base.Splitter on(java.lang.String) -> on
    225:231:com.google.common.base.Splitter on(java.util.regex.Pattern) -> on
    269:269:com.google.common.base.Splitter onPattern(java.lang.String) -> onPattern
    293:295:com.google.common.base.Splitter fixedLength(int) -> fixedLength
    335:335:com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    360:361:com.google.common.base.Splitter limit(int) -> limit
    376:376:com.google.common.base.Splitter trimResults() -> trimResults
    393:394:com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher) -> trimResults
    407:409:java.lang.Iterable split(java.lang.CharSequence) -> split
    426:426:java.util.Iterator splittingIterator(java.lang.CharSequence) -> splittingIterator
    441:450:java.util.List splitToList(java.lang.CharSequence) -> splitToList
    462:462:com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    474:474:com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(char) -> withKeyValueSeparator
    487:487:com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(com.google.common.base.Splitter) -> withKeyValueSeparator
    103:103:java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> access$000
    103:103:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    103:103:boolean access$300(com.google.common.base.Splitter) -> access$300
    103:103:int access$400(com.google.common.base.Splitter) -> access$400
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    com.google.common.base.CharMatcher val$separatorMatcher -> val$separatorMatcher
    148:148:void <init>(com.google.common.base.CharMatcher) -> <init>
    151:151:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    148:148:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    com.google.common.base.Splitter$1 this$0 -> this$0
    151:151:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    154:154:int separatorStart(int) -> separatorStart
    159:159:int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    java.lang.String val$separator -> val$separator
    181:181:void <init>(java.lang.String) -> <init>
    184:184:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    181:181:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    com.google.common.base.Splitter$2 this$0 -> this$0
    184:184:void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    187:198:int separatorStart(int) -> separatorStart
    203:203:int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$3 -> com.google.common.base.Splitter$3:
    java.util.regex.Pattern val$separatorPattern -> val$separatorPattern
    232:232:void <init>(java.util.regex.Pattern) -> <init>
    235:236:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    232:232:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$3$1 -> com.google.common.base.Splitter$3$1:
    java.util.regex.Matcher val$matcher -> val$matcher
    com.google.common.base.Splitter$3 this$0 -> this$0
    236:236:void <init>(com.google.common.base.Splitter$3,com.google.common.base.Splitter,java.lang.CharSequence,java.util.regex.Matcher) -> <init>
    239:239:int separatorStart(int) -> separatorStart
    244:244:int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$4 -> com.google.common.base.Splitter$4:
    int val$length -> val$length
    296:296:void <init>(int) -> <init>
    299:299:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    296:296:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$4$1 -> com.google.common.base.Splitter$4$1:
    com.google.common.base.Splitter$4 this$0 -> this$0
    299:299:void <init>(com.google.common.base.Splitter$4,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    302:303:int separatorStart(int) -> separatorStart
    308:308:int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    java.lang.CharSequence val$sequence -> val$sequence
    com.google.common.base.Splitter this$0 -> this$0
    409:409:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    412:412:java.util.Iterator iterator() -> iterator
    417:417:java.lang.String toString() -> toString
com.google.common.base.Splitter$MapSplitter -> com.google.common.base.Splitter$MapSplitter:
    java.lang.String INVALID_ENTRY_MESSAGE -> INVALID_ENTRY_MESSAGE
    com.google.common.base.Splitter outerSplitter -> outerSplitter
    com.google.common.base.Splitter entrySplitter -> entrySplitter
    503:506:void <init>(com.google.common.base.Splitter,com.google.common.base.Splitter) -> <init>
    525:539:java.util.Map split(java.lang.CharSequence) -> split
    498:498:void <init>(com.google.common.base.Splitter,com.google.common.base.Splitter,com.google.common.base.Splitter$1) -> <init>
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    java.lang.CharSequence toSplit -> toSplit
    com.google.common.base.CharMatcher trimmer -> trimmer
    boolean omitEmptyStrings -> omitEmptyStrings
    int offset -> offset
    int limit -> limit
    int separatorStart(int) -> separatorStart
    int separatorEnd(int) -> separatorEnd
    565:573:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    583:640:java.lang.String computeNext() -> computeNext
    547:547:java.lang.Object computeNext() -> computeNext
com.google.common.base.Splitter$Strategy -> com.google.common.base.Splitter$Strategy:
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    com.google.common.base.StandardSystemProperty JAVA_VERSION -> JAVA_VERSION
    com.google.common.base.StandardSystemProperty JAVA_VENDOR -> JAVA_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    com.google.common.base.StandardSystemProperty JAVA_HOME -> JAVA_HOME
    com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    com.google.common.base.StandardSystemProperty JAVA_VM_VERSION -> JAVA_VM_VERSION
    com.google.common.base.StandardSystemProperty JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_VM_NAME -> JAVA_VM_NAME
    com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    com.google.common.base.StandardSystemProperty JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    com.google.common.base.StandardSystemProperty JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    com.google.common.base.StandardSystemProperty JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    com.google.common.base.StandardSystemProperty JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    com.google.common.base.StandardSystemProperty JAVA_COMPILER -> JAVA_COMPILER
    com.google.common.base.StandardSystemProperty JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    com.google.common.base.StandardSystemProperty OS_NAME -> OS_NAME
    com.google.common.base.StandardSystemProperty OS_ARCH -> OS_ARCH
    com.google.common.base.StandardSystemProperty OS_VERSION -> OS_VERSION
    com.google.common.base.StandardSystemProperty FILE_SEPARATOR -> FILE_SEPARATOR
    com.google.common.base.StandardSystemProperty PATH_SEPARATOR -> PATH_SEPARATOR
    com.google.common.base.StandardSystemProperty LINE_SEPARATOR -> LINE_SEPARATOR
    com.google.common.base.StandardSystemProperty USER_NAME -> USER_NAME
    com.google.common.base.StandardSystemProperty USER_HOME -> USER_HOME
    com.google.common.base.StandardSystemProperty USER_DIR -> USER_DIR
    java.lang.String key -> key
    com.google.common.base.StandardSystemProperty[] $VALUES -> $VALUES
    31:31:com.google.common.base.StandardSystemProperty[] values() -> values
    31:31:com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    122:124:void <init>(java.lang.String,int,java.lang.String) -> <init>
    130:130:java.lang.String key() -> key
    139:139:java.lang.String value() -> value
    147:147:java.lang.String toString() -> toString
    31:118:void <clinit>() -> <clinit>
com.google.common.base.Stopwatch -> com.google.common.base.Stopwatch:
    com.google.common.base.Ticker ticker -> ticker
    boolean isRunning -> isRunning
    long elapsedNanos -> elapsedNanos
    long startTick -> startTick
    91:91:com.google.common.base.Stopwatch createUnstarted() -> createUnstarted
    102:102:com.google.common.base.Stopwatch createUnstarted(com.google.common.base.Ticker) -> createUnstarted
    113:113:com.google.common.base.Stopwatch createStarted() -> createStarted
    124:124:com.google.common.base.Stopwatch createStarted(com.google.common.base.Ticker) -> createStarted
    127:129:void <init>() -> <init>
    131:133:void <init>(com.google.common.base.Ticker) -> <init>
    142:142:boolean isRunning() -> isRunning
    152:155:com.google.common.base.Stopwatch start() -> start
    166:170:com.google.common.base.Stopwatch stop() -> stop
    180:182:com.google.common.base.Stopwatch reset() -> reset
    186:186:long elapsedNanos() -> elapsedNanos
    201:201:long elapsed(java.util.concurrent.TimeUnit) -> elapsed
    210:216:java.lang.String toString() -> toString
    220:238:java.util.concurrent.TimeUnit chooseUnit(long) -> chooseUnit
    242:258:java.lang.String abbreviate(java.util.concurrent.TimeUnit) -> abbreviate
com.google.common.base.Stopwatch$1 -> com.google.common.base.Stopwatch$1:
    int[] $SwitchMap$java$util$concurrent$TimeUnit -> $SwitchMap$java$util$concurrent$TimeUnit
    242:242:void <clinit>() -> <clinit>
com.google.common.base.Strings -> com.google.common.base.Strings:
    40:40:void <init>() -> <init>
    49:49:java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    61:61:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    78:78:boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    101:110:java.lang.String padStart(java.lang.String,int,char) -> padStart
    133:142:java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    157:179:java.lang.String repeat(java.lang.String,int) -> repeat
    191:202:java.lang.String commonPrefix(java.lang.CharSequence,java.lang.CharSequence) -> commonPrefix
    214:226:java.lang.String commonSuffix(java.lang.CharSequence,java.lang.CharSequence) -> commonSuffix
    235:235:boolean validSurrogatePairAt(java.lang.CharSequence,int) -> validSurrogatePairAt
com.google.common.base.Supplier -> com.google.common.base.Supplier:
    java.lang.Object get() -> get
com.google.common.base.Suppliers -> com.google.common.base.Suppliers:
    42:42:void <init>() -> <init>
    52:54:com.google.common.base.Supplier compose(com.google.common.base.Function,com.google.common.base.Supplier) -> compose
    108:108:com.google.common.base.Supplier memoize(com.google.common.base.Supplier) -> memoize
    169:169:com.google.common.base.Supplier memoizeWithExpiration(com.google.common.base.Supplier,long,java.util.concurrent.TimeUnit) -> memoizeWithExpiration
    226:226:com.google.common.base.Supplier ofInstance(java.lang.Object) -> ofInstance
    268:268:com.google.common.base.Supplier synchronizedSupplier(com.google.common.base.Supplier) -> synchronizedSupplier
    302:303:com.google.common.base.Function supplierFunction() -> supplierFunction
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    com.google.common.base.Supplier delegate -> delegate
    long durationNanos -> durationNanos
    java.lang.Object value -> value
    long expirationNanos -> expirationNanos
    long serialVersionUID -> serialVersionUID
    180:184:void <init>(com.google.common.base.Supplier,long,java.util.concurrent.TimeUnit) -> <init>
    194:209:java.lang.Object get() -> get
    216:216:java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    com.google.common.base.Supplier delegate -> delegate
    boolean initialized -> initialized
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    121:123:void <init>(com.google.common.base.Supplier) -> <init>
    128:138:java.lang.Object get() -> get
    143:143:java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierComposition -> com.google.common.base.Suppliers$SupplierComposition:
    com.google.common.base.Function function -> function
    com.google.common.base.Supplier supplier -> supplier
    long serialVersionUID -> serialVersionUID
    61:64:void <init>(com.google.common.base.Function,com.google.common.base.Supplier) -> <init>
    68:68:java.lang.Object get() -> get
    73:77:boolean equals(java.lang.Object) -> equals
    82:82:int hashCode() -> hashCode
    87:87:java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierFunction -> com.google.common.base.Suppliers$SupplierFunction:
com.google.common.base.Suppliers$SupplierFunctionImpl -> com.google.common.base.Suppliers$SupplierFunctionImpl:
    com.google.common.base.Suppliers$SupplierFunctionImpl INSTANCE -> INSTANCE
    com.google.common.base.Suppliers$SupplierFunctionImpl[] $VALUES -> $VALUES
    308:308:com.google.common.base.Suppliers$SupplierFunctionImpl[] values() -> values
    308:308:com.google.common.base.Suppliers$SupplierFunctionImpl valueOf(java.lang.String) -> valueOf
    308:308:void <init>(java.lang.String,int) -> <init>
    314:314:java.lang.Object apply(com.google.common.base.Supplier) -> apply
    319:319:java.lang.String toString() -> toString
    308:308:java.lang.Object apply(java.lang.Object) -> apply
    308:309:void <clinit>() -> <clinit>
com.google.common.base.Suppliers$SupplierOfInstance -> com.google.common.base.Suppliers$SupplierOfInstance:
    java.lang.Object instance -> instance
    long serialVersionUID -> serialVersionUID
    232:234:void <init>(java.lang.Object) -> <init>
    238:238:java.lang.Object get() -> get
    243:247:boolean equals(java.lang.Object) -> equals
    252:252:int hashCode() -> hashCode
    257:257:java.lang.String toString() -> toString
com.google.common.base.Suppliers$ThreadSafeSupplier -> com.google.common.base.Suppliers$ThreadSafeSupplier:
    com.google.common.base.Supplier delegate -> delegate
    long serialVersionUID -> serialVersionUID
    274:276:void <init>(com.google.common.base.Supplier) -> <init>
    280:282:java.lang.Object get() -> get
    287:287:java.lang.String toString() -> toString
com.google.common.base.Throwables -> com.google.common.base.Throwables:
    java.lang.String JAVA_LANG_ACCESS_CLASSNAME -> JAVA_LANG_ACCESS_CLASSNAME
    java.lang.String SHARED_SECRETS_CLASSNAME -> SHARED_SECRETS_CLASSNAME
    java.lang.Object jla -> jla
    java.lang.reflect.Method getStackTraceElementMethod -> getStackTraceElementMethod
    java.lang.reflect.Method getStackTraceDepthMethod -> getStackTraceDepthMethod
    49:49:void <init>() -> <init>
    69:72:void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    89:91:void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    112:114:void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    130:133:void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
    159:160:java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    174:177:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    198:204:java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    215:217:java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
    250:250:java.util.List lazyStackTrace(java.lang.Throwable) -> lazyStackTrace
    264:264:boolean lazyStackTraceIsLazy() -> lazyStackTraceIsLazy
    268:275:java.util.List jlaStackTrace(java.lang.Throwable) -> jlaStackTrace
    292:296:java.lang.Object invokeAccessibleNonThrowingMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> invokeAccessibleNonThrowingMethod
    334:344:java.lang.Object getJLA() -> getJLA
    354:354:java.lang.reflect.Method getGetMethod() -> getGetMethod
    363:363:java.lang.reflect.Method getSizeMethod() -> getSizeMethod
    369:377:java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[]) -> getJlaMethod
    48:48:java.lang.reflect.Method access$000() -> access$000
    48:48:java.lang.Object access$100() -> access$100
    48:48:java.lang.Object access$200(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> access$200
    48:48:java.lang.reflect.Method access$300() -> access$300
    307:321:void <clinit>() -> <clinit>
com.google.common.base.Throwables$1 -> com.google.common.base.Throwables$1:
    java.lang.Throwable val$t -> val$t
    275:275:void <init>(java.lang.Throwable) -> <init>
    278:278:java.lang.StackTraceElement get(int) -> get
    284:284:int size() -> size
    275:275:java.lang.Object get(int) -> get
com.google.common.base.Ticker -> com.google.common.base.Ticker:
    com.google.common.base.Ticker SYSTEM_TICKER -> SYSTEM_TICKER
    42:42:void <init>() -> <init>
    long read() -> read
    57:57:com.google.common.base.Ticker systemTicker() -> systemTicker
    60:60:void <clinit>() -> <clinit>
com.google.common.base.Ticker$1 -> com.google.common.base.Ticker$1:
    61:61:void <init>() -> <init>
    64:64:long read() -> read
com.google.common.base.Utf8 -> com.google.common.base.Utf8:
    55:80:int encodedLength(java.lang.CharSequence) -> encodedLength
    84:102:int encodedLengthGeneral(java.lang.CharSequence,int) -> encodedLengthGeneral
    117:117:boolean isWellFormed(byte[]) -> isWellFormed
    131:139:boolean isWellFormed(byte[],int,int) -> isWellFormed
    143:198:boolean isWellFormedSlowPath(byte[],int,int) -> isWellFormedSlowPath
    202:202:java.lang.String unpairedSurrogateMsg(int) -> unpairedSurrogateMsg
    205:205:void <init>() -> <init>
com.google.common.base.Verify -> com.google.common.base.Verify:
    99:102:void verify(boolean) -> verify
    124:127:void verify(boolean,java.lang.String,java.lang.Object[]) -> verify
    137:137:java.lang.Object verifyNotNull(java.lang.Object) -> verifyNotNull
    160:161:java.lang.Object verifyNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> verifyNotNull
    167:167:void <init>() -> <init>
com.google.common.base.VerifyException -> com.google.common.base.VerifyException:
    33:33:void <init>() -> <init>
    37:38:void <init>(java.lang.String) -> <init>
    47:48:void <init>(java.lang.Throwable) -> <init>
    57:58:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.common.base.internal.Finalizer -> com.google.common.base.internal.Finalizer:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZABLE_REFERENCE -> FINALIZABLE_REFERENCE
    java.lang.ref.WeakReference finalizableReferenceClassReference -> finalizableReferenceClassReference
    java.lang.ref.PhantomReference frqReference -> frqReference
    java.lang.ref.ReferenceQueue queue -> queue
    java.lang.reflect.Field inheritableThreadLocals -> inheritableThreadLocals
    78:99:void startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference) -> startFinalizer
    111:119:void <init>(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference) -> <init>
    129:136:void run() -> run
    144:174:boolean cleanUp(java.lang.ref.Reference) -> cleanUp
    181:196:java.lang.reflect.Method getFinalizeReferentMethod() -> getFinalizeReferentMethod
    202:210:java.lang.reflect.Field getInheritableThreadLocalsField() -> getInheritableThreadLocalsField
    51:105:void <clinit>() -> <clinit>
com.google.common.base.package-info -> com.google.common.base.package-info:
com.google.common.cache.AbstractCache -> com.google.common.cache.AbstractCache:
    46:46:void <init>() -> <init>
    53:53:java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    67:78:com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    86:86:void put(java.lang.Object,java.lang.Object) -> put
    94:97:void putAll(java.util.Map) -> putAll
    100:100:void cleanUp() -> cleanUp
    104:104:long size() -> size
    109:109:void invalidate(java.lang.Object) -> invalidate
    117:120:void invalidateAll(java.lang.Iterable) -> invalidateAll
    124:124:void invalidateAll() -> invalidateAll
    129:129:com.google.common.cache.CacheStats stats() -> stats
    134:134:java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.cache.AbstractCache$SimpleStatsCounter -> com.google.common.cache.AbstractCache$SimpleStatsCounter:
    com.google.common.cache.LongAddable hitCount -> hitCount
    com.google.common.cache.LongAddable missCount -> missCount
    com.google.common.cache.LongAddable loadSuccessCount -> loadSuccessCount
    com.google.common.cache.LongAddable loadExceptionCount -> loadExceptionCount
    com.google.common.cache.LongAddable totalLoadTime -> totalLoadTime
    com.google.common.cache.LongAddable evictionCount -> evictionCount
    205:215:void <init>() -> <init>
    222:223:void recordHits(int) -> recordHits
    230:231:void recordMisses(int) -> recordMisses
    235:237:void recordLoadSuccess(long) -> recordLoadSuccess
    241:243:void recordLoadException(long) -> recordLoadException
    247:248:void recordEviction() -> recordEviction
    252:252:com.google.common.cache.CacheStats snapshot() -> snapshot
    265:272:void incrementBy(com.google.common.cache.AbstractCache$StatsCounter) -> incrementBy
com.google.common.cache.AbstractCache$StatsCounter -> com.google.common.cache.AbstractCache$StatsCounter:
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
com.google.common.cache.AbstractLoadingCache -> com.google.common.cache.AbstractLoadingCache:
    46:46:void <init>() -> <init>
    51:53:java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    59:65:com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    70:70:java.lang.Object apply(java.lang.Object) -> apply
    75:75:void refresh(java.lang.Object) -> refresh
com.google.common.cache.Cache -> com.google.common.cache.Cache:
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    void cleanUp() -> cleanUp
com.google.common.cache.CacheBuilder -> com.google.common.cache.CacheBuilder:
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    int DEFAULT_EXPIRATION_NANOS -> DEFAULT_EXPIRATION_NANOS
    int DEFAULT_REFRESH_NANOS -> DEFAULT_REFRESH_NANOS
    com.google.common.base.Supplier NULL_STATS_COUNTER -> NULL_STATS_COUNTER
    com.google.common.cache.CacheStats EMPTY_STATS -> EMPTY_STATS
    com.google.common.base.Supplier CACHE_STATS_COUNTER -> CACHE_STATS_COUNTER
    com.google.common.base.Ticker NULL_TICKER -> NULL_TICKER
    java.util.logging.Logger logger -> logger
    int UNSET_INT -> UNSET_INT
    boolean strictParsing -> strictParsing
    int initialCapacity -> initialCapacity
    int concurrencyLevel -> concurrencyLevel
    long maximumSize -> maximumSize
    long maximumWeight -> maximumWeight
    com.google.common.cache.Weigher weigher -> weigher
    com.google.common.cache.LocalCache$Strength keyStrength -> keyStrength
    com.google.common.cache.LocalCache$Strength valueStrength -> valueStrength
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long expireAfterAccessNanos -> expireAfterAccessNanos
    long refreshNanos -> refreshNanos
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    com.google.common.cache.RemovalListener removalListener -> removalListener
    com.google.common.base.Ticker ticker -> ticker
    com.google.common.base.Supplier statsCounterSupplier -> statsCounterSupplier
    217:241:void <init>() -> <init>
    248:248:com.google.common.cache.CacheBuilder newBuilder() -> newBuilder
    258:258:com.google.common.cache.CacheBuilder from(com.google.common.cache.CacheBuilderSpec) -> from
    271:271:com.google.common.cache.CacheBuilder from(java.lang.String) -> from
    279:280:com.google.common.cache.CacheBuilder lenientParsing() -> lenientParsing
    291:293:com.google.common.cache.CacheBuilder keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    297:297:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    309:312:com.google.common.cache.CacheBuilder valueEquivalence(com.google.common.base.Equivalence) -> valueEquivalence
    316:316:com.google.common.base.Equivalence getValueEquivalence() -> getValueEquivalence
    330:334:com.google.common.cache.CacheBuilder initialCapacity(int) -> initialCapacity
    338:338:int getInitialCapacity() -> getInitialCapacity
    372:376:com.google.common.cache.CacheBuilder concurrencyLevel(int) -> concurrencyLevel
    380:380:int getConcurrencyLevel() -> getConcurrencyLevel
    399:406:com.google.common.cache.CacheBuilder maximumSize(long) -> maximumSize
    435:441:com.google.common.cache.CacheBuilder maximumWeight(long) -> maximumWeight
    475:485:com.google.common.cache.CacheBuilder weigher(com.google.common.cache.Weigher) -> weigher
    489:492:long getMaximumWeight() -> getMaximumWeight
    498:498:com.google.common.cache.Weigher getWeigher() -> getWeigher
    516:516:com.google.common.cache.CacheBuilder weakKeys() -> weakKeys
    520:522:com.google.common.cache.CacheBuilder setKeyStrength(com.google.common.cache.LocalCache$Strength) -> setKeyStrength
    526:526:com.google.common.cache.LocalCache$Strength getKeyStrength() -> getKeyStrength
    547:547:com.google.common.cache.CacheBuilder weakValues() -> weakValues
    571:571:com.google.common.cache.CacheBuilder softValues() -> softValues
    575:577:com.google.common.cache.CacheBuilder setValueStrength(com.google.common.cache.LocalCache$Strength) -> setValueStrength
    581:581:com.google.common.cache.LocalCache$Strength getValueStrength() -> getValueStrength
    604:608:com.google.common.cache.CacheBuilder expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    612:612:long getExpireAfterWriteNanos() -> getExpireAfterWriteNanos
    638:642:com.google.common.cache.CacheBuilder expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    646:646:long getExpireAfterAccessNanos() -> getExpireAfterAccessNanos
    677:681:com.google.common.cache.CacheBuilder refreshAfterWrite(long,java.util.concurrent.TimeUnit) -> refreshAfterWrite
    685:685:long getRefreshNanos() -> getRefreshNanos
    698:700:com.google.common.cache.CacheBuilder ticker(com.google.common.base.Ticker) -> ticker
    704:707:com.google.common.base.Ticker getTicker(boolean) -> getTicker
    734:740:com.google.common.cache.CacheBuilder removalListener(com.google.common.cache.RemovalListener) -> removalListener
    746:746:com.google.common.cache.RemovalListener getRemovalListener() -> getRemovalListener
    759:760:com.google.common.cache.CacheBuilder recordStats() -> recordStats
    764:764:boolean isRecordingStats() -> isRecordingStats
    768:768:com.google.common.base.Supplier getStatsCounterSupplier() -> getStatsCounterSupplier
    785:786:com.google.common.cache.LoadingCache build(com.google.common.cache.CacheLoader) -> build
    802:804:com.google.common.cache.Cache build() -> build
    808:809:void checkNonLoadingCache() -> checkNonLoadingCache
    812:823:void checkWeightWithWeigher() -> checkWeightWithWeigher
    831:865:java.lang.String toString() -> toString
    158:213:void <clinit>() -> <clinit>
com.google.common.cache.CacheBuilder$1 -> com.google.common.cache.CacheBuilder$1:
    159:159:void <init>() -> <init>
    161:161:void recordHits(int) -> recordHits
    164:164:void recordMisses(int) -> recordMisses
    167:167:void recordLoadSuccess(long) -> recordLoadSuccess
    170:170:void recordLoadException(long) -> recordLoadException
    173:173:void recordEviction() -> recordEviction
    177:177:com.google.common.cache.CacheStats snapshot() -> snapshot
com.google.common.cache.CacheBuilder$2 -> com.google.common.cache.CacheBuilder$2:
    183:183:void <init>() -> <init>
    186:186:com.google.common.cache.AbstractCache$StatsCounter get() -> get
    183:183:java.lang.Object get() -> get
com.google.common.cache.CacheBuilder$3 -> com.google.common.cache.CacheBuilder$3:
    206:206:void <init>() -> <init>
    209:209:long read() -> read
com.google.common.cache.CacheBuilder$NullListener -> com.google.common.cache.CacheBuilder$NullListener:
    com.google.common.cache.CacheBuilder$NullListener INSTANCE -> INSTANCE
    com.google.common.cache.CacheBuilder$NullListener[] $VALUES -> $VALUES
    190:190:com.google.common.cache.CacheBuilder$NullListener[] values() -> values
    190:190:com.google.common.cache.CacheBuilder$NullListener valueOf(java.lang.String) -> valueOf
    190:190:void <init>(java.lang.String,int) -> <init>
    194:194:void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
    190:191:void <clinit>() -> <clinit>
com.google.common.cache.CacheBuilder$OneWeigher -> com.google.common.cache.CacheBuilder$OneWeigher:
    com.google.common.cache.CacheBuilder$OneWeigher INSTANCE -> INSTANCE
    com.google.common.cache.CacheBuilder$OneWeigher[] $VALUES -> $VALUES
    197:197:com.google.common.cache.CacheBuilder$OneWeigher[] values() -> values
    197:197:com.google.common.cache.CacheBuilder$OneWeigher valueOf(java.lang.String) -> valueOf
    197:197:void <init>(java.lang.String,int) -> <init>
    202:202:int weigh(java.lang.Object,java.lang.Object) -> weigh
    197:198:void <clinit>() -> <clinit>
com.google.common.cache.CacheBuilderSpec -> com.google.common.cache.CacheBuilderSpec:
    com.google.common.base.Splitter KEYS_SPLITTER -> KEYS_SPLITTER
    com.google.common.base.Splitter KEY_VALUE_SPLITTER -> KEY_VALUE_SPLITTER
    com.google.common.collect.ImmutableMap VALUE_PARSERS -> VALUE_PARSERS
    java.lang.Integer initialCapacity -> initialCapacity
    java.lang.Long maximumSize -> maximumSize
    java.lang.Long maximumWeight -> maximumWeight
    java.lang.Integer concurrencyLevel -> concurrencyLevel
    com.google.common.cache.LocalCache$Strength keyStrength -> keyStrength
    com.google.common.cache.LocalCache$Strength valueStrength -> valueStrength
    java.lang.Boolean recordStats -> recordStats
    long writeExpirationDuration -> writeExpirationDuration
    java.util.concurrent.TimeUnit writeExpirationTimeUnit -> writeExpirationTimeUnit
    long accessExpirationDuration -> accessExpirationDuration
    java.util.concurrent.TimeUnit accessExpirationTimeUnit -> accessExpirationTimeUnit
    long refreshDuration -> refreshDuration
    java.util.concurrent.TimeUnit refreshTimeUnit -> refreshTimeUnit
    java.lang.String specification -> specification
    127:129:void <init>(java.lang.String) -> <init>
    137:155:com.google.common.cache.CacheBuilderSpec parse(java.lang.String) -> parse
    163:163:com.google.common.cache.CacheBuilderSpec disableCaching() -> disableCaching
    170:217:com.google.common.cache.CacheBuilder toCacheBuilder() -> toCacheBuilder
    227:227:java.lang.String toParsableString() -> toParsableString
    236:236:java.lang.String toString() -> toString
    241:241:int hashCode() -> hashCode
    256:263:boolean equals(java.lang.Object) -> equals
    283:283:java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit) -> durationInNanos
    476:476:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    82:82:java.lang.String access$000(java.lang.String,java.lang.Object[]) -> access$000
    89:95:void <clinit>() -> <clinit>
com.google.common.cache.CacheBuilderSpec$1 -> com.google.common.cache.CacheBuilderSpec$1:
    int[] $SwitchMap$com$google$common$cache$LocalCache$Strength -> $SwitchMap$com$google$common$cache$LocalCache$Strength
    184:184:void <clinit>() -> <clinit>
com.google.common.cache.CacheBuilderSpec$AccessDurationParser -> com.google.common.cache.CacheBuilderSpec$AccessDurationParser:
    449:449:void <init>() -> <init>
    451:454:void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> parseDuration
com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser -> com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser:
    353:353:void <init>() -> <init>
    356:359:void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> parseInteger
com.google.common.cache.CacheBuilderSpec$DurationParser -> com.google.common.cache.CacheBuilderSpec$DurationParser:
    408:408:void <init>() -> <init>
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> parseDuration
    416:445:void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$InitialCapacityParser -> com.google.common.cache.CacheBuilderSpec$InitialCapacityParser:
    319:319:void <init>() -> <init>
    322:325:void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> parseInteger
com.google.common.cache.CacheBuilderSpec$IntegerParser -> com.google.common.cache.CacheBuilderSpec$IntegerParser:
    287:287:void <init>() -> <init>
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> parseInteger
    292:299:void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$KeyStrengthParser -> com.google.common.cache.CacheBuilderSpec$KeyStrengthParser:
    com.google.common.cache.LocalCache$Strength strength -> strength
    366:368:void <init>(com.google.common.cache.LocalCache$Strength) -> <init>
    372:375:void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$LongParser -> com.google.common.cache.CacheBuilderSpec$LongParser:
    303:303:void <init>() -> <init>
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> parseLong
    308:315:void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$MaximumSizeParser -> com.google.common.cache.CacheBuilderSpec$MaximumSizeParser:
    329:329:void <init>() -> <init>
    332:337:void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> parseLong
com.google.common.cache.CacheBuilderSpec$MaximumWeightParser -> com.google.common.cache.CacheBuilderSpec$MaximumWeightParser:
    341:341:void <init>() -> <init>
    344:349:void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> parseLong
com.google.common.cache.CacheBuilderSpec$RecordStatsParser -> com.google.common.cache.CacheBuilderSpec$RecordStatsParser:
    397:397:void <init>() -> <init>
    401:404:void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$RefreshDurationParser -> com.google.common.cache.CacheBuilderSpec$RefreshDurationParser:
    467:467:void <init>() -> <init>
    469:472:void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> parseDuration
com.google.common.cache.CacheBuilderSpec$ValueParser -> com.google.common.cache.CacheBuilderSpec$ValueParser:
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$ValueStrengthParser -> com.google.common.cache.CacheBuilderSpec$ValueStrengthParser:
    com.google.common.cache.LocalCache$Strength strength -> strength
    382:384:void <init>(com.google.common.cache.LocalCache$Strength) -> <init>
    388:393:void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> parse
com.google.common.cache.CacheBuilderSpec$WriteDurationParser -> com.google.common.cache.CacheBuilderSpec$WriteDurationParser:
    458:458:void <init>() -> <init>
    460:463:void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> parseDuration
com.google.common.cache.CacheLoader -> com.google.common.cache.CacheLoader:
    57:57:void <init>() -> <init>
    java.lang.Object load(java.lang.Object) -> load
    94:96:com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object,java.lang.Object) -> reload
    124:124:java.util.Map loadAll(java.lang.Iterable) -> loadAll
    136:136:com.google.common.cache.CacheLoader from(com.google.common.base.Function) -> from
    165:165:com.google.common.cache.CacheLoader from(com.google.common.base.Supplier) -> from
    180:182:com.google.common.cache.CacheLoader asyncReloading(com.google.common.cache.CacheLoader,java.util.concurrent.Executor) -> asyncReloading
com.google.common.cache.CacheLoader$1 -> com.google.common.cache.CacheLoader$1:
    com.google.common.cache.CacheLoader val$loader -> val$loader
    java.util.concurrent.Executor val$executor -> val$executor
    182:182:void <init>(com.google.common.cache.CacheLoader,java.util.concurrent.Executor) -> <init>
    185:185:java.lang.Object load(java.lang.Object) -> load
    190:197:com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object,java.lang.Object) -> reload
    202:202:java.util.Map loadAll(java.lang.Iterable) -> loadAll
com.google.common.cache.CacheLoader$1$1 -> com.google.common.cache.CacheLoader$1$1:
    java.lang.Object val$key -> val$key
    java.lang.Object val$oldValue -> val$oldValue
    com.google.common.cache.CacheLoader$1 this$0 -> this$0
    190:190:void <init>(com.google.common.cache.CacheLoader$1,java.lang.Object,java.lang.Object) -> <init>
    193:193:java.lang.Object call() -> call
com.google.common.cache.CacheLoader$FunctionToCacheLoader -> com.google.common.cache.CacheLoader$FunctionToCacheLoader:
    com.google.common.base.Function computingFunction -> computingFunction
    long serialVersionUID -> serialVersionUID
    143:145:void <init>(com.google.common.base.Function) -> <init>
    149:149:java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.CacheLoader$InvalidCacheLoadException -> com.google.common.cache.CacheLoader$InvalidCacheLoadException:
    243:244:void <init>(java.lang.String) -> <init>
com.google.common.cache.CacheLoader$SupplierToCacheLoader -> com.google.common.cache.CacheLoader$SupplierToCacheLoader:
    com.google.common.base.Supplier computingSupplier -> computingSupplier
    long serialVersionUID -> serialVersionUID
    211:213:void <init>(com.google.common.base.Supplier) -> <init>
    217:218:java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException -> com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException:
    233:233:void <init>() -> <init>
com.google.common.cache.CacheStats -> com.google.common.cache.CacheStats:
    long hitCount -> hitCount
    long missCount -> missCount
    long loadSuccessCount -> loadSuccessCount
    long loadExceptionCount -> loadExceptionCount
    long totalLoadTime -> totalLoadTime
    long evictionCount -> evictionCount
    76:90:void <init>(long,long,long,long,long,long) -> <init>
    97:97:long requestCount() -> requestCount
    104:104:long hitCount() -> hitCount
    113:114:double hitRate() -> hitRate
    124:124:long missCount() -> missCount
    137:138:double missRate() -> missRate
    147:147:long loadCount() -> loadCount
    158:158:long loadSuccessCount() -> loadSuccessCount
    169:169:long loadExceptionCount() -> loadExceptionCount
    178:179:double loadExceptionRate() -> loadExceptionRate
    190:190:long totalLoadTime() -> totalLoadTime
    198:199:double averageLoadPenalty() -> averageLoadPenalty
    209:209:long evictionCount() -> evictionCount
    218:218:com.google.common.cache.CacheStats minus(com.google.common.cache.CacheStats) -> minus
    234:234:com.google.common.cache.CacheStats plus(com.google.common.cache.CacheStats) -> plus
    245:245:int hashCode() -> hashCode
    251:260:boolean equals(java.lang.Object) -> equals
    265:265:java.lang.String toString() -> toString
com.google.common.cache.ForwardingCache -> com.google.common.cache.ForwardingCache:
    41:41:void <init>() -> <init>
    com.google.common.cache.Cache delegate() -> delegate
    52:52:java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    60:60:java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    68:68:com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    76:77:void put(java.lang.Object,java.lang.Object) -> put
    84:85:void putAll(java.util.Map) -> putAll
    89:90:void invalidate(java.lang.Object) -> invalidate
    97:98:void invalidateAll(java.lang.Iterable) -> invalidateAll
    102:103:void invalidateAll() -> invalidateAll
    107:107:long size() -> size
    112:112:com.google.common.cache.CacheStats stats() -> stats
    117:117:java.util.concurrent.ConcurrentMap asMap() -> asMap
    122:123:void cleanUp() -> cleanUp
    38:38:java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingCache$SimpleForwardingCache -> com.google.common.cache.ForwardingCache$SimpleForwardingCache:
    com.google.common.cache.Cache delegate -> delegate
    134:136:void <init>(com.google.common.cache.Cache) -> <init>
    140:140:com.google.common.cache.Cache delegate() -> delegate
    131:131:java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingLoadingCache -> com.google.common.cache.ForwardingLoadingCache:
    39:39:void <init>() -> <init>
    com.google.common.cache.LoadingCache delegate() -> delegate
    46:46:java.lang.Object get(java.lang.Object) -> get
    51:51:java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    56:56:com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    61:61:java.lang.Object apply(java.lang.Object) -> apply
    66:67:void refresh(java.lang.Object) -> refresh
    35:35:com.google.common.cache.Cache delegate() -> delegate
    35:35:java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache -> com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache:
    com.google.common.cache.LoadingCache delegate -> delegate
    79:81:void <init>(com.google.common.cache.LoadingCache) -> <init>
    85:85:com.google.common.cache.LoadingCache delegate() -> delegate
    75:75:com.google.common.cache.Cache delegate() -> delegate
    75:75:java.lang.Object delegate() -> delegate
com.google.common.cache.LoadingCache -> com.google.common.cache.LoadingCache:
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.cache.LocalCache -> com.google.common.cache.LocalCache:
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int MAX_SEGMENTS -> MAX_SEGMENTS
    int CONTAINS_VALUE_RETRIES -> CONTAINS_VALUE_RETRIES
    int DRAIN_THRESHOLD -> DRAIN_THRESHOLD
    int DRAIN_MAX -> DRAIN_MAX
    java.util.logging.Logger logger -> logger
    int segmentMask -> segmentMask
    int segmentShift -> segmentShift
    com.google.common.cache.LocalCache$Segment[] segments -> segments
    int concurrencyLevel -> concurrencyLevel
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    com.google.common.cache.LocalCache$Strength keyStrength -> keyStrength
    com.google.common.cache.LocalCache$Strength valueStrength -> valueStrength
    long maxWeight -> maxWeight
    com.google.common.cache.Weigher weigher -> weigher
    long expireAfterAccessNanos -> expireAfterAccessNanos
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long refreshNanos -> refreshNanos
    java.util.Queue removalNotificationQueue -> removalNotificationQueue
    com.google.common.cache.RemovalListener removalListener -> removalListener
    com.google.common.base.Ticker ticker -> ticker
    com.google.common.cache.LocalCache$EntryFactory entryFactory -> entryFactory
    com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter -> globalStatsCounter
    com.google.common.cache.CacheLoader defaultLoader -> defaultLoader
    com.google.common.cache.LocalCache$ValueReference UNSET -> UNSET
    java.util.Queue DISCARDING_QUEUE -> DISCARDING_QUEUE
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    240:314:void <init>(com.google.common.cache.CacheBuilder,com.google.common.cache.CacheLoader) -> <init>
    317:317:boolean evictsBySize() -> evictsBySize
    321:321:boolean customWeigher() -> customWeigher
    325:325:boolean expires() -> expires
    329:329:boolean expiresAfterWrite() -> expiresAfterWrite
    333:333:boolean expiresAfterAccess() -> expiresAfterAccess
    337:337:boolean refreshes() -> refreshes
    341:341:boolean usesAccessQueue() -> usesAccessQueue
    345:345:boolean usesWriteQueue() -> usesWriteQueue
    349:349:boolean recordsWrite() -> recordsWrite
    353:353:boolean recordsAccess() -> recordsAccess
    357:357:boolean recordsTime() -> recordsTime
    361:361:boolean usesWriteEntries() -> usesWriteEntries
    365:365:boolean usesAccessEntries() -> usesAccessEntries
    369:369:boolean usesKeyReferences() -> usesKeyReferences
    373:373:boolean usesValueReferences() -> usesValueReferences
    737:737:com.google.common.cache.LocalCache$ValueReference unset() -> unset
    1019:1019:com.google.common.cache.LocalCache$ReferenceEntry nullEntry() -> nullEntry
    1054:1054:java.util.Queue discardingQueue() -> discardingQueue
    1800:1805:int rehash(int) -> rehash
    1813:1818:com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    1828:1829:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
    1838:1839:com.google.common.cache.LocalCache$ValueReference newValueReference(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> newValueReference
    1843:1844:int hash(java.lang.Object) -> hash
    1848:1851:void reclaimValue(com.google.common.cache.LocalCache$ValueReference) -> reclaimValue
    1854:1856:void reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry) -> reclaimKey
    1864:1864:boolean isLive(com.google.common.cache.LocalCache$ReferenceEntry,long) -> isLive
    1875:1875:com.google.common.cache.LocalCache$Segment segmentFor(int) -> segmentFor
    1880:1880:com.google.common.cache.LocalCache$Segment createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter) -> createSegment
    1891:1902:java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long) -> getLiveValue
    1911:1920:boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long) -> isExpired
    1927:1929:void connectAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> connectAccessOrder
    1933:1936:void nullifyAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry) -> nullifyAccessOrder
    1940:1942:void connectWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> connectWriteOrder
    1946:1949:void nullifyWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry) -> nullifyWriteOrder
    1958:1965:void processPendingNotifications() -> processPendingNotifications
    1969:1969:com.google.common.cache.LocalCache$Segment[] newSegmentArray(int) -> newSegmentArray
    3876:3879:void cleanUp() -> cleanUp
    3892:3912:boolean isEmpty() -> isEmpty
    3916:3921:long longSize() -> longSize
    3926:3926:int size() -> size
    3932:3936:java.lang.Object get(java.lang.Object) -> get
    3941:3948:java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    3952:3953:java.lang.Object get(java.lang.Object,com.google.common.cache.CacheLoader) -> get
    3957:3957:java.lang.Object getOrLoad(java.lang.Object) -> getOrLoad
    3961:3979:com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    3983:4023:com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    4034:4088:java.util.Map loadAll(java.util.Set,com.google.common.cache.CacheLoader) -> loadAll
    4097:4101:com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object) -> getEntry
    4105:4107:void refresh(java.lang.Object) -> refresh
    4112:4116:boolean containsKey(java.lang.Object) -> containsKey
    4122:4156:boolean containsValue(java.lang.Object) -> containsValue
    4161:4164:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    4169:4172:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    4177:4180:void putAll(java.util.Map) -> putAll
    4184:4188:java.lang.Object remove(java.lang.Object) -> remove
    4193:4197:boolean remove(java.lang.Object,java.lang.Object) -> remove
    4202:4208:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    4213:4216:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    4221:4224:void clear() -> clear
    4228:4231:void invalidateAll(java.lang.Iterable) -> invalidateAll
    4238:4239:java.util.Set keySet() -> keySet
    4247:4248:java.util.Collection values() -> values
    4257:4258:java.util.Set entrySet() -> entrySet
    4490:4492:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    100:100:java.util.ArrayList access$200(java.util.Collection) -> access$200
    161:1022:void <clinit>() -> <clinit>
com.google.common.cache.LocalCache$1 -> com.google.common.cache.LocalCache$1:
    691:691:void <init>() -> <init>
    694:694:java.lang.Object get() -> get
    699:699:int getWeight() -> getWeight
    704:704:com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> getEntry
    710:710:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
    715:715:boolean isLoading() -> isLoading
    720:720:boolean isActive() -> isActive
    725:725:java.lang.Object waitForValue() -> waitForValue
    729:729:void notifyNewValue(java.lang.Object) -> notifyNewValue
com.google.common.cache.LocalCache$2 -> com.google.common.cache.LocalCache$2:
    1022:1022:void <init>() -> <init>
    1025:1025:boolean offer(java.lang.Object) -> offer
    1030:1030:java.lang.Object peek() -> peek
    1035:1035:java.lang.Object poll() -> poll
    1040:1040:int size() -> size
    1045:1045:java.util.Iterator iterator() -> iterator
com.google.common.cache.LocalCache$AbstractCacheSet -> com.google.common.cache.LocalCache$AbstractCacheSet:
    java.util.concurrent.ConcurrentMap map -> map
    com.google.common.cache.LocalCache this$0 -> this$0
    4455:4457:void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap) -> <init>
    4461:4461:int size() -> size
    4466:4466:boolean isEmpty() -> isEmpty
    4471:4472:void clear() -> clear
    4479:4479:java.lang.Object[] toArray() -> toArray
    4484:4484:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.cache.LocalCache$AbstractReferenceEntry -> com.google.common.cache.LocalCache$AbstractReferenceEntry:
    930:930:void <init>() -> <init>
    933:933:com.google.common.cache.LocalCache$ValueReference getValueReference() -> getValueReference
    938:938:void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> setValueReference
    943:943:com.google.common.cache.LocalCache$ReferenceEntry getNext() -> getNext
    948:948:int getHash() -> getHash
    953:953:java.lang.Object getKey() -> getKey
    958:958:long getAccessTime() -> getAccessTime
    963:963:void setAccessTime(long) -> setAccessTime
    968:968:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    973:973:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    978:978:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    983:983:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
    988:988:long getWriteTime() -> getWriteTime
    993:993:void setWriteTime(long) -> setWriteTime
    998:998:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    1003:1003:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    1008:1008:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    1013:1013:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$AccessQueue -> com.google.common.cache.LocalCache$AccessQueue:
    com.google.common.cache.LocalCache$ReferenceEntry head -> head
    3747:3748:void <init>() -> <init>
    3788:3794:boolean offer(com.google.common.cache.LocalCache$ReferenceEntry) -> offer
    3799:3800:com.google.common.cache.LocalCache$ReferenceEntry peek() -> peek
    3805:3811:com.google.common.cache.LocalCache$ReferenceEntry poll() -> poll
    3817:3823:boolean remove(java.lang.Object) -> remove
    3829:3830:boolean contains(java.lang.Object) -> contains
    3835:3835:boolean isEmpty() -> isEmpty
    3840:3845:int size() -> size
    3850:3859:void clear() -> clear
    3863:3863:java.util.Iterator iterator() -> iterator
    3747:3747:java.lang.Object peek() -> peek
    3747:3747:java.lang.Object poll() -> poll
    3747:3747:boolean offer(java.lang.Object) -> offer
com.google.common.cache.LocalCache$AccessQueue$1 -> com.google.common.cache.LocalCache$AccessQueue$1:
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> nextAccess
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> previousAccess
    com.google.common.cache.LocalCache$AccessQueue this$0 -> this$0
    3748:3770:void <init>(com.google.common.cache.LocalCache$AccessQueue) -> <init>
    3752:3752:long getAccessTime() -> getAccessTime
    3756:3756:void setAccessTime(long) -> setAccessTime
    3762:3762:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    3767:3768:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    3774:3774:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    3779:3780:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
com.google.common.cache.LocalCache$AccessQueue$2 -> com.google.common.cache.LocalCache$AccessQueue$2:
    com.google.common.cache.LocalCache$AccessQueue this$0 -> this$0
    3863:3863:void <init>(com.google.common.cache.LocalCache$AccessQueue,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    3866:3867:com.google.common.cache.LocalCache$ReferenceEntry computeNext(com.google.common.cache.LocalCache$ReferenceEntry) -> computeNext
    3863:3863:java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.cache.LocalCache$EntryFactory -> com.google.common.cache.LocalCache$EntryFactory:
    com.google.common.cache.LocalCache$EntryFactory STRONG -> STRONG
    com.google.common.cache.LocalCache$EntryFactory STRONG_ACCESS -> STRONG_ACCESS
    com.google.common.cache.LocalCache$EntryFactory STRONG_WRITE -> STRONG_WRITE
    com.google.common.cache.LocalCache$EntryFactory STRONG_ACCESS_WRITE -> STRONG_ACCESS_WRITE
    com.google.common.cache.LocalCache$EntryFactory WEAK -> WEAK
    com.google.common.cache.LocalCache$EntryFactory WEAK_ACCESS -> WEAK_ACCESS
    com.google.common.cache.LocalCache$EntryFactory WEAK_WRITE -> WEAK_WRITE
    com.google.common.cache.LocalCache$EntryFactory WEAK_ACCESS_WRITE -> WEAK_ACCESS_WRITE
    int ACCESS_MASK -> ACCESS_MASK
    int WRITE_MASK -> WRITE_MASK
    int WEAK_MASK -> WEAK_MASK
    com.google.common.cache.LocalCache$EntryFactory[] factories -> factories
    com.google.common.cache.LocalCache$EntryFactory[] $VALUES -> $VALUES
    446:446:com.google.common.cache.LocalCache$EntryFactory[] values() -> values
    446:446:com.google.common.cache.LocalCache$EntryFactory valueOf(java.lang.String) -> valueOf
    446:446:void <init>(java.lang.String,int) -> <init>
    572:575:com.google.common.cache.LocalCache$EntryFactory getFactory(com.google.common.cache.LocalCache$Strength,boolean,boolean) -> getFactory
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    598:598:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
    605:611:void copyAccessEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyAccessEntry
    617:623:void copyWriteEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyWriteEntry
    446:446:void <init>(java.lang.String,int,com.google.common.cache.LocalCache$1) -> <init>
    446:565:void <clinit>() -> <clinit>
com.google.common.cache.LocalCache$EntryFactory$1 -> com.google.common.cache.LocalCache$EntryFactory$1:
    447:447:void <init>(java.lang.String,int) -> <init>
    451:451:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
com.google.common.cache.LocalCache$EntryFactory$2 -> com.google.common.cache.LocalCache$EntryFactory$2:
    454:454:void <init>(java.lang.String,int) -> <init>
    458:458:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    464:466:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
com.google.common.cache.LocalCache$EntryFactory$3 -> com.google.common.cache.LocalCache$EntryFactory$3:
    469:469:void <init>(java.lang.String,int) -> <init>
    473:473:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    479:481:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
com.google.common.cache.LocalCache$EntryFactory$4 -> com.google.common.cache.LocalCache$EntryFactory$4:
    484:484:void <init>(java.lang.String,int) -> <init>
    488:488:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    494:497:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
com.google.common.cache.LocalCache$EntryFactory$5 -> com.google.common.cache.LocalCache$EntryFactory$5:
    501:501:void <init>(java.lang.String,int) -> <init>
    505:505:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
com.google.common.cache.LocalCache$EntryFactory$6 -> com.google.common.cache.LocalCache$EntryFactory$6:
    508:508:void <init>(java.lang.String,int) -> <init>
    512:512:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    518:520:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
com.google.common.cache.LocalCache$EntryFactory$7 -> com.google.common.cache.LocalCache$EntryFactory$7:
    523:523:void <init>(java.lang.String,int) -> <init>
    527:527:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    533:535:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
com.google.common.cache.LocalCache$EntryFactory$8 -> com.google.common.cache.LocalCache$EntryFactory$8:
    538:538:void <init>(java.lang.String,int) -> <init>
    542:542:com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    548:551:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
com.google.common.cache.LocalCache$EntryIterator -> com.google.common.cache.LocalCache$EntryIterator:
    com.google.common.cache.LocalCache this$0 -> this$0
    4444:4444:void <init>(com.google.common.cache.LocalCache) -> <init>
    4448:4448:java.util.Map$Entry next() -> next
    4444:4444:java.lang.Object next() -> next
com.google.common.cache.LocalCache$EntrySet -> com.google.common.cache.LocalCache$EntrySet:
    com.google.common.cache.LocalCache this$0 -> this$0
    4565:4567:void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap) -> <init>
    4571:4571:java.util.Iterator iterator() -> iterator
    4576:4586:boolean contains(java.lang.Object) -> contains
    4591:4596:boolean remove(java.lang.Object) -> remove
com.google.common.cache.LocalCache$HashIterator -> com.google.common.cache.LocalCache$HashIterator:
    int nextSegmentIndex -> nextSegmentIndex
    int nextTableIndex -> nextTableIndex
    com.google.common.cache.LocalCache$Segment currentSegment -> currentSegment
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> currentTable
    com.google.common.cache.LocalCache$ReferenceEntry nextEntry -> nextEntry
    com.google.common.cache.LocalCache$WriteThroughEntry nextExternal -> nextExternal
    com.google.common.cache.LocalCache$WriteThroughEntry lastReturned -> lastReturned
    com.google.common.cache.LocalCache this$0 -> this$0
    4273:4277:void <init>(com.google.common.cache.LocalCache) -> <init>
    java.lang.Object next() -> next
    4283:4303:void advance() -> advance
    4309:4316:boolean nextInChain() -> nextInChain
    4323:4330:boolean nextInTable() -> nextInTable
    4339:4350:boolean advanceTo(com.google.common.cache.LocalCache$ReferenceEntry) -> advanceTo
    4356:4356:boolean hasNext() -> hasNext
    4360:4365:com.google.common.cache.LocalCache$WriteThroughEntry nextEntry() -> nextEntry
    4370:4373:void remove() -> remove
com.google.common.cache.LocalCache$KeyIterator -> com.google.common.cache.LocalCache$KeyIterator:
    com.google.common.cache.LocalCache this$0 -> this$0
    4376:4376:void <init>(com.google.common.cache.LocalCache) -> <init>
    4380:4380:java.lang.Object next() -> next
com.google.common.cache.LocalCache$KeySet -> com.google.common.cache.LocalCache$KeySet:
    com.google.common.cache.LocalCache this$0 -> this$0
    4498:4500:void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap) -> <init>
    4504:4504:java.util.Iterator iterator() -> iterator
    4509:4509:boolean contains(java.lang.Object) -> contains
    4514:4514:boolean remove(java.lang.Object) -> remove
com.google.common.cache.LocalCache$LoadingSerializationProxy -> com.google.common.cache.LocalCache$LoadingSerializationProxy:
    long serialVersionUID -> serialVersionUID
    com.google.common.cache.LoadingCache autoDelegate -> autoDelegate
    4729:4730:void <init>(com.google.common.cache.LocalCache) -> <init>
    4733:4736:void readObject(java.io.ObjectInputStream) -> readObject
    4740:4740:java.lang.Object get(java.lang.Object) -> get
    4745:4745:java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    4750:4750:com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    4755:4755:java.lang.Object apply(java.lang.Object) -> apply
    4760:4761:void refresh(java.lang.Object) -> refresh
    4764:4764:java.lang.Object readResolve() -> readResolve
com.google.common.cache.LocalCache$LoadingValueReference -> com.google.common.cache.LocalCache$LoadingValueReference:
    com.google.common.cache.LocalCache$ValueReference oldValue -> oldValue
    com.google.common.util.concurrent.SettableFuture futureValue -> futureValue
    com.google.common.base.Stopwatch stopwatch -> stopwatch
    3489:3490:void <init>() -> <init>
    3485:3494:void <init>(com.google.common.cache.LocalCache$ValueReference) -> <init>
    3498:3498:boolean isLoading() -> isLoading
    3503:3503:boolean isActive() -> isActive
    3508:3508:int getWeight() -> getWeight
    3512:3512:boolean set(java.lang.Object) -> set
    3516:3516:boolean setException(java.lang.Throwable) -> setException
    3520:3520:com.google.common.util.concurrent.ListenableFuture fullyFailedFuture(java.lang.Throwable) -> fullyFailedFuture
    3525:3535:void notifyNewValue(java.lang.Object) -> notifyNewValue
    3539:3563:com.google.common.util.concurrent.ListenableFuture loadFuture(java.lang.Object,com.google.common.cache.CacheLoader) -> loadFuture
    3568:3568:long elapsedNanos() -> elapsedNanos
    3573:3573:java.lang.Object waitForValue() -> waitForValue
    3578:3578:java.lang.Object get() -> get
    3582:3582:com.google.common.cache.LocalCache$ValueReference getOldValue() -> getOldValue
    3587:3587:com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> getEntry
    3593:3593:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
com.google.common.cache.LocalCache$LoadingValueReference$1 -> com.google.common.cache.LocalCache$LoadingValueReference$1:
    com.google.common.cache.LocalCache$LoadingValueReference this$0 -> this$0
    3551:3551:void <init>(com.google.common.cache.LocalCache$LoadingValueReference) -> <init>
    3554:3555:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.cache.LocalCache$LocalLoadingCache -> com.google.common.cache.LocalCache$LocalLoadingCache:
    long serialVersionUID -> serialVersionUID
    4868:4869:void <init>(com.google.common.cache.CacheBuilder,com.google.common.cache.CacheLoader) -> <init>
    4875:4875:java.lang.Object get(java.lang.Object) -> get
    4881:4883:java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    4889:4889:com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    4894:4895:void refresh(java.lang.Object) -> refresh
    4899:4899:java.lang.Object apply(java.lang.Object) -> apply
    4908:4908:java.lang.Object writeReplace() -> writeReplace
com.google.common.cache.LocalCache$LocalManualCache -> com.google.common.cache.LocalCache$LocalManualCache:
    com.google.common.cache.LocalCache localCache -> localCache
    long serialVersionUID -> serialVersionUID
    4772:4773:void <init>(com.google.common.cache.CacheBuilder) -> <init>
    4775:4777:void <init>(com.google.common.cache.LocalCache) -> <init>
    4784:4784:java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    4789:4790:java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    4800:4800:com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    4805:4806:void put(java.lang.Object,java.lang.Object) -> put
    4810:4811:void putAll(java.util.Map) -> putAll
    4815:4817:void invalidate(java.lang.Object) -> invalidate
    4821:4822:void invalidateAll(java.lang.Iterable) -> invalidateAll
    4826:4827:void invalidateAll() -> invalidateAll
    4831:4831:long size() -> size
    4836:4836:java.util.concurrent.ConcurrentMap asMap() -> asMap
    4841:4846:com.google.common.cache.CacheStats stats() -> stats
    4851:4852:void cleanUp() -> cleanUp
    4859:4859:java.lang.Object writeReplace() -> writeReplace
    4768:4768:void <init>(com.google.common.cache.LocalCache,com.google.common.cache.LocalCache$1) -> <init>
com.google.common.cache.LocalCache$LocalManualCache$1 -> com.google.common.cache.LocalCache$LocalManualCache$1:
    java.util.concurrent.Callable val$valueLoader -> val$valueLoader
    com.google.common.cache.LocalCache$LocalManualCache this$0 -> this$0
    4790:4790:void <init>(com.google.common.cache.LocalCache$LocalManualCache,java.util.concurrent.Callable) -> <init>
    4793:4793:java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.LocalCache$ManualSerializationProxy -> com.google.common.cache.LocalCache$ManualSerializationProxy:
    long serialVersionUID -> serialVersionUID
    com.google.common.cache.LocalCache$Strength keyStrength -> keyStrength
    com.google.common.cache.LocalCache$Strength valueStrength -> valueStrength
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long expireAfterAccessNanos -> expireAfterAccessNanos
    long maxWeight -> maxWeight
    com.google.common.cache.Weigher weigher -> weigher
    int concurrencyLevel -> concurrencyLevel
    com.google.common.cache.RemovalListener removalListener -> removalListener
    com.google.common.base.Ticker ticker -> ticker
    com.google.common.cache.CacheLoader loader -> loader
    com.google.common.cache.Cache delegate -> delegate
    4630:4643:void <init>(com.google.common.cache.LocalCache) -> <init>
    4651:4665:void <init>(com.google.common.cache.LocalCache$Strength,com.google.common.cache.LocalCache$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,long,long,long,com.google.common.cache.Weigher,int,com.google.common.cache.RemovalListener,com.google.common.base.Ticker,com.google.common.cache.CacheLoader) -> <init>
    4668:4695:com.google.common.cache.CacheBuilder recreateCacheBuilder() -> recreateCacheBuilder
    4699:4702:void readObject(java.io.ObjectInputStream) -> readObject
    4705:4705:java.lang.Object readResolve() -> readResolve
    4710:4710:com.google.common.cache.Cache delegate() -> delegate
    4610:4610:java.lang.Object delegate() -> delegate
com.google.common.cache.LocalCache$NullEntry -> com.google.common.cache.LocalCache$NullEntry:
    com.google.common.cache.LocalCache$NullEntry INSTANCE -> INSTANCE
    com.google.common.cache.LocalCache$NullEntry[] $VALUES -> $VALUES
    855:855:com.google.common.cache.LocalCache$NullEntry[] values() -> values
    855:855:com.google.common.cache.LocalCache$NullEntry valueOf(java.lang.String) -> valueOf
    855:855:void <init>(java.lang.String,int) -> <init>
    860:860:com.google.common.cache.LocalCache$ValueReference getValueReference() -> getValueReference
    864:864:void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> setValueReference
    868:868:com.google.common.cache.LocalCache$ReferenceEntry getNext() -> getNext
    873:873:int getHash() -> getHash
    878:878:java.lang.Object getKey() -> getKey
    883:883:long getAccessTime() -> getAccessTime
    887:887:void setAccessTime(long) -> setAccessTime
    891:891:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    895:895:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    899:899:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    903:903:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
    907:907:long getWriteTime() -> getWriteTime
    911:911:void setWriteTime(long) -> setWriteTime
    915:915:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    919:919:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    923:923:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    927:927:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
    855:856:void <clinit>() -> <clinit>
com.google.common.cache.LocalCache$ReferenceEntry -> com.google.common.cache.LocalCache$ReferenceEntry:
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> setValueReference
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
    long getAccessTime() -> getAccessTime
    void setAccessTime(long) -> setAccessTime
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
    long getWriteTime() -> getWriteTime
    void setWriteTime(long) -> setWriteTime
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$Segment -> com.google.common.cache.LocalCache$Segment:
    com.google.common.cache.LocalCache map -> map
    int count -> count
    long totalWeight -> totalWeight
    int modCount -> modCount
    int threshold -> threshold
    java.util.concurrent.atomic.AtomicReferenceArray table -> table
    long maxSegmentWeight -> maxSegmentWeight
    java.lang.ref.ReferenceQueue keyReferenceQueue -> keyReferenceQueue
    java.lang.ref.ReferenceQueue valueReferenceQueue -> valueReferenceQueue
    java.util.Queue recencyQueue -> recencyQueue
    java.util.concurrent.atomic.AtomicInteger readCount -> readCount
    java.util.Queue writeQueue -> writeQueue
    java.util.Queue accessQueue -> accessQueue
    com.google.common.cache.AbstractCache$StatsCounter statsCounter -> statsCounter
    2074:2117:void <init>(com.google.common.cache.LocalCache,int,long,com.google.common.cache.AbstractCache$StatsCounter) -> <init>
    2120:2120:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    2124:2130:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    2134:2134:com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> newEntry
    2143:2157:com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> copyEntry
    2165:2174:void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long) -> setValue
    2179:2211:java.lang.Object get(java.lang.Object,int,com.google.common.cache.CacheLoader) -> get
    2218:2293:java.lang.Object lockedGetOrLoad(java.lang.Object,int,com.google.common.cache.CacheLoader) -> lockedGetOrLoad
    2299:2315:java.lang.Object waitForLoadingValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference) -> waitForLoadingValue
    2323:2324:java.lang.Object loadSync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader) -> loadSync
    2329:2342:com.google.common.util.concurrent.ListenableFuture loadAsync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader) -> loadAsync
    2350:2362:java.lang.Object getAndRecordStats(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture) -> getAndRecordStats
    2369:2376:java.lang.Object scheduleRefresh(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader) -> scheduleRefresh
    2387:2401:java.lang.Object refresh(java.lang.Object,int,com.google.common.cache.CacheLoader,boolean) -> refresh
    2411:2454:com.google.common.cache.LocalCache$LoadingValueReference insertLoadingValueReference(java.lang.Object,int,boolean) -> insertLoadingValueReference
    2464:2471:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
    2479:2485:void drainReferenceQueues() -> drainReferenceQueues
    2490:2499:void drainKeyReferenceQueue() -> drainKeyReferenceQueue
    2504:2513:void drainValueReferenceQueue() -> drainValueReferenceQueue
    2519:2525:void clearReferenceQueues() -> clearReferenceQueues
    2528:2529:void clearKeyReferenceQueue() -> clearKeyReferenceQueue
    2532:2533:void clearValueReferenceQueue() -> clearValueReferenceQueue
    2545:2549:void recordRead(com.google.common.cache.LocalCache$ReferenceEntry,long) -> recordRead
    2560:2564:void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry,long) -> recordLockedRead
    2573:2584:void recordWrite(com.google.common.cache.LocalCache$ReferenceEntry,int,long) -> recordWrite
    2595:2604:void drainRecencyQueue() -> drainRecencyQueue
    2612:2620:void tryExpireEntries(long) -> tryExpireEntries
    2624:2637:void expireEntries(long) -> expireEntries
    2643:2644:void enqueueNotification(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.RemovalCause) -> enqueueNotification
    2649:2658:void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause) -> enqueueNotification
    2668:2688:void evictEntries(com.google.common.cache.LocalCache$ReferenceEntry) -> evictEntries
    2693:2699:com.google.common.cache.LocalCache$ReferenceEntry getNextEvictable() -> getNextEvictable
    2707:2708:com.google.common.cache.LocalCache$ReferenceEntry getFirst(int) -> getFirst
    2715:2731:com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object,int) -> getEntry
    2736:2743:com.google.common.cache.LocalCache$ReferenceEntry getLiveEntry(java.lang.Object,int,long) -> getLiveEntry
    2751:2765:java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long) -> getLiveValue
    2771:2787:java.lang.Object get(java.lang.Object,int) -> get
    2793:2804:boolean containsKey(java.lang.Object,int) -> containsKey
    2815:2834:boolean containsValue(java.lang.Object) -> containsValue
    2840:2906:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    2915:2980:void expand() -> expand
    2983:3030:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    3036:3076:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    3082:3122:java.lang.Object remove(java.lang.Object,int) -> remove
    3128:3182:boolean storeLoadedValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,java.lang.Object) -> storeLoadedValue
    3187:3227:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    3232:3259:void clear() -> clear
    3266:3274:com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause) -> removeValueFromChain
    3282:3294:com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> removeEntryFromChain
    3299:3302:void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry) -> removeCollectedEntry
    3308:3330:boolean reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry,int) -> reclaimKey
    3338:3367:boolean reclaimValue(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference) -> reclaimValue
    3373:3400:boolean removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference) -> removeLoadingValue
    3406:3423:boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry,int,com.google.common.cache.RemovalCause) -> removeEntry
    3431:3434:void postReadCleanup() -> postReadCleanup
    3444:3445:void preWriteCleanup(long) -> preWriteCleanup
    3451:3452:void postWriteCleanup() -> postWriteCleanup
    3455:3458:void cleanUp() -> cleanUp
    3461:3470:void runLockedCleanup(long) -> runLockedCleanup
    3474:3477:void runUnlockedCleanup() -> runUnlockedCleanup
com.google.common.cache.LocalCache$Segment$1 -> com.google.common.cache.LocalCache$Segment$1:
    java.lang.Object val$key -> val$key
    int val$hash -> val$hash
    com.google.common.cache.LocalCache$LoadingValueReference val$loadingValueReference -> val$loadingValueReference
    com.google.common.util.concurrent.ListenableFuture val$loadingFuture -> val$loadingFuture
    com.google.common.cache.LocalCache$Segment this$0 -> this$0
    2331:2331:void <init>(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture) -> <init>
    2335:2340:void run() -> run
com.google.common.cache.LocalCache$SoftValueReference -> com.google.common.cache.LocalCache$SoftValueReference:
    com.google.common.cache.LocalCache$ReferenceEntry entry -> entry
    1634:1636:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1640:1640:int getWeight() -> getWeight
    1645:1645:com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> getEntry
    1649:1649:void notifyNewValue(java.lang.Object) -> notifyNewValue
    1654:1654:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
    1659:1659:boolean isLoading() -> isLoading
    1664:1664:boolean isActive() -> isActive
    1669:1669:java.lang.Object waitForValue() -> waitForValue
com.google.common.cache.LocalCache$Strength -> com.google.common.cache.LocalCache$Strength:
    com.google.common.cache.LocalCache$Strength STRONG -> STRONG
    com.google.common.cache.LocalCache$Strength SOFT -> SOFT
    com.google.common.cache.LocalCache$Strength WEAK -> WEAK
    com.google.common.cache.LocalCache$Strength[] $VALUES -> $VALUES
    376:376:com.google.common.cache.LocalCache$Strength[] values() -> values
    376:376:com.google.common.cache.LocalCache$Strength valueOf(java.lang.String) -> valueOf
    376:376:void <init>(java.lang.String,int) -> <init>
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> referenceValue
    com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
    376:376:void <init>(java.lang.String,int,com.google.common.cache.LocalCache$1) -> <init>
    376:413:void <clinit>() -> <clinit>
com.google.common.cache.LocalCache$Strength$1 -> com.google.common.cache.LocalCache$Strength$1:
    382:382:void <init>(java.lang.String,int) -> <init>
    386:386:com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> referenceValue
    393:393:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.cache.LocalCache$Strength$2 -> com.google.common.cache.LocalCache$Strength$2:
    397:397:void <init>(java.lang.String,int) -> <init>
    401:401:com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> referenceValue
    409:409:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.cache.LocalCache$Strength$3 -> com.google.common.cache.LocalCache$Strength$3:
    413:413:void <init>(java.lang.String,int) -> <init>
    417:417:com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> referenceValue
    425:425:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.cache.LocalCache$StrongAccessEntry -> com.google.common.cache.LocalCache$StrongAccessEntry:
    long accessTime -> accessTime
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> nextAccess
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> previousAccess
    1111:1142:void <init>(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1120:1120:long getAccessTime() -> getAccessTime
    1125:1126:void setAccessTime(long) -> setAccessTime
    1133:1133:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    1138:1139:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    1146:1146:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    1151:1152:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
com.google.common.cache.LocalCache$StrongAccessWriteEntry -> com.google.common.cache.LocalCache$StrongAccessWriteEntry:
    long accessTime -> accessTime
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> nextAccess
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> previousAccess
    long writeTime -> writeTime
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> nextWrite
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> previousWrite
    1203:1274:void <init>(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1212:1212:long getAccessTime() -> getAccessTime
    1217:1218:void setAccessTime(long) -> setAccessTime
    1225:1225:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    1230:1231:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    1238:1238:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    1243:1244:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
    1252:1252:long getWriteTime() -> getWriteTime
    1257:1258:void setWriteTime(long) -> setWriteTime
    1265:1265:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    1270:1271:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    1278:1278:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    1283:1284:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$StrongEntry -> com.google.common.cache.LocalCache$StrongEntry:
    java.lang.Object key -> key
    int hash -> hash
    com.google.common.cache.LocalCache$ReferenceEntry next -> next
    com.google.common.cache.LocalCache$ValueReference valueReference -> valueReference
    1071:1086:void <init>(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1079:1079:java.lang.Object getKey() -> getKey
    1090:1090:com.google.common.cache.LocalCache$ValueReference getValueReference() -> getValueReference
    1095:1096:void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> setValueReference
    1100:1100:int getHash() -> getHash
    1105:1105:com.google.common.cache.LocalCache$ReferenceEntry getNext() -> getNext
com.google.common.cache.LocalCache$StrongValueReference -> com.google.common.cache.LocalCache$StrongValueReference:
    java.lang.Object referent -> referent
    1679:1681:void <init>(java.lang.Object) -> <init>
    1685:1685:java.lang.Object get() -> get
    1690:1690:int getWeight() -> getWeight
    1695:1695:com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> getEntry
    1701:1701:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
    1706:1706:boolean isLoading() -> isLoading
    1711:1711:boolean isActive() -> isActive
    1716:1716:java.lang.Object waitForValue() -> waitForValue
    1720:1720:void notifyNewValue(java.lang.Object) -> notifyNewValue
com.google.common.cache.LocalCache$StrongWriteEntry -> com.google.common.cache.LocalCache$StrongWriteEntry:
    long writeTime -> writeTime
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> nextWrite
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> previousWrite
    1157:1188:void <init>(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1166:1166:long getWriteTime() -> getWriteTime
    1171:1172:void setWriteTime(long) -> setWriteTime
    1179:1179:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    1184:1185:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    1192:1192:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    1197:1198:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$ValueIterator -> com.google.common.cache.LocalCache$ValueIterator:
    com.google.common.cache.LocalCache this$0 -> this$0
    4384:4384:void <init>(com.google.common.cache.LocalCache) -> <init>
    4388:4388:java.lang.Object next() -> next
com.google.common.cache.LocalCache$ValueReference -> com.google.common.cache.LocalCache$ValueReference:
    java.lang.Object get() -> get
    java.lang.Object waitForValue() -> waitForValue
    int getWeight() -> getWeight
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> getEntry
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
    void notifyNewValue(java.lang.Object) -> notifyNewValue
    boolean isLoading() -> isLoading
    boolean isActive() -> isActive
com.google.common.cache.LocalCache$Values -> com.google.common.cache.LocalCache$Values:
    java.util.concurrent.ConcurrentMap map -> map
    com.google.common.cache.LocalCache this$0 -> this$0
    4522:4524:void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap) -> <init>
    4527:4527:int size() -> size
    4531:4531:boolean isEmpty() -> isEmpty
    4535:4536:void clear() -> clear
    4540:4540:java.util.Iterator iterator() -> iterator
    4545:4545:boolean contains(java.lang.Object) -> contains
    4553:4553:java.lang.Object[] toArray() -> toArray
    4558:4558:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.cache.LocalCache$WeakAccessEntry -> com.google.common.cache.LocalCache$WeakAccessEntry:
    long accessTime -> accessTime
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> nextAccess
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> previousAccess
    1401:1432:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1410:1410:long getAccessTime() -> getAccessTime
    1415:1416:void setAccessTime(long) -> setAccessTime
    1423:1423:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    1428:1429:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    1436:1436:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    1441:1442:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
com.google.common.cache.LocalCache$WeakAccessWriteEntry -> com.google.common.cache.LocalCache$WeakAccessWriteEntry:
    long accessTime -> accessTime
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> nextAccess
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> previousAccess
    long writeTime -> writeTime
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> nextWrite
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> previousWrite
    1495:1566:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1504:1504:long getAccessTime() -> getAccessTime
    1509:1510:void setAccessTime(long) -> setAccessTime
    1517:1517:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    1522:1523:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    1530:1530:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    1535:1536:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
    1544:1544:long getWriteTime() -> getWriteTime
    1549:1550:void setWriteTime(long) -> setWriteTime
    1557:1557:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    1562:1563:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    1570:1570:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    1575:1576:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$WeakEntry -> com.google.common.cache.LocalCache$WeakEntry:
    int hash -> hash
    com.google.common.cache.LocalCache$ReferenceEntry next -> next
    com.google.common.cache.LocalCache$ValueReference valueReference -> valueReference
    1292:1375:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1299:1299:java.lang.Object getKey() -> getKey
    1311:1311:long getAccessTime() -> getAccessTime
    1316:1316:void setAccessTime(long) -> setAccessTime
    1321:1321:com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> getNextInAccessQueue
    1326:1326:void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInAccessQueue
    1331:1331:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> getPreviousInAccessQueue
    1336:1336:void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInAccessQueue
    1343:1343:long getWriteTime() -> getWriteTime
    1348:1348:void setWriteTime(long) -> setWriteTime
    1353:1353:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    1358:1358:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    1363:1363:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    1368:1368:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
    1379:1379:com.google.common.cache.LocalCache$ValueReference getValueReference() -> getValueReference
    1384:1385:void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> setValueReference
    1389:1389:int getHash() -> getHash
    1394:1394:com.google.common.cache.LocalCache$ReferenceEntry getNext() -> getNext
com.google.common.cache.LocalCache$WeakValueReference -> com.google.common.cache.LocalCache$WeakValueReference:
    com.google.common.cache.LocalCache$ReferenceEntry entry -> entry
    1587:1589:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1593:1593:int getWeight() -> getWeight
    1598:1598:com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> getEntry
    1602:1602:void notifyNewValue(java.lang.Object) -> notifyNewValue
    1607:1607:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
    1612:1612:boolean isLoading() -> isLoading
    1617:1617:boolean isActive() -> isActive
    1622:1622:java.lang.Object waitForValue() -> waitForValue
com.google.common.cache.LocalCache$WeakWriteEntry -> com.google.common.cache.LocalCache$WeakWriteEntry:
    long writeTime -> writeTime
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> nextWrite
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> previousWrite
    1448:1479:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    1457:1457:long getWriteTime() -> getWriteTime
    1462:1463:void setWriteTime(long) -> setWriteTime
    1470:1470:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    1475:1476:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    1483:1483:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    1488:1489:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$WeightedSoftValueReference -> com.google.common.cache.LocalCache$WeightedSoftValueReference:
    int weight -> weight
    1755:1757:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry,int) -> <init>
    1761:1761:int getWeight() -> getWeight
    1766:1766:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
com.google.common.cache.LocalCache$WeightedStrongValueReference -> com.google.common.cache.LocalCache$WeightedStrongValueReference:
    int weight -> weight
    1778:1780:void <init>(java.lang.Object,int) -> <init>
    1784:1784:int getWeight() -> getWeight
com.google.common.cache.LocalCache$WeightedWeakValueReference -> com.google.common.cache.LocalCache$WeightedWeakValueReference:
    int weight -> weight
    1731:1733:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry,int) -> <init>
    1737:1737:int getWeight() -> getWeight
    1743:1743:com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> copyFor
com.google.common.cache.LocalCache$WriteQueue -> com.google.common.cache.LocalCache$WriteQueue:
    com.google.common.cache.LocalCache$ReferenceEntry head -> head
    3610:3611:void <init>() -> <init>
    3651:3657:boolean offer(com.google.common.cache.LocalCache$ReferenceEntry) -> offer
    3662:3663:com.google.common.cache.LocalCache$ReferenceEntry peek() -> peek
    3668:3674:com.google.common.cache.LocalCache$ReferenceEntry poll() -> poll
    3680:3686:boolean remove(java.lang.Object) -> remove
    3692:3693:boolean contains(java.lang.Object) -> contains
    3698:3698:boolean isEmpty() -> isEmpty
    3703:3708:int size() -> size
    3713:3722:void clear() -> clear
    3726:3726:java.util.Iterator iterator() -> iterator
    3610:3610:java.lang.Object peek() -> peek
    3610:3610:java.lang.Object poll() -> poll
    3610:3610:boolean offer(java.lang.Object) -> offer
com.google.common.cache.LocalCache$WriteQueue$1 -> com.google.common.cache.LocalCache$WriteQueue$1:
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> nextWrite
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> previousWrite
    com.google.common.cache.LocalCache$WriteQueue this$0 -> this$0
    3611:3633:void <init>(com.google.common.cache.LocalCache$WriteQueue) -> <init>
    3615:3615:long getWriteTime() -> getWriteTime
    3619:3619:void setWriteTime(long) -> setWriteTime
    3625:3625:com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> getNextInWriteQueue
    3630:3631:void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setNextInWriteQueue
    3637:3637:com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> getPreviousInWriteQueue
    3642:3643:void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> setPreviousInWriteQueue
com.google.common.cache.LocalCache$WriteQueue$2 -> com.google.common.cache.LocalCache$WriteQueue$2:
    com.google.common.cache.LocalCache$WriteQueue this$0 -> this$0
    3726:3726:void <init>(com.google.common.cache.LocalCache$WriteQueue,com.google.common.cache.LocalCache$ReferenceEntry) -> <init>
    3729:3730:com.google.common.cache.LocalCache$ReferenceEntry computeNext(com.google.common.cache.LocalCache$ReferenceEntry) -> computeNext
    3726:3726:java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.cache.LocalCache$WriteThroughEntry -> com.google.common.cache.LocalCache$WriteThroughEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.common.cache.LocalCache this$0 -> this$0
    4400:4403:void <init>(com.google.common.cache.LocalCache,java.lang.Object,java.lang.Object) -> <init>
    4407:4407:java.lang.Object getKey() -> getKey
    4412:4412:java.lang.Object getValue() -> getValue
    4418:4422:boolean equals(java.lang.Object) -> equals
    4428:4428:int hashCode() -> hashCode
    4433:4433:java.lang.Object setValue(java.lang.Object) -> setValue
    4440:4440:java.lang.String toString() -> toString
com.google.common.cache.LongAddable -> com.google.common.cache.LongAddable:
    void increment() -> increment
    void add(long) -> add
    long sum() -> sum
com.google.common.cache.LongAddables -> com.google.common.cache.LongAddables:
    com.google.common.base.Supplier SUPPLIER -> SUPPLIER
    31:59:void <init>() -> <init>
    56:56:com.google.common.cache.LongAddable create() -> create
    37:53:void <clinit>() -> <clinit>
com.google.common.cache.LongAddables$1 -> com.google.common.cache.LongAddables$1:
    38:38:void <init>() -> <init>
    41:41:com.google.common.cache.LongAddable get() -> get
    38:38:java.lang.Object get() -> get
com.google.common.cache.LongAddables$2 -> com.google.common.cache.LongAddables$2:
    45:45:void <init>() -> <init>
    48:48:com.google.common.cache.LongAddable get() -> get
    45:45:java.lang.Object get() -> get
com.google.common.cache.LongAddables$PureJavaLongAddable -> com.google.common.cache.LongAddables$PureJavaLongAddable:
    59:59:void <init>() -> <init>
    62:63:void increment() -> increment
    67:68:void add(long) -> add
    72:72:long sum() -> sum
    59:59:void <init>(com.google.common.cache.LongAddables$1) -> <init>
com.google.common.cache.LongAdder -> com.google.common.cache.LongAdder:
    long serialVersionUID -> serialVersionUID
    56:56:long fn(long,long) -> fn
    61:62:void <init>() -> <init>
    71:79:void add(long) -> add
    85:86:void increment() -> increment
    92:93:void decrement() -> decrement
    105:115:long sum() -> sum
    126:127:void reset() -> reset
    140:153:long sumThenReset() -> sumThenReset
    161:161:java.lang.String toString() -> toString
    170:170:long longValue() -> longValue
    178:178:int intValue() -> intValue
    186:186:float floatValue() -> floatValue
    194:194:double doubleValue() -> doubleValue
    198:200:void writeObject(java.io.ObjectOutputStream) -> writeObject
    204:208:void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.cache.RemovalCause -> com.google.common.cache.RemovalCause:
    com.google.common.cache.RemovalCause EXPLICIT -> EXPLICIT
    com.google.common.cache.RemovalCause REPLACED -> REPLACED
    com.google.common.cache.RemovalCause COLLECTED -> COLLECTED
    com.google.common.cache.RemovalCause EXPIRED -> EXPIRED
    com.google.common.cache.RemovalCause SIZE -> SIZE
    com.google.common.cache.RemovalCause[] $VALUES -> $VALUES
    31:31:com.google.common.cache.RemovalCause[] values() -> values
    31:31:com.google.common.cache.RemovalCause valueOf(java.lang.String) -> valueOf
    32:32:void <init>(java.lang.String,int) -> <init>
    boolean wasEvicted() -> wasEvicted
    32:32:void <init>(java.lang.String,int,com.google.common.cache.RemovalCause$1) -> <init>
    31:85:void <clinit>() -> <clinit>
com.google.common.cache.RemovalCause$1 -> com.google.common.cache.RemovalCause$1:
    38:38:void <init>(java.lang.String,int) -> <init>
    41:41:boolean wasEvicted() -> wasEvicted
com.google.common.cache.RemovalCause$2 -> com.google.common.cache.RemovalCause$2:
    51:51:void <init>(java.lang.String,int) -> <init>
    54:54:boolean wasEvicted() -> wasEvicted
com.google.common.cache.RemovalCause$3 -> com.google.common.cache.RemovalCause$3:
    63:63:void <init>(java.lang.String,int) -> <init>
    66:66:boolean wasEvicted() -> wasEvicted
com.google.common.cache.RemovalCause$4 -> com.google.common.cache.RemovalCause$4:
    74:74:void <init>(java.lang.String,int) -> <init>
    77:77:boolean wasEvicted() -> wasEvicted
com.google.common.cache.RemovalCause$5 -> com.google.common.cache.RemovalCause$5:
    85:85:void <init>(java.lang.String,int) -> <init>
    88:88:boolean wasEvicted() -> wasEvicted
com.google.common.cache.RemovalListener -> com.google.common.cache.RemovalListener:
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.RemovalListeners -> com.google.common.cache.RemovalListeners:
    31:31:void <init>() -> <init>
    43:45:com.google.common.cache.RemovalListener asynchronous(com.google.common.cache.RemovalListener,java.util.concurrent.Executor) -> asynchronous
com.google.common.cache.RemovalListeners$1 -> com.google.common.cache.RemovalListeners$1:
    java.util.concurrent.Executor val$executor -> val$executor
    com.google.common.cache.RemovalListener val$listener -> val$listener
    45:45:void <init>(java.util.concurrent.Executor,com.google.common.cache.RemovalListener) -> <init>
    48:54:void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.RemovalListeners$1$1 -> com.google.common.cache.RemovalListeners$1$1:
    com.google.common.cache.RemovalNotification val$notification -> val$notification
    com.google.common.cache.RemovalListeners$1 this$0 -> this$0
    48:48:void <init>(com.google.common.cache.RemovalListeners$1,com.google.common.cache.RemovalNotification) -> <init>
    51:52:void run() -> run
com.google.common.cache.RemovalNotification -> com.google.common.cache.RemovalNotification:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.common.cache.RemovalCause cause -> cause
    long serialVersionUID -> serialVersionUID
    54:54:com.google.common.cache.RemovalNotification create(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause) -> create
    57:61:void <init>(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause) -> <init>
    67:67:com.google.common.cache.RemovalCause getCause() -> getCause
    75:75:boolean wasEvicted() -> wasEvicted
    79:79:java.lang.Object getKey() -> getKey
    83:83:java.lang.Object getValue() -> getValue
    87:87:java.lang.Object setValue(java.lang.Object) -> setValue
    91:96:boolean equals(java.lang.Object) -> equals
    100:102:int hashCode() -> hashCode
    109:109:java.lang.String toString() -> toString
com.google.common.cache.Striped64 -> com.google.common.cache.Striped64:
    java.lang.ThreadLocal threadHashCode -> threadHashCode
    java.util.Random rng -> rng
    int NCPU -> NCPU
    com.google.common.cache.Striped64$Cell[] cells -> cells
    long base -> base
    int busy -> busy
    sun.misc.Unsafe UNSAFE -> UNSAFE
    long baseOffset -> baseOffset
    long busyOffset -> busyOffset
    154:155:void <init>() -> <init>
    161:161:boolean casBase(long,long) -> casBase
    168:168:boolean casBusy() -> casBusy
    long fn(long,long) -> fn
    195:274:void retryUpdate(long,int[],boolean) -> retryUpdate
    280:290:void internalReset(long) -> internalReset
    318:334:sun.misc.Unsafe getUnsafe() -> getUnsafe
    21:21:sun.misc.Unsafe access$000() -> access$000
    125:307:void <clinit>() -> <clinit>
com.google.common.cache.Striped64$1 -> com.google.common.cache.Striped64$1:
    322:322:void <init>() -> <init>
    324:331:sun.misc.Unsafe run() -> run
    322:322:java.lang.Object run() -> run
com.google.common.cache.Striped64$Cell -> com.google.common.cache.Striped64$Cell:
    long p0 -> p0
    long p1 -> p1
    long p2 -> p2
    long p3 -> p3
    long p4 -> p4
    long p5 -> p5
    long p6 -> p6
    long value -> value
    long q0 -> q0
    long q1 -> q1
    long q2 -> q2
    long q3 -> q3
    long q4 -> q4
    long q5 -> q5
    long q6 -> q6
    sun.misc.Unsafe UNSAFE -> UNSAFE
    long valueOffset -> valueOffset
    97:97:void <init>(long) -> <init>
    100:100:boolean cas(long,long) -> cas
    108:115:void <clinit>() -> <clinit>
com.google.common.cache.Weigher -> com.google.common.cache.Weigher:
    int weigh(java.lang.Object,java.lang.Object) -> weigh
com.google.common.cache.package-info -> com.google.common.cache.package-info:
com.google.common.collect.AbstractBiMap -> com.google.common.collect.AbstractBiMap:
    java.util.Map delegate -> delegate
    com.google.common.collect.AbstractBiMap inverse -> inverse
    java.util.Set keySet -> keySet
    java.util.Set valueSet -> valueSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    57:59:void <init>(java.util.Map,java.util.Map) -> <init>
    62:65:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap) -> <init>
    69:69:java.util.Map delegate() -> delegate
    76:76:java.lang.Object checkKey(java.lang.Object) -> checkKey
    83:83:java.lang.Object checkValue(java.lang.Object) -> checkValue
    91:98:void setDelegates(java.util.Map,java.util.Map) -> setDelegates
    101:102:void setInverse(com.google.common.collect.AbstractBiMap) -> setInverse
    108:108:boolean containsValue(java.lang.Object) -> containsValue
    115:115:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    120:120:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    124:137:java.lang.Object putInBothMaps(java.lang.Object,java.lang.Object,boolean) -> putInBothMaps
    141:145:void updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> updateInverseMap
    149:149:java.lang.Object remove(java.lang.Object) -> remove
    153:155:java.lang.Object removeFromBothMaps(java.lang.Object) -> removeFromBothMaps
    159:160:void removeFromInverseMap(java.lang.Object) -> removeFromInverseMap
    166:169:void putAll(java.util.Map) -> putAll
    173:175:void clear() -> clear
    181:181:com.google.common.collect.BiMap inverse() -> inverse
    188:189:java.util.Set keySet() -> keySet
    237:238:java.util.Set values() -> values
    275:276:java.util.Set entrySet() -> entrySet
    49:49:java.util.Collection values() -> values
    49:49:java.lang.Object delegate() -> delegate
    50:50:java.util.Map access$200(com.google.common.collect.AbstractBiMap) -> access$200
    50:50:java.lang.Object access$300(com.google.common.collect.AbstractBiMap,java.lang.Object) -> access$300
    50:50:void access$600(com.google.common.collect.AbstractBiMap,java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> access$600
    50:50:void access$700(com.google.common.collect.AbstractBiMap,java.lang.Object) -> access$700
    50:50:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
com.google.common.collect.AbstractBiMap$1 -> com.google.common.collect.AbstractBiMap$1:
com.google.common.collect.AbstractBiMap$EntrySet -> com.google.common.collect.AbstractBiMap$EntrySet:
    java.util.Set esDelegate -> esDelegate
    com.google.common.collect.AbstractBiMap this$0 -> this$0
    280:281:void <init>(com.google.common.collect.AbstractBiMap) -> <init>
    285:285:java.util.Set delegate() -> delegate
    290:291:void clear() -> clear
    295:308:boolean remove(java.lang.Object) -> remove
    313:314:java.util.Iterator iterator() -> iterator
    364:364:java.lang.Object[] toArray() -> toArray
    369:369:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    374:374:boolean contains(java.lang.Object) -> contains
    379:379:boolean containsAll(java.util.Collection) -> containsAll
    384:384:boolean removeAll(java.util.Collection) -> removeAll
    389:389:boolean retainAll(java.util.Collection) -> retainAll
    279:279:java.util.Collection delegate() -> delegate
    279:279:java.lang.Object delegate() -> delegate
    280:280:void <init>(com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
com.google.common.collect.AbstractBiMap$EntrySet$1 -> com.google.common.collect.AbstractBiMap$EntrySet$1:
    java.util.Map$Entry entry -> entry
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.AbstractBiMap$EntrySet this$1 -> this$1
    314:314:void <init>(com.google.common.collect.AbstractBiMap$EntrySet,java.util.Iterator) -> <init>
    319:319:boolean hasNext() -> hasNext
    324:327:java.util.Map$Entry next() -> next
    352:356:void remove() -> remove
    314:314:java.lang.Object next() -> next
com.google.common.collect.AbstractBiMap$EntrySet$1$1 -> com.google.common.collect.AbstractBiMap$EntrySet$1$1:
    java.util.Map$Entry val$finalEntry -> val$finalEntry
    com.google.common.collect.AbstractBiMap$EntrySet$1 this$2 -> this$2
    327:327:void <init>(com.google.common.collect.AbstractBiMap$EntrySet$1,java.util.Map$Entry) -> <init>
    330:330:java.util.Map$Entry delegate() -> delegate
    336:345:java.lang.Object setValue(java.lang.Object) -> setValue
    327:327:java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$Inverse -> com.google.common.collect.AbstractBiMap$Inverse:
    long serialVersionUID -> serialVersionUID
    396:397:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap) -> <init>
    410:410:java.lang.Object checkKey(java.lang.Object) -> checkKey
    415:415:java.lang.Object checkValue(java.lang.Object) -> checkValue
    423:425:void writeObject(java.io.ObjectOutputStream) -> writeObject
    430:432:void readObject(java.io.ObjectInputStream) -> readObject
    436:436:java.lang.Object readResolve() -> readResolve
    394:394:java.util.Collection values() -> values
    394:394:java.lang.Object delegate() -> delegate
    394:394:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
com.google.common.collect.AbstractBiMap$KeySet -> com.google.common.collect.AbstractBiMap$KeySet:
    com.google.common.collect.AbstractBiMap this$0 -> this$0
    193:193:void <init>(com.google.common.collect.AbstractBiMap) -> <init>
    196:196:java.util.Set delegate() -> delegate
    201:202:void clear() -> clear
    206:210:boolean remove(java.lang.Object) -> remove
    215:215:boolean removeAll(java.util.Collection) -> removeAll
    220:220:boolean retainAll(java.util.Collection) -> retainAll
    225:225:java.util.Iterator iterator() -> iterator
    192:192:java.util.Collection delegate() -> delegate
    192:192:java.lang.Object delegate() -> delegate
    193:193:void <init>(com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
com.google.common.collect.AbstractBiMap$ValueSet -> com.google.common.collect.AbstractBiMap$ValueSet:
    java.util.Set valuesDelegate -> valuesDelegate
    com.google.common.collect.AbstractBiMap this$0 -> this$0
    242:243:void <init>(com.google.common.collect.AbstractBiMap) -> <init>
    247:247:java.util.Set delegate() -> delegate
    252:252:java.util.Iterator iterator() -> iterator
    257:257:java.lang.Object[] toArray() -> toArray
    262:262:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    267:267:java.lang.String toString() -> toString
    241:241:java.util.Collection delegate() -> delegate
    241:241:java.lang.Object delegate() -> delegate
    242:242:void <init>(com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    int size -> size
    int position -> position
    java.lang.Object get(int) -> get
    53:54:void <init>(int) -> <init>
    67:71:void <init>(int,int) -> <init>
    75:75:boolean hasNext() -> hasNext
    80:83:java.lang.Object next() -> next
    88:88:int nextIndex() -> nextIndex
    93:93:boolean hasPrevious() -> hasPrevious
    98:101:java.lang.Object previous() -> previous
    106:106:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    com.google.common.collect.AbstractIterator$State state -> state
    java.lang.Object next -> next
    65:68:void <init>() -> <init>
    java.lang.Object computeNext() -> computeNext
    124:125:java.lang.Object endOfData() -> endOfData
    130:138:boolean hasNext() -> hasNext
    142:148:boolean tryToComputeNext() -> tryToComputeNext
    153:159:java.lang.Object next() -> next
    170:173:java.lang.Object peek() -> peek
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> $SwitchMap$com$google$common$collect$AbstractIterator$State
    131:131:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    com.google.common.collect.AbstractIterator$State READY -> READY
    com.google.common.collect.AbstractIterator$State NOT_READY -> NOT_READY
    com.google.common.collect.AbstractIterator$State DONE -> DONE
    com.google.common.collect.AbstractIterator$State FAILED -> FAILED
    com.google.common.collect.AbstractIterator$State[] $VALUES -> $VALUES
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:void <init>(java.lang.String,int) -> <init>
    70:81:void <clinit>() -> <clinit>
com.google.common.collect.AbstractListMultimap -> com.google.common.collect.AbstractListMultimap:
    long serialVersionUID -> serialVersionUID
    46:47:void <init>(java.util.Map) -> <init>
    java.util.List createCollection() -> createCollection
    54:54:java.util.List createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    68:68:java.util.List get(java.lang.Object) -> get
    80:80:java.util.List removeAll(java.lang.Object) -> removeAll
    92:92:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    104:104:boolean put(java.lang.Object,java.lang.Object) -> put
    115:115:java.util.Map asMap() -> asMap
    127:127:boolean equals(java.lang.Object) -> equals
    36:36:java.util.Collection get(java.lang.Object) -> get
    36:36:java.util.Collection removeAll(java.lang.Object) -> removeAll
    36:36:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    36:36:java.util.Collection createCollection() -> createCollection
    36:36:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
com.google.common.collect.AbstractMapBasedMultimap -> com.google.common.collect.AbstractMapBasedMultimap:
    java.util.Map map -> map
    int totalSize -> totalSize
    long serialVersionUID -> serialVersionUID
    123:126:void <init>(java.util.Map) -> <init>
    130:136:void setMap(java.util.Map) -> setMap
    144:144:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    java.util.Collection createCollection() -> createCollection
    170:170:java.util.Collection createCollection(java.lang.Object) -> createCollection
    174:174:java.util.Map backingMap() -> backingMap
    181:181:int size() -> size
    186:186:boolean containsKey(java.lang.Object) -> containsKey
    193:207:boolean put(java.lang.Object,java.lang.Object) -> put
    212:217:java.util.Collection getOrCreateCollection(java.lang.Object) -> getOrCreateCollection
    229:248:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    258:269:java.util.Collection removeAll(java.lang.Object) -> removeAll
    275:282:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    289:294:void clear() -> clear
    305:309:java.util.Collection get(java.lang.Object) -> get
    320:327:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    332:332:java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> wrapList
    608:608:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    930:930:java.util.Set createKeySet() -> createKeySet
    1136:1144:int removeValuesForKey(java.lang.Object) -> removeValuesForKey
    1196:1196:java.util.Collection values() -> values
    1201:1201:java.util.Iterator valueIterator() -> valueIterator
    1227:1227:java.util.Collection entries() -> entries
    1240:1240:java.util.Iterator entryIterator() -> entryIterator
    1252:1252:java.util.Map createAsMap() -> createAsMap
    92:92:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> access$000
    92:92:java.util.Iterator access$100(com.google.common.collect.AbstractMapBasedMultimap,java.util.Collection) -> access$100
    92:92:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> access$210
    92:92:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> access$208
    92:92:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$212
    92:92:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$220
    92:92:java.util.List access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> access$300
    92:92:int access$400(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> access$400
com.google.common.collect.AbstractMapBasedMultimap$1 -> com.google.common.collect.AbstractMapBasedMultimap$1:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1201:1201:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1204:1204:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$2 -> com.google.common.collect.AbstractMapBasedMultimap$2:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1240:1240:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1243:1243:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
    1240:1240:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.google.common.collect.AbstractMapBasedMultimap$AsMap:
    java.util.Map submap -> submap
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1265:1267:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1271:1271:java.util.Set createEntrySet() -> createEntrySet
    1278:1278:boolean containsKey(java.lang.Object) -> containsKey
    1283:1289:java.util.Collection get(java.lang.Object) -> get
    1294:1294:java.util.Set keySet() -> keySet
    1299:1299:int size() -> size
    1304:1313:java.util.Collection remove(java.lang.Object) -> remove
    1318:1318:boolean equals(java.lang.Object) -> equals
    1323:1323:int hashCode() -> hashCode
    1328:1328:java.lang.String toString() -> toString
    1333:1338:void clear() -> clear
    1341:1342:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
    1257:1257:java.lang.Object remove(java.lang.Object) -> remove
    1257:1257:java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> this$1
    1346:1346:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1349:1349:java.util.Map map() -> map
    1354:1354:java.util.Iterator iterator() -> iterator
    1361:1361:boolean contains(java.lang.Object) -> contains
    1366:1371:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:
    java.util.Iterator delegateIterator -> delegateIterator
    java.util.Collection collection -> collection
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> this$1
    1376:1377:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1382:1382:boolean hasNext() -> hasNext
    1387:1389:java.util.Map$Entry next() -> next
    1394:1397:void remove() -> remove
    1376:1376:java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultimap$Itr -> com.google.common.collect.AbstractMapBasedMultimap$Itr:
    java.util.Iterator keyIterator -> keyIterator
    java.lang.Object key -> key
    java.util.Collection collection -> collection
    java.util.Iterator valueIterator -> valueIterator
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1153:1158:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    1164:1164:boolean hasNext() -> hasNext
    1169:1175:java.lang.Object next() -> next
    1180:1185:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.google.common.collect.AbstractMapBasedMultimap$KeySet:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    937:939:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    943:944:java.util.Iterator iterator() -> iterator
    973:980:boolean remove(java.lang.Object) -> remove
    985:986:void clear() -> clear
    990:990:boolean containsAll(java.util.Collection) -> containsAll
    995:995:boolean equals(java.lang.Object) -> equals
    1000:1000:int hashCode() -> hashCode
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.google.common.collect.AbstractMapBasedMultimap$KeySet$1:
    java.util.Map$Entry entry -> entry
    java.util.Iterator val$entryIterator -> val$entryIterator
    com.google.common.collect.AbstractMapBasedMultimap$KeySet this$1 -> this$1
    944:944:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    949:949:boolean hasNext() -> hasNext
    954:955:java.lang.Object next() -> next
    960:965:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1460:1462:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1466:1466:java.util.NavigableMap sortedMap() -> sortedMap
    1471:1472:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1477:1477:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1482:1483:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1488:1488:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1493:1494:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1499:1499:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1504:1505:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1510:1510:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1515:1516:java.util.Map$Entry firstEntry() -> firstEntry
    1521:1522:java.util.Map$Entry lastEntry() -> lastEntry
    1527:1527:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1532:1532:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1536:1543:java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> pollAsMapEntry
    1548:1548:java.util.NavigableMap descendingMap() -> descendingMap
    1553:1553:java.util.NavigableSet keySet() -> keySet
    1558:1558:java.util.NavigableSet createKeySet() -> createKeySet
    1563:1563:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1568:1568:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1573:1573:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1579:1579:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1584:1584:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1589:1589:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1594:1594:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    1599:1599:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1457:1457:java.util.SortedSet createKeySet() -> createKeySet
    1457:1457:java.util.SortedSet keySet() -> keySet
    1457:1457:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1457:1457:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1457:1457:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1457:1457:java.util.SortedMap sortedMap() -> sortedMap
    1457:1457:java.util.Set keySet() -> keySet
    1457:1457:java.util.Set createKeySet() -> createKeySet
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1049:1051:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1055:1055:java.util.NavigableMap sortedMap() -> sortedMap
    1060:1060:java.lang.Object lower(java.lang.Object) -> lower
    1065:1065:java.lang.Object floor(java.lang.Object) -> floor
    1070:1070:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1075:1075:java.lang.Object higher(java.lang.Object) -> higher
    1080:1080:java.lang.Object pollFirst() -> pollFirst
    1085:1085:java.lang.Object pollLast() -> pollLast
    1090:1090:java.util.NavigableSet descendingSet() -> descendingSet
    1095:1095:java.util.Iterator descendingIterator() -> descendingIterator
    1100:1100:java.util.NavigableSet headSet(java.lang.Object) -> headSet
    1105:1105:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1110:1110:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1116:1116:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1122:1122:java.util.NavigableSet tailSet(java.lang.Object) -> tailSet
    1127:1127:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1046:1046:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1046:1046:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1046:1046:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1046:1046:java.util.SortedMap sortedMap() -> sortedMap
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList -> com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    921:923:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:
    java.util.SortedSet sortedKeySet -> sortedKeySet
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1403:1405:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1408:1408:java.util.SortedMap sortedMap() -> sortedMap
    1413:1413:java.util.Comparator comparator() -> comparator
    1418:1418:java.lang.Object firstKey() -> firstKey
    1423:1423:java.lang.Object lastKey() -> lastKey
    1428:1428:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1433:1433:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1438:1438:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1447:1448:java.util.SortedSet keySet() -> keySet
    1453:1453:java.util.SortedSet createKeySet() -> createKeySet
    1401:1401:java.util.Set keySet() -> keySet
    1401:1401:java.util.Set createKeySet() -> createKeySet
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    1007:1009:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1012:1012:java.util.SortedMap sortedMap() -> sortedMap
    1017:1017:java.util.Comparator comparator() -> comparator
    1022:1022:java.lang.Object first() -> first
    1027:1027:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1032:1032:java.lang.Object last() -> last
    1037:1037:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1042:1042:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:
    java.lang.Object key -> key
    java.util.Collection delegate -> delegate
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection ancestor -> ancestor
    java.util.Collection ancestorDelegate -> ancestorDelegate
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    362:367:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    377:388:void refreshIfEmpty() -> refreshIfEmpty
    395:400:void removeIfEmpty() -> removeIfEmpty
    403:403:java.lang.Object getKey() -> getKey
    414:419:void addToMap() -> addToMap
    423:424:int size() -> size
    429:433:boolean equals(java.lang.Object) -> equals
    438:439:int hashCode() -> hashCode
    444:445:java.lang.String toString() -> toString
    449:449:java.util.Collection getDelegate() -> getDelegate
    454:455:java.util.Iterator iterator() -> iterator
    509:518:boolean add(java.lang.Object) -> add
    522:522:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> getAncestor
    529:541:boolean addAll(java.util.Collection) -> addAll
    546:547:boolean contains(java.lang.Object) -> contains
    552:553:boolean containsAll(java.util.Collection) -> containsAll
    558:565:void clear() -> clear
    569:575:boolean remove(java.lang.Object) -> remove
    580:590:boolean removeAll(java.util.Collection) -> removeAll
    595:603:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:
    java.util.Iterator delegateIterator -> delegateIterator
    java.util.Collection originalDelegate -> originalDelegate
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1 -> this$1
    461:465:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    461:469:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    476:480:void validateIterator() -> validateIterator
    484:485:boolean hasNext() -> hasNext
    490:491:java.lang.Object next() -> next
    496:499:void remove() -> remove
    502:503:java.util.Iterator getDelegateIterator() -> getDelegateIterator
com.google.common.collect.AbstractMapBasedMultimap$WrappedList -> com.google.common.collect.AbstractMapBasedMultimap$WrappedList:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    776:778:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    781:781:java.util.List getListDelegate() -> getListDelegate
    786:798:boolean addAll(int,java.util.Collection) -> addAll
    803:804:java.lang.Object get(int) -> get
    809:810:java.lang.Object set(int,java.lang.Object) -> set
    815:822:void add(int,java.lang.Object) -> add
    826:830:java.lang.Object remove(int) -> remove
    835:836:int indexOf(java.lang.Object) -> indexOf
    841:842:int lastIndexOf(java.lang.Object) -> lastIndexOf
    847:848:java.util.ListIterator listIterator() -> listIterator
    853:854:java.util.ListIterator listIterator(int) -> listIterator
    859:860:java.util.List subList(int,int) -> subList
com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:
    com.google.common.collect.AbstractMapBasedMultimap$WrappedList this$1 -> this$1
    868:868:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList) -> <init>
    870:872:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int) -> <init>
    875:875:java.util.ListIterator getDelegateListIterator() -> getDelegateListIterator
    880:880:boolean hasPrevious() -> hasPrevious
    885:885:java.lang.Object previous() -> previous
    890:890:int nextIndex() -> nextIndex
    895:895:int previousIndex() -> previousIndex
    900:901:void set(java.lang.Object) -> set
    905:911:void add(java.lang.Object) -> add
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    702:704:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    708:708:java.util.NavigableSet getSortedSetDelegate() -> getSortedSetDelegate
    713:713:java.lang.Object lower(java.lang.Object) -> lower
    718:718:java.lang.Object floor(java.lang.Object) -> floor
    723:723:java.lang.Object ceiling(java.lang.Object) -> ceiling
    728:728:java.lang.Object higher(java.lang.Object) -> higher
    733:733:java.lang.Object pollFirst() -> pollFirst
    738:738:java.lang.Object pollLast() -> pollLast
    742:742:java.util.NavigableSet wrap(java.util.NavigableSet) -> wrap
    747:747:java.util.NavigableSet descendingSet() -> descendingSet
    752:752:java.util.Iterator descendingIterator() -> descendingIterator
    758:758:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    764:764:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    769:769:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    698:698:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    616:618:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    622:636:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> this$0
    645:647:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    650:650:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    655:655:java.util.Comparator comparator() -> comparator
    660:661:java.lang.Object first() -> first
    666:667:java.lang.Object last() -> last
    672:673:java.util.SortedSet headSet(java.lang.Object) -> headSet
    681:682:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    690:691:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultiset -> com.google.common.collect.AbstractMapBasedMultiset:
    java.util.Map backingMap -> backingMap
    long size -> size
    long serialVersionUID -> serialVersionUID
    60:63:void <init>(java.util.Map) -> <init>
    67:68:void setBackingMap(java.util.Map) -> setBackingMap
    81:81:java.util.Set entrySet() -> entrySet
    86:87:java.util.Iterator entryIterator() -> entryIterator
    131:136:void clear() -> clear
    140:140:int distinctElements() -> distinctElements
    147:147:int size() -> size
    152:152:java.util.Iterator iterator() -> iterator
    203:204:int count(java.lang.Object) -> count
    218:234:int add(java.lang.Object,int) -> add
    239:260:int remove(java.lang.Object,int) -> remove
    266:283:int setCount(java.lang.Object,int) -> setCount
    287:291:int getAndSet(com.google.common.collect.Count,int) -> getAndSet
    297:297:void readObjectNoData() -> readObjectNoData
    48:48:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset) -> access$000
    48:48:long access$122(com.google.common.collect.AbstractMapBasedMultiset,long) -> access$122
    48:48:long access$110(com.google.common.collect.AbstractMapBasedMultiset) -> access$110
com.google.common.collect.AbstractMapBasedMultiset$1 -> com.google.common.collect.AbstractMapBasedMultiset$1:
    java.util.Map$Entry toRemove -> toRemove
    java.util.Iterator val$backingEntries -> val$backingEntries
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> this$0
    87:87:void <init>(com.google.common.collect.AbstractMapBasedMultiset,java.util.Iterator) -> <init>
    92:92:boolean hasNext() -> hasNext
    97:99:com.google.common.collect.Multiset$Entry next() -> next
    121:125:void remove() -> remove
    87:87:java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultiset$1$1 -> com.google.common.collect.AbstractMapBasedMultiset$1$1:
    java.util.Map$Entry val$mapEntry -> val$mapEntry
    com.google.common.collect.AbstractMapBasedMultiset$1 this$1 -> this$1
    99:99:void <init>(com.google.common.collect.AbstractMapBasedMultiset$1,java.util.Map$Entry) -> <init>
    102:102:java.lang.Object getElement() -> getElement
    107:114:int getCount() -> getCount
com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator -> com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator:
    java.util.Iterator entryIterator -> entryIterator
    java.util.Map$Entry currentEntry -> currentEntry
    int occurrencesLeft -> occurrencesLeft
    boolean canRemove -> canRemove
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> this$0
    166:168:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    172:172:boolean hasNext() -> hasNext
    177:183:java.lang.Object next() -> next
    188:198:void remove() -> remove
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    33:33:void <init>() -> <init>
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    43:43:java.lang.Object setValue(java.lang.Object) -> setValue
    48:53:boolean equals(java.lang.Object) -> equals
    58:60:int hashCode() -> hashCode
    68:68:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    java.util.Collection entries -> entries
    java.util.Set keySet -> keySet
    com.google.common.collect.Multiset keys -> keys
    java.util.Collection values -> values
    java.util.Map asMap -> asMap
    39:184:void <init>() -> <init>
    42:42:boolean isEmpty() -> isEmpty
    47:53:boolean containsValue(java.lang.Object) -> containsValue
    58:59:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    64:65:boolean remove(java.lang.Object,java.lang.Object) -> remove
    70:70:boolean put(java.lang.Object,java.lang.Object) -> put
    75:83:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    89:93:boolean putAll(com.google.common.collect.Multimap) -> putAll
    98:101:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    108:109:java.util.Collection entries() -> entries
    113:116:java.util.Collection createEntries() -> createEntries
    java.util.Iterator entryIterator() -> entryIterator
    152:153:java.util.Set keySet() -> keySet
    157:157:java.util.Set createKeySet() -> createKeySet
    164:165:com.google.common.collect.Multiset keys() -> keys
    169:169:com.google.common.collect.Multiset createKeys() -> createKeys
    176:177:java.util.Collection values() -> values
    181:181:java.util.Collection createValues() -> createValues
    208:208:java.util.Iterator valueIterator() -> valueIterator
    215:216:java.util.Map asMap() -> asMap
    java.util.Map createAsMap() -> createAsMap
    225:225:boolean equals(java.lang.Object) -> equals
    238:238:int hashCode() -> hashCode
    249:249:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$1 -> com.google.common.collect.AbstractMultimap$1:
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    121:121:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    124:124:com.google.common.collect.Multimap multimap() -> multimap
    129:129:java.util.Iterator iterator() -> iterator
    121:121:void <init>(com.google.common.collect.AbstractMultimap,com.google.common.collect.AbstractMultimap$1) -> <init>
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    134:134:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    137:137:int hashCode() -> hashCode
    142:142:boolean equals(java.lang.Object) -> equals
    134:134:void <init>(com.google.common.collect.AbstractMultimap,com.google.common.collect.AbstractMultimap$1) -> <init>
com.google.common.collect.AbstractMultimap$Values -> com.google.common.collect.AbstractMultimap$Values:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    185:185:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    188:188:java.util.Iterator iterator() -> iterator
    193:193:int size() -> size
    198:198:boolean contains(java.lang.Object) -> contains
    203:204:void clear() -> clear
com.google.common.collect.AbstractMultiset -> com.google.common.collect.AbstractMultiset:
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    48:186:void <init>() -> <init>
    53:53:int size() -> size
    58:58:boolean isEmpty() -> isEmpty
    63:63:boolean contains(java.lang.Object) -> contains
    68:68:java.util.Iterator iterator() -> iterator
    73:78:int count(java.lang.Object) -> count
    85:86:boolean add(java.lang.Object) -> add
    91:91:int add(java.lang.Object,int) -> add
    96:96:boolean remove(java.lang.Object) -> remove
    101:101:int remove(java.lang.Object,int) -> remove
    106:106:int setCount(java.lang.Object,int) -> setCount
    111:111:boolean setCount(java.lang.Object,int,int) -> setCount
    124:124:boolean addAll(java.util.Collection) -> addAll
    129:129:boolean removeAll(java.util.Collection) -> removeAll
    134:134:boolean retainAll(java.util.Collection) -> retainAll
    139:140:void clear() -> clear
    148:152:java.util.Set elementSet() -> elementSet
    160:160:java.util.Set createElementSet() -> createElementSet
    java.util.Iterator entryIterator() -> entryIterator
    int distinctElements() -> distinctElements
    179:183:java.util.Set entrySet() -> entrySet
    205:205:java.util.Set createEntrySet() -> createEntrySet
    219:219:boolean equals(java.lang.Object) -> equals
    230:230:int hashCode() -> hashCode
    241:241:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$ElementSet -> com.google.common.collect.AbstractMultiset$ElementSet:
    com.google.common.collect.AbstractMultiset this$0 -> this$0
    164:164:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    167:167:com.google.common.collect.Multiset multiset() -> multiset
com.google.common.collect.AbstractMultiset$EntrySet -> com.google.common.collect.AbstractMultiset$EntrySet:
    com.google.common.collect.AbstractMultiset this$0 -> this$0
    187:187:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    190:190:com.google.common.collect.Multiset multiset() -> multiset
    195:195:java.util.Iterator iterator() -> iterator
    200:200:int size() -> size
com.google.common.collect.AbstractNavigableMap -> com.google.common.collect.AbstractNavigableMap:
    35:167:void <init>() -> <init>
    java.lang.Object get(java.lang.Object) -> get
    45:45:java.util.Map$Entry firstEntry() -> firstEntry
    51:51:java.util.Map$Entry lastEntry() -> lastEntry
    57:57:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    63:63:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    68:72:java.lang.Object firstKey() -> firstKey
    78:82:java.lang.Object lastKey() -> lastKey
    89:89:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    95:95:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    101:101:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    107:107:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    112:112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    117:117:java.lang.Object floorKey(java.lang.Object) -> floorKey
    122:122:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    127:127:java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    134:134:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    139:139:java.util.SortedMap headMap(java.lang.Object) -> headMap
    144:144:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    149:149:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    154:154:java.util.Set keySet() -> keySet
    159:159:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    164:164:java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.AbstractNavigableMap$1 -> com.google.common.collect.AbstractNavigableMap$1:
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.google.common.collect.AbstractNavigableMap$DescendingMap:
    com.google.common.collect.AbstractNavigableMap this$0 -> this$0
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    170:170:java.util.NavigableMap forward() -> forward
    175:175:java.util.Iterator entryIterator() -> entryIterator
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
com.google.common.collect.AbstractRangeSet -> com.google.common.collect.AbstractRangeSet:
    25:25:void <init>() -> <init>
    29:29:boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    37:37:boolean isEmpty() -> isEmpty
    42:42:void add(com.google.common.collect.Range) -> add
    47:47:void remove(com.google.common.collect.Range) -> remove
    52:53:void clear() -> clear
    57:62:boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    67:70:void addAll(com.google.common.collect.RangeSet) -> addAll
    74:77:void removeAll(com.google.common.collect.RangeSet) -> removeAll
    boolean encloses(com.google.common.collect.Range) -> encloses
    84:90:boolean equals(java.lang.Object) -> equals
    95:95:int hashCode() -> hashCode
    100:100:java.lang.String toString() -> toString
com.google.common.collect.AbstractSequentialIterator -> com.google.common.collect.AbstractSequentialIterator:
    java.lang.Object nextOrNull -> nextOrNull
    51:53:void <init>(java.lang.Object) -> <init>
    java.lang.Object computeNext(java.lang.Object) -> computeNext
    65:65:boolean hasNext() -> hasNext
    70:76:java.lang.Object next() -> next
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    long serialVersionUID -> serialVersionUID
    44:45:void <init>(java.util.Map) -> <init>
    java.util.Set createCollection() -> createCollection
    52:52:java.util.Set createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    66:66:java.util.Set get(java.lang.Object) -> get
    78:78:java.util.Set entries() -> entries
    90:90:java.util.Set removeAll(java.lang.Object) -> removeAll
    104:104:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    115:115:java.util.Map asMap() -> asMap
    128:128:boolean put(java.lang.Object,java.lang.Object) -> put
    140:140:boolean equals(java.lang.Object) -> equals
    34:34:java.util.Collection entries() -> entries
    34:34:java.util.Collection get(java.lang.Object) -> get
    34:34:java.util.Collection removeAll(java.lang.Object) -> removeAll
    34:34:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    34:34:java.util.Collection createCollection() -> createCollection
    34:34:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
com.google.common.collect.AbstractSortedKeySortedSetMultimap -> com.google.common.collect.AbstractSortedKeySortedSetMultimap:
    38:39:void <init>(java.util.SortedMap) -> <init>
    43:43:java.util.SortedMap asMap() -> asMap
    48:48:java.util.SortedMap backingMap() -> backingMap
    53:53:java.util.SortedSet keySet() -> keySet
    34:34:java.util.Map asMap() -> asMap
    34:34:java.util.Set keySet() -> keySet
    34:34:java.util.Map backingMap() -> backingMap
com.google.common.collect.AbstractSortedMultiset -> com.google.common.collect.AbstractSortedMultiset:
    java.util.Comparator comparator -> comparator
    com.google.common.collect.SortedMultiset descendingMultiset -> descendingMultiset
    44:45:void <init>() -> <init>
    47:49:void <init>(java.util.Comparator) -> <init>
    53:53:java.util.NavigableSet elementSet() -> elementSet
    58:58:java.util.NavigableSet createElementSet() -> createElementSet
    63:63:java.util.Comparator comparator() -> comparator
    68:69:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    74:75:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    80:87:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    92:99:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    109:111:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    117:117:java.util.Iterator descendingIterator() -> descendingIterator
    124:125:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    146:146:com.google.common.collect.SortedMultiset createDescendingMultiset() -> createDescendingMultiset
    37:37:java.util.Set createElementSet() -> createElementSet
    37:37:java.util.Set elementSet() -> elementSet
    37:37:java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.AbstractSortedMultiset$1DescendingMultisetImpl -> com.google.common.collect.AbstractSortedMultiset$1DescendingMultisetImpl:
    com.google.common.collect.AbstractSortedMultiset this$0 -> this$0
    130:130:void <init>(com.google.common.collect.AbstractSortedMultiset) -> <init>
    133:133:com.google.common.collect.SortedMultiset forwardMultiset() -> forwardMultiset
    138:138:java.util.Iterator entryIterator() -> entryIterator
    143:143:java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractSortedSetMultimap -> com.google.common.collect.AbstractSortedSetMultimap:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>(java.util.Map) -> <init>
    java.util.SortedSet createCollection() -> createCollection
    55:59:java.util.SortedSet createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    79:79:java.util.SortedSet get(java.lang.Object) -> get
    92:92:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    107:107:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    126:126:java.util.Map asMap() -> asMap
    137:137:java.util.Collection values() -> values
    37:37:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    37:37:java.util.Set removeAll(java.lang.Object) -> removeAll
    37:37:java.util.Set get(java.lang.Object) -> get
    37:37:java.util.Set createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    37:37:java.util.Set createCollection() -> createCollection
    37:37:java.util.Collection get(java.lang.Object) -> get
    37:37:java.util.Collection removeAll(java.lang.Object) -> removeAll
    37:37:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    37:37:java.util.Collection createCollection() -> createCollection
    37:37:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
com.google.common.collect.AbstractTable -> com.google.common.collect.AbstractTable:
    java.util.Set cellSet -> cellSet
    java.util.Collection values -> values
    35:184:void <init>() -> <init>
    39:39:boolean containsRow(java.lang.Object) -> containsRow
    44:44:boolean containsColumn(java.lang.Object) -> containsColumn
    49:49:java.util.Set rowKeySet() -> rowKeySet
    54:54:java.util.Set columnKeySet() -> columnKeySet
    59:64:boolean containsValue(java.lang.Object) -> containsValue
    69:70:boolean contains(java.lang.Object,java.lang.Object) -> contains
    75:76:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    81:81:boolean isEmpty() -> isEmpty
    86:87:void clear() -> clear
    91:92:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    97:97:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    102:105:void putAll(com.google.common.collect.Table) -> putAll
    111:112:java.util.Set cellSet() -> cellSet
    116:116:java.util.Set createCellSet() -> createCellSet
    java.util.Iterator cellIterator() -> cellIterator
    167:168:java.util.Collection values() -> values
    172:172:java.util.Collection createValues() -> createValues
    176:176:java.util.Iterator valuesIterator() -> valuesIterator
    209:209:boolean equals(java.lang.Object) -> equals
    214:214:int hashCode() -> hashCode
    222:222:java.lang.String toString() -> toString
com.google.common.collect.AbstractTable$1 -> com.google.common.collect.AbstractTable$1:
    com.google.common.collect.AbstractTable this$0 -> this$0
    176:176:void <init>(com.google.common.collect.AbstractTable,java.util.Iterator) -> <init>
    179:179:java.lang.Object transform(com.google.common.collect.Table$Cell) -> transform
    176:176:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.AbstractTable$CellSet -> com.google.common.collect.AbstractTable$CellSet:
    com.google.common.collect.AbstractTable this$0 -> this$0
    122:122:void <init>(com.google.common.collect.AbstractTable) -> <init>
    125:132:boolean contains(java.lang.Object) -> contains
    137:144:boolean remove(java.lang.Object) -> remove
    149:150:void clear() -> clear
    154:154:java.util.Iterator iterator() -> iterator
    159:159:int size() -> size
com.google.common.collect.AbstractTable$Values -> com.google.common.collect.AbstractTable$Values:
    com.google.common.collect.AbstractTable this$0 -> this$0
    185:185:void <init>(com.google.common.collect.AbstractTable) -> <init>
    188:188:java.util.Iterator iterator() -> iterator
    193:193:boolean contains(java.lang.Object) -> contains
    198:199:void clear() -> clear
    203:203:int size() -> size
com.google.common.collect.AllEqualOrdering -> com.google.common.collect.AllEqualOrdering:
    com.google.common.collect.AllEqualOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    32:32:void <init>() -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    42:42:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    47:47:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    53:53:com.google.common.collect.Ordering reverse() -> reverse
    57:57:java.lang.Object readResolve() -> readResolve
    62:62:java.lang.String toString() -> toString
    33:33:void <clinit>() -> <clinit>
com.google.common.collect.ArrayListMultimap -> com.google.common.collect.ArrayListMultimap:
    int DEFAULT_VALUES_PER_KEY -> DEFAULT_VALUES_PER_KEY
    int expectedValuesPerKey -> expectedValuesPerKey
    long serialVersionUID -> serialVersionUID
    78:78:com.google.common.collect.ArrayListMultimap create() -> create
    91:91:com.google.common.collect.ArrayListMultimap create(int,int) -> create
    101:101:com.google.common.collect.ArrayListMultimap create(com.google.common.collect.Multimap) -> create
    105:107:void <init>() -> <init>
    110:113:void <init>(int,int) -> <init>
    116:122:void <init>(com.google.common.collect.Multimap) -> <init>
    130:130:java.util.List createCollection() -> createCollection
    137:141:void trimToSize() -> trimToSize
    150:152:void writeObject(java.io.ObjectOutputStream) -> writeObject
    156:162:void readObject(java.io.ObjectInputStream) -> readObject
    66:66:boolean equals(java.lang.Object) -> equals
    66:66:java.util.Map asMap() -> asMap
    66:66:boolean put(java.lang.Object,java.lang.Object) -> put
    66:66:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    66:66:java.util.List removeAll(java.lang.Object) -> removeAll
    66:66:java.util.List get(java.lang.Object) -> get
    66:66:java.util.Collection entries() -> entries
    66:66:java.util.Collection values() -> values
    66:66:void clear() -> clear
    66:66:boolean containsKey(java.lang.Object) -> containsKey
    66:66:int size() -> size
    66:66:java.util.Collection createCollection() -> createCollection
    66:66:java.lang.String toString() -> toString
    66:66:int hashCode() -> hashCode
    66:66:com.google.common.collect.Multiset keys() -> keys
    66:66:java.util.Set keySet() -> keySet
    66:66:boolean putAll(com.google.common.collect.Multimap) -> putAll
    66:66:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    66:66:boolean remove(java.lang.Object,java.lang.Object) -> remove
    66:66:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    66:66:boolean containsValue(java.lang.Object) -> containsValue
    66:66:boolean isEmpty() -> isEmpty
com.google.common.collect.ArrayTable -> com.google.common.collect.ArrayTable:
    com.google.common.collect.ImmutableList rowList -> rowList
    com.google.common.collect.ImmutableList columnList -> columnList
    com.google.common.collect.ImmutableMap rowKeyToIndex -> rowKeyToIndex
    com.google.common.collect.ImmutableMap columnKeyToIndex -> columnKeyToIndex
    java.lang.Object[][] array -> array
    com.google.common.collect.ArrayTable$ColumnMap columnMap -> columnMap
    com.google.common.collect.ArrayTable$RowMap rowMap -> rowMap
    long serialVersionUID -> serialVersionUID
    101:101:com.google.common.collect.ArrayTable create(java.lang.Iterable,java.lang.Iterable) -> create
    133:133:com.google.common.collect.ArrayTable create(com.google.common.collect.Table) -> create
    146:165:void <init>(java.lang.Iterable,java.lang.Iterable) -> <init>
    168:170:void <init>(com.google.common.collect.Table) -> <init>
    172:185:void <init>(com.google.common.collect.ArrayTable) -> <init>
    289:289:com.google.common.collect.ImmutableList rowKeyList() -> rowKeyList
    297:297:com.google.common.collect.ImmutableList columnKeyList() -> columnKeyList
    316:318:java.lang.Object at(int,int) -> at
    338:342:java.lang.Object set(int,int,java.lang.Object) -> set
    359:364:java.lang.Object[][] toArray(java.lang.Class) -> toArray
    376:376:void clear() -> clear
    384:387:void eraseAll() -> eraseAll
    395:395:boolean contains(java.lang.Object,java.lang.Object) -> contains
    404:404:boolean containsColumn(java.lang.Object) -> containsColumn
    413:413:boolean containsRow(java.lang.Object) -> containsRow
    418:425:boolean containsValue(java.lang.Object) -> containsValue
    430:432:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    440:440:boolean isEmpty() -> isEmpty
    451:457:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    478:479:void putAll(com.google.common.collect.Table) -> putAll
    490:490:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    507:512:java.lang.Object erase(java.lang.Object,java.lang.Object) -> erase
    519:519:int size() -> size
    537:537:java.util.Set cellSet() -> cellSet
    542:542:java.util.Iterator cellIterator() -> cellIterator
    582:584:java.util.Map column(java.lang.Object) -> column
    619:619:com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    626:627:java.util.Map columnMap() -> columnMap
    672:674:java.util.Map row(java.lang.Object) -> row
    709:709:com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    716:717:java.util.Map rowMap() -> rowMap
    758:758:java.util.Collection values() -> values
    86:86:java.lang.String toString() -> toString
    86:86:int hashCode() -> hashCode
    86:86:boolean equals(java.lang.Object) -> equals
    86:86:java.util.Set columnKeySet() -> columnKeySet
    86:86:java.util.Set rowKeySet() -> rowKeySet
    88:88:com.google.common.collect.ImmutableList access$000(com.google.common.collect.ArrayTable) -> access$000
    88:88:com.google.common.collect.ImmutableList access$100(com.google.common.collect.ArrayTable) -> access$100
    88:88:com.google.common.collect.ImmutableMap access$200(com.google.common.collect.ArrayTable) -> access$200
    88:88:com.google.common.collect.ImmutableMap access$500(com.google.common.collect.ArrayTable) -> access$500
com.google.common.collect.ArrayTable$1 -> com.google.common.collect.ArrayTable$1:
    com.google.common.collect.ArrayTable this$0 -> this$0
    542:542:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    545:545:com.google.common.collect.Table$Cell get(int) -> get
    542:542:java.lang.Object get(int) -> get
com.google.common.collect.ArrayTable$1$1 -> com.google.common.collect.ArrayTable$1$1:
    int rowIndex -> rowIndex
    int columnIndex -> columnIndex
    int val$index -> val$index
    com.google.common.collect.ArrayTable$1 this$1 -> this$1
    545:547:void <init>(com.google.common.collect.ArrayTable$1,int) -> <init>
    551:551:java.lang.Object getRowKey() -> getRowKey
    556:556:java.lang.Object getColumnKey() -> getColumnKey
    561:561:java.lang.Object getValue() -> getValue
com.google.common.collect.ArrayTable$ArrayMap -> com.google.common.collect.ArrayTable$ArrayMap:
    com.google.common.collect.ImmutableMap keyIndex -> keyIndex
    190:192:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    196:196:java.util.Set keySet() -> keySet
    200:200:java.lang.Object getKey(int) -> getKey
    java.lang.String getKeyRole() -> getKeyRole
    java.lang.Object getValue(int) -> getValue
    java.lang.Object setValue(int,java.lang.Object) -> setValue
    213:213:int size() -> size
    218:218:boolean isEmpty() -> isEmpty
    223:223:java.util.Iterator entryIterator() -> entryIterator
    250:250:boolean containsKey(java.lang.Object) -> containsKey
    255:259:java.lang.Object get(java.lang.Object) -> get
    265:270:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    275:275:java.lang.Object remove(java.lang.Object) -> remove
    280:280:void clear() -> clear
    187:187:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ArrayTable$1) -> <init>
com.google.common.collect.ArrayTable$ArrayMap$1 -> com.google.common.collect.ArrayTable$ArrayMap$1:
    com.google.common.collect.ArrayTable$ArrayMap this$0 -> this$0
    223:223:void <init>(com.google.common.collect.ArrayTable$ArrayMap,int) -> <init>
    226:226:java.util.Map$Entry get(int) -> get
    223:223:java.lang.Object get(int) -> get
com.google.common.collect.ArrayTable$ArrayMap$1$1 -> com.google.common.collect.ArrayTable$ArrayMap$1$1:
    int val$index -> val$index
    com.google.common.collect.ArrayTable$ArrayMap$1 this$1 -> this$1
    226:226:void <init>(com.google.common.collect.ArrayTable$ArrayMap$1,int) -> <init>
    229:229:java.lang.Object getKey() -> getKey
    234:234:java.lang.Object getValue() -> getValue
    239:239:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$Column -> com.google.common.collect.ArrayTable$Column:
    int columnIndex -> columnIndex
    com.google.common.collect.ArrayTable this$0 -> this$0
    590:593:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    597:597:java.lang.String getKeyRole() -> getKeyRole
    602:602:java.lang.Object getValue(int) -> getValue
    607:607:java.lang.Object setValue(int,java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$ColumnMap -> com.google.common.collect.ArrayTable$ColumnMap:
    com.google.common.collect.ArrayTable this$0 -> this$0
    632:634:void <init>(com.google.common.collect.ArrayTable) -> <init>
    638:638:java.lang.String getKeyRole() -> getKeyRole
    643:643:java.util.Map getValue(int) -> getValue
    648:648:java.util.Map setValue(int,java.util.Map) -> setValue
    653:653:java.util.Map put(java.lang.Object,java.util.Map) -> put
    630:630:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    630:630:java.lang.Object setValue(int,java.lang.Object) -> setValue
    630:630:java.lang.Object getValue(int) -> getValue
    631:631:void <init>(com.google.common.collect.ArrayTable,com.google.common.collect.ArrayTable$1) -> <init>
com.google.common.collect.ArrayTable$Row -> com.google.common.collect.ArrayTable$Row:
    int rowIndex -> rowIndex
    com.google.common.collect.ArrayTable this$0 -> this$0
    680:683:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    687:687:java.lang.String getKeyRole() -> getKeyRole
    692:692:java.lang.Object getValue(int) -> getValue
    697:697:java.lang.Object setValue(int,java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$RowMap -> com.google.common.collect.ArrayTable$RowMap:
    com.google.common.collect.ArrayTable this$0 -> this$0
    722:724:void <init>(com.google.common.collect.ArrayTable) -> <init>
    728:728:java.lang.String getKeyRole() -> getKeyRole
    733:733:java.util.Map getValue(int) -> getValue
    738:738:java.util.Map setValue(int,java.util.Map) -> setValue
    743:743:java.util.Map put(java.lang.Object,java.util.Map) -> put
    720:720:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    720:720:java.lang.Object setValue(int,java.lang.Object) -> setValue
    720:720:java.lang.Object getValue(int) -> getValue
    721:721:void <init>(com.google.common.collect.ArrayTable,com.google.common.collect.ArrayTable$1) -> <init>
com.google.common.collect.BiMap -> com.google.common.collect.BiMap:
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    void putAll(java.util.Map) -> putAll
    java.util.Set values() -> values
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.BinaryTreeTraverser -> com.google.common.collect.BinaryTreeTraverser:
    39:179:void <init>() -> <init>
    com.google.common.base.Optional leftChild(java.lang.Object) -> leftChild
    com.google.common.base.Optional rightChild(java.lang.Object) -> rightChild
    59:60:java.lang.Iterable children(java.lang.Object) -> children
    92:92:com.google.common.collect.UnmodifiableIterator preOrderIterator(java.lang.Object) -> preOrderIterator
    128:128:com.google.common.collect.UnmodifiableIterator postOrderIterator(java.lang.Object) -> postOrderIterator
    170:171:com.google.common.collect.FluentIterable inOrderTraversal(java.lang.Object) -> inOrderTraversal
    208:211:void pushIfPresent(java.util.Deque,com.google.common.base.Optional) -> pushIfPresent
    39:39:void access$000(java.util.Deque,com.google.common.base.Optional) -> access$000
com.google.common.collect.BinaryTreeTraverser$1 -> com.google.common.collect.BinaryTreeTraverser$1:
    java.lang.Object val$root -> val$root
    com.google.common.collect.BinaryTreeTraverser this$0 -> this$0
    60:60:void <init>(com.google.common.collect.BinaryTreeTraverser,java.lang.Object) -> <init>
    63:63:java.util.Iterator iterator() -> iterator
com.google.common.collect.BinaryTreeTraverser$1$1 -> com.google.common.collect.BinaryTreeTraverser$1$1:
    boolean doneLeft -> doneLeft
    boolean doneRight -> doneRight
    com.google.common.collect.BinaryTreeTraverser$1 this$1 -> this$1
    63:63:void <init>(com.google.common.collect.BinaryTreeTraverser$1) -> <init>
    69:83:java.lang.Object computeNext() -> computeNext
com.google.common.collect.BinaryTreeTraverser$2 -> com.google.common.collect.BinaryTreeTraverser$2:
    java.lang.Object val$root -> val$root
    com.google.common.collect.BinaryTreeTraverser this$0 -> this$0
    171:171:void <init>(com.google.common.collect.BinaryTreeTraverser,java.lang.Object) -> <init>
    174:174:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    171:171:java.util.Iterator iterator() -> iterator
com.google.common.collect.BinaryTreeTraverser$InOrderIterator -> com.google.common.collect.BinaryTreeTraverser$InOrderIterator:
    java.util.Deque stack -> stack
    java.util.BitSet hasExpandedLeft -> hasExpandedLeft
    com.google.common.collect.BinaryTreeTraverser this$0 -> this$0
    183:187:void <init>(com.google.common.collect.BinaryTreeTraverser,java.lang.Object) -> <init>
    191:203:java.lang.Object computeNext() -> computeNext
com.google.common.collect.BinaryTreeTraverser$PostOrderIterator -> com.google.common.collect.BinaryTreeTraverser$PostOrderIterator:
    java.util.Deque stack -> stack
    java.util.BitSet hasExpanded -> hasExpanded
    com.google.common.collect.BinaryTreeTraverser this$0 -> this$0
    138:142:void <init>(com.google.common.collect.BinaryTreeTraverser,java.lang.Object) -> <init>
    146:146:boolean hasNext() -> hasNext
    152:163:java.lang.Object next() -> next
com.google.common.collect.BinaryTreeTraverser$PreOrderIterator -> com.google.common.collect.BinaryTreeTraverser$PreOrderIterator:
    java.util.Deque stack -> stack
    com.google.common.collect.BinaryTreeTraverser this$0 -> this$0
    102:105:void <init>(com.google.common.collect.BinaryTreeTraverser,java.lang.Object) -> <init>
    109:109:boolean hasNext() -> hasNext
    114:117:java.lang.Object next() -> next
    122:122:java.lang.Object peek() -> peek
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    com.google.common.collect.BoundType OPEN -> OPEN
    com.google.common.collect.BoundType CLOSED -> CLOSED
    com.google.common.collect.BoundType[] $VALUES -> $VALUES
    26:26:com.google.common.collect.BoundType[] values() -> values
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    51:51:com.google.common.collect.BoundType forBoolean(boolean) -> forBoolean
    com.google.common.collect.BoundType flip() -> flip
    27:27:void <init>(java.lang.String,int,com.google.common.collect.BoundType$1) -> <init>
    26:40:void <clinit>() -> <clinit>
com.google.common.collect.BoundType$1 -> com.google.common.collect.BoundType$1:
    31:31:void <init>(java.lang.String,int) -> <init>
    34:34:com.google.common.collect.BoundType flip() -> flip
com.google.common.collect.BoundType$2 -> com.google.common.collect.BoundType$2:
    40:40:void <init>(java.lang.String,int) -> <init>
    43:43:com.google.common.collect.BoundType flip() -> flip
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    com.google.common.base.Function function -> function
    com.google.common.collect.Ordering ordering -> ordering
    long serialVersionUID -> serialVersionUID
    38:41:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering) -> <init>
    45:45:int compare(java.lang.Object,java.lang.Object) -> compare
    50:57:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    67:67:java.lang.String toString() -> toString
com.google.common.collect.CartesianList -> com.google.common.collect.CartesianList:
    com.google.common.collect.ImmutableList axes -> axes
    int[] axesSizeProduct -> axesSizeProduct
    41:49:java.util.List create(java.util.List) -> create
    52:65:void <init>(com.google.common.collect.ImmutableList) -> <init>
    68:68:int getAxisIndexForProductIndex(int,int) -> getAxisIndexForProductIndex
    73:74:com.google.common.collect.ImmutableList get(int) -> get
    97:97:int size() -> size
    102:116:boolean contains(java.lang.Object) -> contains
    34:34:java.lang.Object get(int) -> get
    35:35:com.google.common.collect.ImmutableList access$000(com.google.common.collect.CartesianList) -> access$000
    35:35:int access$100(com.google.common.collect.CartesianList,int,int) -> access$100
com.google.common.collect.CartesianList$1 -> com.google.common.collect.CartesianList$1:
    int val$index -> val$index
    com.google.common.collect.CartesianList this$0 -> this$0
    74:74:void <init>(com.google.common.collect.CartesianList,int) -> <init>
    78:78:int size() -> size
    83:85:java.lang.Object get(int) -> get
    90:90:boolean isPartialView() -> isPartialView
com.google.common.collect.ClassToInstanceMap -> com.google.common.collect.ClassToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    27:27:void <init>() -> <init>
    30:35:void checkEntryNotNull(java.lang.Object,java.lang.Object) -> checkEntryNotNull
    38:41:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    45:48:void checkPositive(int,java.lang.String) -> checkPositive
    55:56:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    com.google.common.base.Joiner STANDARD_JOINER -> STANDARD_JOINER
    59:59:void <init>() -> <init>
    93:99:java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate) -> filter
    108:114:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
    124:130:boolean safeRemove(java.util.Collection,java.lang.Object) -> safeRemove
    245:245:java.util.Collection transform(java.util.Collection,com.google.common.base.Function) -> transform
    291:291:boolean containsAllImpl(java.util.Collection,java.util.Collection) -> containsAllImpl
    298:309:java.lang.String toStringImpl(java.util.Collection) -> toStringImpl
    316:317:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    324:324:java.util.Collection cast(java.lang.Iterable) -> cast
    359:359:java.util.Collection orderedPermutations(java.lang.Iterable) -> orderedPermutations
    412:412:java.util.Collection orderedPermutations(java.lang.Iterable,java.util.Comparator) -> orderedPermutations
    565:565:java.util.Collection permutations(java.util.Collection) -> permutations
    672:677:boolean isPermutation(java.util.List,java.util.List) -> isPermutation
    681:681:boolean isPositiveInt(long) -> isPositiveInt
    58:58:boolean access$000(long) -> access$000
    58:58:boolean access$100(java.util.List,java.util.List) -> access$100
    327:327:void <clinit>() -> <clinit>
com.google.common.collect.Collections2$1 -> com.google.common.collect.Collections2$1:
    java.util.Collection val$collection -> val$collection
    303:303:void <init>(java.util.Collection) -> <init>
    306:306:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection -> com.google.common.collect.Collections2$FilteredCollection:
    java.util.Collection unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    138:141:void <init>(java.util.Collection,com.google.common.base.Predicate) -> <init>
    144:144:com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate) -> createCombined
    150:151:boolean add(java.lang.Object) -> add
    156:159:boolean addAll(java.util.Collection) -> addAll
    164:165:void clear() -> clear
    169:174:boolean contains(java.lang.Object) -> contains
    179:179:boolean containsAll(java.util.Collection) -> containsAll
    184:184:boolean isEmpty() -> isEmpty
    189:189:java.util.Iterator iterator() -> iterator
    194:194:boolean remove(java.lang.Object) -> remove
    199:199:boolean removeAll(java.util.Collection) -> removeAll
    204:204:boolean retainAll(java.util.Collection) -> retainAll
    209:209:int size() -> size
    215:215:java.lang.Object[] toArray() -> toArray
    220:220:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Collections2$OrderedPermutationCollection -> com.google.common.collect.Collections2$OrderedPermutationCollection:
    com.google.common.collect.ImmutableList inputList -> inputList
    java.util.Comparator comparator -> comparator
    int size -> size
    420:424:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    437:457:int calculateSize(java.util.List,java.util.Comparator) -> calculateSize
    462:462:int size() -> size
    467:467:boolean isEmpty() -> isEmpty
    472:472:java.util.Iterator iterator() -> iterator
    477:481:boolean contains(java.lang.Object) -> contains
    486:486:java.lang.String toString() -> toString
com.google.common.collect.Collections2$OrderedPermutationIterator -> com.google.common.collect.Collections2$OrderedPermutationIterator:
    java.util.List nextPermutation -> nextPermutation
    java.util.Comparator comparator -> comparator
    495:498:void <init>(java.util.List,java.util.Comparator) -> <init>
    502:507:java.util.List computeNext() -> computeNext
    511:521:void calculateNextPermutation() -> calculateNextPermutation
    524:529:int findNextJ() -> findNextJ
    533:539:int findNextL(int) -> findNextL
    490:490:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Collections2$PermutationCollection -> com.google.common.collect.Collections2$PermutationCollection:
    com.google.common.collect.ImmutableList inputList -> inputList
    571:573:void <init>(com.google.common.collect.ImmutableList) -> <init>
    577:577:int size() -> size
    582:582:boolean isEmpty() -> isEmpty
    587:587:java.util.Iterator iterator() -> iterator
    592:596:boolean contains(java.lang.Object) -> contains
    601:601:java.lang.String toString() -> toString
com.google.common.collect.Collections2$PermutationIterator -> com.google.common.collect.Collections2$PermutationIterator:
    java.util.List list -> list
    int[] c -> c
    int[] o -> o
    int j -> j
    611:619:void <init>(java.util.List) -> <init>
    623:628:java.util.List computeNext() -> computeNext
    632:660:void calculateNextPermutation() -> calculateNextPermutation
    663:665:void switchDirection() -> switchDirection
    605:605:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Collections2$TransformedCollection -> com.google.common.collect.Collections2$TransformedCollection:
    java.util.Collection fromCollection -> fromCollection
    com.google.common.base.Function function -> function
    252:255:void <init>(java.util.Collection,com.google.common.base.Function) -> <init>
    259:260:void clear() -> clear
    264:264:boolean isEmpty() -> isEmpty
    269:269:java.util.Iterator iterator() -> iterator
    274:274:int size() -> size
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    java.util.Comparator comparator -> comparator
    long serialVersionUID -> serialVersionUID
    33:35:void <init>(java.util.Comparator) -> <init>
    39:39:int compare(java.lang.Object,java.lang.Object) -> compare
    44:51:boolean equals(java.lang.Object) -> equals
    56:56:int hashCode() -> hashCode
    61:61:java.lang.String toString() -> toString
com.google.common.collect.ComparisonChain -> com.google.common.collect.ComparisonChain:
    com.google.common.collect.ComparisonChain ACTIVE -> ACTIVE
    com.google.common.collect.ComparisonChain LESS -> LESS
    com.google.common.collect.ComparisonChain GREATER -> GREATER
    67:67:void <init>() -> <init>
    74:74:com.google.common.collect.ComparisonChain start() -> start
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    241:241:com.google.common.collect.ComparisonChain compare(java.lang.Boolean,java.lang.Boolean) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    int result() -> result
    66:66:void <init>(com.google.common.collect.ComparisonChain$1) -> <init>
    66:66:com.google.common.collect.ComparisonChain access$100() -> access$100
    66:66:com.google.common.collect.ComparisonChain access$200() -> access$200
    66:66:com.google.common.collect.ComparisonChain access$300() -> access$300
    77:133:void <clinit>() -> <clinit>
com.google.common.collect.ComparisonChain$1 -> com.google.common.collect.ComparisonChain$1:
    78:78:void <init>() -> <init>
    82:82:com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    88:88:com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    93:93:com.google.common.collect.ComparisonChain compare(int,int) -> compare
    98:98:com.google.common.collect.ComparisonChain compare(long,long) -> compare
    103:103:com.google.common.collect.ComparisonChain compare(float,float) -> compare
    108:108:com.google.common.collect.ComparisonChain compare(double,double) -> compare
    113:113:com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    118:118:com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    122:122:com.google.common.collect.ComparisonChain classify(int) -> classify
    127:127:int result() -> result
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> com.google.common.collect.ComparisonChain$InactiveComparisonChain:
    int result -> result
    138:140:void <init>(int) -> <init>
    144:144:com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    150:150:com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    155:155:com.google.common.collect.ComparisonChain compare(int,int) -> compare
    160:160:com.google.common.collect.ComparisonChain compare(long,long) -> compare
    165:165:com.google.common.collect.ComparisonChain compare(float,float) -> compare
    170:170:com.google.common.collect.ComparisonChain compare(double,double) -> compare
    175:175:com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    180:180:com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    185:185:int result() -> result
com.google.common.collect.CompoundOrdering -> com.google.common.collect.CompoundOrdering:
    com.google.common.collect.ImmutableList comparators -> comparators
    long serialVersionUID -> serialVersionUID
    29:31:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    33:35:void <init>(java.lang.Iterable) -> <init>
    40:47:int compare(java.lang.Object,java.lang.Object) -> compare
    52:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
com.google.common.collect.ComputationException -> com.google.common.collect.ComputationException:
    long serialVersionUID -> serialVersionUID
    35:36:void <init>(java.lang.Throwable) -> <init>
com.google.common.collect.ComputingConcurrentHashMap -> com.google.common.collect.ComputingConcurrentHashMap:
    com.google.common.base.Function computingFunction -> computingFunction
    long serialVersionUID -> serialVersionUID
    50:52:void <init>(com.google.common.collect.MapMaker,com.google.common.base.Function) -> <init>
    56:56:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    61:61:com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int) -> segmentFor
    65:66:java.lang.Object getOrCompute(java.lang.Object) -> getOrCompute
    385:385:java.lang.Object writeReplace() -> writeReplace
    42:42:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference -> com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference:
    java.lang.Throwable t -> t
    214:216:void <init>(java.lang.Throwable) -> <init>
    220:220:java.lang.Object get() -> get
    225:225:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    231:231:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    236:236:boolean isComputingReference() -> isComputingReference
    241:241:java.lang.Object waitForValue() -> waitForValue
    245:245:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
com.google.common.collect.ComputingConcurrentHashMap$ComputedReference -> com.google.common.collect.ComputingConcurrentHashMap$ComputedReference:
    java.lang.Object value -> value
    254:256:void <init>(java.lang.Object) -> <init>
    260:260:java.lang.Object get() -> get
    265:265:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    271:271:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    276:276:boolean isComputingReference() -> isComputingReference
    281:281:java.lang.Object waitForValue() -> waitForValue
    285:285:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment -> com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment:
    72:73:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    81:168:java.lang.Object getOrCompute(java.lang.Object,int,com.google.common.base.Function) -> getOrCompute
    177:202:java.lang.Object compute(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference) -> compute
com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy -> com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy:
    com.google.common.base.Function computingFunction -> computingFunction
    long serialVersionUID -> serialVersionUID
    415:427:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,long,long,int,int,com.google.common.collect.MapMaker$RemovalListener,java.util.concurrent.ConcurrentMap,com.google.common.base.Function) -> <init>
    430:432:void writeObject(java.io.ObjectOutputStream) -> writeObject
    436:440:void readObject(java.io.ObjectInputStream) -> readObject
    443:443:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference -> com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference:
    com.google.common.base.Function computingFunction -> computingFunction
    com.google.common.collect.MapMakerInternalMap$ValueReference computedReference -> computedReference
    291:296:void <init>(com.google.common.base.Function) -> <init>
    302:302:java.lang.Object get() -> get
    307:307:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    313:313:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    318:318:boolean isComputingReference() -> isComputingReference
    326:344:java.lang.Object waitForValue() -> waitForValue
    351:354:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
    359:366:java.lang.Object compute(java.lang.Object,int) -> compute
    370:376:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    java.util.concurrent.ConcurrentMap countMap -> countMap
    long serialVersionUID -> serialVersionUID
    88:88:com.google.common.collect.ConcurrentHashMultiset create() -> create
    100:102:com.google.common.collect.ConcurrentHashMultiset create(java.lang.Iterable) -> create
    128:128:com.google.common.collect.ConcurrentHashMultiset create(com.google.common.collect.MapMaker) -> create
    142:145:void <init>(java.util.concurrent.ConcurrentMap) -> <init>
    157:158:int count(java.lang.Object) -> count
    169:173:int size() -> size
    183:183:java.lang.Object[] toArray() -> toArray
    188:188:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    196:203:java.util.List snapshot() -> snapshot
    219:262:int add(java.lang.Object,int) -> add
    285:309:int remove(java.lang.Object,int) -> remove
    325:348:boolean removeExactly(java.lang.Object,int) -> removeExactly
    360:400:int setCount(java.lang.Object,int) -> setCount
    416:454:boolean setCount(java.lang.Object,int,int) -> setCount
    461:462:java.util.Set createElementSet() -> createElementSet
    492:492:java.util.Set createEntrySet() -> createEntrySet
    497:497:int distinctElements() -> distinctElements
    502:502:boolean isEmpty() -> isEmpty
    509:528:java.util.Iterator entryIterator() -> entryIterator
    553:554:void clear() -> clear
    590:592:void writeObject(java.io.ObjectOutputStream) -> writeObject
    595:600:void readObject(java.io.ObjectInputStream) -> readObject
    58:58:java.lang.String toString() -> toString
    58:58:int hashCode() -> hashCode
    58:58:boolean equals(java.lang.Object) -> equals
    58:58:java.util.Set entrySet() -> entrySet
    58:58:java.util.Set elementSet() -> elementSet
    58:58:boolean retainAll(java.util.Collection) -> retainAll
    58:58:boolean removeAll(java.util.Collection) -> removeAll
    58:58:boolean addAll(java.util.Collection) -> addAll
    58:58:boolean remove(java.lang.Object) -> remove
    58:58:boolean add(java.lang.Object) -> add
    58:58:java.util.Iterator iterator() -> iterator
    58:58:boolean contains(java.lang.Object) -> contains
    58:58:java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> access$100
com.google.common.collect.ConcurrentHashMultiset$1 -> com.google.common.collect.ConcurrentHashMultiset$1:
    java.util.Set val$delegate -> val$delegate
    com.google.common.collect.ConcurrentHashMultiset this$0 -> this$0
    462:462:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Set) -> <init>
    465:465:java.util.Set delegate() -> delegate
    470:470:boolean contains(java.lang.Object) -> contains
    475:475:boolean containsAll(java.util.Collection) -> containsAll
    480:480:boolean remove(java.lang.Object) -> remove
    485:485:boolean removeAll(java.util.Collection) -> removeAll
    462:462:java.util.Collection delegate() -> delegate
    462:462:java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$2 -> com.google.common.collect.ConcurrentHashMultiset$2:
    java.util.Iterator mapEntries -> mapEntries
    com.google.common.collect.ConcurrentHashMultiset this$0 -> this$0
    510:511:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    516:524:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
    510:510:java.lang.Object computeNext() -> computeNext
com.google.common.collect.ConcurrentHashMultiset$3 -> com.google.common.collect.ConcurrentHashMultiset$3:
    com.google.common.collect.Multiset$Entry last -> last
    java.util.Iterator val$readOnlyIterator -> val$readOnlyIterator
    com.google.common.collect.ConcurrentHashMultiset this$0 -> this$0
    528:528:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Iterator) -> <init>
    533:533:java.util.Iterator delegate() -> delegate
    538:539:com.google.common.collect.Multiset$Entry next() -> next
    544:547:void remove() -> remove
    528:528:java.lang.Object next() -> next
    528:528:java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> com.google.common.collect.ConcurrentHashMultiset$EntrySet:
    com.google.common.collect.ConcurrentHashMultiset this$0 -> this$0
    557:557:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    560:560:com.google.common.collect.ConcurrentHashMultiset multiset() -> multiset
    570:570:java.lang.Object[] toArray() -> toArray
    575:575:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    579:582:java.util.List snapshot() -> snapshot
    556:556:com.google.common.collect.Multiset multiset() -> multiset
    557:557:void <init>(com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset$1) -> <init>
com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder -> com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder:
    com.google.common.collect.Serialization$FieldSetter COUNT_MAP_FIELD_SETTER -> COUNT_MAP_FIELD_SETTER
    75:75:void <init>() -> <init>
    76:76:void <clinit>() -> <clinit>
com.google.common.collect.Constraint -> com.google.common.collect.Constraint:
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.Constraints -> com.google.common.collect.Constraints:
    38:38:void <init>() -> <init>
    54:54:java.util.Collection constrainedCollection(java.util.Collection,com.google.common.collect.Constraint) -> constrainedCollection
    97:97:java.util.Set constrainedSet(java.util.Set,com.google.common.collect.Constraint) -> constrainedSet
    141:141:java.util.SortedSet constrainedSortedSet(java.util.SortedSet,com.google.common.collect.Constraint) -> constrainedSortedSet
    200:200:java.util.List constrainedList(java.util.List,com.google.common.collect.Constraint) -> constrainedList
    283:283:java.util.ListIterator constrainedListIterator(java.util.ListIterator,com.google.common.collect.Constraint) -> constrainedListIterator
    316:323:java.util.Collection constrainedTypePreservingCollection(java.util.Collection,com.google.common.collect.Constraint) -> constrainedTypePreservingCollection
    334:338:java.util.Collection checkElements(java.util.Collection,com.google.common.collect.Constraint) -> checkElements
    37:37:java.util.Collection access$000(java.util.Collection,com.google.common.collect.Constraint) -> access$000
    37:37:java.util.ListIterator access$100(java.util.ListIterator,com.google.common.collect.Constraint) -> access$100
com.google.common.collect.Constraints$ConstrainedCollection -> com.google.common.collect.Constraints$ConstrainedCollection:
    java.util.Collection delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    62:65:void <init>(java.util.Collection,com.google.common.collect.Constraint) -> <init>
    69:69:java.util.Collection delegate() -> delegate
    74:75:boolean add(java.lang.Object) -> add
    80:80:boolean addAll(java.util.Collection) -> addAll
    58:58:java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedList -> com.google.common.collect.Constraints$ConstrainedList:
    java.util.List delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    211:214:void <init>(java.util.List,com.google.common.collect.Constraint) -> <init>
    218:218:java.util.List delegate() -> delegate
    223:224:boolean add(java.lang.Object) -> add
    229:231:void add(int,java.lang.Object) -> add
    235:235:boolean addAll(java.util.Collection) -> addAll
    240:240:boolean addAll(int,java.util.Collection) -> addAll
    245:245:java.util.ListIterator listIterator() -> listIterator
    250:250:java.util.ListIterator listIterator(int) -> listIterator
    255:256:java.lang.Object set(int,java.lang.Object) -> set
    261:261:java.util.List subList(int,int) -> subList
    206:206:java.util.Collection delegate() -> delegate
    206:206:java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedListIterator -> com.google.common.collect.Constraints$ConstrainedListIterator:
    java.util.ListIterator delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    291:294:void <init>(java.util.ListIterator,com.google.common.collect.Constraint) -> <init>
    298:298:java.util.ListIterator delegate() -> delegate
    303:305:void add(java.lang.Object) -> add
    309:311:void set(java.lang.Object) -> set
    287:287:java.util.Iterator delegate() -> delegate
    287:287:java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedRandomAccessList -> com.google.common.collect.Constraints$ConstrainedRandomAccessList:
    268:269:void <init>(java.util.List,com.google.common.collect.Constraint) -> <init>
com.google.common.collect.Constraints$ConstrainedSet -> com.google.common.collect.Constraints$ConstrainedSet:
    java.util.Set delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    105:108:void <init>(java.util.Set,com.google.common.collect.Constraint) -> <init>
    112:112:java.util.Set delegate() -> delegate
    117:118:boolean add(java.lang.Object) -> add
    123:123:boolean addAll(java.util.Collection) -> addAll
    101:101:java.util.Collection delegate() -> delegate
    101:101:java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedSortedSet -> com.google.common.collect.Constraints$ConstrainedSortedSet:
    java.util.SortedSet delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    149:152:void <init>(java.util.SortedSet,com.google.common.collect.Constraint) -> <init>
    156:156:java.util.SortedSet delegate() -> delegate
    161:161:java.util.SortedSet headSet(java.lang.Object) -> headSet
    166:166:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    171:171:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    176:177:boolean add(java.lang.Object) -> add
    182:182:boolean addAll(java.util.Collection) -> addAll
    145:145:java.util.Set delegate() -> delegate
    145:145:java.util.Collection delegate() -> delegate
    145:145:java.lang.Object delegate() -> delegate
com.google.common.collect.ConsumingQueueIterator -> com.google.common.collect.ConsumingQueueIterator:
    java.util.Queue queue -> queue
    32:36:void <init>(java.lang.Object[]) -> <init>
    38:40:void <init>(java.util.Queue) -> <init>
    44:44:java.lang.Object computeNext() -> computeNext
com.google.common.collect.ContiguousSet -> com.google.common.collect.ContiguousSet:
    com.google.common.collect.DiscreteDomain domain -> domain
    54:76:com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> create
    84:86:void <init>(com.google.common.collect.DiscreteDomain) -> <init>
    90:90:com.google.common.collect.ContiguousSet headSet(java.lang.Comparable) -> headSet
    99:99:com.google.common.collect.ContiguousSet headSet(java.lang.Comparable,boolean) -> headSet
    104:107:com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,java.lang.Comparable) -> subSet
    117:120:com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSet
    125:125:com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable) -> tailSet
    134:134:com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable,boolean) -> tailSet
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> headSetImpl
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSetImpl
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> tailSetImpl
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    183:183:java.lang.String toString() -> toString
    196:196:com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    39:39:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    39:39:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    39:39:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    39:39:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    39:39:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    39:39:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    39:39:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    39:39:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    39:39:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    39:39:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    39:39:java.util.SortedSet headSet(java.lang.Object) -> headSet
    39:39:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    39:39:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    39:39:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    39:39:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
com.google.common.collect.Count -> com.google.common.collect.Count:
    int value -> value
    32:34:void <init>(int) -> <init>
    37:37:int get() -> get
    41:43:int getAndAdd(int) -> getAndAdd
    47:47:int addAndGet(int) -> addAndGet
    51:52:void set(int) -> set
    55:57:int getAndSet(int) -> getAndSet
    62:62:int hashCode() -> hashCode
    67:67:boolean equals(java.lang.Object) -> equals
    72:72:java.lang.String toString() -> toString
com.google.common.collect.Cut -> com.google.common.collect.Cut:
    java.lang.Comparable endpoint -> endpoint
    long serialVersionUID -> serialVersionUID
    40:42:void <init>(java.lang.Comparable) -> <init>
    boolean isLessThan(java.lang.Comparable) -> isLessThan
    com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
    void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    67:67:com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> canonical
    73:84:int compareTo(com.google.common.collect.Cut) -> compareTo
    88:88:java.lang.Comparable endpoint() -> endpoint
    94:103:boolean equals(java.lang.Object) -> equals
    112:112:com.google.common.collect.Cut belowAll() -> belowAll
    208:208:com.google.common.collect.Cut aboveAll() -> aboveAll
    288:288:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> belowValue
    371:371:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> aboveValue
    36:36:int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$1 -> com.google.common.collect.Cut$1:
    int[] $SwitchMap$com$google$common$collect$BoundType -> $SwitchMap$com$google$common$collect$BoundType
    313:313:void <clinit>() -> <clinit>
com.google.common.collect.Cut$AboveAll -> com.google.common.collect.Cut$AboveAll:
    com.google.common.collect.Cut$AboveAll INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    215:216:void <init>() -> <init>
    220:220:java.lang.Comparable endpoint() -> endpoint
    225:225:boolean isLessThan(java.lang.Comparable) -> isLessThan
    230:230:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    235:235:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    241:241:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    247:247:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
    252:252:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    257:258:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    262:262:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    267:267:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    272:272:int compareTo(com.google.common.collect.Cut) -> compareTo
    277:277:java.lang.String toString() -> toString
    281:281:java.lang.Object readResolve() -> readResolve
    211:211:int compareTo(java.lang.Object) -> compareTo
    211:211:com.google.common.collect.Cut$AboveAll access$100() -> access$100
    212:212:void <clinit>() -> <clinit>
com.google.common.collect.Cut$AboveValue -> com.google.common.collect.Cut$AboveValue:
    long serialVersionUID -> serialVersionUID
    376:377:void <init>(java.lang.Comparable) -> <init>
    381:381:boolean isLessThan(java.lang.Comparable) -> isLessThan
    386:386:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    391:391:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    396:403:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    409:416:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
    422:423:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    427:428:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    432:432:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    437:437:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    442:443:com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> canonical
    448:448:int hashCode() -> hashCode
    453:453:java.lang.String toString() -> toString
    374:374:int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$BelowAll -> com.google.common.collect.Cut$BelowAll:
    com.google.common.collect.Cut$BelowAll INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    121:122:void <init>() -> <init>
    126:126:java.lang.Comparable endpoint() -> endpoint
    131:131:boolean isLessThan(java.lang.Comparable) -> isLessThan
    136:136:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    141:141:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    147:147:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    153:153:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
    158:159:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    163:163:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    168:168:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    173:173:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    179:181:com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> canonical
    187:187:int compareTo(com.google.common.collect.Cut) -> compareTo
    192:192:java.lang.String toString() -> toString
    196:196:java.lang.Object readResolve() -> readResolve
    117:117:int compareTo(java.lang.Object) -> compareTo
    117:117:com.google.common.collect.Cut$BelowAll access$000() -> access$000
    118:118:void <clinit>() -> <clinit>
com.google.common.collect.Cut$BelowValue -> com.google.common.collect.Cut$BelowValue:
    long serialVersionUID -> serialVersionUID
    293:294:void <init>(java.lang.Comparable) -> <init>
    298:298:boolean isLessThan(java.lang.Comparable) -> isLessThan
    303:303:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    308:308:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    313:320:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    326:333:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
    339:340:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    344:345:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    349:349:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    354:354:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    359:359:int hashCode() -> hashCode
    364:364:java.lang.String toString() -> toString
    291:291:int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.DenseImmutableTable -> com.google.common.collect.DenseImmutableTable:
    com.google.common.collect.ImmutableMap rowKeyToIndex -> rowKeyToIndex
    com.google.common.collect.ImmutableMap columnKeyToIndex -> columnKeyToIndex
    com.google.common.collect.ImmutableMap rowMap -> rowMap
    com.google.common.collect.ImmutableMap columnMap -> columnMap
    int[] rowCounts -> rowCounts
    int[] columnCounts -> columnCounts
    java.lang.Object[][] values -> values
    int[] iterationOrderRow -> iterationOrderRow
    int[] iterationOrderColumn -> iterationOrderColumn
    48:76:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet) -> <init>
    232:232:com.google.common.collect.ImmutableMap columnMap() -> columnMap
    237:237:com.google.common.collect.ImmutableMap rowMap() -> rowMap
    242:244:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    249:249:int size() -> size
    254:259:com.google.common.collect.Table$Cell getCell(int) -> getCell
    264:264:java.lang.Object getValue(int) -> getValue
    32:32:java.util.Map columnMap() -> columnMap
    32:32:java.util.Map rowMap() -> rowMap
    34:34:int[] access$200(com.google.common.collect.DenseImmutableTable) -> access$200
    34:34:com.google.common.collect.ImmutableMap access$300(com.google.common.collect.DenseImmutableTable) -> access$300
    34:34:java.lang.Object[][] access$400(com.google.common.collect.DenseImmutableTable) -> access$400
    34:34:int[] access$500(com.google.common.collect.DenseImmutableTable) -> access$500
    34:34:com.google.common.collect.ImmutableMap access$600(com.google.common.collect.DenseImmutableTable) -> access$600
com.google.common.collect.DenseImmutableTable$1 -> com.google.common.collect.DenseImmutableTable$1:
com.google.common.collect.DenseImmutableTable$Column -> com.google.common.collect.DenseImmutableTable$Column:
    int columnIndex -> columnIndex
    com.google.common.collect.DenseImmutableTable this$0 -> this$0
    165:168:void <init>(com.google.common.collect.DenseImmutableTable,int) -> <init>
    172:172:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
    177:177:java.lang.Object getValue(int) -> getValue
    182:182:boolean isPartialView() -> isPartialView
com.google.common.collect.DenseImmutableTable$ColumnMap -> com.google.common.collect.DenseImmutableTable$ColumnMap:
    com.google.common.collect.DenseImmutableTable this$0 -> this$0
    210:212:void <init>(com.google.common.collect.DenseImmutableTable) -> <init>
    216:216:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
    221:221:java.util.Map getValue(int) -> getValue
    226:226:boolean isPartialView() -> isPartialView
    208:208:java.lang.Object getValue(int) -> getValue
    209:209:void <init>(com.google.common.collect.DenseImmutableTable,com.google.common.collect.DenseImmutableTable$1) -> <init>
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap -> com.google.common.collect.DenseImmutableTable$ImmutableArrayMap:
    int size -> size
    84:86:void <init>(int) -> <init>
    com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
    92:92:boolean isFull() -> isFull
    96:96:java.lang.Object getKey(int) -> getKey
    java.lang.Object getValue(int) -> getValue
    104:104:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    109:109:int size() -> size
    114:115:java.lang.Object get(java.lang.Object) -> get
    120:120:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 -> com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1:
    int index -> index
    int maxIndex -> maxIndex
    com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0 -> this$0
    120:122:void <init>(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap) -> <init>
    126:132:java.util.Map$Entry computeNext() -> computeNext
    120:120:java.lang.Object computeNext() -> computeNext
com.google.common.collect.DenseImmutableTable$Row -> com.google.common.collect.DenseImmutableTable$Row:
    int rowIndex -> rowIndex
    com.google.common.collect.DenseImmutableTable this$0 -> this$0
    141:144:void <init>(com.google.common.collect.DenseImmutableTable,int) -> <init>
    148:148:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
    153:153:java.lang.Object getValue(int) -> getValue
    158:158:boolean isPartialView() -> isPartialView
com.google.common.collect.DenseImmutableTable$RowMap -> com.google.common.collect.DenseImmutableTable$RowMap:
    com.google.common.collect.DenseImmutableTable this$0 -> this$0
    188:190:void <init>(com.google.common.collect.DenseImmutableTable) -> <init>
    194:194:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
    199:199:java.util.Map getValue(int) -> getValue
    204:204:boolean isPartialView() -> isPartialView
    186:186:java.lang.Object getValue(int) -> getValue
    187:187:void <init>(com.google.common.collect.DenseImmutableTable,com.google.common.collect.DenseImmutableTable$1) -> <init>
com.google.common.collect.DescendingImmutableSortedMultiset -> com.google.common.collect.DescendingImmutableSortedMultiset:
    com.google.common.collect.ImmutableSortedMultiset forward -> forward
    28:30:void <init>(com.google.common.collect.ImmutableSortedMultiset) -> <init>
    34:34:int count(java.lang.Object) -> count
    39:39:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    44:44:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    49:49:int size() -> size
    54:54:com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    59:59:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    68:68:com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    73:73:com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    78:78:com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    83:83:boolean isPartialView() -> isPartialView
    24:24:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    24:24:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    24:24:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    24:24:java.util.NavigableSet elementSet() -> elementSet
    24:24:java.util.SortedSet elementSet() -> elementSet
    24:24:java.util.Set elementSet() -> elementSet
com.google.common.collect.DescendingImmutableSortedSet -> com.google.common.collect.DescendingImmutableSortedSet:
    com.google.common.collect.ImmutableSortedSet forward -> forward
    32:34:void <init>(com.google.common.collect.ImmutableSortedSet) -> <init>
    38:38:boolean contains(java.lang.Object) -> contains
    43:43:int size() -> size
    48:48:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    53:53:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    59:59:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    64:64:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    70:70:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    76:76:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    82:82:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    87:87:java.lang.Object lower(java.lang.Object) -> lower
    92:92:java.lang.Object floor(java.lang.Object) -> floor
    97:97:java.lang.Object ceiling(java.lang.Object) -> ceiling
    102:102:java.lang.Object higher(java.lang.Object) -> higher
    107:111:int indexOf(java.lang.Object) -> indexOf
    117:117:boolean isPartialView() -> isPartialView
    28:28:java.util.Iterator descendingIterator() -> descendingIterator
    28:28:java.util.NavigableSet descendingSet() -> descendingSet
    28:28:java.util.Iterator iterator() -> iterator
com.google.common.collect.DescendingMultiset -> com.google.common.collect.DescendingMultiset:
    java.util.Comparator comparator -> comparator
    java.util.NavigableSet elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    34:34:void <init>() -> <init>
    com.google.common.collect.SortedMultiset forwardMultiset() -> forwardMultiset
    41:45:java.util.Comparator comparator() -> comparator
    52:56:java.util.NavigableSet elementSet() -> elementSet
    61:61:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    66:66:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    71:71:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    77:77:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    84:84:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    89:89:com.google.common.collect.Multiset delegate() -> delegate
    94:94:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    99:99:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    104:104:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    java.util.Iterator entryIterator() -> entryIterator
    113:114:java.util.Set entrySet() -> entrySet
    135:135:java.util.Set createEntrySet() -> createEntrySet
    140:140:java.util.Iterator iterator() -> iterator
    145:145:java.lang.Object[] toArray() -> toArray
    150:150:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    155:155:java.lang.String toString() -> toString
    33:33:java.util.Set elementSet() -> elementSet
    33:33:java.util.Collection delegate() -> delegate
    33:33:java.lang.Object delegate() -> delegate
    33:33:java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.DescendingMultiset$1EntrySetImpl -> com.google.common.collect.DescendingMultiset$1EntrySetImpl:
    com.google.common.collect.DescendingMultiset this$0 -> this$0
    119:119:void <init>(com.google.common.collect.DescendingMultiset) -> <init>
    122:122:com.google.common.collect.Multiset multiset() -> multiset
    127:127:java.util.Iterator iterator() -> iterator
    132:132:int size() -> size
com.google.common.collect.DiscreteDomain -> com.google.common.collect.DiscreteDomain:
    54:54:com.google.common.collect.DiscreteDomain integers() -> integers
    105:105:com.google.common.collect.DiscreteDomain longs() -> longs
    163:163:com.google.common.collect.DiscreteDomain bigIntegers() -> bigIntegers
    205:205:void <init>() -> <init>
    java.lang.Comparable next(java.lang.Comparable) -> next
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    258:258:java.lang.Comparable minValue() -> minValue
    273:273:java.lang.Comparable maxValue() -> maxValue
com.google.common.collect.DiscreteDomain$BigIntegerDomain -> com.google.common.collect.DiscreteDomain$BigIntegerDomain:
    com.google.common.collect.DiscreteDomain$BigIntegerDomain INSTANCE -> INSTANCE
    java.math.BigInteger MIN_LONG -> MIN_LONG
    java.math.BigInteger MAX_LONG -> MAX_LONG
    long serialVersionUID -> serialVersionUID
    166:166:void <init>() -> <init>
    175:175:java.math.BigInteger next(java.math.BigInteger) -> next
    180:180:java.math.BigInteger previous(java.math.BigInteger) -> previous
    185:185:long distance(java.math.BigInteger,java.math.BigInteger) -> distance
    193:193:java.lang.Object readResolve() -> readResolve
    198:198:java.lang.String toString() -> toString
    166:166:long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    166:166:java.lang.Comparable previous(java.lang.Comparable) -> previous
    166:166:java.lang.Comparable next(java.lang.Comparable) -> next
    166:166:com.google.common.collect.DiscreteDomain$BigIntegerDomain access$200() -> access$200
    168:171:void <clinit>() -> <clinit>
com.google.common.collect.DiscreteDomain$IntegerDomain -> com.google.common.collect.DiscreteDomain$IntegerDomain:
    com.google.common.collect.DiscreteDomain$IntegerDomain INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    57:57:void <init>() -> <init>
    62:63:java.lang.Integer next(java.lang.Integer) -> next
    68:69:java.lang.Integer previous(java.lang.Integer) -> previous
    74:74:long distance(java.lang.Integer,java.lang.Integer) -> distance
    79:79:java.lang.Integer minValue() -> minValue
    84:84:java.lang.Integer maxValue() -> maxValue
    88:88:java.lang.Object readResolve() -> readResolve
    93:93:java.lang.String toString() -> toString
    57:57:java.lang.Comparable maxValue() -> maxValue
    57:57:java.lang.Comparable minValue() -> minValue
    57:57:long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    57:57:java.lang.Comparable previous(java.lang.Comparable) -> previous
    57:57:java.lang.Comparable next(java.lang.Comparable) -> next
    57:57:com.google.common.collect.DiscreteDomain$IntegerDomain access$000() -> access$000
    58:58:void <clinit>() -> <clinit>
com.google.common.collect.DiscreteDomain$LongDomain -> com.google.common.collect.DiscreteDomain$LongDomain:
    com.google.common.collect.DiscreteDomain$LongDomain INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    108:108:void <init>() -> <init>
    113:114:java.lang.Long next(java.lang.Long) -> next
    119:120:java.lang.Long previous(java.lang.Long) -> previous
    125:132:long distance(java.lang.Long,java.lang.Long) -> distance
    137:137:java.lang.Long minValue() -> minValue
    142:142:java.lang.Long maxValue() -> maxValue
    146:146:java.lang.Object readResolve() -> readResolve
    151:151:java.lang.String toString() -> toString
    108:108:java.lang.Comparable maxValue() -> maxValue
    108:108:java.lang.Comparable minValue() -> minValue
    108:108:long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    108:108:java.lang.Comparable previous(java.lang.Comparable) -> previous
    108:108:java.lang.Comparable next(java.lang.Comparable) -> next
    108:108:com.google.common.collect.DiscreteDomain$LongDomain access$100() -> access$100
    109:109:void <clinit>() -> <clinit>
com.google.common.collect.EmptyContiguousSet -> com.google.common.collect.EmptyContiguousSet:
    34:35:void <init>(com.google.common.collect.DiscreteDomain) -> <init>
    39:39:java.lang.Comparable first() -> first
    44:44:java.lang.Comparable last() -> last
    49:49:int size() -> size
    54:54:com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    59:59:com.google.common.collect.Range range() -> range
    64:64:com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    69:69:com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> headSetImpl
    75:75:com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSetImpl
    80:80:com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> tailSetImpl
    85:85:boolean contains(java.lang.Object) -> contains
    91:91:int indexOf(java.lang.Object) -> indexOf
    96:96:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    102:102:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    107:107:boolean isPartialView() -> isPartialView
    112:112:boolean isEmpty() -> isEmpty
    117:117:com.google.common.collect.ImmutableList asList() -> asList
    122:122:java.lang.String toString() -> toString
    127:131:boolean equals(java.lang.Object) -> equals
    137:137:boolean isHashCodeFast() -> isHashCodeFast
    142:142:int hashCode() -> hashCode
    163:163:java.lang.Object writeReplace() -> writeReplace
    168:168:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    30:30:java.lang.Object last() -> last
    30:30:java.lang.Object first() -> first
    30:30:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    30:30:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    30:30:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    30:30:java.util.Iterator descendingIterator() -> descendingIterator
    30:30:java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyContiguousSet$1 -> com.google.common.collect.EmptyContiguousSet$1:
com.google.common.collect.EmptyContiguousSet$SerializedForm -> com.google.common.collect.EmptyContiguousSet$SerializedForm:
    com.google.common.collect.DiscreteDomain domain -> domain
    long serialVersionUID -> serialVersionUID
    149:151:void <init>(com.google.common.collect.DiscreteDomain) -> <init>
    154:154:java.lang.Object readResolve() -> readResolve
    146:146:void <init>(com.google.common.collect.DiscreteDomain,com.google.common.collect.EmptyContiguousSet$1) -> <init>
com.google.common.collect.EmptyImmutableListMultimap -> com.google.common.collect.EmptyImmutableListMultimap:
    com.google.common.collect.EmptyImmutableListMultimap INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    31:32:void <init>() -> <init>
    35:35:java.lang.Object readResolve() -> readResolve
    28:28:void <clinit>() -> <clinit>
com.google.common.collect.EmptyImmutableSetMultimap -> com.google.common.collect.EmptyImmutableSetMultimap:
    com.google.common.collect.EmptyImmutableSetMultimap INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    31:32:void <init>() -> <init>
    35:35:java.lang.Object readResolve() -> readResolve
    28:28:void <clinit>() -> <clinit>
com.google.common.collect.EnumBiMap -> com.google.common.collect.EnumBiMap:
    java.lang.Class keyType -> keyType
    java.lang.Class valueType -> valueType
    long serialVersionUID -> serialVersionUID
    57:57:com.google.common.collect.EnumBiMap create(java.lang.Class,java.lang.Class) -> create
    71:73:com.google.common.collect.EnumBiMap create(java.util.Map) -> create
    77:82:void <init>(java.lang.Class,java.lang.Class) -> <init>
    85:92:java.lang.Class inferKeyType(java.util.Map) -> inferKeyType
    100:104:java.lang.Class inferValueType(java.util.Map) -> inferValueType
    113:113:java.lang.Class keyType() -> keyType
    118:118:java.lang.Class valueType() -> valueType
    123:123:java.lang.Enum checkKey(java.lang.Enum) -> checkKey
    128:128:java.lang.Enum checkValue(java.lang.Enum) -> checkValue
    137:141:void writeObject(java.io.ObjectOutputStream) -> writeObject
    146:153:void readObject(java.io.ObjectInputStream) -> readObject
    43:43:java.util.Set entrySet() -> entrySet
    43:43:java.util.Set values() -> values
    43:43:java.util.Set keySet() -> keySet
    43:43:com.google.common.collect.BiMap inverse() -> inverse
    43:43:void clear() -> clear
    43:43:void putAll(java.util.Map) -> putAll
    43:43:boolean containsValue(java.lang.Object) -> containsValue
    43:43:java.lang.Object checkValue(java.lang.Object) -> checkValue
    43:43:java.lang.Object checkKey(java.lang.Object) -> checkKey
com.google.common.collect.EnumHashBiMap -> com.google.common.collect.EnumHashBiMap:
    java.lang.Class keyType -> keyType
    long serialVersionUID -> serialVersionUID
    56:56:com.google.common.collect.EnumHashBiMap create(java.lang.Class) -> create
    70:72:com.google.common.collect.EnumHashBiMap create(java.util.Map) -> create
    76:80:void <init>(java.lang.Class) -> <init>
    86:86:java.lang.Enum checkKey(java.lang.Enum) -> checkKey
    91:91:java.lang.Object put(java.lang.Enum,java.lang.Object) -> put
    96:96:java.lang.Object forcePut(java.lang.Enum,java.lang.Object) -> forcePut
    101:101:java.lang.Class keyType() -> keyType
    110:113:void writeObject(java.io.ObjectOutputStream) -> writeObject
    118:124:void readObject(java.io.ObjectInputStream) -> readObject
    46:46:java.util.Set entrySet() -> entrySet
    46:46:java.util.Set values() -> values
    46:46:java.util.Set keySet() -> keySet
    46:46:com.google.common.collect.BiMap inverse() -> inverse
    46:46:void clear() -> clear
    46:46:void putAll(java.util.Map) -> putAll
    46:46:java.lang.Object remove(java.lang.Object) -> remove
    46:46:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    46:46:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    46:46:boolean containsValue(java.lang.Object) -> containsValue
    46:46:java.lang.Object checkKey(java.lang.Object) -> checkKey
com.google.common.collect.EnumMultiset -> com.google.common.collect.EnumMultiset:
    java.lang.Class type -> type
    long serialVersionUID -> serialVersionUID
    42:42:com.google.common.collect.EnumMultiset create(java.lang.Class) -> create
    55:59:com.google.common.collect.EnumMultiset create(java.lang.Iterable) -> create
    70:72:com.google.common.collect.EnumMultiset create(java.lang.Iterable,java.lang.Class) -> create
    79:81:void <init>(java.lang.Class) -> <init>
    85:88:void writeObject(java.io.ObjectOutputStream) -> writeObject
    97:103:void readObject(java.io.ObjectInputStream) -> readObject
    38:38:int remove(java.lang.Object,int) -> remove
    38:38:int count(java.lang.Object) -> count
    38:38:java.util.Iterator iterator() -> iterator
    38:38:int size() -> size
    38:38:void clear() -> clear
    38:38:java.util.Set entrySet() -> entrySet
    38:38:java.lang.String toString() -> toString
    38:38:int hashCode() -> hashCode
    38:38:boolean equals(java.lang.Object) -> equals
    38:38:java.util.Set elementSet() -> elementSet
    38:38:boolean retainAll(java.util.Collection) -> retainAll
    38:38:boolean removeAll(java.util.Collection) -> removeAll
    38:38:boolean addAll(java.util.Collection) -> addAll
    38:38:boolean remove(java.lang.Object) -> remove
    38:38:boolean contains(java.lang.Object) -> contains
    38:38:boolean isEmpty() -> isEmpty
com.google.common.collect.EvictingQueue -> com.google.common.collect.EvictingQueue:
    java.util.Queue delegate -> delegate
    int maxSize -> maxSize
    long serialVersionUID -> serialVersionUID
    52:56:void <init>(int) -> <init>
    65:65:com.google.common.collect.EvictingQueue create(int) -> create
    75:75:int remainingCapacity() -> remainingCapacity
    80:80:java.util.Queue delegate() -> delegate
    91:91:boolean offer(java.lang.Object) -> offer
    102:110:boolean add(java.lang.Object) -> add
    115:115:boolean addAll(java.util.Collection) -> addAll
    120:120:boolean contains(java.lang.Object) -> contains
    125:125:boolean remove(java.lang.Object) -> remove
    44:44:java.util.Collection delegate() -> delegate
    44:44:java.lang.Object delegate() -> delegate
com.google.common.collect.ExplicitOrdering -> com.google.common.collect.ExplicitOrdering:
    com.google.common.collect.ImmutableMap rankMap -> rankMap
    long serialVersionUID -> serialVersionUID
    32:33:void <init>(java.util.List) -> <init>
    35:37:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    41:41:int compare(java.lang.Object,java.lang.Object) -> compare
    45:49:int rank(java.lang.Object) -> rank
    54:58:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    68:68:java.lang.String toString() -> toString
com.google.common.collect.FilteredEntryMultimap -> com.google.common.collect.FilteredEntryMultimap:
    com.google.common.collect.Multimap unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    51:54:void <init>(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> <init>
    58:58:com.google.common.collect.Multimap unfiltered() -> unfiltered
    63:63:com.google.common.base.Predicate entryPredicate() -> entryPredicate
    68:68:int size() -> size
    72:72:boolean satisfies(java.lang.Object,java.lang.Object) -> satisfies
    90:93:java.util.Collection filterCollection(java.util.Collection,com.google.common.base.Predicate) -> filterCollection
    99:99:boolean containsKey(java.lang.Object) -> containsKey
    104:104:java.util.Collection removeAll(java.lang.Object) -> removeAll
    109:109:java.util.Collection unmodifiableEmptyCollection() -> unmodifiableEmptyCollection
    116:117:void clear() -> clear
    121:121:java.util.Collection get(java.lang.Object) -> get
    126:126:java.util.Collection createEntries() -> createEntries
    131:131:java.util.Collection createValues() -> createValues
    136:136:java.util.Iterator entryIterator() -> entryIterator
    141:141:java.util.Map createAsMap() -> createAsMap
    146:146:java.util.Set keySet() -> keySet
    150:165:boolean removeEntriesIf(com.google.common.base.Predicate) -> removeEntriesIf
    341:341:com.google.common.collect.Multiset createKeys() -> createKeys
    47:47:boolean access$000(com.google.common.collect.FilteredEntryMultimap,java.lang.Object,java.lang.Object) -> access$000
com.google.common.collect.FilteredEntryMultimap$AsMap -> com.google.common.collect.FilteredEntryMultimap$AsMap:
    com.google.common.collect.FilteredEntryMultimap this$0 -> this$0
    169:169:void <init>(com.google.common.collect.FilteredEntryMultimap) -> <init>
    172:172:boolean containsKey(java.lang.Object) -> containsKey
    177:178:void clear() -> clear
    182:189:java.util.Collection get(java.lang.Object) -> get
    194:214:java.util.Collection remove(java.lang.Object) -> remove
    241:241:java.util.Set createKeySet() -> createKeySet
    290:290:java.util.Set createEntrySet() -> createEntrySet
    335:335:java.util.Collection createValues() -> createValues
    168:168:java.lang.Object remove(java.lang.Object) -> remove
    168:168:java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl -> com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> this$1
    247:247:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap) -> <init>
    250:250:java.util.Map map() -> map
    255:255:java.util.Iterator iterator() -> iterator
    277:277:boolean removeAll(java.util.Collection) -> removeAll
    282:282:boolean retainAll(java.util.Collection) -> retainAll
    287:287:int size() -> size
com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl$1 -> com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl$1:
    java.util.Iterator backingIterator -> backingIterator
    com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl this$2 -> this$2
    255:256:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl) -> <init>
    261:270:java.util.Map$Entry computeNext() -> computeNext
    255:255:java.lang.Object computeNext() -> computeNext
com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl -> com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> this$1
    222:224:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap) -> <init>
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:boolean remove(java.lang.Object) -> remove
com.google.common.collect.FilteredEntryMultimap$AsMap$1ValuesImpl -> com.google.common.collect.FilteredEntryMultimap$AsMap$1ValuesImpl:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> this$1
    297:299:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap) -> <init>
    303:322:boolean remove(java.lang.Object) -> remove
    327:327:boolean removeAll(java.util.Collection) -> removeAll
    332:332:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys -> com.google.common.collect.FilteredEntryMultimap$Keys:
    com.google.common.collect.FilteredEntryMultimap this$0 -> this$0
    346:348:void <init>(com.google.common.collect.FilteredEntryMultimap) -> <init>
    352:373:int remove(java.lang.Object,int) -> remove
    378:378:java.util.Set entrySet() -> entrySet
com.google.common.collect.FilteredEntryMultimap$Keys$1 -> com.google.common.collect.FilteredEntryMultimap$Keys$1:
    com.google.common.collect.FilteredEntryMultimap$Keys this$1 -> this$1
    378:378:void <init>(com.google.common.collect.FilteredEntryMultimap$Keys) -> <init>
    382:382:com.google.common.collect.Multiset multiset() -> multiset
    387:387:java.util.Iterator iterator() -> iterator
    392:392:int size() -> size
    396:396:boolean removeEntriesIf(com.google.common.base.Predicate) -> removeEntriesIf
    409:409:boolean removeAll(java.util.Collection) -> removeAll
    414:414:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys$1$1 -> com.google.common.collect.FilteredEntryMultimap$Keys$1$1:
    com.google.common.base.Predicate val$predicate -> val$predicate
    com.google.common.collect.FilteredEntryMultimap$Keys$1 this$2 -> this$2
    398:398:void <init>(com.google.common.collect.FilteredEntryMultimap$Keys$1,com.google.common.base.Predicate) -> <init>
    401:401:boolean apply(java.util.Map$Entry) -> apply
    398:398:boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredEntryMultimap$ValuePredicate -> com.google.common.collect.FilteredEntryMultimap$ValuePredicate:
    java.lang.Object key -> key
    com.google.common.collect.FilteredEntryMultimap this$0 -> this$0
    78:80:void <init>(com.google.common.collect.FilteredEntryMultimap,java.lang.Object) -> <init>
    84:84:boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredEntrySetMultimap -> com.google.common.collect.FilteredEntrySetMultimap:
    35:36:void <init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> <init>
    40:40:com.google.common.collect.SetMultimap unfiltered() -> unfiltered
    45:45:java.util.Set get(java.lang.Object) -> get
    50:50:java.util.Set removeAll(java.lang.Object) -> removeAll
    55:55:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    60:60:java.util.Set createEntries() -> createEntries
    65:65:java.util.Set entries() -> entries
    30:30:java.util.Collection createEntries() -> createEntries
    30:30:java.util.Collection get(java.lang.Object) -> get
    30:30:java.util.Collection removeAll(java.lang.Object) -> removeAll
    30:30:com.google.common.collect.Multimap unfiltered() -> unfiltered
    30:30:java.util.Collection entries() -> entries
    30:30:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.FilteredKeyListMultimap -> com.google.common.collect.FilteredKeyListMultimap:
    35:36:void <init>(com.google.common.collect.ListMultimap,com.google.common.base.Predicate) -> <init>
    40:40:com.google.common.collect.ListMultimap unfiltered() -> unfiltered
    45:45:java.util.List get(java.lang.Object) -> get
    50:50:java.util.List removeAll(java.lang.Object) -> removeAll
    55:55:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    31:31:java.util.Collection get(java.lang.Object) -> get
    31:31:java.util.Collection removeAll(java.lang.Object) -> removeAll
    31:31:com.google.common.collect.Multimap unfiltered() -> unfiltered
    31:31:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.FilteredKeyMultimap -> com.google.common.collect.FilteredKeyMultimap:
    com.google.common.collect.Multimap unfiltered -> unfiltered
    com.google.common.base.Predicate keyPredicate -> keyPredicate
    44:47:void <init>(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> <init>
    51:51:com.google.common.collect.Multimap unfiltered() -> unfiltered
    56:56:com.google.common.base.Predicate entryPredicate() -> entryPredicate
    61:65:int size() -> size
    70:75:boolean containsKey(java.lang.Object) -> containsKey
    80:80:java.util.Collection removeAll(java.lang.Object) -> removeAll
    84:87:java.util.Collection unmodifiableEmptyCollection() -> unmodifiableEmptyCollection
    93:94:void clear() -> clear
    98:98:java.util.Set createKeySet() -> createKeySet
    103:108:java.util.Collection get(java.lang.Object) -> get
    176:176:java.util.Iterator entryIterator() -> entryIterator
    181:181:java.util.Collection createEntries() -> createEntries
    208:208:java.util.Collection createValues() -> createValues
    213:213:java.util.Map createAsMap() -> createAsMap
    218:218:com.google.common.collect.Multiset createKeys() -> createKeys
com.google.common.collect.FilteredKeyMultimap$AddRejectingList -> com.google.common.collect.FilteredKeyMultimap$AddRejectingList:
    java.lang.Object key -> key
    139:141:void <init>(java.lang.Object) -> <init>
    145:146:boolean add(java.lang.Object) -> add
    151:152:boolean addAll(java.util.Collection) -> addAll
    157:158:void add(int,java.lang.Object) -> add
    163:165:boolean addAll(int,java.util.Collection) -> addAll
    170:170:java.util.List delegate() -> delegate
    136:136:java.util.Collection delegate() -> delegate
    136:136:java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$AddRejectingSet -> com.google.common.collect.FilteredKeyMultimap$AddRejectingSet:
    java.lang.Object key -> key
    115:117:void <init>(java.lang.Object) -> <init>
    121:121:boolean add(java.lang.Object) -> add
    126:127:boolean addAll(java.util.Collection) -> addAll
    132:132:java.util.Set delegate() -> delegate
    112:112:java.util.Collection delegate() -> delegate
    112:112:java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$Entries -> com.google.common.collect.FilteredKeyMultimap$Entries:
    com.google.common.collect.FilteredKeyMultimap this$0 -> this$0
    185:185:void <init>(com.google.common.collect.FilteredKeyMultimap) -> <init>
    188:188:java.util.Collection delegate() -> delegate
    194:202:boolean remove(java.lang.Object) -> remove
    184:184:java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeySetMultimap -> com.google.common.collect.FilteredKeySetMultimap:
    37:38:void <init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> <init>
    42:42:com.google.common.collect.SetMultimap unfiltered() -> unfiltered
    47:47:java.util.Set get(java.lang.Object) -> get
    52:52:java.util.Set removeAll(java.lang.Object) -> removeAll
    57:57:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    62:62:java.util.Set entries() -> entries
    67:67:java.util.Set createEntries() -> createEntries
    32:32:java.util.Collection createEntries() -> createEntries
    32:32:java.util.Collection get(java.lang.Object) -> get
    32:32:java.util.Collection removeAll(java.lang.Object) -> removeAll
    32:32:com.google.common.collect.Multimap unfiltered() -> unfiltered
    32:32:java.util.Collection entries() -> entries
    32:32:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.FilteredKeySetMultimap$EntrySet -> com.google.common.collect.FilteredKeySetMultimap$EntrySet:
    com.google.common.collect.FilteredKeySetMultimap this$0 -> this$0
    70:70:void <init>(com.google.common.collect.FilteredKeySetMultimap) -> <init>
    73:73:int hashCode() -> hashCode
    78:78:boolean equals(java.lang.Object) -> equals
com.google.common.collect.FilteredMultimap -> com.google.common.collect.FilteredMultimap:
    com.google.common.collect.Multimap unfiltered() -> unfiltered
    com.google.common.base.Predicate entryPredicate() -> entryPredicate
com.google.common.collect.FilteredMultimapValues -> com.google.common.collect.FilteredMultimapValues:
    com.google.common.collect.FilteredMultimap multimap -> multimap
    42:44:void <init>(com.google.common.collect.FilteredMultimap) -> <init>
    48:48:java.util.Iterator iterator() -> iterator
    53:53:boolean contains(java.lang.Object) -> contains
    58:58:int size() -> size
    63:72:boolean remove(java.lang.Object) -> remove
    77:77:boolean removeAll(java.util.Collection) -> removeAll
    86:86:boolean retainAll(java.util.Collection) -> retainAll
    96:97:void clear() -> clear
com.google.common.collect.FilteredSetMultimap -> com.google.common.collect.FilteredSetMultimap:
    com.google.common.collect.SetMultimap unfiltered() -> unfiltered
com.google.common.collect.FluentIterable -> com.google.common.collect.FluentIterable:
    java.lang.Iterable iterable -> iterable
    117:119:void <init>() -> <init>
    121:123:void <init>(java.lang.Iterable) -> <init>
    134:134:com.google.common.collect.FluentIterable from(java.lang.Iterable) -> from
    155:155:com.google.common.collect.FluentIterable from(com.google.common.collect.FluentIterable) -> from
    169:169:com.google.common.collect.FluentIterable of(java.lang.Object[]) -> of
    182:182:java.lang.String toString() -> toString
    192:192:int size() -> size
    203:203:boolean contains(java.lang.Object) -> contains
    226:226:com.google.common.collect.FluentIterable cycle() -> cycle
    243:243:com.google.common.collect.FluentIterable append(java.lang.Iterable) -> append
    257:257:com.google.common.collect.FluentIterable append(java.lang.Object[]) -> append
    268:268:com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate) -> filter
    289:289:com.google.common.collect.FluentIterable filter(java.lang.Class) -> filter
    299:299:boolean anyMatch(com.google.common.base.Predicate) -> anyMatch
    310:310:boolean allMatch(com.google.common.base.Predicate) -> allMatch
    324:324:com.google.common.base.Optional firstMatch(com.google.common.base.Predicate) -> firstMatch
    339:339:com.google.common.collect.FluentIterable transform(com.google.common.base.Function) -> transform
    359:359:com.google.common.collect.FluentIterable transformAndConcat(com.google.common.base.Function) -> transformAndConcat
    375:376:com.google.common.base.Optional first() -> first
    393:420:com.google.common.base.Optional last() -> last
    444:444:com.google.common.collect.FluentIterable skip(int) -> skip
    461:461:com.google.common.collect.FluentIterable limit(int) -> limit
    471:471:boolean isEmpty() -> isEmpty
    484:484:com.google.common.collect.ImmutableList toList() -> toList
    501:501:com.google.common.collect.ImmutableList toSortedList(java.util.Comparator) -> toSortedList
    514:514:com.google.common.collect.ImmutableSet toSet() -> toSet
    532:532:com.google.common.collect.ImmutableSortedSet toSortedSet(java.util.Comparator) -> toSortedSet
    544:544:com.google.common.collect.ImmutableMultiset toMultiset() -> toMultiset
    566:566:com.google.common.collect.ImmutableMap toMap(com.google.common.base.Function) -> toMap
    594:594:com.google.common.collect.ImmutableListMultimap index(com.google.common.base.Function) -> index
    629:629:com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function) -> uniqueIndex
    647:647:java.lang.Object[] toArray(java.lang.Class) -> toArray
    662:670:java.util.Collection copyInto(java.util.Collection) -> copyInto
    686:686:java.lang.String join(com.google.common.base.Joiner) -> join
    704:704:java.lang.Object get(int) -> get
com.google.common.collect.FluentIterable$1 -> com.google.common.collect.FluentIterable$1:
    java.lang.Iterable val$iterable -> val$iterable
    136:136:void <init>(java.lang.Iterable,java.lang.Iterable) -> <init>
    139:139:java.util.Iterator iterator() -> iterator
com.google.common.collect.FluentIterable$FromIterableFunction -> com.google.common.collect.FluentIterable$FromIterableFunction:
    710:710:void <init>() -> <init>
    713:713:com.google.common.collect.FluentIterable apply(java.lang.Iterable) -> apply
    710:710:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.ForwardingBlockingDeque -> com.google.common.collect.ForwardingBlockingDeque:
    45:45:void <init>() -> <init>
    java.util.concurrent.BlockingDeque delegate() -> delegate
    52:52:int remainingCapacity() -> remainingCapacity
    57:58:void putFirst(java.lang.Object) -> putFirst
    62:63:void putLast(java.lang.Object) -> putLast
    67:67:boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    72:72:boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    77:77:java.lang.Object takeFirst() -> takeFirst
    82:82:java.lang.Object takeLast() -> takeLast
    87:87:java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    92:92:java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    97:98:void put(java.lang.Object) -> put
    102:102:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    107:107:java.lang.Object take() -> take
    112:112:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    117:117:int drainTo(java.util.Collection) -> drainTo
    122:122:int drainTo(java.util.Collection,int) -> drainTo
    41:41:java.util.Deque delegate() -> delegate
    41:41:java.util.Queue delegate() -> delegate
    41:41:java.util.Collection delegate() -> delegate
    41:41:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    52:52:void <init>() -> <init>
    java.util.Collection delegate() -> delegate
    59:59:java.util.Iterator iterator() -> iterator
    64:64:int size() -> size
    69:69:boolean removeAll(java.util.Collection) -> removeAll
    74:74:boolean isEmpty() -> isEmpty
    79:79:boolean contains(java.lang.Object) -> contains
    84:84:boolean add(java.lang.Object) -> add
    89:89:boolean remove(java.lang.Object) -> remove
    94:94:boolean containsAll(java.util.Collection) -> containsAll
    99:99:boolean addAll(java.util.Collection) -> addAll
    104:104:boolean retainAll(java.util.Collection) -> retainAll
    109:110:void clear() -> clear
    114:114:java.lang.Object[] toArray() -> toArray
    119:119:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    130:130:boolean standardContains(java.lang.Object) -> standardContains
    141:141:boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    152:152:boolean standardAddAll(java.util.Collection) -> standardAddAll
    164:171:boolean standardRemove(java.lang.Object) -> standardRemove
    183:183:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    195:195:boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    207:208:void standardClear() -> standardClear
    219:219:boolean standardIsEmpty() -> standardIsEmpty
    230:230:java.lang.String standardToString() -> standardToString
    241:242:java.lang.Object[] standardToArray() -> standardToArray
    253:253:java.lang.Object[] standardToArray(java.lang.Object[]) -> standardToArray
    47:47:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    37:37:void <init>() -> <init>
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    44:44:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    49:49:boolean remove(java.lang.Object,java.lang.Object) -> remove
    54:54:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    59:59:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    32:32:java.util.Map delegate() -> delegate
    32:32:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingDeque -> com.google.common.collect.ForwardingDeque:
    40:40:void <init>() -> <init>
    java.util.Deque delegate() -> delegate
    47:48:void addFirst(java.lang.Object) -> addFirst
    52:53:void addLast(java.lang.Object) -> addLast
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    62:62:java.lang.Object getFirst() -> getFirst
    67:67:java.lang.Object getLast() -> getLast
    72:72:boolean offerFirst(java.lang.Object) -> offerFirst
    77:77:boolean offerLast(java.lang.Object) -> offerLast
    82:82:java.lang.Object peekFirst() -> peekFirst
    87:87:java.lang.Object peekLast() -> peekLast
    92:92:java.lang.Object pollFirst() -> pollFirst
    97:97:java.lang.Object pollLast() -> pollLast
    102:102:java.lang.Object pop() -> pop
    107:108:void push(java.lang.Object) -> push
    112:112:java.lang.Object removeFirst() -> removeFirst
    117:117:java.lang.Object removeLast() -> removeLast
    122:122:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    127:127:boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    37:37:java.util.Queue delegate() -> delegate
    37:37:java.util.Collection delegate() -> delegate
    37:37:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingImmutableCollection -> com.google.common.collect.ForwardingImmutableCollection:
    29:29:void <init>() -> <init>
com.google.common.collect.ForwardingImmutableList -> com.google.common.collect.ForwardingImmutableList:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingImmutableMap -> com.google.common.collect.ForwardingImmutableMap:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingImmutableSet -> com.google.common.collect.ForwardingImmutableSet:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    36:36:void <init>() -> <init>
    java.util.Iterator delegate() -> delegate
    43:43:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
    53:54:void remove() -> remove
    32:32:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingList -> com.google.common.collect.ForwardingList:
    59:59:void <init>() -> <init>
    java.util.List delegate() -> delegate
    66:67:void add(int,java.lang.Object) -> add
    71:71:boolean addAll(int,java.util.Collection) -> addAll
    76:76:java.lang.Object get(int) -> get
    81:81:int indexOf(java.lang.Object) -> indexOf
    86:86:int lastIndexOf(java.lang.Object) -> lastIndexOf
    91:91:java.util.ListIterator listIterator() -> listIterator
    96:96:java.util.ListIterator listIterator(int) -> listIterator
    101:101:java.lang.Object remove(int) -> remove
    106:106:java.lang.Object set(int,java.lang.Object) -> set
    111:111:java.util.List subList(int,int) -> subList
    116:116:boolean equals(java.lang.Object) -> equals
    121:121:int hashCode() -> hashCode
    133:134:boolean standardAdd(java.lang.Object) -> standardAdd
    146:146:boolean standardAddAll(int,java.lang.Iterable) -> standardAddAll
    157:157:int standardIndexOf(java.lang.Object) -> standardIndexOf
    169:169:int standardLastIndexOf(java.lang.Object) -> standardLastIndexOf
    180:180:java.util.Iterator standardIterator() -> standardIterator
    192:192:java.util.ListIterator standardListIterator() -> standardListIterator
    206:206:java.util.ListIterator standardListIterator(int) -> standardListIterator
    218:218:java.util.List standardSubList(int,int) -> standardSubList
    230:230:boolean standardEquals(java.lang.Object) -> standardEquals
    242:242:int standardHashCode() -> standardHashCode
    54:54:java.util.Collection delegate() -> delegate
    54:54:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListIterator -> com.google.common.collect.ForwardingListIterator:
    37:37:void <init>() -> <init>
    java.util.ListIterator delegate() -> delegate
    44:45:void add(java.lang.Object) -> add
    49:49:boolean hasPrevious() -> hasPrevious
    54:54:int nextIndex() -> nextIndex
    59:59:java.lang.Object previous() -> previous
    64:64:int previousIndex() -> previousIndex
    69:70:void set(java.lang.Object) -> set
    32:32:java.util.Iterator delegate() -> delegate
    32:32:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListMultimap -> com.google.common.collect.ForwardingListMultimap:
    39:39:void <init>() -> <init>
    com.google.common.collect.ListMultimap delegate() -> delegate
    46:46:java.util.List get(java.lang.Object) -> get
    51:51:java.util.List removeAll(java.lang.Object) -> removeAll
    56:56:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    34:34:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    34:34:java.util.Collection removeAll(java.lang.Object) -> removeAll
    34:34:java.util.Collection get(java.lang.Object) -> get
    34:34:com.google.common.collect.Multimap delegate() -> delegate
    34:34:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    63:63:void <init>() -> <init>
    java.util.Map delegate() -> delegate
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    85:86:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    100:100:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    110:111:void putAll(java.util.Map) -> putAll
    115:115:java.util.Set keySet() -> keySet
    120:120:java.util.Collection values() -> values
    125:125:java.util.Set entrySet() -> entrySet
    130:130:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
    147:148:void standardPutAll(java.util.Map) -> standardPutAll
    164:173:java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    184:185:void standardClear() -> standardClear
    216:216:boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    246:246:boolean standardContainsValue(java.lang.Object) -> standardContainsValue
    278:278:boolean standardIsEmpty() -> standardIsEmpty
    289:289:boolean standardEquals(java.lang.Object) -> standardEquals
    300:300:int standardHashCode() -> standardHashCode
    311:311:java.lang.String standardToString() -> standardToString
    58:58:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap$StandardEntrySet -> com.google.common.collect.ForwardingMap$StandardEntrySet:
    com.google.common.collect.ForwardingMap this$0 -> this$0
    262:262:void <init>(com.google.common.collect.ForwardingMap) -> <init>
    266:266:java.util.Map map() -> map
com.google.common.collect.ForwardingMap$StandardKeySet -> com.google.common.collect.ForwardingMap$StandardKeySet:
    com.google.common.collect.ForwardingMap this$0 -> this$0
    201:203:void <init>(com.google.common.collect.ForwardingMap) -> <init>
com.google.common.collect.ForwardingMap$StandardValues -> com.google.common.collect.ForwardingMap$StandardValues:
    com.google.common.collect.ForwardingMap this$0 -> this$0
    232:234:void <init>(com.google.common.collect.ForwardingMap) -> <init>
com.google.common.collect.ForwardingMapEntry -> com.google.common.collect.ForwardingMapEntry:
    59:59:void <init>() -> <init>
    java.util.Map$Entry delegate() -> delegate
    66:66:java.lang.Object getKey() -> getKey
    71:71:java.lang.Object getValue() -> getValue
    76:76:java.lang.Object setValue(java.lang.Object) -> setValue
    81:81:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    98:103:boolean standardEquals(java.lang.Object) -> standardEquals
    114:116:int standardHashCode() -> standardHashCode
    129:129:java.lang.String standardToString() -> standardToString
    54:54:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultimap -> com.google.common.collect.ForwardingMultimap:
    41:41:void <init>() -> <init>
    com.google.common.collect.Multimap delegate() -> delegate
    48:48:java.util.Map asMap() -> asMap
    53:54:void clear() -> clear
    58:58:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    63:63:boolean containsKey(java.lang.Object) -> containsKey
    68:68:boolean containsValue(java.lang.Object) -> containsValue
    73:73:java.util.Collection entries() -> entries
    78:78:java.util.Collection get(java.lang.Object) -> get
    83:83:boolean isEmpty() -> isEmpty
    88:88:com.google.common.collect.Multiset keys() -> keys
    93:93:java.util.Set keySet() -> keySet
    98:98:boolean put(java.lang.Object,java.lang.Object) -> put
    103:103:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    108:108:boolean putAll(com.google.common.collect.Multimap) -> putAll
    113:113:boolean remove(java.lang.Object,java.lang.Object) -> remove
    118:118:java.util.Collection removeAll(java.lang.Object) -> removeAll
    123:123:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    128:128:int size() -> size
    133:133:java.util.Collection values() -> values
    138:138:boolean equals(java.lang.Object) -> equals
    143:143:int hashCode() -> hashCode
    37:37:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset -> com.google.common.collect.ForwardingMultiset:
    55:55:void <init>() -> <init>
    com.google.common.collect.Multiset delegate() -> delegate
    62:62:int count(java.lang.Object) -> count
    67:67:int add(java.lang.Object,int) -> add
    72:72:int remove(java.lang.Object,int) -> remove
    77:77:java.util.Set elementSet() -> elementSet
    82:82:java.util.Set entrySet() -> entrySet
    87:87:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    97:97:int setCount(java.lang.Object,int) -> setCount
    102:102:boolean setCount(java.lang.Object,int,int) -> setCount
    114:114:boolean standardContains(java.lang.Object) -> standardContains
    126:127:void standardClear() -> standardClear
    138:143:int standardCount(java.lang.Object) -> standardCount
    154:155:boolean standardAdd(java.lang.Object) -> standardAdd
    169:169:boolean standardAddAll(java.util.Collection) -> standardAddAll
    182:182:boolean standardRemove(java.lang.Object) -> standardRemove
    195:195:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    208:208:boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    221:221:int standardSetCount(java.lang.Object,int) -> standardSetCount
    233:233:boolean standardSetCount(java.lang.Object,int,int) -> standardSetCount
    268:268:java.util.Iterator standardIterator() -> standardIterator
    279:279:int standardSize() -> standardSize
    291:291:boolean standardEquals(java.lang.Object) -> standardEquals
    302:302:int standardHashCode() -> standardHashCode
    314:314:java.lang.String standardToString() -> standardToString
    51:51:java.util.Collection delegate() -> delegate
    51:51:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset$StandardElementSet -> com.google.common.collect.ForwardingMultiset$StandardElementSet:
    com.google.common.collect.ForwardingMultiset this$0 -> this$0
    252:252:void <init>(com.google.common.collect.ForwardingMultiset) -> <init>
    256:256:com.google.common.collect.Multiset multiset() -> multiset
com.google.common.collect.ForwardingNavigableMap -> com.google.common.collect.ForwardingNavigableMap:
    56:56:void <init>() -> <init>
    java.util.NavigableMap delegate() -> delegate
    63:63:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    72:72:java.util.Map$Entry standardLowerEntry(java.lang.Object) -> standardLowerEntry
    77:77:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    86:86:java.lang.Object standardLowerKey(java.lang.Object) -> standardLowerKey
    91:91:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    100:100:java.util.Map$Entry standardFloorEntry(java.lang.Object) -> standardFloorEntry
    105:105:java.lang.Object floorKey(java.lang.Object) -> floorKey
    114:114:java.lang.Object standardFloorKey(java.lang.Object) -> standardFloorKey
    119:119:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    128:128:java.util.Map$Entry standardCeilingEntry(java.lang.Object) -> standardCeilingEntry
    133:133:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    142:142:java.lang.Object standardCeilingKey(java.lang.Object) -> standardCeilingKey
    147:147:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    156:156:java.util.Map$Entry standardHigherEntry(java.lang.Object) -> standardHigherEntry
    161:161:java.lang.Object higherKey(java.lang.Object) -> higherKey
    170:170:java.lang.Object standardHigherKey(java.lang.Object) -> standardHigherKey
    175:175:java.util.Map$Entry firstEntry() -> firstEntry
    184:184:java.util.Map$Entry standardFirstEntry() -> standardFirstEntry
    193:197:java.lang.Object standardFirstKey() -> standardFirstKey
    203:203:java.util.Map$Entry lastEntry() -> lastEntry
    212:212:java.util.Map$Entry standardLastEntry() -> standardLastEntry
    220:224:java.lang.Object standardLastKey() -> standardLastKey
    230:230:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    239:239:java.util.Map$Entry standardPollFirstEntry() -> standardPollFirstEntry
    244:244:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    253:253:java.util.Map$Entry standardPollLastEntry() -> standardPollLastEntry
    258:258:java.util.NavigableMap descendingMap() -> descendingMap
    319:319:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    340:340:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    352:352:java.util.NavigableSet standardDescendingKeySet() -> standardDescendingKeySet
    363:363:java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    368:368:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    373:373:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    378:378:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    387:387:java.util.SortedMap standardHeadMap(java.lang.Object) -> standardHeadMap
    396:396:java.util.SortedMap standardTailMap(java.lang.Object) -> standardTailMap
    52:52:java.util.SortedMap delegate() -> delegate
    52:52:java.util.Map delegate() -> delegate
    52:52:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap -> com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap:
    com.google.common.collect.ForwardingNavigableMap this$0 -> this$0
    276:276:void <init>(com.google.common.collect.ForwardingNavigableMap) -> <init>
    280:280:java.util.NavigableMap forward() -> forward
    285:285:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1 -> com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1:
    java.util.Map$Entry toRemove -> toRemove
    java.util.Map$Entry nextOrNull -> nextOrNull
    com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap this$1 -> this$1
    285:287:void <init>(com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap) -> <init>
    291:291:boolean hasNext() -> hasNext
    296:303:java.util.Map$Entry next() -> next
    309:312:void remove() -> remove
    285:285:java.lang.Object next() -> next
com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet -> com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet:
    com.google.common.collect.ForwardingNavigableMap this$0 -> this$0
    333:335:void <init>(com.google.common.collect.ForwardingNavigableMap) -> <init>
com.google.common.collect.ForwardingNavigableSet -> com.google.common.collect.ForwardingNavigableSet:
    51:51:void <init>() -> <init>
    java.util.NavigableSet delegate() -> delegate
    58:58:java.lang.Object lower(java.lang.Object) -> lower
    67:67:java.lang.Object standardLower(java.lang.Object) -> standardLower
    72:72:java.lang.Object floor(java.lang.Object) -> floor
    81:81:java.lang.Object standardFloor(java.lang.Object) -> standardFloor
    86:86:java.lang.Object ceiling(java.lang.Object) -> ceiling
    95:95:java.lang.Object standardCeiling(java.lang.Object) -> standardCeiling
    100:100:java.lang.Object higher(java.lang.Object) -> higher
    109:109:java.lang.Object standardHigher(java.lang.Object) -> standardHigher
    114:114:java.lang.Object pollFirst() -> pollFirst
    123:123:java.lang.Object standardPollFirst() -> standardPollFirst
    128:128:java.lang.Object pollLast() -> pollLast
    137:137:java.lang.Object standardPollLast() -> standardPollLast
    141:141:java.lang.Object standardFirst() -> standardFirst
    145:145:java.lang.Object standardLast() -> standardLast
    150:150:java.util.NavigableSet descendingSet() -> descendingSet
    172:172:java.util.Iterator descendingIterator() -> descendingIterator
    178:178:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    189:189:java.util.NavigableSet standardSubSet(java.lang.Object,boolean,java.lang.Object,boolean) -> standardSubSet
    200:200:java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    205:205:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    215:215:java.util.SortedSet standardHeadSet(java.lang.Object) -> standardHeadSet
    220:220:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    230:230:java.util.SortedSet standardTailSet(java.lang.Object) -> standardTailSet
    47:47:java.util.SortedSet delegate() -> delegate
    47:47:java.util.Set delegate() -> delegate
    47:47:java.util.Collection delegate() -> delegate
    47:47:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet -> com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet:
    com.google.common.collect.ForwardingNavigableSet this$0 -> this$0
    165:167:void <init>(com.google.common.collect.ForwardingNavigableSet) -> <init>
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    56:56:void <init>() -> <init>
    java.lang.Object delegate() -> delegate
    73:73:java.lang.String toString() -> toString
com.google.common.collect.ForwardingQueue -> com.google.common.collect.ForwardingQueue:
    48:48:void <init>() -> <init>
    java.util.Queue delegate() -> delegate
    55:55:boolean offer(java.lang.Object) -> offer
    60:60:java.lang.Object poll() -> poll
    65:65:java.lang.Object remove() -> remove
    70:70:java.lang.Object peek() -> peek
    75:75:java.lang.Object element() -> element
    87:89:boolean standardOffer(java.lang.Object) -> standardOffer
    102:104:java.lang.Object standardPeek() -> standardPeek
    117:119:java.lang.Object standardPoll() -> standardPoll
    44:44:java.util.Collection delegate() -> delegate
    44:44:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    java.util.Set delegate() -> delegate
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
    78:78:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    89:89:boolean standardEquals(java.lang.Object) -> standardEquals
    100:100:int standardHashCode() -> standardHashCode
    48:48:java.util.Collection delegate() -> delegate
    48:48:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSetMultimap -> com.google.common.collect.ForwardingSetMultimap:
    36:36:void <init>() -> <init>
    com.google.common.collect.SetMultimap delegate() -> delegate
    44:44:java.util.Set entries() -> entries
    49:49:java.util.Set get(java.lang.Object) -> get
    54:54:java.util.Set removeAll(java.lang.Object) -> removeAll
    59:59:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    35:35:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    35:35:java.util.Collection removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Collection get(java.lang.Object) -> get
    35:35:java.util.Collection entries() -> entries
    35:35:com.google.common.collect.Multimap delegate() -> delegate
    35:35:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedMap -> com.google.common.collect.ForwardingSortedMap:
    61:61:void <init>() -> <init>
    java.util.SortedMap delegate() -> delegate
    68:68:java.util.Comparator comparator() -> comparator
    73:73:java.lang.Object firstKey() -> firstKey
    78:78:java.util.SortedMap headMap(java.lang.Object) -> headMap
    83:83:java.lang.Object lastKey() -> lastKey
    88:88:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    93:93:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    114:118:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    136:144:boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    158:159:java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    55:55:java.util.Map delegate() -> delegate
    55:55:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedMap$StandardKeySet -> com.google.common.collect.ForwardingSortedMap$StandardKeySet:
    com.google.common.collect.ForwardingSortedMap this$0 -> this$0
    106:108:void <init>(com.google.common.collect.ForwardingSortedMap) -> <init>
com.google.common.collect.ForwardingSortedMultiset -> com.google.common.collect.ForwardingSortedMultiset:
    47:47:void <init>() -> <init>
    com.google.common.collect.SortedMultiset delegate() -> delegate
    54:54:java.util.NavigableSet elementSet() -> elementSet
    77:77:java.util.Comparator comparator() -> comparator
    82:82:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    107:107:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    117:122:com.google.common.collect.Multiset$Entry standardFirstEntry() -> standardFirstEntry
    127:127:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    138:143:com.google.common.collect.Multiset$Entry standardLastEntry() -> standardLastEntry
    148:148:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    158:165:com.google.common.collect.Multiset$Entry standardPollFirstEntry() -> standardPollFirstEntry
    170:170:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    181:188:com.google.common.collect.Multiset$Entry standardPollLastEntry() -> standardPollLastEntry
    193:193:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    199:199:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    212:212:com.google.common.collect.SortedMultiset standardSubMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> standardSubMultiset
    217:217:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    42:42:java.util.Set elementSet() -> elementSet
    42:42:com.google.common.collect.Multiset delegate() -> delegate
    42:42:java.util.Collection delegate() -> delegate
    42:42:java.lang.Object delegate() -> delegate
    42:42:java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset -> com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset:
    com.google.common.collect.ForwardingSortedMultiset this$0 -> this$0
    97:97:void <init>(com.google.common.collect.ForwardingSortedMultiset) -> <init>
    101:101:com.google.common.collect.SortedMultiset forwardMultiset() -> forwardMultiset
com.google.common.collect.ForwardingSortedMultiset$StandardElementSet -> com.google.common.collect.ForwardingSortedMultiset$StandardElementSet:
    com.google.common.collect.ForwardingSortedMultiset this$0 -> this$0
    70:72:void <init>(com.google.common.collect.ForwardingSortedMultiset) -> <init>
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    60:60:void <init>() -> <init>
    java.util.SortedSet delegate() -> delegate
    67:67:java.util.Comparator comparator() -> comparator
    72:72:java.lang.Object first() -> first
    77:77:java.util.SortedSet headSet(java.lang.Object) -> headSet
    82:82:java.lang.Object last() -> last
    87:87:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    92:92:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    98:99:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    117:125:boolean standardContains(java.lang.Object) -> standardContains
    142:156:boolean standardRemove(java.lang.Object) -> standardRemove
    169:169:java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    56:56:java.util.Set delegate() -> delegate
    56:56:java.util.Collection delegate() -> delegate
    56:56:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedSetMultimap -> com.google.common.collect.ForwardingSortedSetMultimap:
    40:40:void <init>() -> <init>
    com.google.common.collect.SortedSetMultimap delegate() -> delegate
    47:47:java.util.SortedSet get(java.lang.Object) -> get
    52:52:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    57:57:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    62:62:java.util.Comparator valueComparator() -> valueComparator
    35:35:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    35:35:java.util.Set removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Set get(java.lang.Object) -> get
    35:35:com.google.common.collect.SetMultimap delegate() -> delegate
    35:35:java.util.Collection get(java.lang.Object) -> get
    35:35:java.util.Collection removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    35:35:com.google.common.collect.Multimap delegate() -> delegate
    35:35:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingTable -> com.google.common.collect.ForwardingTable:
    37:37:void <init>() -> <init>
    com.google.common.collect.Table delegate() -> delegate
    44:44:java.util.Set cellSet() -> cellSet
    49:50:void clear() -> clear
    54:54:java.util.Map column(java.lang.Object) -> column
    59:59:java.util.Set columnKeySet() -> columnKeySet
    64:64:java.util.Map columnMap() -> columnMap
    69:69:boolean contains(java.lang.Object,java.lang.Object) -> contains
    74:74:boolean containsColumn(java.lang.Object) -> containsColumn
    79:79:boolean containsRow(java.lang.Object) -> containsRow
    84:84:boolean containsValue(java.lang.Object) -> containsValue
    89:89:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    94:94:boolean isEmpty() -> isEmpty
    99:99:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    104:105:void putAll(com.google.common.collect.Table) -> putAll
    109:109:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    114:114:java.util.Map row(java.lang.Object) -> row
    119:119:java.util.Set rowKeySet() -> rowKeySet
    124:124:java.util.Map rowMap() -> rowMap
    129:129:int size() -> size
    134:134:java.util.Collection values() -> values
    139:139:boolean equals(java.lang.Object) -> equals
    144:144:int hashCode() -> hashCode
    34:34:java.lang.Object delegate() -> delegate
com.google.common.collect.GeneralRange -> com.google.common.collect.GeneralRange:
    java.util.Comparator comparator -> comparator
    boolean hasLowerBound -> hasLowerBound
    java.lang.Object lowerEndpoint -> lowerEndpoint
    com.google.common.collect.BoundType lowerBoundType -> lowerBoundType
    boolean hasUpperBound -> hasUpperBound
    java.lang.Object upperEndpoint -> upperEndpoint
    com.google.common.collect.BoundType upperBoundType -> upperBoundType
    com.google.common.collect.GeneralRange reverse -> reverse
    45:50:com.google.common.collect.GeneralRange from(com.google.common.collect.Range) -> from
    64:64:com.google.common.collect.GeneralRange all(java.util.Comparator) -> all
    73:73:com.google.common.collect.GeneralRange downTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType) -> downTo
    82:82:com.google.common.collect.GeneralRange upTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType) -> upTo
    95:95:com.google.common.collect.GeneralRange range(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> range
    113:137:void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType) -> <init>
    140:140:java.util.Comparator comparator() -> comparator
    144:144:boolean hasLowerBound() -> hasLowerBound
    148:148:boolean hasUpperBound() -> hasUpperBound
    152:152:boolean isEmpty() -> isEmpty
    157:162:boolean tooLow(java.lang.Object) -> tooLow
    166:171:boolean tooHigh(java.lang.Object) -> tooHigh
    175:175:boolean contains(java.lang.Object) -> contains
    182:225:com.google.common.collect.GeneralRange intersect(com.google.common.collect.GeneralRange) -> intersect
    230:240:boolean equals(java.lang.Object) -> equals
    245:245:int hashCode() -> hashCode
    259:272:com.google.common.collect.GeneralRange reverse() -> reverse
    277:277:java.lang.String toString() -> toString
    289:289:java.lang.Object getLowerEndpoint() -> getLowerEndpoint
    293:293:com.google.common.collect.BoundType getLowerBoundType() -> getLowerBoundType
    297:297:java.lang.Object getUpperEndpoint() -> getUpperEndpoint
    301:301:com.google.common.collect.BoundType getUpperBoundType() -> getUpperBoundType
com.google.common.collect.GenericMapMaker -> com.google.common.collect.GenericMapMaker:
    com.google.common.collect.MapMaker$RemovalListener removalListener -> removalListener
    64:64:void <init>() -> <init>
    com.google.common.collect.GenericMapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
    com.google.common.collect.GenericMapMaker maximumSize(int) -> maximumSize
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.GenericMapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    com.google.common.collect.GenericMapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    130:130:com.google.common.collect.MapMaker$RemovalListener getRemovalListener() -> getRemovalListener
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    com.google.common.collect.MapMakerInternalMap makeCustomMap() -> makeCustomMap
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
com.google.common.collect.GenericMapMaker$NullListener -> com.google.common.collect.GenericMapMaker$NullListener:
    com.google.common.collect.GenericMapMaker$NullListener INSTANCE -> INSTANCE
    com.google.common.collect.GenericMapMaker$NullListener[] $VALUES -> $VALUES
    51:51:com.google.common.collect.GenericMapMaker$NullListener[] values() -> values
    51:51:com.google.common.collect.GenericMapMaker$NullListener valueOf(java.lang.String) -> valueOf
    52:52:void <init>(java.lang.String,int) -> <init>
    56:56:void onRemoval(com.google.common.collect.MapMaker$RemovalNotification) -> onRemoval
    51:53:void <clinit>() -> <clinit>
com.google.common.collect.GwtTransient -> com.google.common.collect.GwtTransient:
com.google.common.collect.HashBasedTable -> com.google.common.collect.HashBasedTable:
    long serialVersionUID -> serialVersionUID
    76:76:com.google.common.collect.HashBasedTable create() -> create
    90:92:com.google.common.collect.HashBasedTable create(int,int) -> create
    105:107:com.google.common.collect.HashBasedTable create(com.google.common.collect.Table) -> create
    111:112:void <init>(java.util.Map,com.google.common.collect.HashBasedTable$Factory) -> <init>
    118:118:boolean contains(java.lang.Object,java.lang.Object) -> contains
    123:123:boolean containsColumn(java.lang.Object) -> containsColumn
    128:128:boolean containsRow(java.lang.Object) -> containsRow
    133:133:boolean containsValue(java.lang.Object) -> containsValue
    138:138:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    143:143:boolean equals(java.lang.Object) -> equals
    148:148:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    55:55:java.util.Map columnMap() -> columnMap
    55:55:java.util.Map rowMap() -> rowMap
    55:55:java.util.Collection values() -> values
    55:55:java.util.Set columnKeySet() -> columnKeySet
    55:55:java.util.Set rowKeySet() -> rowKeySet
    55:55:java.util.Map column(java.lang.Object) -> column
    55:55:java.util.Map row(java.lang.Object) -> row
    55:55:java.util.Set cellSet() -> cellSet
    55:55:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    55:55:void clear() -> clear
    55:55:int size() -> size
    55:55:boolean isEmpty() -> isEmpty
    55:55:java.lang.String toString() -> toString
    55:55:int hashCode() -> hashCode
    55:55:void putAll(com.google.common.collect.Table) -> putAll
com.google.common.collect.HashBasedTable$Factory -> com.google.common.collect.HashBasedTable$Factory:
    int expectedSize -> expectedSize
    long serialVersionUID -> serialVersionUID
    60:62:void <init>(int) -> <init>
    66:66:java.util.Map get() -> get
    57:57:java.lang.Object get() -> get
com.google.common.collect.HashBiMap -> com.google.common.collect.HashBiMap:
    double LOAD_FACTOR -> LOAD_FACTOR
    com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV -> hashTableKToV
    com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK -> hashTableVToK
    com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder -> firstInKeyInsertionOrder
    com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder -> lastInKeyInsertionOrder
    int size -> size
    int mask -> mask
    int modCount -> modCount
    com.google.common.collect.BiMap inverse -> inverse
    long serialVersionUID -> serialVersionUID
    62:62:com.google.common.collect.HashBiMap create() -> create
    72:72:com.google.common.collect.HashBiMap create(int) -> create
    80:82:com.google.common.collect.HashBiMap create(java.util.Map) -> create
    112:114:void <init>(int) -> <init>
    117:126:void init(int) -> init
    133:179:void delete(com.google.common.collect.HashBiMap$BiEntry) -> delete
    182:216:void insert(com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry) -> insert
    219:226:com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int) -> seekByKey
    230:237:com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int) -> seekByValue
    242:242:boolean containsKey(java.lang.Object) -> containsKey
    247:247:boolean containsValue(java.lang.Object) -> containsValue
    253:253:java.lang.Object get(java.lang.Object) -> get
    258:258:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    263:263:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    267:297:java.lang.Object put(java.lang.Object,java.lang.Object,boolean) -> put
    303:332:java.lang.Object putInverse(java.lang.Object,java.lang.Object,boolean) -> putInverse
    336:352:void rehashIfNecessary() -> rehashIfNecessary
    356:356:com.google.common.collect.HashBiMap$BiEntry[] createTable(int) -> createTable
    361:368:java.lang.Object remove(java.lang.Object) -> remove
    374:380:void clear() -> clear
    384:384:int size() -> size
    428:428:java.util.Set keySet() -> keySet
    463:463:java.util.Set values() -> values
    468:468:java.util.Iterator entryIterator() -> entryIterator
    520:520:com.google.common.collect.BiMap inverse() -> inverse
    694:696:void writeObject(java.io.ObjectOutputStream) -> writeObject
    700:704:void readObject(java.io.ObjectInputStream) -> readObject
    54:54:java.util.Set entrySet() -> entrySet
    54:54:java.util.Collection values() -> values
    55:55:com.google.common.collect.HashBiMap$BiEntry access$000(com.google.common.collect.HashBiMap) -> access$000
    55:55:int access$100(com.google.common.collect.HashBiMap) -> access$100
    55:55:void access$200(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry) -> access$200
    55:55:com.google.common.collect.HashBiMap$BiEntry access$300(com.google.common.collect.HashBiMap,java.lang.Object,int) -> access$300
    55:55:com.google.common.collect.HashBiMap$BiEntry access$400(com.google.common.collect.HashBiMap,java.lang.Object,int) -> access$400
    55:55:void access$500(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry) -> access$500
    55:55:int access$700(com.google.common.collect.HashBiMap) -> access$700
    55:55:java.lang.Object access$800(com.google.common.collect.HashBiMap,java.lang.Object,java.lang.Object,boolean) -> access$800
com.google.common.collect.HashBiMap$1 -> com.google.common.collect.HashBiMap$1:
    com.google.common.collect.HashBiMap this$0 -> this$0
    468:474:void <init>(com.google.common.collect.HashBiMap) -> <init>
    471:471:java.util.Map$Entry output(com.google.common.collect.HashBiMap$BiEntry) -> output
    468:468:java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> output
com.google.common.collect.HashBiMap$1$MapEntry -> com.google.common.collect.HashBiMap$1$MapEntry:
    com.google.common.collect.HashBiMap$BiEntry delegate -> delegate
    com.google.common.collect.HashBiMap$1 this$1 -> this$1
    477:479:void <init>(com.google.common.collect.HashBiMap$1,com.google.common.collect.HashBiMap$BiEntry) -> <init>
    483:483:java.lang.Object getKey() -> getKey
    488:488:java.lang.Object getValue() -> getValue
    493:510:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.HashBiMap$BiEntry -> com.google.common.collect.HashBiMap$BiEntry:
    int keyHash -> keyHash
    int valueHash -> valueHash
    com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket -> nextInKToVBucket
    com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket -> nextInVToKBucket
    com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder -> nextInKeyInsertionOrder
    com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder -> prevInKeyInsertionOrder
    96:99:void <init>(java.lang.Object,int,java.lang.Object,int) -> <init>
com.google.common.collect.HashBiMap$Inverse -> com.google.common.collect.HashBiMap$Inverse:
    com.google.common.collect.HashBiMap this$0 -> this$0
    523:581:void <init>(com.google.common.collect.HashBiMap) -> <init>
    525:525:com.google.common.collect.BiMap forward() -> forward
    530:530:int size() -> size
    535:536:void clear() -> clear
    540:540:boolean containsKey(java.lang.Object) -> containsKey
    545:545:java.lang.Object get(java.lang.Object) -> get
    550:550:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    555:555:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    560:567:java.lang.Object remove(java.lang.Object) -> remove
    573:573:com.google.common.collect.BiMap inverse() -> inverse
    578:578:java.util.Set keySet() -> keySet
    611:611:java.util.Set values() -> values
    616:616:java.util.Set entrySet() -> entrySet
    673:673:java.lang.Object writeReplace() -> writeReplace
    523:523:java.util.Collection values() -> values
    523:523:void <init>(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$1) -> <init>
com.google.common.collect.HashBiMap$Inverse$1 -> com.google.common.collect.HashBiMap$Inverse$1:
    com.google.common.collect.HashBiMap$Inverse this$1 -> this$1
    616:616:void <init>(com.google.common.collect.HashBiMap$Inverse) -> <init>
    620:620:java.util.Map map() -> map
    625:625:java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$Inverse$1$1 -> com.google.common.collect.HashBiMap$Inverse$1$1:
    com.google.common.collect.HashBiMap$Inverse$1 this$2 -> this$2
    625:631:void <init>(com.google.common.collect.HashBiMap$Inverse$1) -> <init>
    628:628:java.util.Map$Entry output(com.google.common.collect.HashBiMap$BiEntry) -> output
    625:625:java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> output
com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry -> com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry:
    com.google.common.collect.HashBiMap$BiEntry delegate -> delegate
    com.google.common.collect.HashBiMap$Inverse$1$1 this$3 -> this$3
    634:636:void <init>(com.google.common.collect.HashBiMap$Inverse$1$1,com.google.common.collect.HashBiMap$BiEntry) -> <init>
    640:640:java.lang.Object getKey() -> getKey
    645:645:java.lang.Object getValue() -> getValue
    650:664:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.HashBiMap$Inverse$InverseKeySet -> com.google.common.collect.HashBiMap$Inverse$InverseKeySet:
    com.google.common.collect.HashBiMap$Inverse this$1 -> this$1
    583:585:void <init>(com.google.common.collect.HashBiMap$Inverse) -> <init>
    589:594:boolean remove(java.lang.Object) -> remove
    600:600:java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1 -> com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1:
    com.google.common.collect.HashBiMap$Inverse$InverseKeySet this$2 -> this$2
    600:600:void <init>(com.google.common.collect.HashBiMap$Inverse$InverseKeySet) -> <init>
    603:603:java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> output
com.google.common.collect.HashBiMap$InverseSerializedForm -> com.google.common.collect.HashBiMap$InverseSerializedForm:
    com.google.common.collect.HashBiMap bimap -> bimap
    680:682:void <init>(com.google.common.collect.HashBiMap) -> <init>
    685:685:java.lang.Object readResolve() -> readResolve
com.google.common.collect.HashBiMap$Itr -> com.google.common.collect.HashBiMap$Itr:
    com.google.common.collect.HashBiMap$BiEntry next -> next
    com.google.common.collect.HashBiMap$BiEntry toRemove -> toRemove
    int expectedModCount -> expectedModCount
    com.google.common.collect.HashBiMap this$0 -> this$0
    387:390:void <init>(com.google.common.collect.HashBiMap) -> <init>
    394:397:boolean hasNext() -> hasNext
    402:409:java.lang.Object next() -> next
    414:421:void remove() -> remove
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> output
com.google.common.collect.HashBiMap$KeySet -> com.google.common.collect.HashBiMap$KeySet:
    com.google.common.collect.HashBiMap this$0 -> this$0
    433:435:void <init>(com.google.common.collect.HashBiMap) -> <init>
    439:439:java.util.Iterator iterator() -> iterator
    449:456:boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$KeySet$1 -> com.google.common.collect.HashBiMap$KeySet$1:
    com.google.common.collect.HashBiMap$KeySet this$1 -> this$1
    439:439:void <init>(com.google.common.collect.HashBiMap$KeySet) -> <init>
    442:442:java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> output
com.google.common.collect.HashMultimap -> com.google.common.collect.HashMultimap:
    int DEFAULT_VALUES_PER_KEY -> DEFAULT_VALUES_PER_KEY
    int expectedValuesPerKey -> expectedValuesPerKey
    long serialVersionUID -> serialVersionUID
    60:60:com.google.common.collect.HashMultimap create() -> create
    73:73:com.google.common.collect.HashMultimap create(int,int) -> create
    84:84:com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap) -> create
    53:89:void <init>() -> <init>
    53:95:void <init>(int,int) -> <init>
    53:100:void <init>(com.google.common.collect.Multimap) -> <init>
    111:111:java.util.Set createCollection() -> createCollection
    121:123:void writeObject(java.io.ObjectOutputStream) -> writeObject
    127:133:void readObject(java.io.ObjectInputStream) -> readObject
    49:49:boolean equals(java.lang.Object) -> equals
    49:49:boolean put(java.lang.Object,java.lang.Object) -> put
    49:49:java.util.Map asMap() -> asMap
    49:49:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    49:49:java.util.Set removeAll(java.lang.Object) -> removeAll
    49:49:java.util.Set entries() -> entries
    49:49:java.util.Set get(java.lang.Object) -> get
    49:49:java.util.Collection values() -> values
    49:49:void clear() -> clear
    49:49:boolean containsKey(java.lang.Object) -> containsKey
    49:49:int size() -> size
    49:49:java.util.Collection createCollection() -> createCollection
    49:49:java.lang.String toString() -> toString
    49:49:int hashCode() -> hashCode
    49:49:com.google.common.collect.Multiset keys() -> keys
    49:49:java.util.Set keySet() -> keySet
    49:49:boolean putAll(com.google.common.collect.Multimap) -> putAll
    49:49:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    49:49:boolean remove(java.lang.Object,java.lang.Object) -> remove
    49:49:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    49:49:boolean containsValue(java.lang.Object) -> containsValue
    49:49:boolean isEmpty() -> isEmpty
com.google.common.collect.HashMultiset -> com.google.common.collect.HashMultiset:
    long serialVersionUID -> serialVersionUID
    42:42:com.google.common.collect.HashMultiset create() -> create
    53:53:com.google.common.collect.HashMultiset create(int) -> create
    65:67:com.google.common.collect.HashMultiset create(java.lang.Iterable) -> create
    71:72:void <init>() -> <init>
    75:76:void <init>(int) -> <init>
    84:86:void writeObject(java.io.ObjectOutputStream) -> writeObject
    90:94:void readObject(java.io.ObjectInputStream) -> readObject
    34:34:int setCount(java.lang.Object,int) -> setCount
    34:34:int remove(java.lang.Object,int) -> remove
    34:34:int add(java.lang.Object,int) -> add
    34:34:int count(java.lang.Object) -> count
    34:34:java.util.Iterator iterator() -> iterator
    34:34:int size() -> size
    34:34:void clear() -> clear
    34:34:java.util.Set entrySet() -> entrySet
    34:34:java.lang.String toString() -> toString
    34:34:int hashCode() -> hashCode
    34:34:boolean equals(java.lang.Object) -> equals
    34:34:java.util.Set elementSet() -> elementSet
    34:34:boolean retainAll(java.util.Collection) -> retainAll
    34:34:boolean removeAll(java.util.Collection) -> removeAll
    34:34:boolean addAll(java.util.Collection) -> addAll
    34:34:boolean setCount(java.lang.Object,int,int) -> setCount
    34:34:boolean remove(java.lang.Object) -> remove
    34:34:boolean add(java.lang.Object) -> add
    34:34:boolean contains(java.lang.Object) -> contains
    34:34:boolean isEmpty() -> isEmpty
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    int C1 -> C1
    int C2 -> C2
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    33:33:void <init>() -> <init>
    47:47:int smear(int) -> smear
    51:51:int smearedHash(java.lang.Object) -> smearedHash
    59:66:int closedTableSize(int,double) -> closedTableSize
    70:70:boolean needsResizing(int,int,double) -> needsResizing
    54:54:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableAsList -> com.google.common.collect.ImmutableAsList:
    35:63:void <init>() -> <init>
    com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    42:42:boolean contains(java.lang.Object) -> contains
    47:47:int size() -> size
    52:52:boolean isEmpty() -> isEmpty
    57:57:boolean isPartialView() -> isPartialView
    80:80:void readObject(java.io.ObjectInputStream) -> readObject
    86:86:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableAsList$SerializedForm -> com.google.common.collect.ImmutableAsList$SerializedForm:
    com.google.common.collect.ImmutableCollection collection -> collection
    long serialVersionUID -> serialVersionUID
    67:69:void <init>(com.google.common.collect.ImmutableCollection) -> <init>
    72:72:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableBiMap -> com.google.common.collect.ImmutableBiMap:
    42:42:com.google.common.collect.ImmutableBiMap of() -> of
    49:49:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object) -> of
    58:58:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    67:67:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    76:76:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    87:87:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    98:98:com.google.common.collect.ImmutableBiMap$Builder builder() -> builder
    250:259:com.google.common.collect.ImmutableBiMap copyOf(java.util.Map) -> copyOf
    274:286:com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable) -> copyOf
    290:290:void <init>() -> <init>
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    307:307:com.google.common.collect.ImmutableSet values() -> values
    319:319:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    347:347:java.lang.Object writeReplace() -> writeReplace
    33:33:com.google.common.collect.ImmutableCollection values() -> values
    33:33:java.util.Collection values() -> values
    33:33:com.google.common.collect.BiMap inverse() -> inverse
    33:33:java.util.Set values() -> values
com.google.common.collect.ImmutableBiMap$Builder -> com.google.common.collect.ImmutableBiMap$Builder:
    127:127:void <init>() -> <init>
    130:131:void <init>(int) -> <init>
    139:140:com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object) -> put
    151:152:com.google.common.collect.ImmutableBiMap$Builder put(java.util.Map$Entry) -> put
    164:165:com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map) -> putAll
    178:179:com.google.common.collect.ImmutableBiMap$Builder putAll(java.lang.Iterable) -> putAll
    196:197:com.google.common.collect.ImmutableBiMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    207:231:com.google.common.collect.ImmutableBiMap build() -> build
    121:121:com.google.common.collect.ImmutableMap build() -> build
    121:121:com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    121:121:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    121:121:com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    121:121:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    121:121:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableBiMap$SerializedForm -> com.google.common.collect.ImmutableBiMap$SerializedForm:
    long serialVersionUID -> serialVersionUID
    333:334:void <init>(com.google.common.collect.ImmutableBiMap) -> <init>
    338:339:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableClassToInstanceMap -> com.google.common.collect.ImmutableClassToInstanceMap:
    com.google.common.collect.ImmutableClassToInstanceMap EMPTY -> EMPTY
    com.google.common.collect.ImmutableMap delegate -> delegate
    48:48:com.google.common.collect.ImmutableClassToInstanceMap of() -> of
    57:58:com.google.common.collect.ImmutableClassToInstanceMap of(java.lang.Class,java.lang.Object) -> of
    66:66:com.google.common.collect.ImmutableClassToInstanceMap$Builder builder() -> builder
    150:156:com.google.common.collect.ImmutableClassToInstanceMap copyOf(java.util.Map) -> copyOf
    161:163:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    167:167:java.util.Map delegate() -> delegate
    174:174:java.lang.Object getInstance(java.lang.Class) -> getInstance
    186:186:java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    190:190:java.lang.Object readResolve() -> readResolve
    35:35:java.lang.Object delegate() -> delegate
    35:35:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableClassToInstanceMap$1) -> <init>
    38:38:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableClassToInstanceMap$1 -> com.google.common.collect.ImmutableClassToInstanceMap$1:
com.google.common.collect.ImmutableClassToInstanceMap$Builder -> com.google.common.collect.ImmutableClassToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> mapBuilder
    86:87:void <init>() -> <init>
    94:95:com.google.common.collect.ImmutableClassToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    107:112:com.google.common.collect.ImmutableClassToInstanceMap$Builder putAll(java.util.Map) -> putAll
    116:116:java.lang.Object cast(java.lang.Class,java.lang.Object) -> cast
    126:130:com.google.common.collect.ImmutableClassToInstanceMap build() -> build
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    com.google.common.collect.ImmutableList asList -> asList
    157:157:void <init>() -> <init>
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    167:173:java.lang.Object[] toArray() -> toArray
    178:186:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    201:201:boolean add(java.lang.Object) -> add
    213:213:boolean remove(java.lang.Object) -> remove
    225:225:boolean addAll(java.util.Collection) -> addAll
    237:237:boolean removeAll(java.util.Collection) -> removeAll
    249:249:boolean retainAll(java.util.Collection) -> retainAll
    261:261:void clear() -> clear
    281:282:com.google.common.collect.ImmutableList asList() -> asList
    286:292:com.google.common.collect.ImmutableList createAsList() -> createAsList
    boolean isPartialView() -> isPartialView
    309:312:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    317:317:java.lang.Object writeReplace() -> writeReplace
    151:151:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.google.common.collect.ImmutableCollection$ArrayBasedBuilder:
    java.lang.Object[] contents -> contents
    int size -> size
    429:433:void <init>(int) -> <init>
    440:445:void ensureCapacity(int) -> ensureCapacity
    449:452:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    457:461:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    466:471:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    425:425:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    329:341:int expandedCapacity(int,int) -> expandedCapacity
    344:344:void <init>() -> <init>
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    371:374:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    390:393:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    409:412:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection build() -> build
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    33:36:void <init>(java.lang.Object,java.lang.Object) -> <init>
    41:41:java.lang.Object getKey() -> getKey
    47:47:java.lang.Object getValue() -> getValue
    52:52:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumMap -> com.google.common.collect.ImmutableEnumMap:
    java.util.EnumMap delegate -> delegate
    38:45:com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap) -> asImmutable
    51:54:void <init>(java.util.EnumMap) -> <init>
    58:58:com.google.common.collect.UnmodifiableIterator keyIterator() -> keyIterator
    63:63:int size() -> size
    68:68:boolean containsKey(java.lang.Object) -> containsKey
    73:73:java.lang.Object get(java.lang.Object) -> get
    78:84:boolean equals(java.lang.Object) -> equals
    89:89:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    94:94:boolean isPartialView() -> isPartialView
    100:100:java.lang.Object writeReplace() -> writeReplace
    36:36:void <init>(java.util.EnumMap,com.google.common.collect.ImmutableEnumMap$1) -> <init>
com.google.common.collect.ImmutableEnumMap$1 -> com.google.common.collect.ImmutableEnumMap$1:
com.google.common.collect.ImmutableEnumMap$EnumSerializedForm -> com.google.common.collect.ImmutableEnumMap$EnumSerializedForm:
    java.util.EnumMap delegate -> delegate
    long serialVersionUID -> serialVersionUID
    109:111:void <init>(java.util.EnumMap) -> <init>
    114:114:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableEnumSet -> com.google.common.collect.ImmutableEnumSet:
    java.util.EnumSet delegate -> delegate
    int hashCode -> hashCode
    36:42:com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet) -> asImmutable
    56:58:void <init>(java.util.EnumSet) -> <init>
    62:62:boolean isPartialView() -> isPartialView
    67:67:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    72:72:int size() -> size
    77:77:boolean contains(java.lang.Object) -> contains
    82:85:boolean containsAll(java.util.Collection) -> containsAll
    90:90:boolean isEmpty() -> isEmpty
    95:101:boolean equals(java.lang.Object) -> equals
    106:106:boolean isHashCodeFast() -> isHashCodeFast
    113:114:int hashCode() -> hashCode
    119:119:java.lang.String toString() -> toString
    125:125:java.lang.Object writeReplace() -> writeReplace
    31:31:java.util.Iterator iterator() -> iterator
    33:33:void <init>(java.util.EnumSet,com.google.common.collect.ImmutableEnumSet$1) -> <init>
com.google.common.collect.ImmutableEnumSet$1 -> com.google.common.collect.ImmutableEnumSet$1:
com.google.common.collect.ImmutableEnumSet$EnumSerializedForm -> com.google.common.collect.ImmutableEnumSet$EnumSerializedForm:
    java.util.EnumSet delegate -> delegate
    long serialVersionUID -> serialVersionUID
    134:136:void <init>(java.util.EnumSet) -> <init>
    140:140:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    64:64:com.google.common.collect.ImmutableList of() -> of
    76:76:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    85:85:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object) -> of
    94:94:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    103:103:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    112:112:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    121:121:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    130:130:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    139:139:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    148:148:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    158:158:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    168:168:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    182:196:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    208:209:com.google.common.collect.ImmutableList copyOf(java.lang.Iterable) -> copyOf
    234:239:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    249:256:com.google.common.collect.ImmutableList copyOf(java.util.Iterator) -> copyOf
    267:273:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    281:281:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    290:290:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    298:309:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    313:313:void <init>() -> <init>
    319:319:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    324:324:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    329:329:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    339:339:int indexOf(java.lang.Object) -> indexOf
    344:344:int lastIndexOf(java.lang.Object) -> lastIndexOf
    349:349:boolean contains(java.lang.Object) -> contains
    362:373:com.google.common.collect.ImmutableList subList(int,int) -> subList
    383:383:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    427:427:boolean addAll(int,java.util.Collection) -> addAll
    439:439:java.lang.Object set(int,java.lang.Object) -> set
    451:451:void add(int,java.lang.Object) -> add
    463:463:java.lang.Object remove(int) -> remove
    473:473:com.google.common.collect.ImmutableList asList() -> asList
    479:483:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    495:495:com.google.common.collect.ImmutableList reverse() -> reverse
    560:560:boolean equals(java.lang.Object) -> equals
    565:573:int hashCode() -> hashCode
    595:595:void readObject(java.io.ObjectInputStream) -> readObject
    600:600:java.lang.Object writeReplace() -> writeReplace
    608:608:com.google.common.collect.ImmutableList$Builder builder() -> builder
    52:52:java.util.Iterator iterator() -> iterator
    52:52:java.util.List subList(int,int) -> subList
    52:52:java.util.ListIterator listIterator(int) -> listIterator
    52:52:java.util.ListIterator listIterator() -> listIterator
com.google.common.collect.ImmutableList$1 -> com.google.common.collect.ImmutableList$1:
    com.google.common.collect.ImmutableList this$0 -> this$0
    329:329:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    332:332:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    633:634:void <init>() -> <init>
    638:639:void <init>(int) -> <init>
    650:651:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    664:665:com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    678:679:com.google.common.collect.ImmutableList$Builder add(java.lang.Object[]) -> add
    692:693:com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator) -> addAll
    702:702:com.google.common.collect.ImmutableList build() -> build
    627:627:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    627:627:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    627:627:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    627:627:com.google.common.collect.ImmutableCollection build() -> build
    627:627:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    627:627:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    com.google.common.collect.ImmutableList forwardList -> forwardList
    501:503:void <init>(com.google.common.collect.ImmutableList) -> <init>
    506:506:int reverseIndex(int) -> reverseIndex
    510:510:int reversePosition(int) -> reversePosition
    515:515:com.google.common.collect.ImmutableList reverse() -> reverse
    520:520:boolean contains(java.lang.Object) -> contains
    525:526:int indexOf(java.lang.Object) -> indexOf
    531:532:int lastIndexOf(java.lang.Object) -> lastIndexOf
    537:538:com.google.common.collect.ImmutableList subList(int,int) -> subList
    543:544:java.lang.Object get(int) -> get
    549:549:int size() -> size
    554:554:boolean isPartialView() -> isPartialView
    498:498:java.util.List subList(int,int) -> subList
    498:498:java.util.ListIterator listIterator(int) -> listIterator
    498:498:java.util.ListIterator listIterator() -> listIterator
    498:498:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    583:585:void <init>(java.lang.Object[]) -> <init>
    588:588:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    int offset -> offset
    int length -> length
    com.google.common.collect.ImmutableList this$0 -> this$0
    390:393:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    397:397:int size() -> size
    402:403:java.lang.Object get(int) -> get
    408:409:com.google.common.collect.ImmutableList subList(int,int) -> subList
    414:414:boolean isPartialView() -> isPartialView
    386:386:java.util.List subList(int,int) -> subList
    386:386:java.util.ListIterator listIterator(int) -> listIterator
    386:386:java.util.ListIterator listIterator() -> listIterator
    386:386:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableListMultimap -> com.google.common.collect.ImmutableListMultimap:
    com.google.common.collect.ImmutableListMultimap inverse -> inverse
    long serialVersionUID -> serialVersionUID
    52:52:com.google.common.collect.ImmutableListMultimap of() -> of
    59:61:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object) -> of
    68:71:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    78:82:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    90:95:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    103:109:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    119:119:com.google.common.collect.ImmutableListMultimap$Builder builder() -> builder
    239:265:com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    280:280:com.google.common.collect.ImmutableListMultimap copyOf(java.lang.Iterable) -> copyOf
    284:285:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    298:299:com.google.common.collect.ImmutableList get(java.lang.Object) -> get
    316:317:com.google.common.collect.ImmutableListMultimap inverse() -> inverse
    321:327:com.google.common.collect.ImmutableListMultimap invert() -> invert
    339:339:com.google.common.collect.ImmutableList removeAll(java.lang.Object) -> removeAll
    351:351:com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    360:362:void writeObject(java.io.ObjectOutputStream) -> writeObject
    366:398:void readObject(java.io.ObjectInputStream) -> readObject
    44:44:com.google.common.collect.ImmutableMultimap inverse() -> inverse
    44:44:com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    44:44:com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    44:44:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    44:44:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    44:44:java.util.Collection get(java.lang.Object) -> get
    44:44:java.util.Collection removeAll(java.lang.Object) -> removeAll
    44:44:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    44:44:java.util.List removeAll(java.lang.Object) -> removeAll
    44:44:java.util.List get(java.lang.Object) -> get
com.google.common.collect.ImmutableListMultimap$Builder -> com.google.common.collect.ImmutableListMultimap$Builder:
    145:145:void <init>() -> <init>
    149:150:com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    160:161:com.google.common.collect.ImmutableListMultimap$Builder put(java.util.Map$Entry) -> put
    172:173:com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Iterable) -> putAll
    178:179:com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    184:185:com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    190:191:com.google.common.collect.ImmutableListMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    201:202:com.google.common.collect.ImmutableListMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    212:213:com.google.common.collect.ImmutableListMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    221:221:com.google.common.collect.ImmutableListMultimap build() -> build
    140:140:com.google.common.collect.ImmutableMultimap build() -> build
    140:140:com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    140:140:com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    140:140:com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    140:140:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    140:140:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    140:140:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable) -> putAll
    140:140:com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    140:140:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    java.util.Map$Entry[] EMPTY_ENTRY_ARRAY -> EMPTY_ENTRY_ARRAY
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    com.google.common.collect.ImmutableSet keySet -> keySet
    com.google.common.collect.ImmutableCollection values -> values
    com.google.common.collect.ImmutableSetMultimap multimapView -> multimapView
    60:60:com.google.common.collect.ImmutableMap of() -> of
    70:70:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    79:79:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    88:88:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    97:97:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    108:108:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    122:122:com.google.common.collect.ImmutableMapEntry entryOf(java.lang.Object,java.lang.Object) -> entryOf
    130:130:com.google.common.collect.ImmutableMap$Builder builder() -> builder
    135:139:void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry) -> checkNoConflict
    313:327:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    342:354:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable) -> copyOf
    360:364:com.google.common.collect.ImmutableMap copyOfEnumMap(java.util.EnumMap) -> copyOfEnumMap
    390:390:void <init>() -> <init>
    401:401:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    413:413:java.lang.Object remove(java.lang.Object) -> remove
    425:425:void putAll(java.util.Map) -> putAll
    437:437:void clear() -> clear
    442:442:boolean isEmpty() -> isEmpty
    447:447:boolean containsKey(java.lang.Object) -> containsKey
    452:452:boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    467:468:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    481:482:com.google.common.collect.ImmutableSet keySet() -> keySet
    486:486:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    490:491:com.google.common.collect.UnmodifiableIterator keyIterator() -> keyIterator
    512:513:com.google.common.collect.ImmutableCollection values() -> values
    526:530:com.google.common.collect.ImmutableSetMultimap asMultimap() -> asMultimap
    607:607:boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> isPartialView
    614:614:int hashCode() -> hashCode
    618:618:boolean isHashCodeFast() -> isHashCodeFast
    623:623:java.lang.String toString() -> toString
    662:662:java.lang.Object writeReplace() -> writeReplace
    50:50:java.util.Set entrySet() -> entrySet
    50:50:java.util.Collection values() -> values
    50:50:java.util.Set keySet() -> keySet
    367:367:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableMap$1 -> com.google.common.collect.ImmutableMap$1:
    com.google.common.collect.UnmodifiableIterator val$entryIterator -> val$entryIterator
    com.google.common.collect.ImmutableMap this$0 -> this$0
    491:491:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.UnmodifiableIterator) -> <init>
    494:494:boolean hasNext() -> hasNext
    499:499:java.lang.Object next() -> next
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    java.util.Comparator valueComparator -> valueComparator
    com.google.common.collect.ImmutableMapEntry[] entries -> entries
    int size -> size
    boolean entriesUsed -> entriesUsed
    172:173:void <init>() -> <init>
    176:180:void <init>(int) -> <init>
    183:189:void ensureCapacity(int) -> ensureCapacity
    196:200:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    211:211:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    221:221:com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    233:239:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    255:257:com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    271:295:com.google.common.collect.ImmutableMap build() -> build
com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap -> com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap:
    369:369:void <init>() -> <init>
    com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    386:386:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    369:369:java.util.Set entrySet() -> entrySet
    369:369:java.util.Collection values() -> values
    369:369:java.util.Set keySet() -> keySet
com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl -> com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl:
    com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap this$0 -> this$0
    375:375:void <init>(com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap) -> <init>
    378:378:com.google.common.collect.ImmutableMap map() -> map
    383:383:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    374:374:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets -> com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:
    com.google.common.collect.ImmutableMap this$0 -> this$0
    537:537:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    542:542:int size() -> size
    547:547:com.google.common.collect.ImmutableSet keySet() -> keySet
    552:552:boolean containsKey(java.lang.Object) -> containsKey
    557:558:com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    563:563:boolean isPartialView() -> isPartialView
    569:569:int hashCode() -> hashCode
    574:574:boolean isHashCodeFast() -> isHashCodeFast
    579:580:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    536:536:java.lang.Object get(java.lang.Object) -> get
    536:536:java.util.Set keySet() -> keySet
    537:537:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableMap$1) -> <init>
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 -> com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1:
    java.util.Iterator val$backingIterator -> val$backingIterator
    com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets this$1 -> this$1
    580:580:void <init>(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets,java.util.Iterator) -> <init>
    583:583:boolean hasNext() -> hasNext
    588:589:java.util.Map$Entry next() -> next
    580:580:java.lang.Object next() -> next
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1 -> com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1:
    java.util.Map$Entry val$backingEntry -> val$backingEntry
    com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 this$2 -> this$2
    589:589:void <init>(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1,java.util.Map$Entry) -> <init>
    592:592:java.lang.Object getKey() -> getKey
    597:597:com.google.common.collect.ImmutableSet getValue() -> getValue
    589:589:java.lang.Object getValue() -> getValue
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    long serialVersionUID -> serialVersionUID
    635:644:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    647:648:java.lang.Object readResolve() -> readResolve
    652:655:java.lang.Object createMap(com.google.common.collect.ImmutableMap$Builder) -> createMap
com.google.common.collect.ImmutableMapEntry -> com.google.common.collect.ImmutableMapEntry:
    45:45:com.google.common.collect.ImmutableMapEntry[] createEntryArray(int) -> createEntryArray
    49:51:void <init>(java.lang.Object,java.lang.Object) -> <init>
    54:56:void <init>(com.google.common.collect.ImmutableMapEntry) -> <init>
    60:60:com.google.common.collect.ImmutableMapEntry getNextInKeyBucket() -> getNextInKeyBucket
    65:65:com.google.common.collect.ImmutableMapEntry getNextInValueBucket() -> getNextInValueBucket
    73:73:boolean isReusable() -> isReusable
com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableBiMapEntry -> com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableBiMapEntry:
    com.google.common.collect.ImmutableMapEntry nextInValueBucket -> nextInValueBucket
    105:107:void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry,com.google.common.collect.ImmutableMapEntry) -> <init>
    112:112:com.google.common.collect.ImmutableMapEntry getNextInValueBucket() -> getNextInValueBucket
com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry -> com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry:
    com.google.common.collect.ImmutableMapEntry nextInKeyBucket -> nextInKeyBucket
    80:82:void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableMapEntry) -> <init>
    87:87:com.google.common.collect.ImmutableMapEntry getNextInKeyBucket() -> getNextInKeyBucket
    92:92:boolean isReusable() -> isReusable
com.google.common.collect.ImmutableMapEntrySet -> com.google.common.collect.ImmutableMapEntrySet:
    61:61:void <init>() -> <init>
    com.google.common.collect.ImmutableMap map() -> map
    67:67:int size() -> size
    72:77:boolean contains(java.lang.Object) -> contains
    82:82:boolean isPartialView() -> isPartialView
    88:88:boolean isHashCodeFast() -> isHashCodeFast
    93:93:int hashCode() -> hashCode
    99:99:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:
    com.google.common.collect.ImmutableMap map -> map
    long serialVersionUID -> serialVersionUID
    106:108:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    111:111:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet -> com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:
    com.google.common.collect.ImmutableMap map -> map
    java.util.Map$Entry[] entries -> entries
    40:43:void <init>(com.google.common.collect.ImmutableMap,java.util.Map$Entry[]) -> <init>
    47:47:com.google.common.collect.ImmutableMap map() -> map
    52:52:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    57:57:com.google.common.collect.ImmutableList createAsList() -> createAsList
    36:36:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapKeySet -> com.google.common.collect.ImmutableMapKeySet:
    com.google.common.collect.ImmutableMap map -> map
    37:39:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    43:43:int size() -> size
    48:48:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    53:53:boolean contains(java.lang.Object) -> contains
    58:58:java.lang.Object get(int) -> get
    63:63:boolean isPartialView() -> isPartialView
    69:69:java.lang.Object writeReplace() -> writeReplace
    33:33:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm -> com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm:
    com.google.common.collect.ImmutableMap map -> map
    long serialVersionUID -> serialVersionUID
    76:78:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    81:81:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapValues -> com.google.common.collect.ImmutableMapValues:
    com.google.common.collect.ImmutableMap map -> map
    38:40:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    44:44:int size() -> size
    49:49:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    66:66:boolean contains(java.lang.Object) -> contains
    71:71:boolean isPartialView() -> isPartialView
    76:77:com.google.common.collect.ImmutableList createAsList() -> createAsList
    93:93:java.lang.Object writeReplace() -> writeReplace
    34:34:java.util.Iterator iterator() -> iterator
    35:35:com.google.common.collect.ImmutableMap access$000(com.google.common.collect.ImmutableMapValues) -> access$000
com.google.common.collect.ImmutableMapValues$1 -> com.google.common.collect.ImmutableMapValues$1:
    com.google.common.collect.UnmodifiableIterator entryItr -> entryItr
    com.google.common.collect.ImmutableMapValues this$0 -> this$0
    49:50:void <init>(com.google.common.collect.ImmutableMapValues) -> <init>
    54:54:boolean hasNext() -> hasNext
    59:59:java.lang.Object next() -> next
com.google.common.collect.ImmutableMapValues$2 -> com.google.common.collect.ImmutableMapValues$2:
    com.google.common.collect.ImmutableList val$entryList -> val$entryList
    com.google.common.collect.ImmutableMapValues this$0 -> this$0
    77:77:void <init>(com.google.common.collect.ImmutableMapValues,com.google.common.collect.ImmutableList) -> <init>
    80:80:java.lang.Object get(int) -> get
    85:85:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
com.google.common.collect.ImmutableMapValues$SerializedForm -> com.google.common.collect.ImmutableMapValues$SerializedForm:
    com.google.common.collect.ImmutableMap map -> map
    long serialVersionUID -> serialVersionUID
    100:102:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    105:105:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultimap -> com.google.common.collect.ImmutableMultimap:
    com.google.common.collect.ImmutableMap map -> map
    int size -> size
    long serialVersionUID -> serialVersionUID
    73:73:com.google.common.collect.ImmutableMultimap of() -> of
    80:80:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object) -> of
    87:87:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    96:96:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    105:105:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    115:115:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    125:125:com.google.common.collect.ImmutableMultimap$Builder builder() -> builder
    299:306:com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    321:321:com.google.common.collect.ImmutableMultimap copyOf(java.lang.Iterable) -> copyOf
    340:343:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    356:356:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    368:368:com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    380:380:void clear() -> clear
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    410:410:boolean put(java.lang.Object,java.lang.Object) -> put
    422:422:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    434:434:boolean putAll(com.google.common.collect.Multimap) -> putAll
    446:446:boolean remove(java.lang.Object,java.lang.Object) -> remove
    456:456:boolean isPartialView() -> isPartialView
    463:463:boolean containsKey(java.lang.Object) -> containsKey
    468:468:boolean containsValue(java.lang.Object) -> containsValue
    473:473:int size() -> size
    484:484:com.google.common.collect.ImmutableSet keySet() -> keySet
    495:495:com.google.common.collect.ImmutableMap asMap() -> asMap
    500:500:java.util.Map createAsMap() -> createAsMap
    508:508:com.google.common.collect.ImmutableCollection entries() -> entries
    513:513:com.google.common.collect.ImmutableCollection createEntries() -> createEntries
    575:575:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    590:590:com.google.common.collect.ImmutableMultiset keys() -> keys
    595:595:com.google.common.collect.ImmutableMultiset createKeys() -> createKeys
    641:641:com.google.common.collect.ImmutableCollection values() -> values
    646:646:com.google.common.collect.ImmutableCollection createValues() -> createValues
    651:651:com.google.common.collect.UnmodifiableIterator valueIterator() -> valueIterator
    67:67:java.lang.String toString() -> toString
    67:67:int hashCode() -> hashCode
    67:67:boolean equals(java.lang.Object) -> equals
    67:67:java.util.Map asMap() -> asMap
    67:67:java.util.Iterator valueIterator() -> valueIterator
    67:67:java.util.Collection createValues() -> createValues
    67:67:java.util.Collection values() -> values
    67:67:com.google.common.collect.Multiset createKeys() -> createKeys
    67:67:com.google.common.collect.Multiset keys() -> keys
    67:67:java.util.Set keySet() -> keySet
    67:67:java.util.Iterator entryIterator() -> entryIterator
    67:67:java.util.Collection createEntries() -> createEntries
    67:67:java.util.Collection entries() -> entries
    67:67:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    67:67:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    67:67:boolean isEmpty() -> isEmpty
    67:67:java.util.Collection get(java.lang.Object) -> get
    67:67:java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.ImmutableMultimap$1 -> com.google.common.collect.ImmutableMultimap$1:
    com.google.common.collect.ImmutableMultimap this$0 -> this$0
    575:575:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    578:578:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
    575:575:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.ImmutableMultimap$2 -> com.google.common.collect.ImmutableMultimap$2:
    com.google.common.collect.ImmutableMultimap this$0 -> this$0
    651:651:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    654:654:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.ImmutableMultimap$Builder -> com.google.common.collect.ImmutableMultimap$Builder:
    com.google.common.collect.Multimap builderMultimap -> builderMultimap
    java.util.Comparator keyComparator -> keyComparator
    java.util.Comparator valueComparator -> valueComparator
    156:157:void <init>() -> <init>
    159:161:void <init>(com.google.common.collect.Multimap) -> <init>
    167:169:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    178:178:com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    188:191:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable) -> putAll
    202:210:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    220:220:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    234:237:com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    246:247:com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    256:257:com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    264:282:com.google.common.collect.ImmutableMultimap build() -> build
com.google.common.collect.ImmutableMultimap$EntryCollection -> com.google.common.collect.ImmutableMultimap$EntryCollection:
    com.google.common.collect.ImmutableMultimap multimap -> multimap
    long serialVersionUID -> serialVersionUID
    519:521:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    525:525:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    530:530:boolean isPartialView() -> isPartialView
    535:535:int size() -> size
    540:544:boolean contains(java.lang.Object) -> contains
    516:516:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultimap$FieldSettersHolder -> com.google.common.collect.ImmutableMultimap$FieldSettersHolder:
    com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER -> MAP_FIELD_SETTER
    com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER -> SIZE_FIELD_SETTER
    com.google.common.collect.Serialization$FieldSetter EMPTY_SET_FIELD_SETTER -> EMPTY_SET_FIELD_SETTER
    331:331:void <init>() -> <init>
    332:336:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableMultimap$Itr -> com.google.common.collect.ImmutableMultimap$Itr:
    java.util.Iterator mapIterator -> mapIterator
    java.lang.Object key -> key
    java.util.Iterator valueIterator -> valueIterator
    com.google.common.collect.ImmutableMultimap this$0 -> this$0
    550:553:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    559:559:boolean hasNext() -> hasNext
    564:569:java.lang.Object next() -> next
    550:550:void <init>(com.google.common.collect.ImmutableMultimap,com.google.common.collect.ImmutableMultimap$1) -> <init>
com.google.common.collect.ImmutableMultimap$Keys -> com.google.common.collect.ImmutableMultimap$Keys:
    com.google.common.collect.ImmutableMultimap this$0 -> this$0
    600:600:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    603:603:boolean contains(java.lang.Object) -> contains
    608:609:int count(java.lang.Object) -> count
    614:614:java.util.Set elementSet() -> elementSet
    619:619:int size() -> size
    624:625:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    630:630:boolean isPartialView() -> isPartialView
com.google.common.collect.ImmutableMultimap$Values -> com.google.common.collect.ImmutableMultimap$Values:
    com.google.common.collect.ImmutableMultimap multimap -> multimap
    long serialVersionUID -> serialVersionUID
    662:664:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    668:668:boolean contains(java.lang.Object) -> contains
    673:673:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    679:682:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    687:687:int size() -> size
    692:692:boolean isPartialView() -> isPartialView
    659:659:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultiset -> com.google.common.collect.ImmutableMultiset:
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    59:59:com.google.common.collect.ImmutableMultiset of() -> of
    70:70:com.google.common.collect.ImmutableMultiset of(java.lang.Object) -> of
    81:81:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object) -> of
    93:93:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    105:105:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    117:117:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    129:129:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    148:148:com.google.common.collect.ImmutableMultiset copyOf(java.lang.Object[]) -> copyOf
    158:171:com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable) -> copyOf
    175:177:com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[]) -> copyFromElements
    182:185:com.google.common.collect.ImmutableMultiset copyFromEntries(java.util.Collection) -> copyFromEntries
    196:198:com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator) -> copyOf
    201:201:void <init>() -> <init>
    205:206:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    230:230:boolean contains(java.lang.Object) -> contains
    242:242:int add(java.lang.Object,int) -> add
    254:254:int remove(java.lang.Object,int) -> remove
    266:266:int setCount(java.lang.Object,int) -> setCount
    278:278:boolean setCount(java.lang.Object,int,int) -> setCount
    284:288:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    293:293:boolean equals(java.lang.Object) -> equals
    298:298:int hashCode() -> hashCode
    303:303:java.lang.String toString() -> toString
    310:311:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    315:315:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    407:407:java.lang.Object writeReplace() -> writeReplace
    415:415:com.google.common.collect.ImmutableMultiset$Builder builder() -> builder
    50:50:java.util.Iterator iterator() -> iterator
    50:50:java.util.Set entrySet() -> entrySet
com.google.common.collect.ImmutableMultiset$1 -> com.google.common.collect.ImmutableMultiset$1:
    int remaining -> remaining
    java.lang.Object element -> element
    java.util.Iterator val$entryIterator -> val$entryIterator
    com.google.common.collect.ImmutableMultiset this$0 -> this$0
    206:206:void <init>(com.google.common.collect.ImmutableMultiset,java.util.Iterator) -> <init>
    212:212:boolean hasNext() -> hasNext
    217:223:java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$Builder -> com.google.common.collect.ImmutableMultiset$Builder:
    com.google.common.collect.Multiset contents -> contents
    444:445:void <init>() -> <init>
    447:449:void <init>(com.google.common.collect.Multiset) -> <init>
    460:461:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    478:479:com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    493:494:com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    507:508:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    522:530:com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    543:544:com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    553:553:com.google.common.collect.ImmutableMultiset build() -> build
    436:436:com.google.common.collect.ImmutableCollection build() -> build
    436:436:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    436:436:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    436:436:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    436:436:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableMultiset$EntrySet -> com.google.common.collect.ImmutableMultiset$EntrySet:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultiset this$0 -> this$0
    321:321:void <init>(com.google.common.collect.ImmutableMultiset) -> <init>
    324:324:boolean isPartialView() -> isPartialView
    329:329:com.google.common.collect.Multiset$Entry get(int) -> get
    334:334:int size() -> size
    339:347:boolean contains(java.lang.Object) -> contains
    352:352:int hashCode() -> hashCode
    359:359:java.lang.Object writeReplace() -> writeReplace
    320:320:java.lang.Object get(int) -> get
    321:321:void <init>(com.google.common.collect.ImmutableMultiset,com.google.common.collect.ImmutableMultiset$1) -> <init>
com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm -> com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm:
    com.google.common.collect.ImmutableMultiset multiset -> multiset
    368:370:void <init>(com.google.common.collect.ImmutableMultiset) -> <init>
    373:373:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultiset$SerializedForm -> com.google.common.collect.ImmutableMultiset$SerializedForm:
    java.lang.Object[] elements -> elements
    int[] counts -> counts
    long serialVersionUID -> serialVersionUID
    381:391:void <init>(com.google.common.collect.Multiset) -> <init>
    394:398:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeMap -> com.google.common.collect.ImmutableRangeMap:
    com.google.common.collect.ImmutableRangeMap EMPTY -> EMPTY
    com.google.common.collect.ImmutableList ranges -> ranges
    com.google.common.collect.ImmutableList values -> values
    long serialVersionUID -> serialVersionUID
    53:53:com.google.common.collect.ImmutableRangeMap of() -> of
    60:60:com.google.common.collect.ImmutableRangeMap of(com.google.common.collect.Range,java.lang.Object) -> of
    66:76:com.google.common.collect.ImmutableRangeMap copyOf(com.google.common.collect.RangeMap) -> copyOf
    83:83:com.google.common.collect.ImmutableRangeMap$Builder builder() -> builder
    156:159:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList) -> <init>
    164:175:java.lang.Object get(java.lang.Comparable) -> get
    182:193:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    199:204:com.google.common.collect.Range span() -> span
    209:209:void put(com.google.common.collect.Range,java.lang.Object) -> put
    214:214:void putAll(com.google.common.collect.RangeMap) -> putAll
    219:219:void clear() -> clear
    224:224:void remove(com.google.common.collect.Range) -> remove
    229:234:com.google.common.collect.ImmutableMap asMapOfRanges() -> asMapOfRanges
    239:245:com.google.common.collect.ImmutableMap asDescendingMapOfRanges() -> asDescendingMapOfRanges
    250:297:com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    311:311:int hashCode() -> hashCode
    316:320:boolean equals(java.lang.Object) -> equals
    325:325:java.lang.String toString() -> toString
    360:360:java.lang.Object writeReplace() -> writeReplace
    40:40:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    40:40:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    40:40:java.util.Map asMapOfRanges() -> asMapOfRanges
    42:42:com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeMap) -> access$000
    44:44:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableRangeMap$1 -> com.google.common.collect.ImmutableRangeMap$1:
    int val$len -> val$len
    int val$off -> val$off
    com.google.common.collect.Range val$range -> val$range
    com.google.common.collect.ImmutableRangeMap this$0 -> this$0
    275:275:void <init>(com.google.common.collect.ImmutableRangeMap,int,int,com.google.common.collect.Range) -> <init>
    278:278:int size() -> size
    283:287:com.google.common.collect.Range get(int) -> get
    293:293:boolean isPartialView() -> isPartialView
    275:275:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeMap$2 -> com.google.common.collect.ImmutableRangeMap$2:
    com.google.common.collect.Range val$range -> val$range
    com.google.common.collect.ImmutableRangeMap val$outer -> val$outer
    com.google.common.collect.ImmutableRangeMap this$0 -> this$0
    297:297:void <init>(com.google.common.collect.ImmutableRangeMap,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.Range,com.google.common.collect.ImmutableRangeMap) -> <init>
    300:303:com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    297:297:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    297:297:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    297:297:java.util.Map asMapOfRanges() -> asMapOfRanges
com.google.common.collect.ImmutableRangeMap$Builder -> com.google.common.collect.ImmutableRangeMap$Builder:
    com.google.common.collect.RangeSet keyRanges -> keyRanges
    com.google.common.collect.RangeMap rangeMap -> rangeMap
    93:96:void <init>() -> <init>
    105:120:com.google.common.collect.ImmutableRangeMap$Builder put(com.google.common.collect.Range,java.lang.Object) -> put
    130:133:com.google.common.collect.ImmutableRangeMap$Builder putAll(com.google.common.collect.RangeMap) -> putAll
    141:149:com.google.common.collect.ImmutableRangeMap build() -> build
com.google.common.collect.ImmutableRangeMap$SerializedForm -> com.google.common.collect.ImmutableRangeMap$SerializedForm:
    com.google.common.collect.ImmutableMap mapOfRanges -> mapOfRanges
    long serialVersionUID -> serialVersionUID
    336:338:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    341:344:java.lang.Object readResolve() -> readResolve
    349:353:java.lang.Object createRangeMap() -> createRangeMap
com.google.common.collect.ImmutableRangeSet -> com.google.common.collect.ImmutableRangeSet:
    com.google.common.collect.ImmutableRangeSet EMPTY -> EMPTY
    com.google.common.collect.ImmutableRangeSet ALL -> ALL
    com.google.common.collect.ImmutableList ranges -> ranges
    com.google.common.collect.ImmutableRangeSet complement -> complement
    58:58:com.google.common.collect.ImmutableRangeSet of() -> of
    66:66:com.google.common.collect.ImmutableRangeSet all() -> all
    74:80:com.google.common.collect.ImmutableRangeSet of(com.google.common.collect.Range) -> of
    88:101:com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet) -> copyOf
    104:106:void <init>(com.google.common.collect.ImmutableList) -> <init>
    108:111:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableRangeSet) -> <init>
    117:125:boolean encloses(com.google.common.collect.Range) -> encloses
    130:142:com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    147:150:com.google.common.collect.Range span() -> span
    155:155:boolean isEmpty() -> isEmpty
    160:160:void add(com.google.common.collect.Range) -> add
    165:165:void addAll(com.google.common.collect.RangeSet) -> addAll
    170:170:void remove(com.google.common.collect.Range) -> remove
    175:175:void removeAll(com.google.common.collect.RangeSet) -> removeAll
    180:183:com.google.common.collect.ImmutableSet asRanges() -> asRanges
    188:191:com.google.common.collect.ImmutableSet asDescendingSetOfRanges() -> asDescendingSetOfRanges
    254:265:com.google.common.collect.ImmutableRangeSet complement() -> complement
    273:308:com.google.common.collect.ImmutableList intersectRanges(com.google.common.collect.Range) -> intersectRanges
    337:345:com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    368:387:com.google.common.collect.ImmutableSortedSet asSet(com.google.common.collect.DiscreteDomain) -> asSet
    553:553:boolean isPartialView() -> isPartialView
    560:560:com.google.common.collect.ImmutableRangeSet$Builder builder() -> builder
    635:635:java.lang.Object writeReplace() -> writeReplace
    43:43:boolean equals(java.lang.Object) -> equals
    43:43:boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    43:43:void clear() -> clear
    43:43:boolean contains(java.lang.Comparable) -> contains
    43:43:com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    43:43:com.google.common.collect.RangeSet complement() -> complement
    43:43:java.util.Set asDescendingSetOfRanges() -> asDescendingSetOfRanges
    43:43:java.util.Set asRanges() -> asRanges
    44:44:com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet) -> access$000
    47:50:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableRangeSet$1 -> com.google.common.collect.ImmutableRangeSet$1:
    int val$length -> val$length
    int val$fromIndex -> val$fromIndex
    com.google.common.collect.Range val$range -> val$range
    com.google.common.collect.ImmutableRangeSet this$0 -> this$0
    308:308:void <init>(com.google.common.collect.ImmutableRangeSet,int,int,com.google.common.collect.Range) -> <init>
    311:311:int size() -> size
    316:320:com.google.common.collect.Range get(int) -> get
    326:326:boolean isPartialView() -> isPartialView
    308:308:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeSet$AsSet -> com.google.common.collect.ImmutableRangeSet$AsSet:
    com.google.common.collect.DiscreteDomain domain -> domain
    java.lang.Integer size -> size
    com.google.common.collect.ImmutableRangeSet this$0 -> this$0
    393:396:void <init>(com.google.common.collect.ImmutableRangeSet,com.google.common.collect.DiscreteDomain) -> <init>
    403:414:int size() -> size
    419:419:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    440:440:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    459:459:com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range) -> subSet
    464:464:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Comparable,boolean) -> headSetImpl
    470:473:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSetImpl
    481:481:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Comparable,boolean) -> tailSetImpl
    486:494:boolean contains(java.lang.Object) -> contains
    500:513:int indexOf(java.lang.Object) -> indexOf
    518:518:boolean isPartialView() -> isPartialView
    523:523:java.lang.String toString() -> toString
    528:528:java.lang.Object writeReplace() -> writeReplace
    390:390:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    390:390:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    390:390:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    390:390:java.util.Iterator descendingIterator() -> descendingIterator
    390:390:java.util.Iterator iterator() -> iterator
    390:390:com.google.common.collect.DiscreteDomain access$100(com.google.common.collect.ImmutableRangeSet$AsSet) -> access$100
com.google.common.collect.ImmutableRangeSet$AsSet$1 -> com.google.common.collect.ImmutableRangeSet$AsSet$1:
    java.util.Iterator rangeItr -> rangeItr
    java.util.Iterator elemItr -> elemItr
    com.google.common.collect.ImmutableRangeSet$AsSet this$1 -> this$1
    419:421:void <init>(com.google.common.collect.ImmutableRangeSet$AsSet) -> <init>
    425:432:java.lang.Comparable computeNext() -> computeNext
    419:419:java.lang.Object computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSet$2 -> com.google.common.collect.ImmutableRangeSet$AsSet$2:
    java.util.Iterator rangeItr -> rangeItr
    java.util.Iterator elemItr -> elemItr
    com.google.common.collect.ImmutableRangeSet$AsSet this$1 -> this$1
    440:442:void <init>(com.google.common.collect.ImmutableRangeSet$AsSet) -> <init>
    446:453:java.lang.Comparable computeNext() -> computeNext
    440:440:java.lang.Object computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm -> com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm:
    com.google.common.collect.ImmutableList ranges -> ranges
    com.google.common.collect.DiscreteDomain domain -> domain
    536:539:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.DiscreteDomain) -> <init>
    542:542:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeSet$Builder -> com.google.common.collect.ImmutableRangeSet$Builder:
    com.google.common.collect.RangeSet rangeSet -> rangeSet
    569:571:void <init>() -> <init>
    581:594:com.google.common.collect.ImmutableRangeSet$Builder add(com.google.common.collect.Range) -> add
    602:605:com.google.common.collect.ImmutableRangeSet$Builder addAll(com.google.common.collect.RangeSet) -> addAll
    612:612:com.google.common.collect.ImmutableRangeSet build() -> build
com.google.common.collect.ImmutableRangeSet$ComplementRanges -> com.google.common.collect.ImmutableRangeSet$ComplementRanges:
    boolean positiveBoundedBelow -> positiveBoundedBelow
    boolean positiveBoundedAbove -> positiveBoundedAbove
    int size -> size
    com.google.common.collect.ImmutableRangeSet this$0 -> this$0
    206:218:void <init>(com.google.common.collect.ImmutableRangeSet) -> <init>
    222:222:int size() -> size
    227:243:com.google.common.collect.Range get(int) -> get
    248:248:boolean isPartialView() -> isPartialView
    197:197:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeSet$SerializedForm -> com.google.common.collect.ImmutableRangeSet$SerializedForm:
    com.google.common.collect.ImmutableList ranges -> ranges
    619:621:void <init>(com.google.common.collect.ImmutableList) -> <init>
    624:629:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    double DESIRED_LOAD_FACTOR -> DESIRED_LOAD_FACTOR
    int CUTOFF -> CUTOFF
    51:51:com.google.common.collect.ImmutableSet of() -> of
    60:60:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    69:69:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object) -> of
    78:78:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    87:87:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    96:96:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    107:116:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    135:182:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    206:217:int chooseTableSize(int) -> chooseTableSize
    237:247:com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> copyOf
    263:263:com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    276:283:com.google.common.collect.ImmutableSet copyOf(java.util.Iterator) -> copyOf
    298:304:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    310:310:com.google.common.collect.ImmutableSet copyOfEnumSet(java.util.EnumSet) -> copyOfEnumSet
    313:313:void <init>() -> <init>
    317:317:boolean isHashCodeFast() -> isHashCodeFast
    322:330:boolean equals(java.lang.Object) -> equals
    335:335:int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    390:390:java.lang.Object writeReplace() -> writeReplace
    398:398:com.google.common.collect.ImmutableSet$Builder builder() -> builder
    42:42:java.util.Iterator iterator() -> iterator
    44:44:com.google.common.collect.ImmutableSet access$000(int,java.lang.Object[]) -> access$000
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    422:423:void <init>() -> <init>
    426:427:void <init>(int) -> <init>
    440:441:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    455:456:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    470:471:com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    485:486:com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    495:499:com.google.common.collect.ImmutableSet build() -> build
    415:415:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    415:415:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    415:415:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    415:415:com.google.common.collect.ImmutableCollection build() -> build
    415:415:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    415:415:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSet$Indexed -> com.google.common.collect.ImmutableSet$Indexed:
    343:343:void <init>() -> <init>
    java.lang.Object get(int) -> get
    348:348:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    353:353:com.google.common.collect.ImmutableList createAsList() -> createAsList
    343:343:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSet$Indexed$1 -> com.google.common.collect.ImmutableSet$Indexed$1:
    com.google.common.collect.ImmutableSet$Indexed this$0 -> this$0
    353:353:void <init>(com.google.common.collect.ImmutableSet$Indexed) -> <init>
    356:356:java.lang.Object get(int) -> get
    361:361:com.google.common.collect.ImmutableSet$Indexed delegateCollection() -> delegateCollection
    353:353:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    377:379:void <init>(java.lang.Object[]) -> <init>
    382:382:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSetMultimap -> com.google.common.collect.ImmutableSetMultimap:
    com.google.common.collect.ImmutableSet emptySet -> emptySet
    com.google.common.collect.ImmutableSetMultimap inverse -> inverse
    com.google.common.collect.ImmutableSet entries -> entries
    long serialVersionUID -> serialVersionUID
    59:59:com.google.common.collect.ImmutableSetMultimap of() -> of
    66:68:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object) -> of
    77:80:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    89:93:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    103:108:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    118:124:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    133:133:com.google.common.collect.ImmutableSetMultimap$Builder builder() -> builder
    285:285:com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    290:318:com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator) -> copyOf
    334:334:com.google.common.collect.ImmutableSetMultimap copyOf(java.lang.Iterable) -> copyOf
    347:349:void <init>(com.google.common.collect.ImmutableMap,int,java.util.Comparator) -> <init>
    362:363:com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    379:380:com.google.common.collect.ImmutableSetMultimap inverse() -> inverse
    384:390:com.google.common.collect.ImmutableSetMultimap invert() -> invert
    402:402:com.google.common.collect.ImmutableSet removeAll(java.lang.Object) -> removeAll
    414:414:com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    426:427:com.google.common.collect.ImmutableSet entries() -> entries
    466:466:com.google.common.collect.ImmutableSet valueSet(java.util.Comparator,java.util.Collection) -> valueSet
    472:472:com.google.common.collect.ImmutableSet emptySet(java.util.Comparator) -> emptySet
    479:479:com.google.common.collect.ImmutableSet$Builder valuesBuilder(java.util.Comparator) -> valuesBuilder
    490:493:void writeObject(java.io.ObjectOutputStream) -> writeObject
    497:497:java.util.Comparator valueComparator() -> valueComparator
    506:544:void readObject(java.io.ObjectInputStream) -> readObject
    51:51:com.google.common.collect.ImmutableCollection entries() -> entries
    51:51:com.google.common.collect.ImmutableMultimap inverse() -> inverse
    51:51:com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    51:51:com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    51:51:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    51:51:java.util.Collection entries() -> entries
    51:51:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    51:51:java.util.Collection get(java.lang.Object) -> get
    51:51:java.util.Collection removeAll(java.lang.Object) -> removeAll
    51:51:java.util.Set entries() -> entries
    51:51:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    51:51:java.util.Set removeAll(java.lang.Object) -> removeAll
    51:51:java.util.Set get(java.lang.Object) -> get
    52:52:com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap,java.util.Comparator) -> access$000
com.google.common.collect.ImmutableSetMultimap$Builder -> com.google.common.collect.ImmutableSetMultimap$Builder:
    160:161:void <init>() -> <init>
    169:170:com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    180:181:com.google.common.collect.ImmutableSetMultimap$Builder put(java.util.Map$Entry) -> put
    192:193:com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Iterable) -> putAll
    198:202:com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    207:207:com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    213:216:com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    226:227:com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    244:245:com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    253:265:com.google.common.collect.ImmutableSetMultimap build() -> build
    154:154:com.google.common.collect.ImmutableMultimap build() -> build
    154:154:com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    154:154:com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    154:154:com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    154:154:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    154:154:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    154:154:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable) -> putAll
    154:154:com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    154:154:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSetMultimap$EntrySet -> com.google.common.collect.ImmutableSetMultimap$EntrySet:
    com.google.common.collect.ImmutableSetMultimap multimap -> multimap
    435:437:void <init>(com.google.common.collect.ImmutableSetMultimap) -> <init>
    441:445:boolean contains(java.lang.Object) -> contains
    450:450:int size() -> size
    455:455:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    460:460:boolean isPartialView() -> isPartialView
    432:432:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedAsList -> com.google.common.collect.ImmutableSortedAsList:
    35:36:void <init>(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    40:40:com.google.common.collect.ImmutableSortedSet delegateCollection() -> delegateCollection
    45:45:java.util.Comparator comparator() -> comparator
    54:61:int indexOf(java.lang.Object) -> indexOf
    67:67:int lastIndexOf(java.lang.Object) -> lastIndexOf
    73:73:boolean contains(java.lang.Object) -> contains
    84:85:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    30:30:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP -> NATURAL_EMPTY_MAP
    com.google.common.collect.RegularImmutableSortedSet keySet -> keySet
    com.google.common.collect.ImmutableList valueList -> valueList
    com.google.common.collect.ImmutableSortedMap descendingMap -> descendingMap
    long serialVersionUID -> serialVersionUID
    71:74:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    86:86:com.google.common.collect.ImmutableSortedMap of() -> of
    93:93:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object) -> of
    100:100:com.google.common.collect.ImmutableSortedMap of(java.util.Comparator,java.lang.Object,java.lang.Object) -> of
    107:107:com.google.common.collect.ImmutableSortedMap ofEntries(com.google.common.collect.ImmutableMapEntry[]) -> ofEntries
    120:120:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    133:133:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    146:146:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    159:159:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    184:185:com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map) -> copyOf
    202:202:com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map,java.util.Comparator) -> copyOf
    223:224:com.google.common.collect.ImmutableSortedMap copyOf(java.lang.Iterable) -> copyOf
    240:240:com.google.common.collect.ImmutableSortedMap copyOf(java.lang.Iterable,java.util.Comparator) -> copyOf
    255:270:com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap) -> copyOfSorted
    275:294:com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator) -> copyOfInternal
    309:310:com.google.common.collect.ImmutableSortedMap fromEntries(java.util.Comparator,boolean,java.lang.Iterable) -> fromEntries
    318:353:com.google.common.collect.ImmutableSortedMap fromEntries(java.util.Comparator,boolean,java.util.Map$Entry[],int) -> fromEntries
    365:365:com.google.common.collect.ImmutableSortedMap$Builder naturalOrder() -> naturalOrder
    377:377:com.google.common.collect.ImmutableSortedMap$Builder orderedBy(java.util.Comparator) -> orderedBy
    385:385:com.google.common.collect.ImmutableSortedMap$Builder reverseOrder() -> reverseOrder
    510:511:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    516:520:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    524:524:int size() -> size
    529:530:java.lang.Object get(java.lang.Object) -> get
    535:535:boolean isPartialView() -> isPartialView
    544:544:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    576:576:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    584:584:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    593:593:com.google.common.collect.ImmutableCollection values() -> values
    604:604:java.util.Comparator comparator() -> comparator
    609:609:java.lang.Object firstKey() -> firstKey
    614:614:java.lang.Object lastKey() -> lastKey
    618:623:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    640:640:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    657:657:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    675:675:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    696:703:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    718:718:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    736:736:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    741:741:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    746:746:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    751:751:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    756:756:java.lang.Object floorKey(java.lang.Object) -> floorKey
    761:761:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    766:766:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    771:771:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    776:776:java.lang.Object higherKey(java.lang.Object) -> higherKey
    781:781:java.util.Map$Entry firstEntry() -> firstEntry
    786:786:java.util.Map$Entry lastEntry() -> lastEntry
    798:798:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    810:810:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    817:827:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    832:832:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    837:837:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    866:866:java.lang.Object writeReplace() -> writeReplace
    56:56:com.google.common.collect.ImmutableSet keySet() -> keySet
    56:56:java.util.Set entrySet() -> entrySet
    56:56:java.util.Collection values() -> values
    56:56:java.util.Set keySet() -> keySet
    56:56:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    56:56:java.util.SortedMap headMap(java.lang.Object) -> headMap
    56:56:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    56:56:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    56:56:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    56:56:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    56:56:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    56:56:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    56:56:java.util.NavigableMap descendingMap() -> descendingMap
    57:57:com.google.common.collect.ImmutableSortedMap access$000(java.util.Comparator,java.lang.Object,java.lang.Object) -> access$000
    57:57:com.google.common.collect.ImmutableSortedMap access$100(java.util.Comparator,boolean,java.util.Map$Entry[],int) -> access$100
    57:57:com.google.common.collect.RegularImmutableSortedSet access$200(com.google.common.collect.ImmutableSortedMap) -> access$200
    57:57:com.google.common.collect.ImmutableList access$300(com.google.common.collect.ImmutableSortedMap) -> access$300
    64:66:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableSortedMap$1EntrySet -> com.google.common.collect.ImmutableSortedMap$1EntrySet:
    com.google.common.collect.ImmutableSortedMap this$0 -> this$0
    550:550:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    553:553:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    558:558:com.google.common.collect.ImmutableList createAsList() -> createAsList
    573:573:com.google.common.collect.ImmutableMap map() -> map
    549:549:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedMap$1EntrySet$1 -> com.google.common.collect.ImmutableSortedMap$1EntrySet$1:
    com.google.common.collect.ImmutableSortedMap$1EntrySet this$1 -> this$1
    558:558:void <init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> <init>
    561:561:java.util.Map$Entry get(int) -> get
    566:566:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    558:558:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    java.util.Comparator comparator -> comparator
    416:418:void <init>(java.util.Comparator) -> <init>
    427:428:com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    441:442:com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    454:455:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.util.Map) -> putAll
    469:470:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.lang.Iterable) -> putAll
    483:483:com.google.common.collect.ImmutableSortedMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    494:500:com.google.common.collect.ImmutableSortedMap build() -> build
    408:408:com.google.common.collect.ImmutableMap build() -> build
    408:408:com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    408:408:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    408:408:com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    408:408:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    408:408:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    java.util.Comparator comparator -> comparator
    long serialVersionUID -> serialVersionUID
    851:853:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    857:858:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    26:26:void <init>() -> <init>
    38:38:com.google.common.collect.ImmutableSortedMap$Builder builder() -> builder
    52:52:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object) -> of
    66:66:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    81:81:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    96:96:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    112:112:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.google.common.collect.ImmutableSortedMultiset -> com.google.common.collect.ImmutableSortedMultiset:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.ImmutableSortedMultiset NATURAL_EMPTY_MULTISET -> NATURAL_EMPTY_MULTISET
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset -> descendingMultiset
    64:64:com.google.common.collect.ImmutableSortedMultiset of() -> of
    71:74:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable) -> of
    85:85:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable) -> of
    96:96:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    108:108:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    120:120:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    132:136:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    146:146:com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Comparable[]) -> copyOf
    175:176:com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Iterable) -> copyOf
    193:194:com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Iterator) -> copyOf
    205:206:com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    221:235:com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    253:253:com.google.common.collect.ImmutableSortedMultiset copyOfSorted(com.google.common.collect.SortedMultiset) -> copyOfSorted
    259:270:com.google.common.collect.ImmutableSortedMultiset copyOfSortedEntries(java.util.Comparator,java.util.Collection) -> copyOfSortedEntries
    279:282:com.google.common.collect.ImmutableSortedMultiset emptyMultiset(java.util.Comparator) -> emptyMultiset
    286:286:void <init>() -> <init>
    290:290:java.util.Comparator comparator() -> comparator
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    300:307:com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    321:321:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    335:335:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    344:349:com.google.common.collect.ImmutableSortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    364:364:com.google.common.collect.ImmutableSortedMultiset$Builder orderedBy(java.util.Comparator) -> orderedBy
    376:376:com.google.common.collect.ImmutableSortedMultiset$Builder reverseOrder() -> reverseOrder
    390:390:com.google.common.collect.ImmutableSortedMultiset$Builder naturalOrder() -> naturalOrder
    547:547:java.lang.Object writeReplace() -> writeReplace
    48:48:java.util.Set elementSet() -> elementSet
    48:48:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    48:48:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    48:48:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    48:48:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    48:48:java.util.NavigableSet elementSet() -> elementSet
    48:48:java.util.SortedSet elementSet() -> elementSet
    54:56:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableSortedMultiset$Builder -> com.google.common.collect.ImmutableSortedMultiset$Builder:
    418:419:void <init>(java.util.Comparator) -> <init>
    430:431:com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object) -> add
    447:448:com.google.common.collect.ImmutableSortedMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    463:464:com.google.common.collect.ImmutableSortedMultiset$Builder setCount(java.lang.Object,int) -> setCount
    476:477:com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object[]) -> add
    489:490:com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.lang.Iterable) -> addAll
    502:503:com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.util.Iterator) -> addAll
    512:512:com.google.common.collect.ImmutableSortedMultiset build() -> build
    412:412:com.google.common.collect.ImmutableMultiset build() -> build
    412:412:com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    412:412:com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    412:412:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    412:412:com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    412:412:com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    412:412:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    412:412:com.google.common.collect.ImmutableCollection build() -> build
    412:412:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    412:412:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    412:412:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    412:412:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedMultiset$SerializedForm -> com.google.common.collect.ImmutableSortedMultiset$SerializedForm:
    java.util.Comparator comparator -> comparator
    java.lang.Object[] elements -> elements
    int[] counts -> counts
    522:533:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    536:541:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMultisetFauxverideShim -> com.google.common.collect.ImmutableSortedMultisetFauxverideShim:
    34:34:void <init>() -> <init>
    45:45:com.google.common.collect.ImmutableSortedMultiset$Builder builder() -> builder
    59:59:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object) -> of
    73:73:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object) -> of
    87:87:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    101:101:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    116:116:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    132:132:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    146:146:com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.RegularImmutableSortedSet NATURAL_EMPTY_SET -> NATURAL_EMPTY_SET
    java.util.Comparator comparator -> comparator
    com.google.common.collect.ImmutableSortedSet descendingSet -> descendingSet
    68:71:com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    79:79:com.google.common.collect.ImmutableSortedSet of() -> of
    86:86:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable) -> of
    98:98:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable) -> of
    110:110:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    122:122:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    135:135:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    149:157:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    171:171:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Comparable[]) -> copyOf
    204:205:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable) -> copyOf
    241:242:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Collection) -> copyOf
    260:261:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Iterator) -> copyOf
    275:275:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    293:305:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    328:328:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection) -> copyOf
    349:354:com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet) -> copyOfSorted
    372:386:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> construct
    399:399:com.google.common.collect.ImmutableSortedSet$Builder orderedBy(java.util.Comparator) -> orderedBy
    407:407:com.google.common.collect.ImmutableSortedSet$Builder reverseOrder() -> reverseOrder
    418:418:com.google.common.collect.ImmutableSortedSet$Builder naturalOrder() -> naturalOrder
    522:522:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    530:531:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    536:538:void <init>(java.util.Comparator) -> <init>
    549:549:java.util.Comparator comparator() -> comparator
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    568:568:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    577:577:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    595:595:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    605:608:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    624:624:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    633:633:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    653:653:java.lang.Object lower(java.lang.Object) -> lower
    662:662:java.lang.Object floor(java.lang.Object) -> floor
    671:671:java.lang.Object ceiling(java.lang.Object) -> ceiling
    680:680:java.lang.Object higher(java.lang.Object) -> higher
    685:685:java.lang.Object first() -> first
    690:690:java.lang.Object last() -> last
    704:704:java.lang.Object pollFirst() -> pollFirst
    718:718:java.lang.Object pollLast() -> pollLast
    731:736:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    741:741:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    int indexOf(java.lang.Object) -> indexOf
    780:780:void readObject(java.io.ObjectInputStream) -> readObject
    785:785:java.lang.Object writeReplace() -> writeReplace
    57:57:java.util.Iterator iterator() -> iterator
    57:57:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    57:57:java.util.SortedSet headSet(java.lang.Object) -> headSet
    57:57:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    57:57:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    57:57:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    57:57:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    57:57:java.util.NavigableSet descendingSet() -> descendingSet
    62:64:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    java.util.Comparator comparator -> comparator
    445:447:void <init>(java.util.Comparator) -> <init>
    461:462:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    475:476:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    489:490:com.google.common.collect.ImmutableSortedSet$Builder addAll(java.lang.Iterable) -> addAll
    503:504:com.google.common.collect.ImmutableSortedSet$Builder addAll(java.util.Iterator) -> addAll
    514:517:com.google.common.collect.ImmutableSortedSet build() -> build
    438:438:com.google.common.collect.ImmutableSet build() -> build
    438:438:com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    438:438:com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    438:438:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    438:438:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    438:438:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    438:438:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    438:438:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    438:438:com.google.common.collect.ImmutableCollection build() -> build
    438:438:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    438:438:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    java.util.Comparator comparator -> comparator
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    766:769:void <init>(java.util.Comparator,java.lang.Object[]) -> <init>
    773:773:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    35:35:void <init>() -> <init>
    47:47:com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    61:61:com.google.common.collect.ImmutableSortedSet of(java.lang.Object) -> of
    75:75:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object) -> of
    89:89:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    104:104:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    119:119:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    134:134:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    148:148:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.ImmutableTable -> com.google.common.collect.ImmutableTable:
    com.google.common.collect.ImmutableTable EMPTY -> EMPTY
    54:54:com.google.common.collect.ImmutableTable of() -> of
    59:59:com.google.common.collect.ImmutableTable of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    78:103:com.google.common.collect.ImmutableTable copyOf(com.google.common.collect.Table) -> copyOf
    113:113:com.google.common.collect.ImmutableTable$Builder builder() -> builder
    121:121:com.google.common.collect.Table$Cell cellOf(java.lang.Object,java.lang.Object,java.lang.Object) -> cellOf
    238:238:void <init>() -> <init>
    242:242:com.google.common.collect.ImmutableSet cellSet() -> cellSet
    com.google.common.collect.ImmutableSet createCellSet() -> createCellSet
    250:250:com.google.common.collect.UnmodifiableIterator cellIterator() -> cellIterator
    255:255:com.google.common.collect.ImmutableCollection values() -> values
    com.google.common.collect.ImmutableCollection createValues() -> createValues
    263:263:java.util.Iterator valuesIterator() -> valuesIterator
    273:274:com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    281:281:com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    300:301:com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    308:308:com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    322:322:boolean contains(java.lang.Object,java.lang.Object) -> contains
    327:327:boolean containsValue(java.lang.Object) -> containsValue
    339:339:void clear() -> clear
    351:351:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    363:363:void putAll(com.google.common.collect.Table) -> putAll
    375:375:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    42:42:java.lang.String toString() -> toString
    42:42:int hashCode() -> hashCode
    42:42:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Collection createValues() -> createValues
    42:42:java.util.Collection values() -> values
    42:42:java.util.Iterator cellIterator() -> cellIterator
    42:42:java.util.Set createCellSet() -> createCellSet
    42:42:java.util.Set cellSet() -> cellSet
    42:42:boolean isEmpty() -> isEmpty
    42:42:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    42:42:java.util.Set columnKeySet() -> columnKeySet
    42:42:java.util.Set rowKeySet() -> rowKeySet
    42:42:boolean containsColumn(java.lang.Object) -> containsColumn
    42:42:boolean containsRow(java.lang.Object) -> containsRow
    42:42:java.util.Map columnMap() -> columnMap
    42:42:java.util.Map rowMap() -> rowMap
    42:42:java.util.Map column(java.lang.Object) -> column
    42:42:java.util.Map row(java.lang.Object) -> row
    45:45:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableTable$Builder -> com.google.common.collect.ImmutableTable$Builder:
    java.util.List cells -> cells
    java.util.Comparator rowComparator -> rowComparator
    java.util.Comparator columnComparator -> columnComparator
    151:159:void <init>() -> <init>
    165:166:com.google.common.collect.ImmutableTable$Builder orderRowsBy(java.util.Comparator) -> orderRowsBy
    173:174:com.google.common.collect.ImmutableTable$Builder orderColumnsBy(java.util.Comparator) -> orderColumnsBy
    183:184:com.google.common.collect.ImmutableTable$Builder put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    193:203:com.google.common.collect.ImmutableTable$Builder put(com.google.common.collect.Table$Cell) -> put
    214:217:com.google.common.collect.ImmutableTable$Builder putAll(com.google.common.collect.Table) -> putAll
    226:233:com.google.common.collect.ImmutableTable build() -> build
com.google.common.collect.Interner -> com.google.common.collect.Interner:
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners -> com.google.common.collect.Interners:
    35:35:void <init>() -> <init>
    45:46:com.google.common.collect.Interner newStrongInterner() -> newStrongInterner
    64:64:com.google.common.collect.Interner newWeakInterner() -> newWeakInterner
    113:113:com.google.common.base.Function asFunction(com.google.common.collect.Interner) -> asFunction
com.google.common.collect.Interners$1 -> com.google.common.collect.Interners$1:
    java.util.concurrent.ConcurrentMap val$map -> val$map
    46:46:void <init>(java.util.concurrent.ConcurrentMap) -> <init>
    49:50:java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners$InternerFunction -> com.google.common.collect.Interners$InternerFunction:
    com.google.common.collect.Interner interner -> interner
    120:122:void <init>(com.google.common.collect.Interner) -> <init>
    126:126:java.lang.Object apply(java.lang.Object) -> apply
    131:131:int hashCode() -> hashCode
    136:141:boolean equals(java.lang.Object) -> equals
com.google.common.collect.Interners$WeakInterner -> com.google.common.collect.Interners$WeakInterner:
    com.google.common.collect.MapMakerInternalMap map -> map
    67:102:void <init>() -> <init>
    79:99:java.lang.Object intern(java.lang.Object) -> intern
    67:67:void <init>(com.google.common.collect.Interners$1) -> <init>
com.google.common.collect.Interners$WeakInterner$Dummy -> com.google.common.collect.Interners$WeakInterner$Dummy:
    com.google.common.collect.Interners$WeakInterner$Dummy VALUE -> VALUE
    com.google.common.collect.Interners$WeakInterner$Dummy[] $VALUES -> $VALUES
    102:102:com.google.common.collect.Interners$WeakInterner$Dummy[] values() -> values
    102:102:com.google.common.collect.Interners$WeakInterner$Dummy valueOf(java.lang.String) -> valueOf
    102:102:void <init>(java.lang.String,int) -> <init>
    102:103:void <clinit>() -> <clinit>
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    62:62:void <init>() -> <init>
    66:70:java.lang.Iterable unmodifiableIterable(java.lang.Iterable) -> unmodifiableIterable
    81:81:java.lang.Iterable unmodifiableIterable(com.google.common.collect.ImmutableCollection) -> unmodifiableIterable
    107:107:int size(java.lang.Iterable) -> size
    117:121:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    136:136:boolean removeAll(java.lang.Iterable,java.util.Collection) -> removeAll
    153:153:boolean retainAll(java.lang.Iterable,java.util.Collection) -> retainAll
    172:175:boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate) -> removeIf
    182:202:boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate) -> removeIfFromRandomAccessList
    217:226:void slowRemoveIfForRemainingElements(java.util.List,com.google.common.base.Predicate,int,int) -> slowRemoveIfForRemainingElements
    233:242:java.lang.Object removeFirstMatching(java.lang.Iterable,com.google.common.base.Predicate) -> removeFirstMatching
    254:261:boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    273:273:java.lang.String toString(java.lang.Iterable) -> toString
    284:284:java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    296:296:java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object) -> getOnlyElement
    309:311:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    315:316:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Object[]) -> toArray
    327:327:java.lang.Object[] toArray(java.lang.Iterable) -> toArray
    336:336:java.util.Collection toCollection(java.lang.Iterable) -> toCollection
    348:352:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    363:368:int frequency(java.lang.Iterable,java.lang.Object) -> frequency
    389:390:java.lang.Iterable cycle(java.lang.Iterable) -> cycle
    422:422:java.lang.Iterable cycle(java.lang.Object[]) -> cycle
    434:434:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    448:448:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    466:466:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    480:480:java.lang.Iterable concat(java.lang.Iterable[]) -> concat
    494:495:java.lang.Iterable concat(java.lang.Iterable) -> concat
    508:508:java.util.Iterator iterators(java.lang.Iterable) -> iterators
    538:540:java.lang.Iterable partition(java.lang.Iterable,int) -> partition
    566:568:java.lang.Iterable paddedPartition(java.lang.Iterable,int) -> paddedPartition
    583:585:java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    607:609:java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    621:621:boolean any(java.lang.Iterable,com.google.common.base.Predicate) -> any
    629:629:boolean all(java.lang.Iterable,com.google.common.base.Predicate) -> all
    642:642:java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate) -> find
    656:656:java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object) -> find
    670:670:com.google.common.base.Optional tryFind(java.lang.Iterable,com.google.common.base.Predicate) -> tryFind
    685:685:int indexOf(java.lang.Iterable,com.google.common.base.Predicate) -> indexOf
    703:705:java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> transform
    722:723:java.lang.Object get(java.lang.Iterable,int) -> get
    743:751:java.lang.Object get(java.lang.Iterable,int,java.lang.Object) -> get
    770:770:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    781:789:java.lang.Object getLast(java.lang.Iterable) -> getLast
    802:811:java.lang.Object getLast(java.lang.Iterable,java.lang.Object) -> getLast
    815:815:java.lang.Object getLastInNonemptyList(java.util.List) -> getLastInNonemptyList
    839:854:java.lang.Iterable skip(java.lang.Iterable,int) -> skip
    904:906:java.lang.Iterable limit(java.lang.Iterable,int) -> limit
    934:950:java.lang.Iterable consumingIterable(java.lang.Iterable) -> consumingIterable
    975:978:boolean isEmpty(java.lang.Iterable) -> isEmpty
    997:1008:java.lang.Iterable mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    1014:1014:com.google.common.base.Function toIterator() -> toIterator
    61:61:java.util.Iterator access$100(java.lang.Iterable) -> access$100
    61:61:com.google.common.base.Function access$200() -> access$200
com.google.common.collect.Iterables$1 -> com.google.common.collect.Iterables$1:
    java.lang.Iterable val$iterable -> val$iterable
    390:390:void <init>(java.lang.Iterable) -> <init>
    393:393:java.util.Iterator iterator() -> iterator
    398:398:java.lang.String toString() -> toString
com.google.common.collect.Iterables$10 -> com.google.common.collect.Iterables$10:
    java.lang.Iterable val$iterable -> val$iterable
    int val$numberToSkip -> val$numberToSkip
    854:854:void <init>(java.lang.Iterable,int) -> <init>
    857:866:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$10$1 -> com.google.common.collect.Iterables$10$1:
    boolean atStart -> atStart
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Iterables$10 this$0 -> this$0
    866:867:void <init>(com.google.common.collect.Iterables$10,java.util.Iterator) -> <init>
    871:871:boolean hasNext() -> hasNext
    876:878:java.lang.Object next() -> next
    883:885:void remove() -> remove
com.google.common.collect.Iterables$11 -> com.google.common.collect.Iterables$11:
    java.lang.Iterable val$iterable -> val$iterable
    int val$limitSize -> val$limitSize
    906:906:void <init>(java.lang.Iterable,int) -> <init>
    909:909:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$12 -> com.google.common.collect.Iterables$12:
    java.lang.Iterable val$iterable -> val$iterable
    935:935:void <init>(java.lang.Iterable) -> <init>
    938:938:java.util.Iterator iterator() -> iterator
    943:943:java.lang.String toString() -> toString
com.google.common.collect.Iterables$13 -> com.google.common.collect.Iterables$13:
    java.lang.Iterable val$iterable -> val$iterable
    950:950:void <init>(java.lang.Iterable) -> <init>
    953:953:java.util.Iterator iterator() -> iterator
    958:958:java.lang.String toString() -> toString
com.google.common.collect.Iterables$14 -> com.google.common.collect.Iterables$14:
    java.lang.Iterable val$iterables -> val$iterables
    java.util.Comparator val$comparator -> val$comparator
    1000:1000:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    1003:1003:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$15 -> com.google.common.collect.Iterables$15:
    1014:1014:void <init>() -> <init>
    1017:1017:java.util.Iterator apply(java.lang.Iterable) -> apply
    1014:1014:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Iterables$2 -> com.google.common.collect.Iterables$2:
    java.lang.Iterable val$inputs -> val$inputs
    495:495:void <init>(java.lang.Iterable) -> <init>
    498:498:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$3 -> com.google.common.collect.Iterables$3:
    509:509:void <init>(java.util.Iterator) -> <init>
    512:512:java.util.Iterator transform(java.lang.Iterable) -> transform
    509:509:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Iterables$4 -> com.google.common.collect.Iterables$4:
    java.lang.Iterable val$iterable -> val$iterable
    int val$size -> val$size
    540:540:void <init>(java.lang.Iterable,int) -> <init>
    543:543:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$5 -> com.google.common.collect.Iterables$5:
    java.lang.Iterable val$iterable -> val$iterable
    int val$size -> val$size
    568:568:void <init>(java.lang.Iterable,int) -> <init>
    571:571:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$6 -> com.google.common.collect.Iterables$6:
    java.lang.Iterable val$unfiltered -> val$unfiltered
    com.google.common.base.Predicate val$predicate -> val$predicate
    585:585:void <init>(java.lang.Iterable,com.google.common.base.Predicate) -> <init>
    588:588:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$7 -> com.google.common.collect.Iterables$7:
    java.lang.Iterable val$unfiltered -> val$unfiltered
    java.lang.Class val$type -> val$type
    609:609:void <init>(java.lang.Iterable,java.lang.Class) -> <init>
    612:612:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> com.google.common.collect.Iterables$8:
    java.lang.Iterable val$fromIterable -> val$fromIterable
    com.google.common.base.Function val$function -> val$function
    705:705:void <init>(java.lang.Iterable,com.google.common.base.Function) -> <init>
    708:708:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$9 -> com.google.common.collect.Iterables$9:
    java.util.List val$list -> val$list
    int val$numberToSkip -> val$numberToSkip
    844:844:void <init>(java.util.List,int) -> <init>
    848:849:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$UnmodifiableIterable -> com.google.common.collect.Iterables$UnmodifiableIterable:
    java.lang.Iterable iterable -> iterable
    87:89:void <init>(java.lang.Iterable) -> <init>
    93:93:java.util.Iterator iterator() -> iterator
    98:98:java.lang.String toString() -> toString
    84:84:void <init>(java.lang.Iterable,com.google.common.collect.Iterables$1) -> <init>
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR -> EMPTY_LIST_ITERATOR
    java.util.Iterator EMPTY_MODIFIABLE_ITERATOR -> EMPTY_MODIFIABLE_ITERATOR
    71:71:void <init>() -> <init>
    118:118:com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    130:130:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> emptyListIterator
    160:160:java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    165:169:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    190:190:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(com.google.common.collect.UnmodifiableIterator) -> unmodifiableIterator
    199:204:int size(java.util.Iterator) -> size
    211:211:boolean contains(java.util.Iterator,java.lang.Object) -> contains
    224:224:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    239:247:boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    260:260:boolean retainAll(java.util.Iterator,java.util.Collection) -> retainAll
    274:284:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    293:293:java.lang.String toString(java.util.Iterator) -> toString
    307:322:java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    334:334:java.lang.Object getOnlyElement(java.util.Iterator,java.lang.Object) -> getOnlyElement
    348:349:java.lang.Object[] toArray(java.util.Iterator,java.lang.Class) -> toArray
    361:367:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    378:378:int frequency(java.util.Iterator,java.lang.Object) -> frequency
    396:397:java.util.Iterator cycle(java.lang.Iterable) -> cycle
    446:446:java.util.Iterator cycle(java.lang.Object[]) -> cycle
    463:465:java.util.Iterator concat(java.util.Iterator,java.util.Iterator) -> concat
    484:487:java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    509:513:java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    532:535:java.util.Iterator concat(java.util.Iterator[]) -> concat
    553:554:java.util.Iterator concat(java.util.Iterator) -> concat
    608:608:com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int) -> partition
    628:628:com.google.common.collect.UnmodifiableIterator paddedPartition(java.util.Iterator,int) -> paddedPartition
    633:635:com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean) -> partitionImpl
    668:670:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    698:698:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,java.lang.Class) -> filter
    706:706:boolean any(java.util.Iterator,com.google.common.base.Predicate) -> any
    715:722:boolean all(java.util.Iterator,com.google.common.base.Predicate) -> all
    737:737:java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate) -> find
    753:753:java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object) -> find
    770:771:com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate) -> tryFind
    793:800:int indexOf(java.util.Iterator,com.google.common.base.Predicate) -> indexOf
    813:814:java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    833:843:java.lang.Object get(java.util.Iterator,int) -> get
    847:850:void checkNonnegative(int) -> checkNonnegative
    869:871:java.lang.Object get(java.util.Iterator,int,java.lang.Object) -> get
    885:885:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    896:900:java.lang.Object getLast(java.util.Iterator) -> getLast
    913:913:java.lang.Object getLast(java.util.Iterator,java.lang.Object) -> getLast
    924:931:int advance(java.util.Iterator,int) -> advance
    947:949:java.util.Iterator limit(java.util.Iterator,int) -> limit
    987:988:java.util.Iterator consumingIterator(java.util.Iterator) -> consumingIterator
    1014:1019:java.lang.Object pollNext(java.util.Iterator) -> pollNext
    1029:1034:void clear(java.util.Iterator) -> clear
    1050:1050:com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    1062:1077:com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> forArray
    1092:1092:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    1120:1121:com.google.common.collect.UnmodifiableIterator forEnumeration(java.util.Enumeration) -> forEnumeration
    1142:1143:java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
    1240:1247:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    1258:1258:com.google.common.collect.PeekingIterator peekingIterator(com.google.common.collect.PeekingIterator) -> peekingIterator
    1277:1280:com.google.common.collect.UnmodifiableIterator mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    1337:1337:java.util.ListIterator cast(java.util.Iterator) -> cast
    73:133:void <clinit>() -> <clinit>
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    74:74:void <init>() -> <init>
    77:77:boolean hasNext() -> hasNext
    82:82:java.lang.Object next() -> next
    87:87:boolean hasPrevious() -> hasPrevious
    92:92:java.lang.Object previous() -> previous
    97:97:int nextIndex() -> nextIndex
    102:102:int previousIndex() -> previousIndex
com.google.common.collect.Iterators$10 -> com.google.common.collect.Iterators$10:
    java.util.Iterator val$iterator -> val$iterator
    988:988:void <init>(java.util.Iterator) -> <init>
    991:991:boolean hasNext() -> hasNext
    996:998:java.lang.Object next() -> next
    1003:1003:java.lang.String toString() -> toString
com.google.common.collect.Iterators$11 -> com.google.common.collect.Iterators$11:
    java.lang.Object[] val$array -> val$array
    int val$offset -> val$offset
    1077:1077:void <init>(int,int,java.lang.Object[],int) -> <init>
    1080:1080:java.lang.Object get(int) -> get
com.google.common.collect.Iterators$12 -> com.google.common.collect.Iterators$12:
    boolean done -> done
    java.lang.Object val$value -> val$value
    1092:1092:void <init>(java.lang.Object) -> <init>
    1097:1097:boolean hasNext() -> hasNext
    1102:1106:java.lang.Object next() -> next
com.google.common.collect.Iterators$13 -> com.google.common.collect.Iterators$13:
    java.util.Enumeration val$enumeration -> val$enumeration
    1121:1121:void <init>(java.util.Enumeration) -> <init>
    1124:1124:boolean hasNext() -> hasNext
    1129:1129:java.lang.Object next() -> next
com.google.common.collect.Iterators$14 -> com.google.common.collect.Iterators$14:
    java.util.Iterator val$iterator -> val$iterator
    1143:1143:void <init>(java.util.Iterator) -> <init>
    1146:1146:boolean hasMoreElements() -> hasMoreElements
    1151:1151:java.lang.Object nextElement() -> nextElement
com.google.common.collect.Iterators$2 -> com.google.common.collect.Iterators$2:
    134:134:void <init>() -> <init>
    137:137:boolean hasNext() -> hasNext
    142:142:java.lang.Object next() -> next
    147:148:void remove() -> remove
com.google.common.collect.Iterators$3 -> com.google.common.collect.Iterators$3:
    java.util.Iterator val$iterator -> val$iterator
    169:169:void <init>(java.util.Iterator) -> <init>
    172:172:boolean hasNext() -> hasNext
    177:177:java.lang.Object next() -> next
com.google.common.collect.Iterators$4 -> com.google.common.collect.Iterators$4:
    java.util.Iterator iterator -> iterator
    java.lang.Iterable val$iterable -> val$iterable
    397:398:void <init>(java.lang.Iterable) -> <init>
    411:411:boolean hasNext() -> hasNext
    416:422:java.lang.Object next() -> next
    427:428:void remove() -> remove
com.google.common.collect.Iterators$5 -> com.google.common.collect.Iterators$5:
    java.util.Iterator current -> current
    java.util.Iterator removeFrom -> removeFrom
    java.util.Iterator val$inputs -> val$inputs
    554:555:void <init>(java.util.Iterator) -> <init>
    568:571:boolean hasNext() -> hasNext
    576:580:java.lang.Object next() -> next
    585:588:void remove() -> remove
com.google.common.collect.Iterators$6 -> com.google.common.collect.Iterators$6:
    java.util.Iterator val$iterator -> val$iterator
    int val$size -> val$size
    boolean val$pad -> val$pad
    635:635:void <init>(java.util.Iterator,int,boolean) -> <init>
    638:638:boolean hasNext() -> hasNext
    643:657:java.util.List next() -> next
    635:635:java.lang.Object next() -> next
com.google.common.collect.Iterators$7 -> com.google.common.collect.Iterators$7:
    java.util.Iterator val$unfiltered -> val$unfiltered
    com.google.common.base.Predicate val$predicate -> val$predicate
    670:670:void <init>(java.util.Iterator,com.google.common.base.Predicate) -> <init>
    673:679:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$8 -> com.google.common.collect.Iterators$8:
    com.google.common.base.Function val$function -> val$function
    814:814:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    817:817:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    int count -> count
    int val$limitSize -> val$limitSize
    java.util.Iterator val$iterator -> val$iterator
    949:949:void <init>(int,java.util.Iterator) -> <init>
    954:954:boolean hasNext() -> hasNext
    959:963:java.lang.Object next() -> next
    968:969:void remove() -> remove
com.google.common.collect.Iterators$MergingIterator -> com.google.common.collect.Iterators$MergingIterator:
    java.util.Queue queue -> queue
    1297:1315:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    1319:1319:boolean hasNext() -> hasNext
    1324:1329:java.lang.Object next() -> next
com.google.common.collect.Iterators$MergingIterator$1 -> com.google.common.collect.Iterators$MergingIterator$1:
    java.util.Comparator val$itemComparator -> val$itemComparator
    com.google.common.collect.Iterators$MergingIterator this$0 -> this$0
    1301:1301:void <init>(com.google.common.collect.Iterators$MergingIterator,java.util.Comparator) -> <init>
    1304:1304:int compare(com.google.common.collect.PeekingIterator,com.google.common.collect.PeekingIterator) -> compare
    1301:1301:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    java.util.Iterator iterator -> iterator
    boolean hasPeeked -> hasPeeked
    java.lang.Object peekedElement -> peekedElement
    1165:1167:void <init>(java.util.Iterator) -> <init>
    1171:1171:boolean hasNext() -> hasNext
    1176:1182:java.lang.Object next() -> next
    1187:1189:void remove() -> remove
    1193:1197:java.lang.Object peek() -> peek
com.google.common.collect.LexicographicalOrdering -> com.google.common.collect.LexicographicalOrdering:
    java.util.Comparator elementOrder -> elementOrder
    long serialVersionUID -> serialVersionUID
    35:37:void <init>(java.util.Comparator) -> <init>
    41:55:int compare(java.lang.Iterable,java.lang.Iterable) -> compare
    60:67:boolean equals(java.lang.Object) -> equals
    72:72:int hashCode() -> hashCode
    77:77:java.lang.String toString() -> toString
    31:31:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    int DEFAULT_KEY_CAPACITY -> DEFAULT_KEY_CAPACITY
    int DEFAULT_VALUE_SET_CAPACITY -> DEFAULT_VALUE_SET_CAPACITY
    double VALUE_SET_LOAD_FACTOR -> VALUE_SET_LOAD_FACTOR
    int valueSetCapacity -> valueSetCapacity
    com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry -> multimapHeaderEntry
    long serialVersionUID -> serialVersionUID
    90:90:com.google.common.collect.LinkedHashMultimap create() -> create
    103:103:com.google.common.collect.LinkedHashMultimap create(int,int) -> create
    118:120:com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap) -> create
    134:136:void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> succeedsInValueSet
    139:141:void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> succeedsInMultimap
    144:145:void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> deleteFromValueSet
    148:149:void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> deleteFromMultimap
    224:234:void <init>(int,int) -> <init>
    247:247:java.util.Set createCollection() -> createCollection
    261:261:java.util.Collection createCollection(java.lang.Object) -> createCollection
    274:274:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    291:291:java.util.Set entries() -> entries
    303:303:java.util.Collection values() -> values
    502:502:java.util.Iterator entryIterator() -> entryIterator
    533:533:java.util.Iterator valueIterator() -> valueIterator
    538:540:void clear() -> clear
    548:558:void writeObject(java.io.ObjectOutputStream) -> writeObject
    562:582:void readObject(java.io.ObjectInputStream) -> readObject
    82:82:boolean equals(java.lang.Object) -> equals
    82:82:boolean put(java.lang.Object,java.lang.Object) -> put
    82:82:java.util.Map asMap() -> asMap
    82:82:java.util.Set removeAll(java.lang.Object) -> removeAll
    82:82:java.util.Set get(java.lang.Object) -> get
    82:82:java.util.Collection entries() -> entries
    82:82:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    82:82:boolean containsKey(java.lang.Object) -> containsKey
    82:82:int size() -> size
    82:82:java.util.Collection createCollection() -> createCollection
    82:82:java.lang.String toString() -> toString
    82:82:int hashCode() -> hashCode
    82:82:com.google.common.collect.Multiset keys() -> keys
    82:82:java.util.Set keySet() -> keySet
    82:82:boolean putAll(com.google.common.collect.Multimap) -> putAll
    82:82:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    82:82:boolean remove(java.lang.Object,java.lang.Object) -> remove
    82:82:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    82:82:boolean containsValue(java.lang.Object) -> containsValue
    82:82:boolean isEmpty() -> isEmpty
    83:83:void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$200
    83:83:com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> access$300
    83:83:void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$400
    83:83:void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$500
    83:83:void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$600
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry -> nextEntry
    com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove -> toRemove
    com.google.common.collect.LinkedHashMultimap this$0 -> this$0
    502:503:void <init>(com.google.common.collect.LinkedHashMultimap) -> <init>
    508:508:boolean hasNext() -> hasNext
    513:519:java.util.Map$Entry next() -> next
    524:527:void remove() -> remove
    502:502:java.lang.Object next() -> next
com.google.common.collect.LinkedHashMultimap$ValueEntry -> com.google.common.collect.LinkedHashMultimap$ValueEntry:
    int smearedValueHash -> smearedValueHash
    com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket -> nextInValueBucket
    com.google.common.collect.LinkedHashMultimap$ValueSetLink predecessorInValueSet -> predecessorInValueSet
    com.google.common.collect.LinkedHashMultimap$ValueSetLink successorInValueSet -> successorInValueSet
    com.google.common.collect.LinkedHashMultimap$ValueEntry predecessorInMultimap -> predecessorInMultimap
    com.google.common.collect.LinkedHashMultimap$ValueEntry successorInMultimap -> successorInMultimap
    174:177:void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> <init>
    180:180:boolean matchesValue(java.lang.Object,int) -> matchesValue
    185:185:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    190:190:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    195:196:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    200:201:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    204:204:com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> getPredecessorInMultimap
    208:208:com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> getSuccessorInMultimap
    212:213:void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setSuccessorInMultimap
    216:217:void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setPredecessorInMultimap
com.google.common.collect.LinkedHashMultimap$ValueSet -> com.google.common.collect.LinkedHashMultimap$ValueSet:
    java.lang.Object key -> key
    com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable -> hashTable
    int size -> size
    int modCount -> modCount
    com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry -> firstEntry
    com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry -> lastEntry
    com.google.common.collect.LinkedHashMultimap this$0 -> this$0
    316:334:void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int) -> <init>
    337:337:int mask() -> mask
    342:342:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    347:347:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    352:353:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    357:358:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    362:362:java.util.Iterator iterator() -> iterator
    404:404:int size() -> size
    409:417:boolean contains(java.lang.Object) -> contains
    422:440:boolean add(java.lang.Object) -> add
    444:458:void rehashIfNecessary() -> rehashIfNecessary
    462:482:boolean remove(java.lang.Object) -> remove
    487:497:void clear() -> clear
    308:308:com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$000
    308:308:int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$100
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> com.google.common.collect.LinkedHashMultimap$ValueSet$1:
    com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry -> nextEntry
    com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove -> toRemove
    int expectedModCount -> expectedModCount
    com.google.common.collect.LinkedHashMultimap$ValueSet this$1 -> this$1
    362:365:void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet) -> <init>
    368:371:void checkForComodification() -> checkForComodification
    375:376:boolean hasNext() -> hasNext
    381:388:java.lang.Object next() -> next
    393:398:void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueSetLink -> com.google.common.collect.LinkedHashMultimap$ValueSetLink:
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
com.google.common.collect.LinkedHashMultiset -> com.google.common.collect.LinkedHashMultiset:
    long serialVersionUID -> serialVersionUID
    52:52:com.google.common.collect.LinkedHashMultiset create() -> create
    63:63:com.google.common.collect.LinkedHashMultiset create(int) -> create
    75:77:com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable) -> create
    81:82:void <init>() -> <init>
    85:86:void <init>(int) -> <init>
    94:96:void writeObject(java.io.ObjectOutputStream) -> writeObject
    100:104:void readObject(java.io.ObjectInputStream) -> readObject
    43:43:int setCount(java.lang.Object,int) -> setCount
    43:43:int remove(java.lang.Object,int) -> remove
    43:43:int add(java.lang.Object,int) -> add
    43:43:int count(java.lang.Object) -> count
    43:43:java.util.Iterator iterator() -> iterator
    43:43:int size() -> size
    43:43:void clear() -> clear
    43:43:java.util.Set entrySet() -> entrySet
    43:43:java.lang.String toString() -> toString
    43:43:int hashCode() -> hashCode
    43:43:boolean equals(java.lang.Object) -> equals
    43:43:java.util.Set elementSet() -> elementSet
    43:43:boolean retainAll(java.util.Collection) -> retainAll
    43:43:boolean removeAll(java.util.Collection) -> removeAll
    43:43:boolean addAll(java.util.Collection) -> addAll
    43:43:boolean setCount(java.lang.Object,int,int) -> setCount
    43:43:boolean remove(java.lang.Object) -> remove
    43:43:boolean add(java.lang.Object) -> add
    43:43:boolean contains(java.lang.Object) -> contains
    43:43:boolean isEmpty() -> isEmpty
com.google.common.collect.LinkedListMultimap -> com.google.common.collect.LinkedListMultimap:
    com.google.common.collect.LinkedListMultimap$Node head -> head
    com.google.common.collect.LinkedListMultimap$Node tail -> tail
    java.util.Map keyToKeyList -> keyToKeyList
    int size -> size
    int modCount -> modCount
    long serialVersionUID -> serialVersionUID
    174:174:com.google.common.collect.LinkedListMultimap create() -> create
    185:185:com.google.common.collect.LinkedListMultimap create(int) -> create
    197:197:com.google.common.collect.LinkedListMultimap create(com.google.common.collect.Multimap) -> create
    200:202:void <init>() -> <init>
    204:206:void <init>(int) -> <init>
    209:211:void <init>(com.google.common.collect.Multimap) -> <init>
    220:261:com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> addNode
    270:301:void removeNode(com.google.common.collect.LinkedListMultimap$Node) -> removeNode
    305:306:void removeAllNodes(java.lang.Object) -> removeAllNodes
    310:313:void checkElement(java.lang.Object) -> checkElement
    575:575:int size() -> size
    580:580:boolean isEmpty() -> isEmpty
    585:585:boolean containsKey(java.lang.Object) -> containsKey
    590:590:boolean containsValue(java.lang.Object) -> containsValue
    604:605:boolean put(java.lang.Object,java.lang.Object) -> put
    622:643:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    647:647:java.util.List getCopy(java.lang.Object) -> getCopy
    658:660:java.util.List removeAll(java.lang.Object) -> removeAll
    665:670:void clear() -> clear
    685:685:java.util.List get(java.lang.Object) -> get
    723:723:java.util.Set createKeySet() -> createKeySet
    737:737:java.util.List values() -> values
    765:765:java.util.List createValues() -> createValues
    788:788:java.util.List entries() -> entries
    805:805:java.util.List createEntries() -> createEntries
    810:810:java.util.Iterator entryIterator() -> entryIterator
    815:815:java.util.Map createAsMap() -> createAsMap
    825:831:void writeObject(java.io.ObjectOutputStream) -> writeObject
    835:845:void readObject(java.io.ObjectInputStream) -> readObject
    102:102:java.lang.String toString() -> toString
    102:102:int hashCode() -> hashCode
    102:102:boolean equals(java.lang.Object) -> equals
    102:102:java.util.Map asMap() -> asMap
    102:102:java.util.Collection createValues() -> createValues
    102:102:java.util.Collection values() -> values
    102:102:com.google.common.collect.Multiset keys() -> keys
    102:102:java.util.Set keySet() -> keySet
    102:102:java.util.Collection createEntries() -> createEntries
    102:102:java.util.Collection entries() -> entries
    102:102:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    102:102:boolean putAll(com.google.common.collect.Multimap) -> putAll
    102:102:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    102:102:boolean remove(java.lang.Object,java.lang.Object) -> remove
    102:102:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    102:102:java.util.Collection get(java.lang.Object) -> get
    102:102:java.util.Collection removeAll(java.lang.Object) -> removeAll
    103:103:int access$000(com.google.common.collect.LinkedListMultimap) -> access$000
    103:103:com.google.common.collect.LinkedListMultimap$Node access$100(com.google.common.collect.LinkedListMultimap) -> access$100
    103:103:com.google.common.collect.LinkedListMultimap$Node access$200(com.google.common.collect.LinkedListMultimap) -> access$200
    103:103:void access$300(java.lang.Object) -> access$300
    103:103:void access$400(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node) -> access$400
    103:103:void access$500(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> access$500
    103:103:java.util.Map access$600(com.google.common.collect.LinkedListMultimap) -> access$600
    103:103:com.google.common.collect.LinkedListMultimap$Node access$700(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> access$700
    103:103:int access$900(com.google.common.collect.LinkedListMultimap) -> access$900
com.google.common.collect.LinkedListMultimap$1 -> com.google.common.collect.LinkedListMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    685:685:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> <init>
    688:689:int size() -> size
    694:694:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$1EntriesImpl -> com.google.common.collect.LinkedListMultimap$1EntriesImpl:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    794:794:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    797:797:int size() -> size
    802:802:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$1KeySetImpl -> com.google.common.collect.LinkedListMultimap$1KeySetImpl:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    702:702:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    705:705:int size() -> size
    710:710:java.util.Iterator iterator() -> iterator
    715:715:boolean contains(java.lang.Object) -> contains
    720:720:boolean remove(java.lang.Object) -> remove
com.google.common.collect.LinkedListMultimap$1ValuesImpl -> com.google.common.collect.LinkedListMultimap$1ValuesImpl:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    743:743:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    746:746:int size() -> size
    751:752:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$1ValuesImpl$1 -> com.google.common.collect.LinkedListMultimap$1ValuesImpl$1:
    com.google.common.collect.LinkedListMultimap$NodeIterator val$nodeItr -> val$nodeItr
    com.google.common.collect.LinkedListMultimap$1ValuesImpl this$1 -> this$1
    752:752:void <init>(com.google.common.collect.LinkedListMultimap$1ValuesImpl,java.util.ListIterator,com.google.common.collect.LinkedListMultimap$NodeIterator) -> <init>
    755:755:java.lang.Object transform(java.util.Map$Entry) -> transform
    760:761:void set(java.lang.Object) -> set
    752:752:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.LinkedListMultimap$DistinctKeyIterator -> com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:
    java.util.Set seenKeys -> seenKeys
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node current -> current
    int expectedModCount -> expectedModCount
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    421:425:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    428:431:void checkForConcurrentModification() -> checkForConcurrentModification
    435:436:boolean hasNext() -> hasNext
    441:448:java.lang.Object next() -> next
    453:458:void remove() -> remove
    421:421:void <init>(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$1) -> <init>
com.google.common.collect.LinkedListMultimap$KeyList -> com.google.common.collect.LinkedListMultimap$KeyList:
    com.google.common.collect.LinkedListMultimap$Node head -> head
    com.google.common.collect.LinkedListMultimap$Node tail -> tail
    int count -> count
    148:154:void <init>(com.google.common.collect.LinkedListMultimap$Node) -> <init>
com.google.common.collect.LinkedListMultimap$Node -> com.google.common.collect.LinkedListMultimap$Node:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node previous -> previous
    com.google.common.collect.LinkedListMultimap$Node nextSibling -> nextSibling
    com.google.common.collect.LinkedListMultimap$Node previousSibling -> previousSibling
    120:123:void <init>(java.lang.Object,java.lang.Object) -> <init>
    127:127:java.lang.Object getKey() -> getKey
    132:132:java.lang.Object getValue() -> getValue
    137:139:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$NodeIterator -> com.google.common.collect.LinkedListMultimap$NodeIterator:
    int nextIndex -> nextIndex
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node current -> current
    com.google.common.collect.LinkedListMultimap$Node previous -> previous
    int expectedModCount -> expectedModCount
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    321:339:void <init>(com.google.common.collect.LinkedListMultimap,int) -> <init>
    342:345:void checkForConcurrentModification() -> checkForConcurrentModification
    349:350:boolean hasNext() -> hasNext
    355:360:com.google.common.collect.LinkedListMultimap$Node next() -> next
    365:376:void remove() -> remove
    380:381:boolean hasPrevious() -> hasPrevious
    386:391:com.google.common.collect.LinkedListMultimap$Node previous() -> previous
    396:396:int nextIndex() -> nextIndex
    401:401:int previousIndex() -> previousIndex
    406:406:void set(java.util.Map$Entry) -> set
    411:411:void add(java.util.Map$Entry) -> add
    415:417:void setValue(java.lang.Object) -> setValue
    316:316:void add(java.lang.Object) -> add
    316:316:void set(java.lang.Object) -> set
    316:316:java.lang.Object previous() -> previous
    316:316:java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator -> com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:
    java.lang.Object key -> key
    int nextIndex -> nextIndex
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node current -> current
    com.google.common.collect.LinkedListMultimap$Node previous -> previous
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    470:474:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> <init>
    485:503:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object,int) -> <init>
    507:507:boolean hasNext() -> hasNext
    512:516:java.lang.Object next() -> next
    521:521:boolean hasPrevious() -> hasPrevious
    526:530:java.lang.Object previous() -> previous
    535:535:int nextIndex() -> nextIndex
    540:540:int previousIndex() -> previousIndex
    545:554:void remove() -> remove
    558:560:void set(java.lang.Object) -> set
    565:568:void add(java.lang.Object) -> add
com.google.common.collect.ListMultimap -> com.google.common.collect.ListMultimap:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    71:71:void <init>() -> <init>
    89:89:java.util.ArrayList newArrayList() -> newArrayList
    111:116:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    121:124:int computeArrayListCapacity(int) -> computeArrayListCapacity
    144:146:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    161:163:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    186:187:java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    208:208:java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    232:232:java.util.LinkedList newLinkedList() -> newLinkedList
    257:259:java.util.LinkedList newLinkedList(java.lang.Iterable) -> newLinkedList
    273:273:java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList() -> newCopyOnWriteArrayList
    288:292:java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList(java.lang.Iterable) -> newCopyOnWriteArrayList
    312:312:java.util.List asList(java.lang.Object,java.lang.Object[]) -> asList
    359:359:java.util.List asList(java.lang.Object,java.lang.Object,java.lang.Object[]) -> asList
    455:455:java.util.List cartesianProduct(java.util.List) -> cartesianProduct
    516:516:java.util.List cartesianProduct(java.util.List[]) -> cartesianProduct
    555:555:java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
    682:684:java.util.List partition(java.util.List,int) -> partition
    731:731:com.google.common.collect.ImmutableList charactersOf(java.lang.String) -> charactersOf
    789:789:java.util.List charactersOf(java.lang.CharSequence) -> charactersOf
    825:832:java.util.List reverse(java.util.List) -> reverse
    985:992:int hashCodeImpl(java.util.List) -> hashCodeImpl
    999:1019:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    1027:1033:boolean addAllImpl(java.util.List,int,java.lang.Iterable) -> addAllImpl
    1040:1049:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1054:1068:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1075:1084:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1089:1102:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    1109:1109:java.util.ListIterator listIteratorImpl(java.util.List,int) -> listIteratorImpl
    1117:1136:java.util.List subListImpl(java.util.List,int,int) -> subListImpl
    1193:1193:java.util.List cast(java.lang.Iterable) -> cast
com.google.common.collect.Lists$1 -> com.google.common.collect.Lists$1:
    long serialVersionUID -> serialVersionUID
    1118:1118:void <init>(java.util.List) -> <init>
    1121:1121:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$2 -> com.google.common.collect.Lists$2:
    long serialVersionUID -> serialVersionUID
    1127:1127:void <init>(java.util.List) -> <init>
    1130:1130:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$AbstractListWrapper -> com.google.common.collect.Lists$AbstractListWrapper:
    java.util.List backingList -> backingList
    1142:1144:void <init>(java.util.List) -> <init>
    1148:1149:void add(int,java.lang.Object) -> add
    1153:1153:boolean addAll(int,java.util.Collection) -> addAll
    1158:1158:java.lang.Object get(int) -> get
    1163:1163:java.lang.Object remove(int) -> remove
    1168:1168:java.lang.Object set(int,java.lang.Object) -> set
    1173:1173:boolean contains(java.lang.Object) -> contains
    1178:1178:int size() -> size
com.google.common.collect.Lists$CharSequenceAsList -> com.google.common.collect.Lists$CharSequenceAsList:
    java.lang.CharSequence sequence -> sequence
    795:797:void <init>(java.lang.CharSequence) -> <init>
    801:802:java.lang.Character get(int) -> get
    807:807:int size() -> size
    792:792:java.lang.Object get(int) -> get
com.google.common.collect.Lists$OnePlusArrayList -> com.google.common.collect.Lists$OnePlusArrayList:
    java.lang.Object first -> first
    java.lang.Object[] rest -> rest
    long serialVersionUID -> serialVersionUID
    321:324:void <init>(java.lang.Object,java.lang.Object[]) -> <init>
    328:328:int size() -> size
    334:335:java.lang.Object get(int) -> get
com.google.common.collect.Lists$Partition -> com.google.common.collect.Lists$Partition:
    java.util.List list -> list
    int size -> size
    693:696:void <init>(java.util.List,int) -> <init>
    700:703:java.util.List get(int) -> get
    708:708:int size() -> size
    713:713:boolean isEmpty() -> isEmpty
    689:689:java.lang.Object get(int) -> get
com.google.common.collect.Lists$RandomAccessListWrapper -> com.google.common.collect.Lists$RandomAccessListWrapper:
    1185:1186:void <init>(java.util.List) -> <init>
com.google.common.collect.Lists$RandomAccessPartition -> com.google.common.collect.Lists$RandomAccessPartition:
    719:720:void <init>(java.util.List,int) -> <init>
com.google.common.collect.Lists$RandomAccessReverseList -> com.google.common.collect.Lists$RandomAccessReverseList:
    976:977:void <init>(java.util.List) -> <init>
com.google.common.collect.Lists$ReverseList -> com.google.common.collect.Lists$ReverseList:
    java.util.List forwardList -> forwardList
    839:841:void <init>(java.util.List) -> <init>
    844:844:java.util.List getForwardList() -> getForwardList
    848:850:int reverseIndex(int) -> reverseIndex
    854:856:int reversePosition(int) -> reversePosition
    861:862:void add(int,java.lang.Object) -> add
    866:867:void clear() -> clear
    871:871:java.lang.Object remove(int) -> remove
    876:877:void removeRange(int,int) -> removeRange
    881:881:java.lang.Object set(int,java.lang.Object) -> set
    886:886:java.lang.Object get(int) -> get
    891:891:int size() -> size
    896:897:java.util.List subList(int,int) -> subList
    902:902:java.util.Iterator iterator() -> iterator
    907:909:java.util.ListIterator listIterator(int) -> listIterator
    836:836:int access$000(com.google.common.collect.Lists$ReverseList,int) -> access$000
com.google.common.collect.Lists$ReverseList$1 -> com.google.common.collect.Lists$ReverseList$1:
    boolean canRemoveOrSet -> canRemoveOrSet
    java.util.ListIterator val$forwardIterator -> val$forwardIterator
    com.google.common.collect.Lists$ReverseList this$0 -> this$0
    909:909:void <init>(com.google.common.collect.Lists$ReverseList,java.util.ListIterator) -> <init>
    915:918:void add(java.lang.Object) -> add
    922:922:boolean hasNext() -> hasNext
    927:927:boolean hasPrevious() -> hasPrevious
    932:936:java.lang.Object next() -> next
    941:941:int nextIndex() -> nextIndex
    946:950:java.lang.Object previous() -> previous
    955:955:int previousIndex() -> previousIndex
    960:963:void remove() -> remove
    967:969:void set(java.lang.Object) -> set
com.google.common.collect.Lists$StringAsImmutableList -> com.google.common.collect.Lists$StringAsImmutableList:
    java.lang.String string -> string
    739:741:void <init>(java.lang.String) -> <init>
    745:745:int indexOf(java.lang.Object) -> indexOf
    750:750:int lastIndexOf(java.lang.Object) -> lastIndexOf
    755:756:com.google.common.collect.ImmutableList subList(int,int) -> subList
    761:761:boolean isPartialView() -> isPartialView
    766:767:java.lang.Character get(int) -> get
    772:772:int size() -> size
    734:734:java.util.List subList(int,int) -> subList
    734:734:java.lang.Object get(int) -> get
com.google.common.collect.Lists$TransformingRandomAccessList -> com.google.common.collect.Lists$TransformingRandomAccessList:
    java.util.List fromList -> fromList
    com.google.common.base.Function function -> function
    long serialVersionUID -> serialVersionUID
    615:618:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    622:623:void clear() -> clear
    627:627:java.lang.Object get(int) -> get
    632:632:java.util.Iterator iterator() -> iterator
    637:637:java.util.ListIterator listIterator(int) -> listIterator
    647:647:boolean isEmpty() -> isEmpty
    652:652:java.lang.Object remove(int) -> remove
    657:657:int size() -> size
com.google.common.collect.Lists$TransformingRandomAccessList$1 -> com.google.common.collect.Lists$TransformingRandomAccessList$1:
    com.google.common.collect.Lists$TransformingRandomAccessList this$0 -> this$0
    637:637:void <init>(com.google.common.collect.Lists$TransformingRandomAccessList,java.util.ListIterator) -> <init>
    640:640:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Lists$TransformingSequentialList -> com.google.common.collect.Lists$TransformingSequentialList:
    java.util.List fromList -> fromList
    com.google.common.base.Function function -> function
    long serialVersionUID -> serialVersionUID
    570:573:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    581:582:void clear() -> clear
    586:586:int size() -> size
    591:591:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$TransformingSequentialList$1 -> com.google.common.collect.Lists$TransformingSequentialList$1:
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> this$0
    591:591:void <init>(com.google.common.collect.Lists$TransformingSequentialList,java.util.ListIterator) -> <init>
    594:594:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Lists$TwoPlusArrayList -> com.google.common.collect.Lists$TwoPlusArrayList:
    java.lang.Object first -> first
    java.lang.Object second -> second
    java.lang.Object[] rest -> rest
    long serialVersionUID -> serialVersionUID
    369:373:void <init>(java.lang.Object,java.lang.Object,java.lang.Object[]) -> <init>
    377:377:int size() -> size
    382:390:java.lang.Object get(int) -> get
com.google.common.collect.MapConstraint -> com.google.common.collect.MapConstraint:
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapConstraints -> com.google.common.collect.MapConstraints:
    54:54:void <init>() -> <init>
    61:61:com.google.common.collect.MapConstraint notNull() -> notNull
    94:94:java.util.Map constrainedMap(java.util.Map,com.google.common.collect.MapConstraint) -> constrainedMap
    115:115:com.google.common.collect.Multimap constrainedMultimap(com.google.common.collect.Multimap,com.google.common.collect.MapConstraint) -> constrainedMultimap
    136:136:com.google.common.collect.ListMultimap constrainedListMultimap(com.google.common.collect.ListMultimap,com.google.common.collect.MapConstraint) -> constrainedListMultimap
    156:156:com.google.common.collect.SetMultimap constrainedSetMultimap(com.google.common.collect.SetMultimap,com.google.common.collect.MapConstraint) -> constrainedSetMultimap
    176:176:com.google.common.collect.SortedSetMultimap constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap,com.google.common.collect.MapConstraint) -> constrainedSortedSetMultimap
    190:192:java.util.Map$Entry constrainedEntry(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> constrainedEntry
    218:220:java.util.Map$Entry constrainedAsMapEntry(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> constrainedAsMapEntry
    255:255:java.util.Set constrainedAsMapEntries(java.util.Set,com.google.common.collect.MapConstraint) -> constrainedAsMapEntries
    272:275:java.util.Collection constrainedEntries(java.util.Collection,com.google.common.collect.MapConstraint) -> constrainedEntries
    294:294:java.util.Set constrainedEntrySet(java.util.Set,com.google.common.collect.MapConstraint) -> constrainedEntrySet
    347:347:com.google.common.collect.BiMap constrainedBiMap(com.google.common.collect.BiMap,com.google.common.collect.MapConstraint) -> constrainedBiMap
    855:859:java.util.Collection checkValues(java.lang.Object,java.lang.Iterable,com.google.common.collect.MapConstraint) -> checkValues
    864:868:java.util.Map checkMap(java.util.Map,com.google.common.collect.MapConstraint) -> checkMap
    53:53:java.util.Set access$000(java.util.Set,com.google.common.collect.MapConstraint) -> access$000
    53:53:java.util.Map access$100(java.util.Map,com.google.common.collect.MapConstraint) -> access$100
    53:53:java.util.Set access$200(java.util.Set,com.google.common.collect.MapConstraint) -> access$200
    53:53:java.util.Collection access$300(java.util.Collection,com.google.common.collect.MapConstraint) -> access$300
    53:53:java.util.Collection access$400(java.lang.Object,java.lang.Iterable,com.google.common.collect.MapConstraint) -> access$400
    53:53:java.util.Map$Entry access$500(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> access$500
    53:53:java.util.Map$Entry access$700(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> access$700
com.google.common.collect.MapConstraints$1 -> com.google.common.collect.MapConstraints$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.MapConstraint val$constraint -> val$constraint
    192:192:void <init>(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> <init>
    195:195:java.util.Map$Entry delegate() -> delegate
    200:201:java.lang.Object setValue(java.lang.Object) -> setValue
    192:192:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2 -> com.google.common.collect.MapConstraints$2:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.MapConstraint val$constraint -> val$constraint
    220:220:void <init>(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> <init>
    223:223:java.util.Map$Entry delegate() -> delegate
    228:228:java.util.Collection getValue() -> getValue
    220:220:java.lang.Object getValue() -> getValue
    220:220:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2$1 -> com.google.common.collect.MapConstraints$2$1:
    com.google.common.collect.MapConstraints$2 this$0 -> this$0
    230:230:void <init>(com.google.common.collect.MapConstraints$2) -> <init>
    233:234:java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries -> com.google.common.collect.MapConstraints$ConstrainedAsMapEntries:
    com.google.common.collect.MapConstraint constraint -> constraint
    java.util.Set entries -> entries
    705:708:void <init>(java.util.Set,com.google.common.collect.MapConstraint) -> <init>
    712:712:java.util.Set delegate() -> delegate
    717:717:java.util.Iterator iterator() -> iterator
    730:730:java.lang.Object[] toArray() -> toArray
    735:735:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    740:740:boolean contains(java.lang.Object) -> contains
    745:745:boolean containsAll(java.util.Collection) -> containsAll
    750:750:boolean equals(java.lang.Object) -> equals
    755:755:int hashCode() -> hashCode
    760:760:boolean remove(java.lang.Object) -> remove
    765:765:boolean removeAll(java.util.Collection) -> removeAll
    770:770:boolean retainAll(java.util.Collection) -> retainAll
    700:700:java.util.Collection delegate() -> delegate
    700:700:java.lang.Object delegate() -> delegate
    700:700:com.google.common.collect.MapConstraint access$600(com.google.common.collect.MapConstraints$ConstrainedAsMapEntries) -> access$600
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1 -> com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1:
    com.google.common.collect.MapConstraints$ConstrainedAsMapEntries this$0 -> this$0
    718:718:void <init>(com.google.common.collect.MapConstraints$ConstrainedAsMapEntries,java.util.Iterator) -> <init>
    721:721:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
    718:718:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.MapConstraints$ConstrainedAsMapValues -> com.google.common.collect.MapConstraints$ConstrainedAsMapValues:
    java.util.Collection delegate -> delegate
    java.util.Set entrySet -> entrySet
    548:551:void <init>(java.util.Collection,java.util.Set) -> <init>
    555:555:java.util.Collection delegate() -> delegate
    560:561:java.util.Iterator iterator() -> iterator
    581:581:java.lang.Object[] toArray() -> toArray
    586:586:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    591:591:boolean contains(java.lang.Object) -> contains
    596:596:boolean containsAll(java.util.Collection) -> containsAll
    601:601:boolean remove(java.lang.Object) -> remove
    606:606:boolean removeAll(java.util.Collection) -> removeAll
    611:611:boolean retainAll(java.util.Collection) -> retainAll
    539:539:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1 -> com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.MapConstraints$ConstrainedAsMapValues this$0 -> this$0
    561:561:void <init>(com.google.common.collect.MapConstraints$ConstrainedAsMapValues,java.util.Iterator) -> <init>
    564:564:boolean hasNext() -> hasNext
    569:569:java.util.Collection next() -> next
    574:575:void remove() -> remove
    561:561:java.lang.Object next() -> next
com.google.common.collect.MapConstraints$ConstrainedBiMap -> com.google.common.collect.MapConstraints$ConstrainedBiMap:
    com.google.common.collect.BiMap inverse -> inverse
    370:372:void <init>(com.google.common.collect.BiMap,com.google.common.collect.BiMap,com.google.common.collect.MapConstraint) -> <init>
    376:376:com.google.common.collect.BiMap delegate() -> delegate
    381:382:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    387:391:com.google.common.collect.BiMap inverse() -> inverse
    396:396:java.util.Set values() -> values
    351:351:java.util.Map delegate() -> delegate
    351:351:java.util.Collection values() -> values
    351:351:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries -> com.google.common.collect.MapConstraints$ConstrainedEntries:
    com.google.common.collect.MapConstraint constraint -> constraint
    java.util.Collection entries -> entries
    621:624:void <init>(java.util.Collection,com.google.common.collect.MapConstraint) -> <init>
    628:628:java.util.Collection delegate() -> delegate
    633:633:java.util.Iterator iterator() -> iterator
    645:645:java.lang.Object[] toArray() -> toArray
    650:650:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    655:655:boolean contains(java.lang.Object) -> contains
    660:660:boolean containsAll(java.util.Collection) -> containsAll
    665:665:boolean remove(java.lang.Object) -> remove
    670:670:boolean removeAll(java.util.Collection) -> removeAll
    675:675:boolean retainAll(java.util.Collection) -> retainAll
    616:616:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries$1 -> com.google.common.collect.MapConstraints$ConstrainedEntries$1:
    com.google.common.collect.MapConstraints$ConstrainedEntries this$0 -> this$0
    633:633:void <init>(com.google.common.collect.MapConstraints$ConstrainedEntries,java.util.Iterator) -> <init>
    636:636:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
    633:633:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.MapConstraints$ConstrainedEntrySet -> com.google.common.collect.MapConstraints$ConstrainedEntrySet:
    683:684:void <init>(java.util.Set,com.google.common.collect.MapConstraint) -> <init>
    690:690:boolean equals(java.lang.Object) -> equals
    695:695:int hashCode() -> hashCode
com.google.common.collect.MapConstraints$ConstrainedListMultimap -> com.google.common.collect.MapConstraints$ConstrainedListMultimap:
    778:779:void <init>(com.google.common.collect.ListMultimap,com.google.common.collect.MapConstraint) -> <init>
    783:783:java.util.List get(java.lang.Object) -> get
    788:788:java.util.List removeAll(java.lang.Object) -> removeAll
    793:793:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    774:774:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    774:774:java.util.Collection get(java.lang.Object) -> get
    774:774:java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedMap -> com.google.common.collect.MapConstraints$ConstrainedMap:
    java.util.Map delegate -> delegate
    com.google.common.collect.MapConstraint constraint -> constraint
    java.util.Set entrySet -> entrySet
    303:306:void <init>(java.util.Map,com.google.common.collect.MapConstraint) -> <init>
    310:310:java.util.Map delegate() -> delegate
    315:319:java.util.Set entrySet() -> entrySet
    324:325:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    330:331:void putAll(java.util.Map) -> putAll
    298:298:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap -> com.google.common.collect.MapConstraints$ConstrainedMultimap:
    com.google.common.collect.MapConstraint constraint -> constraint
    com.google.common.collect.Multimap delegate -> delegate
    java.util.Collection entries -> entries
    java.util.Map asMap -> asMap
    425:428:void <init>(com.google.common.collect.Multimap,com.google.common.collect.MapConstraint) -> <init>
    432:432:com.google.common.collect.Multimap delegate() -> delegate
    437:487:java.util.Map asMap() -> asMap
    492:496:java.util.Collection entries() -> entries
    501:501:java.util.Collection get(java.lang.Object) -> get
    514:515:boolean put(java.lang.Object,java.lang.Object) -> put
    520:520:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    525:529:boolean putAll(com.google.common.collect.Multimap) -> putAll
    534:534:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    415:415:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$1 -> com.google.common.collect.MapConstraints$ConstrainedMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> this$0
    503:503:void <init>(com.google.common.collect.MapConstraints$ConstrainedMultimap,java.lang.Object) -> <init>
    506:507:java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedMultimap$1AsMap -> com.google.common.collect.MapConstraints$ConstrainedMultimap$1AsMap:
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.util.Map val$asMapDelegate -> val$asMapDelegate
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> this$0
    442:442:void <init>(com.google.common.collect.MapConstraints$ConstrainedMultimap,java.util.Map) -> <init>
    448:448:java.util.Map delegate() -> delegate
    453:457:java.util.Set entrySet() -> entrySet
    464:467:java.util.Collection get(java.lang.Object) -> get
    473:477:java.util.Collection values() -> values
    482:482:boolean containsValue(java.lang.Object) -> containsValue
    441:441:java.lang.Object get(java.lang.Object) -> get
    441:441:java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedSetMultimap -> com.google.common.collect.MapConstraints$ConstrainedSetMultimap:
    801:802:void <init>(com.google.common.collect.SetMultimap,com.google.common.collect.MapConstraint) -> <init>
    806:806:java.util.Set get(java.lang.Object) -> get
    811:811:java.util.Set entries() -> entries
    816:816:java.util.Set removeAll(java.lang.Object) -> removeAll
    821:821:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    797:797:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    797:797:java.util.Collection get(java.lang.Object) -> get
    797:797:java.util.Collection entries() -> entries
    797:797:java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap -> com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap:
    829:830:void <init>(com.google.common.collect.SortedSetMultimap,com.google.common.collect.MapConstraint) -> <init>
    834:834:java.util.SortedSet get(java.lang.Object) -> get
    839:839:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    844:844:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    849:849:java.util.Comparator valueComparator() -> valueComparator
    825:825:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    825:825:java.util.Set removeAll(java.lang.Object) -> removeAll
    825:825:java.util.Set get(java.lang.Object) -> get
    825:825:java.util.Collection get(java.lang.Object) -> get
    825:825:java.util.Collection removeAll(java.lang.Object) -> removeAll
    825:825:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.MapConstraints$InverseConstraint -> com.google.common.collect.MapConstraints$InverseConstraint:
    com.google.common.collect.MapConstraint constraint -> constraint
    404:406:void <init>(com.google.common.collect.MapConstraint) -> <init>
    410:411:void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.MapConstraints$NotNullMapConstraint -> com.google.common.collect.MapConstraints$NotNullMapConstraint:
    com.google.common.collect.MapConstraints$NotNullMapConstraint INSTANCE -> INSTANCE
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] $VALUES -> $VALUES
    65:65:com.google.common.collect.MapConstraints$NotNullMapConstraint[] values() -> values
    65:65:com.google.common.collect.MapConstraints$NotNullMapConstraint valueOf(java.lang.String) -> valueOf
    65:65:void <init>(java.lang.String,int) -> <init>
    70:72:void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    76:76:java.lang.String toString() -> toString
    65:66:void <clinit>() -> <clinit>
com.google.common.collect.MapDifference -> com.google.common.collect.MapDifference:
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapDifference$ValueDifference -> com.google.common.collect.MapDifference$ValueDifference:
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    int DEFAULT_EXPIRATION_NANOS -> DEFAULT_EXPIRATION_NANOS
    int UNSET_INT -> UNSET_INT
    boolean useCustomMap -> useCustomMap
    int initialCapacity -> initialCapacity
    int concurrencyLevel -> concurrencyLevel
    int maximumSize -> maximumSize
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> keyStrength
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> valueStrength
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long expireAfterAccessNanos -> expireAfterAccessNanos
    com.google.common.collect.MapMaker$RemovalCause nullRemovalCause -> nullRemovalCause
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Ticker ticker -> ticker
    115:135:void <init>() -> <init>
    147:150:com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    154:154:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    169:175:com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    179:179:int getInitialCapacity() -> getInitialCapacity
    208:219:com.google.common.collect.MapMaker maximumSize(int) -> maximumSize
    243:249:com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    253:253:int getConcurrencyLevel() -> getConcurrencyLevel
    270:270:com.google.common.collect.MapMaker weakKeys() -> weakKeys
    274:281:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    285:285:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    308:308:com.google.common.collect.MapMaker weakValues() -> weakValues
    339:339:com.google.common.collect.MapMaker softValues() -> softValues
    343:349:com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setValueStrength
    353:353:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    384:391:com.google.common.collect.MapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    395:404:void checkExpiration(long,java.util.concurrent.TimeUnit) -> checkExpiration
    407:407:long getExpireAfterWriteNanos() -> getExpireAfterWriteNanos
    439:446:com.google.common.collect.MapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    450:450:long getExpireAfterAccessNanos() -> getExpireAfterAccessNanos
    456:456:com.google.common.base.Ticker getTicker() -> getTicker
    491:498:com.google.common.collect.GenericMapMaker removalListener(com.google.common.collect.MapMaker$RemovalListener) -> removalListener
    514:517:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    529:529:com.google.common.collect.MapMakerInternalMap makeCustomMap() -> makeCustomMap
    592:592:java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
    603:631:java.lang.String toString() -> toString
    104:104:com.google.common.collect.GenericMapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    104:104:com.google.common.collect.GenericMapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    104:104:com.google.common.collect.GenericMapMaker softValues() -> softValues
    104:104:com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    104:104:com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    104:104:com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    104:104:com.google.common.collect.GenericMapMaker maximumSize(int) -> maximumSize
    104:104:com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
    104:104:com.google.common.collect.GenericMapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
com.google.common.collect.MapMaker$1 -> com.google.common.collect.MapMaker$1:
com.google.common.collect.MapMaker$ComputingMapAdapter -> com.google.common.collect.MapMaker$ComputingMapAdapter:
    long serialVersionUID -> serialVersionUID
    883:884:void <init>(com.google.common.collect.MapMaker,com.google.common.base.Function) -> <init>
    891:901:java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.MapMaker$NullComputingConcurrentMap -> com.google.common.collect.MapMaker$NullComputingConcurrentMap:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function computingFunction -> computingFunction
    844:846:void <init>(com.google.common.collect.MapMaker,com.google.common.base.Function) -> <init>
    851:855:java.lang.Object get(java.lang.Object) -> get
    859:865:java.lang.Object compute(java.lang.Object) -> compute
com.google.common.collect.MapMaker$NullConcurrentMap -> com.google.common.collect.MapMaker$NullConcurrentMap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$RemovalListener removalListener -> removalListener
    com.google.common.collect.MapMaker$RemovalCause removalCause -> removalCause
    765:768:void <init>(com.google.common.collect.MapMaker) -> <init>
    774:774:boolean containsKey(java.lang.Object) -> containsKey
    779:779:boolean containsValue(java.lang.Object) -> containsValue
    784:784:java.lang.Object get(java.lang.Object) -> get
    788:791:void notifyRemoval(java.lang.Object,java.lang.Object) -> notifyRemoval
    795:798:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    803:803:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    808:808:java.lang.Object remove(java.lang.Object) -> remove
    813:813:boolean remove(java.lang.Object,java.lang.Object) -> remove
    818:820:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    825:827:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    832:832:java.util.Set entrySet() -> entrySet
com.google.common.collect.MapMaker$RemovalCause -> com.google.common.collect.MapMaker$RemovalCause:
    com.google.common.collect.MapMaker$RemovalCause EXPLICIT -> EXPLICIT
    com.google.common.collect.MapMaker$RemovalCause REPLACED -> REPLACED
    com.google.common.collect.MapMaker$RemovalCause COLLECTED -> COLLECTED
    com.google.common.collect.MapMaker$RemovalCause EXPIRED -> EXPIRED
    com.google.common.collect.MapMaker$RemovalCause SIZE -> SIZE
    com.google.common.collect.MapMaker$RemovalCause[] $VALUES -> $VALUES
    692:692:com.google.common.collect.MapMaker$RemovalCause[] values() -> values
    692:692:com.google.common.collect.MapMaker$RemovalCause valueOf(java.lang.String) -> valueOf
    692:692:void <init>(java.lang.String,int) -> <init>
    boolean wasEvicted() -> wasEvicted
    692:692:void <init>(java.lang.String,int,com.google.common.collect.MapMaker$1) -> <init>
    692:743:void <clinit>() -> <clinit>
com.google.common.collect.MapMaker$RemovalCause$1 -> com.google.common.collect.MapMaker$RemovalCause$1:
    697:697:void <init>(java.lang.String,int) -> <init>
    700:700:boolean wasEvicted() -> wasEvicted
com.google.common.collect.MapMaker$RemovalCause$2 -> com.google.common.collect.MapMaker$RemovalCause$2:
    710:710:void <init>(java.lang.String,int) -> <init>
    713:713:boolean wasEvicted() -> wasEvicted
com.google.common.collect.MapMaker$RemovalCause$3 -> com.google.common.collect.MapMaker$RemovalCause$3:
    721:721:void <init>(java.lang.String,int) -> <init>
    724:724:boolean wasEvicted() -> wasEvicted
com.google.common.collect.MapMaker$RemovalCause$4 -> com.google.common.collect.MapMaker$RemovalCause$4:
    732:732:void <init>(java.lang.String,int) -> <init>
    735:735:boolean wasEvicted() -> wasEvicted
com.google.common.collect.MapMaker$RemovalCause$5 -> com.google.common.collect.MapMaker$RemovalCause$5:
    743:743:void <init>(java.lang.String,int) -> <init>
    746:746:boolean wasEvicted() -> wasEvicted
com.google.common.collect.MapMaker$RemovalListener -> com.google.common.collect.MapMaker$RemovalListener:
    void onRemoval(com.google.common.collect.MapMaker$RemovalNotification) -> onRemoval
com.google.common.collect.MapMaker$RemovalNotification -> com.google.common.collect.MapMaker$RemovalNotification:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$RemovalCause cause -> cause
    669:671:void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> <init>
    677:677:com.google.common.collect.MapMaker$RemovalCause getCause() -> getCause
    685:685:boolean wasEvicted() -> wasEvicted
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int MAX_SEGMENTS -> MAX_SEGMENTS
    int CONTAINS_VALUE_RETRIES -> CONTAINS_VALUE_RETRIES
    int DRAIN_THRESHOLD -> DRAIN_THRESHOLD
    int DRAIN_MAX -> DRAIN_MAX
    long CLEANUP_EXECUTOR_DELAY_SECS -> CLEANUP_EXECUTOR_DELAY_SECS
    java.util.logging.Logger logger -> logger
    int segmentMask -> segmentMask
    int segmentShift -> segmentShift
    com.google.common.collect.MapMakerInternalMap$Segment[] segments -> segments
    int concurrencyLevel -> concurrencyLevel
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> keyStrength
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> valueStrength
    int maximumSize -> maximumSize
    long expireAfterAccessNanos -> expireAfterAccessNanos
    long expireAfterWriteNanos -> expireAfterWriteNanos
    java.util.Queue removalNotificationQueue -> removalNotificationQueue
    com.google.common.collect.MapMaker$RemovalListener removalListener -> removalListener
    com.google.common.collect.MapMakerInternalMap$EntryFactory entryFactory -> entryFactory
    com.google.common.base.Ticker ticker -> ticker
    com.google.common.collect.MapMakerInternalMap$ValueReference UNSET -> UNSET
    java.util.Queue DISCARDING_QUEUE -> DISCARDING_QUEUE
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    198:265:void <init>(com.google.common.collect.MapMaker) -> <init>
    268:268:boolean evictsBySize() -> evictsBySize
    272:272:boolean expires() -> expires
    276:276:boolean expiresAfterWrite() -> expiresAfterWrite
    280:280:boolean expiresAfterAccess() -> expiresAfterAccess
    284:284:boolean usesKeyReferences() -> usesKeyReferences
    288:288:boolean usesValueReferences() -> usesValueReferences
    620:620:com.google.common.collect.MapMakerInternalMap$ValueReference unset() -> unset
    871:871:com.google.common.collect.MapMakerInternalMap$ReferenceEntry nullEntry() -> nullEntry
    907:907:java.util.Queue discardingQueue() -> discardingQueue
    1820:1825:int rehash(int) -> rehash
    1834:1834:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    1843:1844:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    1853:1854:com.google.common.collect.MapMakerInternalMap$ValueReference newValueReference(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> newValueReference
    1858:1859:int hash(java.lang.Object) -> hash
    1863:1866:void reclaimValue(com.google.common.collect.MapMakerInternalMap$ValueReference) -> reclaimValue
    1869:1871:void reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> reclaimKey
    1879:1879:boolean isLive(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> isLive
    1890:1890:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    1894:1894:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    1903:1914:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> getLiveValue
    1923:1923:boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> isExpired
    1931:1931:boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> isExpired
    1936:1938:void connectExpirables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> connectExpirables
    1942:1945:void nullifyExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> nullifyExpirable
    1956:1963:void processPendingNotifications() -> processPendingNotifications
    1968:1970:void connectEvictables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> connectEvictables
    1974:1977:void nullifyEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> nullifyEvictable
    1981:1981:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    3410:3430:boolean isEmpty() -> isEmpty
    3435:3440:int size() -> size
    3445:3449:java.lang.Object get(java.lang.Object) -> get
    3457:3461:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object) -> getEntry
    3466:3470:boolean containsKey(java.lang.Object) -> containsKey
    3475:3508:boolean containsValue(java.lang.Object) -> containsValue
    3513:3516:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    3521:3524:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    3529:3532:void putAll(java.util.Map) -> putAll
    3536:3540:java.lang.Object remove(java.lang.Object) -> remove
    3545:3549:boolean remove(java.lang.Object,java.lang.Object) -> remove
    3554:3560:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    3565:3568:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    3573:3576:void clear() -> clear
    3582:3583:java.util.Set keySet() -> keySet
    3590:3591:java.util.Collection values() -> values
    3598:3599:java.util.Set entrySet() -> entrySet
    3929:3931:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    3939:3939:java.lang.Object writeReplace() -> writeReplace
    74:74:java.util.ArrayList access$300(java.util.Collection) -> access$300
    138:874:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    582:582:void <init>() -> <init>
    585:585:java.lang.Object get() -> get
    590:590:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    598:598:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    603:603:boolean isComputingReference() -> isComputingReference
    608:608:java.lang.Object waitForValue() -> waitForValue
    612:612:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
com.google.common.collect.MapMakerInternalMap$2 -> com.google.common.collect.MapMakerInternalMap$2:
    875:875:void <init>() -> <init>
    878:878:boolean offer(java.lang.Object) -> offer
    883:883:java.lang.Object peek() -> peek
    888:888:java.lang.Object poll() -> poll
    893:893:int size() -> size
    898:898:java.util.Iterator iterator() -> iterator
com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry -> com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry:
    792:792:void <init>() -> <init>
    795:795:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    800:800:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
    805:805:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
    810:810:int getHash() -> getHash
    815:815:java.lang.Object getKey() -> getKey
    820:820:long getExpirationTime() -> getExpirationTime
    825:825:void setExpirationTime(long) -> setExpirationTime
    830:830:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    835:835:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    840:840:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    845:845:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    850:850:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    855:855:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    860:860:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    865:865:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> keyStrength
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> valueStrength
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long expireAfterAccessNanos -> expireAfterAccessNanos
    int maximumSize -> maximumSize
    int concurrencyLevel -> concurrencyLevel
    com.google.common.collect.MapMaker$RemovalListener removalListener -> removalListener
    java.util.concurrent.ConcurrentMap delegate -> delegate
    3982:3993:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,long,long,int,int,com.google.common.collect.MapMaker$RemovalListener,java.util.concurrent.ConcurrentMap) -> <init>
    3997:3997:java.util.concurrent.ConcurrentMap delegate() -> delegate
    4001:4007:void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
    4011:4029:com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    4035:4042:void readEntries(java.io.ObjectInputStream) -> readEntries
    3956:3956:java.util.Map delegate() -> delegate
    3956:3956:java.lang.Object delegate() -> delegate
com.google.common.collect.MapMakerInternalMap$CleanupMapTask -> com.google.common.collect.MapMakerInternalMap$CleanupMapTask:
    java.lang.ref.WeakReference mapReference -> mapReference
    3382:3384:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3388:3396:void run() -> run
com.google.common.collect.MapMakerInternalMap$EntryFactory -> com.google.common.collect.MapMakerInternalMap$EntryFactory:
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG -> STRONG
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE -> STRONG_EXPIRABLE
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EVICTABLE -> STRONG_EVICTABLE
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE_EVICTABLE -> STRONG_EXPIRABLE_EVICTABLE
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK -> WEAK
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE -> WEAK_EXPIRABLE
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EVICTABLE -> WEAK_EVICTABLE
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE_EVICTABLE -> WEAK_EXPIRABLE_EVICTABLE
    int EXPIRABLE_MASK -> EXPIRABLE_MASK
    int EVICTABLE_MASK -> EVICTABLE_MASK
    com.google.common.collect.MapMakerInternalMap$EntryFactory[][] factories -> factories
    com.google.common.collect.MapMakerInternalMap$EntryFactory[] $VALUES -> $VALUES
    353:353:com.google.common.collect.MapMakerInternalMap$EntryFactory[] values() -> values
    353:353:com.google.common.collect.MapMakerInternalMap$EntryFactory valueOf(java.lang.String) -> valueOf
    353:353:void <init>(java.lang.String,int) -> <init>
    481:482:com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean) -> getFactory
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    505:505:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    512:518:void copyExpirableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyExpirableEntry
    524:528:void copyEvictableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEvictableEntry
    353:353:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    353:473:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$EntryFactory$1 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$1:
    354:354:void <init>(java.lang.String,int) -> <init>
    358:358:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$2 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$2:
    361:361:void <init>(java.lang.String,int) -> <init>
    365:365:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    371:373:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$3 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$3:
    376:376:void <init>(java.lang.String,int) -> <init>
    380:380:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    386:388:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$4 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$4:
    391:391:void <init>(java.lang.String,int) -> <init>
    395:395:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    401:404:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$5 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$5:
    408:408:void <init>(java.lang.String,int) -> <init>
    412:412:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$6 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$6:
    415:415:void <init>(java.lang.String,int) -> <init>
    419:419:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    425:427:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$7 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$7:
    430:430:void <init>(java.lang.String,int) -> <init>
    434:434:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    440:442:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$8 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$8:
    445:445:void <init>(java.lang.String,int) -> <init>
    449:449:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    455:458:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3779:3779:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3783:3783:java.util.Map$Entry next() -> next
    3779:3779:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3864:3864:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3868:3868:java.util.Iterator iterator() -> iterator
    3873:3883:boolean contains(java.lang.Object) -> contains
    3888:3893:boolean remove(java.lang.Object) -> remove
    3898:3898:int size() -> size
    3903:3903:boolean isEmpty() -> isEmpty
    3908:3909:void clear() -> clear
com.google.common.collect.MapMakerInternalMap$EvictionQueue -> com.google.common.collect.MapMakerInternalMap$EvictionQueue:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> head
    3124:3125:void <init>() -> <init>
    3158:3164:boolean offer(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> offer
    3169:3170:com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> peek
    3175:3181:com.google.common.collect.MapMakerInternalMap$ReferenceEntry poll() -> poll
    3187:3193:boolean remove(java.lang.Object) -> remove
    3199:3200:boolean contains(java.lang.Object) -> contains
    3205:3205:boolean isEmpty() -> isEmpty
    3210:3214:int size() -> size
    3219:3228:void clear() -> clear
    3232:3232:java.util.Iterator iterator() -> iterator
    3124:3124:java.lang.Object peek() -> peek
    3124:3124:java.lang.Object poll() -> poll
    3124:3124:boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$EvictionQueue$1 -> com.google.common.collect.MapMakerInternalMap$EvictionQueue$1:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> this$0
    3126:3140:void <init>(com.google.common.collect.MapMakerInternalMap$EvictionQueue) -> <init>
    3132:3132:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    3137:3138:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    3144:3144:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    3149:3150:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$EvictionQueue$2 -> com.google.common.collect.MapMakerInternalMap$EvictionQueue$2:
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> this$0
    3232:3232:void <init>(com.google.common.collect.MapMakerInternalMap$EvictionQueue,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    3235:3236:com.google.common.collect.MapMakerInternalMap$ReferenceEntry computeNext(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> computeNext
    3232:3232:java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.MapMakerInternalMap$ExpirationQueue -> com.google.common.collect.MapMakerInternalMap$ExpirationQueue:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> head
    3253:3254:void <init>() -> <init>
    3295:3301:boolean offer(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> offer
    3306:3307:com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> peek
    3312:3318:com.google.common.collect.MapMakerInternalMap$ReferenceEntry poll() -> poll
    3324:3330:boolean remove(java.lang.Object) -> remove
    3336:3337:boolean contains(java.lang.Object) -> contains
    3342:3342:boolean isEmpty() -> isEmpty
    3347:3351:int size() -> size
    3356:3365:void clear() -> clear
    3369:3369:java.util.Iterator iterator() -> iterator
    3253:3253:java.lang.Object peek() -> peek
    3253:3253:java.lang.Object poll() -> poll
    3253:3253:boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1 -> com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> this$0
    3255:3277:void <init>(com.google.common.collect.MapMakerInternalMap$ExpirationQueue) -> <init>
    3259:3259:long getExpirationTime() -> getExpirationTime
    3263:3263:void setExpirationTime(long) -> setExpirationTime
    3269:3269:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    3274:3275:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    3281:3281:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    3286:3287:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2 -> com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2:
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> this$0
    3369:3369:void <init>(com.google.common.collect.MapMakerInternalMap$ExpirationQueue,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    3372:3373:com.google.common.collect.MapMakerInternalMap$ReferenceEntry computeNext(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> computeNext
    3369:3369:java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    int nextSegmentIndex -> nextSegmentIndex
    int nextTableIndex -> nextTableIndex
    com.google.common.collect.MapMakerInternalMap$Segment currentSegment -> currentSegment
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> currentTable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEntry -> nextEntry
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextExternal -> nextExternal
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry lastReturned -> lastReturned
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3614:3618:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    java.lang.Object next() -> next
    3624:3644:void advance() -> advance
    3650:3657:boolean nextInChain() -> nextInChain
    3664:3671:boolean nextInTable() -> nextInTable
    3680:3690:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> advanceTo
    3696:3696:boolean hasNext() -> hasNext
    3700:3705:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    3710:3713:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3716:3716:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3720:3720:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3788:3788:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3792:3792:java.util.Iterator iterator() -> iterator
    3797:3797:int size() -> size
    3802:3802:boolean isEmpty() -> isEmpty
    3807:3807:boolean contains(java.lang.Object) -> contains
    3812:3812:boolean remove(java.lang.Object) -> remove
    3817:3818:void clear() -> clear
com.google.common.collect.MapMakerInternalMap$NullEntry -> com.google.common.collect.MapMakerInternalMap$NullEntry:
    com.google.common.collect.MapMakerInternalMap$NullEntry INSTANCE -> INSTANCE
    com.google.common.collect.MapMakerInternalMap$NullEntry[] $VALUES -> $VALUES
    725:725:com.google.common.collect.MapMakerInternalMap$NullEntry[] values() -> values
    725:725:com.google.common.collect.MapMakerInternalMap$NullEntry valueOf(java.lang.String) -> valueOf
    725:725:void <init>(java.lang.String,int) -> <init>
    730:730:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    734:734:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
    738:738:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
    743:743:int getHash() -> getHash
    748:748:java.lang.Object getKey() -> getKey
    753:753:long getExpirationTime() -> getExpirationTime
    757:757:void setExpirationTime(long) -> setExpirationTime
    761:761:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    765:765:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    769:769:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    773:773:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    777:777:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    781:781:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    785:785:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    789:789:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    725:726:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$ReferenceEntry -> com.google.common.collect.MapMakerInternalMap$ReferenceEntry:
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    3912:3912:void <init>() -> <init>
    3918:3918:java.lang.Object[] toArray() -> toArray
    3923:3923:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    3912:3912:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    com.google.common.collect.MapMakerInternalMap map -> map
    int count -> count
    int modCount -> modCount
    int threshold -> threshold
    java.util.concurrent.atomic.AtomicReferenceArray table -> table
    int maxSegmentSize -> maxSegmentSize
    java.lang.ref.ReferenceQueue keyReferenceQueue -> keyReferenceQueue
    java.lang.ref.ReferenceQueue valueReferenceQueue -> valueReferenceQueue
    java.util.Queue recencyQueue -> recencyQueue
    java.util.concurrent.atomic.AtomicInteger readCount -> readCount
    java.util.Queue evictionQueue -> evictionQueue
    java.util.Queue expirationQueue -> expirationQueue
    2081:2120:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2123:2123:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    2127:2133:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    2137:2137:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    2146:2160:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    2168:2171:void setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> setValue
    2179:2186:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
    2194:2200:void drainReferenceQueues() -> drainReferenceQueues
    2205:2214:void drainKeyReferenceQueue() -> drainKeyReferenceQueue
    2219:2228:void drainValueReferenceQueue() -> drainValueReferenceQueue
    2234:2240:void clearReferenceQueues() -> clearReferenceQueues
    2243:2244:void clearKeyReferenceQueue() -> clearKeyReferenceQueue
    2247:2248:void clearValueReferenceQueue() -> clearValueReferenceQueue
    2260:2264:void recordRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> recordRead
    2275:2280:void recordLockedRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> recordLockedRead
    2289:2299:void recordWrite(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> recordWrite
    2310:2322:void drainRecencyQueue() -> drainRecencyQueue
    2328:2329:void recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> recordExpirationTime
    2335:2343:void tryExpireEntries() -> tryExpireEntries
    2347:2361:void expireEntries() -> expireEntries
    2366:2367:void enqueueNotification(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMaker$RemovalCause) -> enqueueNotification
    2370:2374:void enqueueNotification(java.lang.Object,int,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> enqueueNotification
    2384:2393:boolean evictEntries() -> evictEntries
    2401:2402:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getFirst(int) -> getFirst
    2408:2426:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int) -> getEntry
    2430:2437:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    2442:2455:java.lang.Object get(java.lang.Object,int) -> get
    2461:2471:boolean containsKey(java.lang.Object,int) -> containsKey
    2482:2500:boolean containsValue(java.lang.Object) -> containsValue
    2505:2569:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    2578:2643:void expand() -> expand
    2646:2693:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    2698:2738:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    2743:2782:java.lang.Object remove(java.lang.Object,int) -> remove
    2787:2826:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    2831:2860:void clear() -> clear
    2876:2891:com.google.common.collect.MapMakerInternalMap$ReferenceEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> removeFromChain
    2895:2898:void removeCollectedEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> removeCollectedEntry
    2904:2927:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int) -> reclaimKey
    2935:2965:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> reclaimValue
    2974:2998:boolean clearValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> clearValue
    3004:3021:boolean removeEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int,com.google.common.collect.MapMaker$RemovalCause) -> removeEntry
    3029:3032:boolean isCollected(com.google.common.collect.MapMakerInternalMap$ValueReference) -> isCollected
    3040:3054:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> getLiveValue
    3063:3066:void postReadCleanup() -> postReadCleanup
    3076:3077:void preWriteCleanup() -> preWriteCleanup
    3083:3084:void postWriteCleanup() -> postWriteCleanup
    3087:3089:void runCleanup() -> runCleanup
    3092:3101:void runLockedCleanup() -> runLockedCleanup
    3105:3108:void runUnlockedCleanup() -> runUnlockedCleanup
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> com.google.common.collect.MapMakerInternalMap$SerializationProxy:
    long serialVersionUID -> serialVersionUID
    4063:4074:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,long,long,int,int,com.google.common.collect.MapMaker$RemovalListener,java.util.concurrent.ConcurrentMap) -> <init>
    4077:4079:void writeObject(java.io.ObjectOutputStream) -> writeObject
    4082:4086:void readObject(java.io.ObjectInputStream) -> readObject
    4089:4089:java.lang.Object readResolve() -> readResolve
com.google.common.collect.MapMakerInternalMap$SoftEntry -> com.google.common.collect.MapMakerInternalMap$SoftEntry:
    int hash -> hash
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> next
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> valueReference
    1180:1247:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1187:1187:java.lang.Object getKey() -> getKey
    1193:1193:long getExpirationTime() -> getExpirationTime
    1198:1198:void setExpirationTime(long) -> setExpirationTime
    1203:1203:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1208:1208:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1213:1213:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1218:1218:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    1225:1225:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1230:1230:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1235:1235:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1240:1240:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    1251:1251:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    1256:1259:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
    1263:1263:int getHash() -> getHash
    1268:1268:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry -> com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    1324:1343:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1334:1334:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1339:1340:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1347:1347:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1352:1353:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry -> com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry:
    long time -> time
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    1276:1307:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1285:1285:long getExpirationTime() -> getExpirationTime
    1290:1291:void setExpirationTime(long) -> setExpirationTime
    1298:1298:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1303:1304:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1311:1311:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1316:1317:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry -> com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry:
    long time -> time
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    1360:1419:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1369:1369:long getExpirationTime() -> getExpirationTime
    1374:1375:void setExpirationTime(long) -> setExpirationTime
    1382:1382:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1387:1388:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1395:1395:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1400:1401:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    1410:1410:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1415:1416:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1423:1423:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1428:1429:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$SoftValueReference -> com.google.common.collect.MapMakerInternalMap$SoftValueReference:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> entry
    1737:1739:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1743:1743:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    1748:1749:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
    1754:1754:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    1759:1759:boolean isComputingReference() -> isComputingReference
    1764:1764:java.lang.Object waitForValue() -> waitForValue
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    com.google.common.collect.MapMakerInternalMap$Strength STRONG -> STRONG
    com.google.common.collect.MapMakerInternalMap$Strength SOFT -> SOFT
    com.google.common.collect.MapMakerInternalMap$Strength WEAK -> WEAK
    com.google.common.collect.MapMakerInternalMap$Strength[] $VALUES -> $VALUES
    291:291:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
    291:291:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    291:291:void <init>(java.lang.String,int) -> <init>
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
    291:291:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    291:323:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    297:297:void <init>(java.lang.String,int) -> <init>
    301:301:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
    306:306:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    310:310:void <init>(java.lang.String,int) -> <init>
    314:314:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
    319:319:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$3 -> com.google.common.collect.MapMakerInternalMap$Strength$3:
    323:323:void <init>(java.lang.String,int) -> <init>
    327:327:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
    332:332:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongEntry -> com.google.common.collect.MapMakerInternalMap$StrongEntry:
    java.lang.Object key -> key
    int hash -> hash
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> next
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> valueReference
    924:993:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    932:932:java.lang.Object getKey() -> getKey
    939:939:long getExpirationTime() -> getExpirationTime
    944:944:void setExpirationTime(long) -> setExpirationTime
    949:949:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    954:954:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    959:959:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    964:964:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    971:971:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    976:976:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    981:981:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    986:986:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    997:997:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    1002:1005:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
    1009:1009:int getHash() -> getHash
    1014:1014:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry -> com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    1068:1087:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1078:1078:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1083:1084:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1091:1091:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1096:1097:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry -> com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry:
    long time -> time
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    1021:1052:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1030:1030:long getExpirationTime() -> getExpirationTime
    1035:1036:void setExpirationTime(long) -> setExpirationTime
    1043:1043:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1048:1049:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1056:1056:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1061:1062:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry -> com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry:
    long time -> time
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    1103:1162:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1112:1112:long getExpirationTime() -> getExpirationTime
    1117:1118:void setExpirationTime(long) -> setExpirationTime
    1125:1125:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1130:1131:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1138:1138:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1143:1144:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    1153:1153:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1158:1159:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1166:1166:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1171:1172:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$StrongValueReference -> com.google.common.collect.MapMakerInternalMap$StrongValueReference:
    java.lang.Object referent -> referent
    1774:1776:void <init>(java.lang.Object) -> <init>
    1780:1780:java.lang.Object get() -> get
    1785:1785:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    1791:1791:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    1796:1796:boolean isComputingReference() -> isComputingReference
    1801:1801:java.lang.Object waitForValue() -> waitForValue
    1805:1805:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3724:3724:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3728:3728:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$ValueReference -> com.google.common.collect.MapMakerInternalMap$ValueReference:
    java.lang.Object get() -> get
    java.lang.Object waitForValue() -> waitForValue
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
    boolean isComputingReference() -> isComputingReference
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3822:3822:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3826:3826:java.util.Iterator iterator() -> iterator
    3831:3831:int size() -> size
    3836:3836:boolean isEmpty() -> isEmpty
    3841:3841:boolean contains(java.lang.Object) -> contains
    3846:3847:void clear() -> clear
    3854:3854:java.lang.Object[] toArray() -> toArray
    3859:3859:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakEntry -> com.google.common.collect.MapMakerInternalMap$WeakEntry:
    int hash -> hash
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> next
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> valueReference
    1437:1505:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1444:1444:java.lang.Object getKey() -> getKey
    1451:1451:long getExpirationTime() -> getExpirationTime
    1456:1456:void setExpirationTime(long) -> setExpirationTime
    1461:1461:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1466:1466:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1471:1471:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1476:1476:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    1483:1483:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1488:1488:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1493:1493:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1498:1498:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    1509:1509:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    1514:1517:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
    1521:1521:int getHash() -> getHash
    1526:1526:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry -> com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    1582:1601:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1592:1592:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1597:1598:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1605:1605:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1610:1611:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry -> com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry:
    long time -> time
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    1534:1565:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1543:1543:long getExpirationTime() -> getExpirationTime
    1548:1549:void setExpirationTime(long) -> setExpirationTime
    1556:1556:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1561:1562:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1569:1569:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1574:1575:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry -> com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry:
    long time -> time
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> previousEvictable
    1618:1677:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1627:1627:long getExpirationTime() -> getExpirationTime
    1632:1633:void setExpirationTime(long) -> setExpirationTime
    1640:1640:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1645:1646:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1653:1653:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1658:1659:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    1668:1668:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1673:1674:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1681:1681:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1686:1687:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$WeakValueReference -> com.google.common.collect.MapMakerInternalMap$WeakValueReference:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> entry
    1698:1700:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1704:1704:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
    1709:1710:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
    1715:1715:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    1720:1720:boolean isComputingReference() -> isComputingReference
    1725:1725:java.lang.Object waitForValue() -> waitForValue
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.common.collect.MapMakerInternalMap this$0 -> this$0
    3740:3743:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    3747:3747:java.lang.Object getKey() -> getKey
    3752:3752:java.lang.Object getValue() -> getValue
    3758:3762:boolean equals(java.lang.Object) -> equals
    3768:3768:int hashCode() -> hashCode
    3773:3775:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    com.google.common.base.Joiner$MapJoiner STANDARD_JOINER -> STANDARD_JOINER
    86:86:void <init>() -> <init>
    107:107:com.google.common.base.Function keyFunction() -> keyFunction
    112:112:com.google.common.base.Function valueFunction() -> valueFunction
    116:116:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    120:120:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
    138:149:com.google.common.collect.ImmutableMap immutableEnumMap(java.util.Map) -> immutableEnumMap
    165:165:java.util.HashMap newHashMap() -> newHashMap
    182:182:java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    191:201:int capacity(int) -> capacity
    219:219:java.util.HashMap newHashMap(java.util.Map) -> newHashMap
    232:232:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    250:250:java.util.LinkedHashMap newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    265:265:java.util.LinkedHashMap newLinkedHashMap(java.util.Map) -> newLinkedHashMap
    284:284:java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    297:297:java.util.TreeMap newTreeMap() -> newTreeMap
    313:313:java.util.TreeMap newTreeMap(java.util.SortedMap) -> newTreeMap
    332:332:java.util.TreeMap newTreeMap(java.util.Comparator) -> newTreeMap
    342:342:java.util.EnumMap newEnumMap(java.lang.Class) -> newEnumMap
    355:355:java.util.EnumMap newEnumMap(java.util.Map) -> newEnumMap
    364:364:java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    386:391:com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map) -> difference
    418:425:com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map,com.google.common.base.Equivalence) -> difference
    436:450:void doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> doDifference
    453:456:java.util.Map unmodifiableMap(java.util.Map) -> unmodifiableMap
    608:617:com.google.common.collect.SortedMapDifference difference(java.util.SortedMap,java.util.Map) -> difference
    658:661:java.util.Comparator orNaturalOrder(java.util.Comparator) -> orNaturalOrder
    692:695:java.util.Map asMap(java.util.Set,com.google.common.base.Function) -> asMap
    726:726:java.util.SortedMap asMap(java.util.SortedSet,com.google.common.base.Function) -> asMap
    731:731:java.util.SortedMap asMapSortedIgnoreNavigable(java.util.SortedSet,com.google.common.base.Function) -> asMapSortedIgnoreNavigable
    763:763:java.util.NavigableMap asMap(java.util.NavigableSet,com.google.common.base.Function) -> asMap
    847:847:java.util.Iterator asMapEntryIterator(java.util.Set,com.google.common.base.Function) -> asMapEntryIterator
    982:982:java.util.Set removeOnlySet(java.util.Set) -> removeOnlySet
    1001:1001:java.util.SortedSet removeOnlySortedSet(java.util.SortedSet) -> removeOnlySortedSet
    1036:1036:java.util.NavigableSet removeOnlyNavigableSet(java.util.NavigableSet) -> removeOnlyNavigableSet
    1112:1112:com.google.common.collect.ImmutableMap toMap(java.lang.Iterable,com.google.common.base.Function) -> toMap
    1133:1140:com.google.common.collect.ImmutableMap toMap(java.util.Iterator,com.google.common.base.Function) -> toMap
    1173:1173:com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function) -> uniqueIndex
    1206:1215:com.google.common.collect.ImmutableMap uniqueIndex(java.util.Iterator,com.google.common.base.Function) -> uniqueIndex
    1236:1243:com.google.common.collect.ImmutableMap fromProperties(java.util.Properties) -> fromProperties
    1257:1257:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    1269:1269:java.util.Set unmodifiableEntrySet(java.util.Set) -> unmodifiableEntrySet
    1282:1283:java.util.Map$Entry unmodifiableEntry(java.util.Map$Entry) -> unmodifiableEntry
    1298:1298:com.google.common.collect.UnmodifiableIterator unmodifiableEntryIterator(java.util.Iterator) -> unmodifiableEntryIterator
    1375:1375:com.google.common.base.Converter asConverter(com.google.common.collect.BiMap) -> asConverter
    1453:1453:com.google.common.collect.BiMap synchronizedBiMap(com.google.common.collect.BiMap) -> synchronizedBiMap
    1470:1470:com.google.common.collect.BiMap unmodifiableBiMap(com.google.common.collect.BiMap) -> unmodifiableBiMap
    1554:1554:java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    1598:1598:java.util.SortedMap transformValues(java.util.SortedMap,com.google.common.base.Function) -> transformValues
    1645:1645:java.util.NavigableMap transformValues(java.util.NavigableMap,com.google.common.base.Function) -> transformValues
    1701:1704:java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1761:1761:java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1820:1820:java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1825:1825:java.util.SortedMap transformEntriesIgnoreNavigable(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntriesIgnoreNavigable
    1864:1865:com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function) -> asEntryTransformer
    1875:1876:com.google.common.base.Function asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> asValueToValueFunction
    1889:1890:com.google.common.base.Function asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) -> asEntryToValueFunction
    1903:1905:java.util.Map$Entry transformEntry(com.google.common.collect.Maps$EntryTransformer,java.util.Map$Entry) -> transformEntry
    1923:1924:com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer) -> asEntryToEntryFunction
    2164:2164:com.google.common.base.Predicate keyPredicateOnEntries(com.google.common.base.Predicate) -> keyPredicateOnEntries
    2168:2168:com.google.common.base.Predicate valuePredicateOnEntries(com.google.common.base.Predicate) -> valuePredicateOnEntries
    2202:2209:java.util.Map filterKeys(java.util.Map,com.google.common.base.Predicate) -> filterKeys
    2249:2249:java.util.SortedMap filterKeys(java.util.SortedMap,com.google.common.base.Predicate) -> filterKeys
    2288:2288:java.util.NavigableMap filterKeys(java.util.NavigableMap,com.google.common.base.Predicate) -> filterKeys
    2319:2320:com.google.common.collect.BiMap filterKeys(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterKeys
    2355:2360:java.util.Map filterValues(java.util.Map,com.google.common.base.Predicate) -> filterValues
    2397:2397:java.util.SortedMap filterValues(java.util.SortedMap,com.google.common.base.Predicate) -> filterValues
    2435:2435:java.util.NavigableMap filterValues(java.util.NavigableMap,com.google.common.base.Predicate) -> filterValues
    2469:2469:com.google.common.collect.BiMap filterValues(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterValues
    2504:2510:java.util.Map filterEntries(java.util.Map,com.google.common.base.Predicate) -> filterEntries
    2549:2549:java.util.SortedMap filterEntries(java.util.SortedMap,com.google.common.base.Predicate) -> filterEntries
    2554:2555:java.util.SortedMap filterSortedIgnoreNavigable(java.util.SortedMap,com.google.common.base.Predicate) -> filterSortedIgnoreNavigable
    2595:2596:java.util.NavigableMap filterEntries(java.util.NavigableMap,com.google.common.base.Predicate) -> filterEntries
    2631:2633:com.google.common.collect.BiMap filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterEntries
    2644:2644:java.util.Map filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate) -> filterFiltered
    2884:2885:java.util.SortedMap filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap,com.google.common.base.Predicate) -> filterFiltered
    2990:2991:java.util.NavigableMap filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap,com.google.common.base.Predicate) -> filterFiltered
    3138:3139:com.google.common.collect.BiMap filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap,com.google.common.base.Predicate) -> filterFiltered
    3203:3207:java.util.NavigableMap unmodifiableNavigableMap(java.util.NavigableMap) -> unmodifiableNavigableMap
    3213:3213:java.util.Map$Entry unmodifiableOrNull(java.util.Map$Entry) -> unmodifiableOrNull
    3405:3405:java.util.NavigableMap synchronizedNavigableMap(java.util.NavigableMap) -> synchronizedNavigableMap
    3486:3492:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    3501:3507:boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    3516:3522:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> safeRemove
    3530:3530:boolean containsKeyImpl(java.util.Map,java.lang.Object) -> containsKeyImpl
    3537:3537:boolean containsValueImpl(java.util.Map,java.lang.Object) -> containsValueImpl
    3554:3557:boolean containsEntryImpl(java.util.Collection,java.lang.Object) -> containsEntryImpl
    3574:3577:boolean removeEntryImpl(java.util.Collection,java.lang.Object) -> removeEntryImpl
    3584:3590:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    3599:3601:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    3608:3611:void putAllImpl(java.util.Map,java.util.Map) -> putAllImpl
    3661:3661:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    3666:3666:java.lang.Object valueOrNull(java.util.Map$Entry) -> valueOrNull
    4138:4143:com.google.common.collect.ImmutableMap indexMap(java.util.Collection) -> indexMap
    85:85:java.util.Map access$100(java.util.Map) -> access$100
    85:85:java.util.Set access$200(java.util.Set) -> access$200
    85:85:java.util.SortedSet access$300(java.util.SortedSet) -> access$300
    85:85:java.util.NavigableSet access$400(java.util.NavigableSet) -> access$400
    85:85:java.util.Map$Entry access$800(java.util.Map$Entry) -> access$800
    3593:3593:void <clinit>() -> <clinit>
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    com.google.common.base.Function val$function -> val$function
    847:847:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    850:850:java.util.Map$Entry transform(java.lang.Object) -> transform
    847:847:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps$10 -> com.google.common.collect.Maps$10:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Maps$EntryTransformer val$transformer -> val$transformer
    1905:1905:void <init>(java.util.Map$Entry,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1908:1908:java.lang.Object getKey() -> getKey
    1913:1913:java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$11 -> com.google.common.collect.Maps$11:
    com.google.common.collect.Maps$EntryTransformer val$transformer -> val$transformer
    1924:1924:void <init>(com.google.common.collect.Maps$EntryTransformer) -> <init>
    1927:1927:java.util.Map$Entry apply(java.util.Map$Entry) -> apply
    1924:1924:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    java.util.Set val$set -> val$set
    982:982:void <init>(java.util.Set) -> <init>
    985:985:java.util.Set delegate() -> delegate
    990:990:boolean add(java.lang.Object) -> add
    995:995:boolean addAll(java.util.Collection) -> addAll
    982:982:java.util.Collection delegate() -> delegate
    982:982:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$3 -> com.google.common.collect.Maps$3:
    java.util.SortedSet val$set -> val$set
    1001:1001:void <init>(java.util.SortedSet) -> <init>
    1004:1004:java.util.SortedSet delegate() -> delegate
    1009:1009:boolean add(java.lang.Object) -> add
    1014:1014:boolean addAll(java.util.Collection) -> addAll
    1019:1019:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1024:1024:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1029:1029:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1001:1001:java.util.Set delegate() -> delegate
    1001:1001:java.util.Collection delegate() -> delegate
    1001:1001:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$4 -> com.google.common.collect.Maps$4:
    java.util.NavigableSet val$set -> val$set
    1036:1036:void <init>(java.util.NavigableSet) -> <init>
    1039:1039:java.util.NavigableSet delegate() -> delegate
    1044:1044:boolean add(java.lang.Object) -> add
    1049:1049:boolean addAll(java.util.Collection) -> addAll
    1054:1054:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1059:1059:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1064:1064:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1069:1069:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1074:1074:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1080:1080:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1086:1086:java.util.NavigableSet descendingSet() -> descendingSet
    1036:1036:java.util.SortedSet delegate() -> delegate
    1036:1036:java.util.Set delegate() -> delegate
    1036:1036:java.util.Collection delegate() -> delegate
    1036:1036:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$5 -> com.google.common.collect.Maps$5:
    java.util.Map$Entry val$entry -> val$entry
    1283:1283:void <init>(java.util.Map$Entry) -> <init>
    1286:1286:java.lang.Object getKey() -> getKey
    1291:1291:java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$6 -> com.google.common.collect.Maps$6:
    java.util.Iterator val$entryIterator -> val$entryIterator
    1298:1298:void <init>(java.util.Iterator) -> <init>
    1301:1301:boolean hasNext() -> hasNext
    1306:1306:java.util.Map$Entry next() -> next
    1298:1298:java.lang.Object next() -> next
com.google.common.collect.Maps$7 -> com.google.common.collect.Maps$7:
    com.google.common.base.Function val$function -> val$function
    1865:1865:void <init>(com.google.common.base.Function) -> <init>
    1868:1868:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$8 -> com.google.common.collect.Maps$8:
    com.google.common.collect.Maps$EntryTransformer val$transformer -> val$transformer
    java.lang.Object val$key -> val$key
    1876:1876:void <init>(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> <init>
    1879:1879:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$9 -> com.google.common.collect.Maps$9:
    com.google.common.collect.Maps$EntryTransformer val$transformer -> val$transformer
    1890:1890:void <init>(com.google.common.collect.Maps$EntryTransformer) -> <init>
    1893:1893:java.lang.Object apply(java.util.Map$Entry) -> apply
    1890:1890:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$AbstractFilteredMap -> com.google.common.collect.Maps$AbstractFilteredMap:
    java.util.Map unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    2652:2655:void <init>(java.util.Map,com.google.common.base.Predicate) -> <init>
    2661:2662:boolean apply(java.lang.Object,java.lang.Object) -> apply
    2667:2668:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2673:2677:void putAll(java.util.Map) -> putAll
    2681:2681:boolean containsKey(java.lang.Object) -> containsKey
    2686:2687:java.lang.Object get(java.lang.Object) -> get
    2692:2692:boolean isEmpty() -> isEmpty
    2697:2697:java.lang.Object remove(java.lang.Object) -> remove
    2702:2702:java.util.Collection createValues() -> createValues
com.google.common.collect.Maps$AsMapView -> com.google.common.collect.Maps$AsMapView:
    java.util.Set set -> set
    com.google.common.base.Function function -> function
    772:772:java.util.Set backingSet() -> backingSet
    775:778:void <init>(java.util.Set,com.google.common.base.Function) -> <init>
    782:782:java.util.Set createKeySet() -> createKeySet
    787:787:java.util.Collection createValues() -> createValues
    792:792:int size() -> size
    797:797:boolean containsKey(java.lang.Object) -> containsKey
    802:807:java.lang.Object get(java.lang.Object) -> get
    813:818:java.lang.Object remove(java.lang.Object) -> remove
    824:825:void clear() -> clear
    841:841:java.util.Set createEntrySet() -> createEntrySet
com.google.common.collect.Maps$AsMapView$1EntrySetImpl -> com.google.common.collect.Maps$AsMapView$1EntrySetImpl:
    com.google.common.collect.Maps$AsMapView this$0 -> this$0
    830:830:void <init>(com.google.common.collect.Maps$AsMapView) -> <init>
    833:833:java.util.Map map() -> map
    838:838:java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$BiMapConverter -> com.google.common.collect.Maps$BiMapConverter:
    com.google.common.collect.BiMap bimap -> bimap
    long serialVersionUID -> serialVersionUID
    1381:1383:void <init>(com.google.common.collect.BiMap) -> <init>
    1387:1387:java.lang.Object doForward(java.lang.Object) -> doForward
    1392:1392:java.lang.Object doBackward(java.lang.Object) -> doBackward
    1396:1398:java.lang.Object convert(com.google.common.collect.BiMap,java.lang.Object) -> convert
    1403:1407:boolean equals(java.lang.Object) -> equals
    1412:1412:int hashCode() -> hashCode
    1418:1418:java.lang.String toString() -> toString
com.google.common.collect.Maps$DescendingMap -> com.google.common.collect.Maps$DescendingMap:
    java.util.Comparator comparator -> comparator
    java.util.Set entrySet -> entrySet
    java.util.NavigableSet navigableKeySet -> navigableKeySet
    3942:3942:void <init>() -> <init>
    java.util.NavigableMap forward() -> forward
    3949:3949:java.util.Map delegate() -> delegate
    3957:3965:java.util.Comparator comparator() -> comparator
    3970:3970:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    3975:3975:java.lang.Object firstKey() -> firstKey
    3980:3980:java.lang.Object lastKey() -> lastKey
    3985:3985:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3990:3990:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3995:3995:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    4000:4000:java.lang.Object floorKey(java.lang.Object) -> floorKey
    4005:4005:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    4010:4010:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    4015:4015:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    4020:4020:java.lang.Object higherKey(java.lang.Object) -> higherKey
    4025:4025:java.util.Map$Entry firstEntry() -> firstEntry
    4030:4030:java.util.Map$Entry lastEntry() -> lastEntry
    4035:4035:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    4040:4040:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    4045:4045:java.util.NavigableMap descendingMap() -> descendingMap
    4052:4053:java.util.Set entrySet() -> entrySet
    java.util.Iterator entryIterator() -> entryIterator
    4071:4071:java.util.Set createEntrySet() -> createEntrySet
    4076:4076:java.util.Set keySet() -> keySet
    4083:4084:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    4089:4089:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    4095:4095:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    4100:4100:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    4105:4105:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    4110:4110:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    4115:4115:java.util.SortedMap headMap(java.lang.Object) -> headMap
    4120:4120:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    4125:4125:java.util.Collection values() -> values
    4130:4130:java.lang.String toString() -> toString
    3941:3941:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$DescendingMap$1EntrySetImpl -> com.google.common.collect.Maps$DescendingMap$1EntrySetImpl:
    com.google.common.collect.Maps$DescendingMap this$0 -> this$0
    4060:4060:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    4063:4063:java.util.Map map() -> map
    4068:4068:java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$EntryFunction -> com.google.common.collect.Maps$EntryFunction:
    com.google.common.collect.Maps$EntryFunction KEY -> KEY
    com.google.common.collect.Maps$EntryFunction VALUE -> VALUE
    com.google.common.collect.Maps$EntryFunction[] $VALUES -> $VALUES
    88:88:com.google.common.collect.Maps$EntryFunction[] values() -> values
    88:88:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    88:88:void <init>(java.lang.String,int) -> <init>
    88:88:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    88:96:void <clinit>() -> <clinit>
com.google.common.collect.Maps$EntryFunction$1 -> com.google.common.collect.Maps$EntryFunction$1:
    89:89:void <init>(java.lang.String,int) -> <init>
    93:93:java.lang.Object apply(java.util.Map$Entry) -> apply
    89:89:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> com.google.common.collect.Maps$EntryFunction$2:
    96:96:void <init>(java.lang.String,int) -> <init>
    100:100:java.lang.Object apply(java.util.Map$Entry) -> apply
    96:96:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$EntrySet -> com.google.common.collect.Maps$EntrySet:
    3875:3875:void <init>() -> <init>
    java.util.Map map() -> map
    3880:3880:int size() -> size
    3885:3886:void clear() -> clear
    3890:3896:boolean contains(java.lang.Object) -> contains
    3901:3901:boolean isEmpty() -> isEmpty
    3906:3910:boolean remove(java.lang.Object) -> remove
    3916:3919:boolean removeAll(java.util.Collection) -> removeAll
    3926:3936:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$EntryTransformer -> com.google.common.collect.Maps$EntryTransformer:
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$FilteredEntryBiMap -> com.google.common.collect.Maps$FilteredEntryBiMap:
    com.google.common.collect.BiMap inverse -> inverse
    3148:3148:com.google.common.base.Predicate inversePredicate(com.google.common.base.Predicate) -> inversePredicate
    3157:3160:void <init>(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> <init>
    3164:3166:void <init>(com.google.common.collect.BiMap,com.google.common.base.Predicate,com.google.common.collect.BiMap) -> <init>
    3169:3169:com.google.common.collect.BiMap unfiltered() -> unfiltered
    3174:3175:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    3180:3180:com.google.common.collect.BiMap inverse() -> inverse
    3185:3185:java.util.Set values() -> values
    3142:3142:java.util.Collection values() -> values
com.google.common.collect.Maps$FilteredEntryBiMap$1 -> com.google.common.collect.Maps$FilteredEntryBiMap$1:
    com.google.common.base.Predicate val$forwardPredicate -> val$forwardPredicate
    3148:3148:void <init>(com.google.common.base.Predicate) -> <init>
    3151:3151:boolean apply(java.util.Map$Entry) -> apply
    3148:3148:boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$FilteredEntryMap -> com.google.common.collect.Maps$FilteredEntryMap:
    java.util.Set filteredEntrySet -> filteredEntrySet
    2791:2793:void <init>(java.util.Map,com.google.common.base.Predicate) -> <init>
    2797:2797:java.util.Set createEntrySet() -> createEntrySet
    2831:2831:java.util.Set createKeySet() -> createKeySet
com.google.common.collect.Maps$FilteredEntryMap$EntrySet -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> this$0
    2801:2801:void <init>(com.google.common.collect.Maps$FilteredEntryMap) -> <init>
    2804:2804:java.util.Set delegate() -> delegate
    2809:2809:java.util.Iterator iterator() -> iterator
    2800:2800:java.util.Collection delegate() -> delegate
    2800:2800:java.lang.Object delegate() -> delegate
    2801:2801:void <init>(com.google.common.collect.Maps$FilteredEntryMap,com.google.common.collect.Maps$1) -> <init>
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1:
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet this$1 -> this$1
    2809:2809:void <init>(com.google.common.collect.Maps$FilteredEntryMap$EntrySet,java.util.Iterator) -> <init>
    2812:2812:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
    2809:2809:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1 -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 this$2 -> this$2
    2812:2812:void <init>(com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1,java.util.Map$Entry) -> <init>
    2815:2815:java.util.Map$Entry delegate() -> delegate
    2820:2821:java.lang.Object setValue(java.lang.Object) -> setValue
    2812:2812:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$KeySet -> com.google.common.collect.Maps$FilteredEntryMap$KeySet:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> this$0
    2836:2838:void <init>(com.google.common.collect.Maps$FilteredEntryMap) -> <init>
    2842:2846:boolean remove(java.lang.Object) -> remove
    2850:2850:boolean removeIf(com.google.common.base.Predicate) -> removeIf
    2857:2857:boolean removeAll(java.util.Collection) -> removeAll
    2862:2862:boolean retainAll(java.util.Collection) -> retainAll
    2868:2868:java.lang.Object[] toArray() -> toArray
    2873:2873:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$FilteredEntryNavigableMap -> com.google.common.collect.Maps$FilteredEntryNavigableMap:
    java.util.NavigableMap unfiltered -> unfiltered
    com.google.common.base.Predicate entryPredicate -> entryPredicate
    java.util.Map filteredDelegate -> filteredDelegate
    3007:3011:void <init>(java.util.NavigableMap,com.google.common.base.Predicate) -> <init>
    3015:3015:java.util.Comparator comparator() -> comparator
    3020:3020:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3040:3040:java.util.Collection values() -> values
    3045:3045:java.util.Iterator entryIterator() -> entryIterator
    3050:3050:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    3055:3055:int size() -> size
    3060:3060:boolean isEmpty() -> isEmpty
    3066:3066:java.lang.Object get(java.lang.Object) -> get
    3071:3071:boolean containsKey(java.lang.Object) -> containsKey
    3076:3076:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    3081:3081:java.lang.Object remove(java.lang.Object) -> remove
    3086:3087:void putAll(java.util.Map) -> putAll
    3091:3092:void clear() -> clear
    3096:3096:java.util.Set entrySet() -> entrySet
    3101:3101:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3106:3106:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3111:3111:java.util.NavigableMap descendingMap() -> descendingMap
    3117:3117:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3123:3123:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    3128:3128:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    2995:2995:com.google.common.base.Predicate access$600(com.google.common.collect.Maps$FilteredEntryNavigableMap) -> access$600
    2995:2995:java.util.NavigableMap access$700(com.google.common.collect.Maps$FilteredEntryNavigableMap) -> access$700
com.google.common.collect.Maps$FilteredEntryNavigableMap$1 -> com.google.common.collect.Maps$FilteredEntryNavigableMap$1:
    com.google.common.collect.Maps$FilteredEntryNavigableMap this$0 -> this$0
    3020:3020:void <init>(com.google.common.collect.Maps$FilteredEntryNavigableMap,java.util.NavigableMap) -> <init>
    3023:3023:boolean removeAll(java.util.Collection) -> removeAll
    3030:3030:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$FilteredEntrySortedMap -> com.google.common.collect.Maps$FilteredEntrySortedMap:
    2893:2894:void <init>(java.util.SortedMap,com.google.common.base.Predicate) -> <init>
    2897:2897:java.util.SortedMap sortedMap() -> sortedMap
    2902:2902:java.util.SortedSet keySet() -> keySet
    2907:2907:java.util.SortedSet createKeySet() -> createKeySet
    2945:2945:java.util.Comparator comparator() -> comparator
    2951:2951:java.lang.Object firstKey() -> firstKey
    2956:2964:java.lang.Object lastKey() -> lastKey
    2969:2969:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2974:2974:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2979:2979:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    2888:2888:java.util.Set createKeySet() -> createKeySet
    2888:2888:java.util.Set keySet() -> keySet
com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet -> com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:
    com.google.common.collect.Maps$FilteredEntrySortedMap this$0 -> this$0
    2911:2911:void <init>(com.google.common.collect.Maps$FilteredEntrySortedMap) -> <init>
    2914:2914:java.util.Comparator comparator() -> comparator
    2919:2919:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    2924:2924:java.util.SortedSet headSet(java.lang.Object) -> headSet
    2929:2929:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    2934:2934:java.lang.Object first() -> first
    2939:2939:java.lang.Object last() -> last
com.google.common.collect.Maps$FilteredKeyMap -> com.google.common.collect.Maps$FilteredKeyMap:
    com.google.common.base.Predicate keyPredicate -> keyPredicate
    2760:2762:void <init>(java.util.Map,com.google.common.base.Predicate,com.google.common.base.Predicate) -> <init>
    2766:2766:java.util.Set createEntrySet() -> createEntrySet
    2771:2771:java.util.Set createKeySet() -> createKeySet
    2779:2779:boolean containsKey(java.lang.Object) -> containsKey
com.google.common.collect.Maps$FilteredMapValues -> com.google.common.collect.Maps$FilteredMapValues:
    java.util.Map unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    2712:2715:void <init>(java.util.Map,java.util.Map,com.google.common.base.Predicate) -> <init>
    2719:2719:boolean remove(java.lang.Object) -> remove
    2726:2726:boolean removeIf(com.google.common.base.Predicate) -> removeIf
    2733:2733:boolean removeAll(java.util.Collection) -> removeAll
    2738:2738:boolean retainAll(java.util.Collection) -> retainAll
    2744:2744:java.lang.Object[] toArray() -> toArray
    2749:2749:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$IteratorBasedAbstractMap -> com.google.common.collect.Maps$IteratorBasedAbstractMap:
    3454:3454:void <init>() -> <init>
    int size() -> size
    java.util.Iterator entryIterator() -> entryIterator
    3462:3462:java.util.Set entrySet() -> entrySet
    3477:3478:void clear() -> clear
com.google.common.collect.Maps$IteratorBasedAbstractMap$1 -> com.google.common.collect.Maps$IteratorBasedAbstractMap$1:
    com.google.common.collect.Maps$IteratorBasedAbstractMap this$0 -> this$0
    3462:3462:void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> <init>
    3465:3465:java.util.Map map() -> map
    3470:3470:java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$KeySet -> com.google.common.collect.Maps$KeySet:
    java.util.Map map -> map
    3616:3618:void <init>(java.util.Map) -> <init>
    3621:3621:java.util.Map map() -> map
    3626:3626:java.util.Iterator iterator() -> iterator
    3631:3631:int size() -> size
    3636:3636:boolean isEmpty() -> isEmpty
    3641:3641:boolean contains(java.lang.Object) -> contains
    3646:3650:boolean remove(java.lang.Object) -> remove
    3655:3656:void clear() -> clear
com.google.common.collect.Maps$MapDifferenceImpl -> com.google.common.collect.Maps$MapDifferenceImpl:
    java.util.Map onlyOnLeft -> onlyOnLeft
    java.util.Map onlyOnRight -> onlyOnRight
    java.util.Map onBoth -> onBoth
    java.util.Map differences -> differences
    470:475:void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> <init>
    479:479:boolean areEqual() -> areEqual
    484:484:java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    489:489:java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    494:494:java.util.Map entriesInCommon() -> entriesInCommon
    499:499:java.util.Map entriesDiffering() -> entriesDiffering
    504:514:boolean equals(java.lang.Object) -> equals
    519:519:int hashCode() -> hashCode
    525:539:java.lang.String toString() -> toString
com.google.common.collect.Maps$NavigableAsMapView -> com.google.common.collect.Maps$NavigableAsMapView:
    java.util.NavigableSet set -> set
    com.google.common.base.Function function -> function
    912:915:void <init>(java.util.NavigableSet,com.google.common.base.Function) -> <init>
    920:920:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    925:925:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    930:930:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    935:935:java.util.Comparator comparator() -> comparator
    941:946:java.lang.Object get(java.lang.Object) -> get
    952:953:void clear() -> clear
    957:957:java.util.Iterator entryIterator() -> entryIterator
    962:962:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    967:967:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    972:972:int size() -> size
    977:977:java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.Maps$NavigableKeySet -> com.google.common.collect.Maps$NavigableKeySet:
    3713:3714:void <init>(java.util.NavigableMap) -> <init>
    3718:3718:java.util.NavigableMap map() -> map
    3723:3723:java.lang.Object lower(java.lang.Object) -> lower
    3728:3728:java.lang.Object floor(java.lang.Object) -> floor
    3733:3733:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3738:3738:java.lang.Object higher(java.lang.Object) -> higher
    3743:3743:java.lang.Object pollFirst() -> pollFirst
    3748:3748:java.lang.Object pollLast() -> pollLast
    3753:3753:java.util.NavigableSet descendingSet() -> descendingSet
    3758:3758:java.util.Iterator descendingIterator() -> descendingIterator
    3764:3764:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3769:3769:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3774:3774:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3779:3779:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3784:3784:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3789:3789:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    3710:3710:java.util.SortedMap map() -> map
    3710:3710:java.util.Map map() -> map
com.google.common.collect.Maps$SortedAsMapView -> com.google.common.collect.Maps$SortedAsMapView:
    858:859:void <init>(java.util.SortedSet,com.google.common.base.Function) -> <init>
    863:863:java.util.SortedSet backingSet() -> backingSet
    868:868:java.util.Comparator comparator() -> comparator
    873:873:java.util.Set keySet() -> keySet
    878:878:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    883:883:java.util.SortedMap headMap(java.lang.Object) -> headMap
    888:888:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    893:893:java.lang.Object firstKey() -> firstKey
    898:898:java.lang.Object lastKey() -> lastKey
    855:855:java.util.Set backingSet() -> backingSet
com.google.common.collect.Maps$SortedKeySet -> com.google.common.collect.Maps$SortedKeySet:
    3671:3672:void <init>(java.util.SortedMap) -> <init>
    3676:3676:java.util.SortedMap map() -> map
    3681:3681:java.util.Comparator comparator() -> comparator
    3686:3686:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3691:3691:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3696:3696:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    3701:3701:java.lang.Object first() -> first
    3706:3706:java.lang.Object last() -> last
    3669:3669:java.util.Map map() -> map
com.google.common.collect.Maps$SortedMapDifferenceImpl -> com.google.common.collect.Maps$SortedMapDifferenceImpl:
    627:628:void <init>(java.util.SortedMap,java.util.SortedMap,java.util.SortedMap,java.util.SortedMap) -> <init>
    632:632:java.util.SortedMap entriesDiffering() -> entriesDiffering
    637:637:java.util.SortedMap entriesInCommon() -> entriesInCommon
    642:642:java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    647:647:java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    620:620:java.util.Map entriesDiffering() -> entriesDiffering
    620:620:java.util.Map entriesInCommon() -> entriesInCommon
    620:620:java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    620:620:java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
com.google.common.collect.Maps$TransformedEntriesMap -> com.google.common.collect.Maps$TransformedEntriesMap:
    java.util.Map fromMap -> fromMap
    com.google.common.collect.Maps$EntryTransformer transformer -> transformer
    1937:1940:void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1944:1944:int size() -> size
    1949:1949:boolean containsKey(java.lang.Object) -> containsKey
    1956:1957:java.lang.Object get(java.lang.Object) -> get
    1966:1966:java.lang.Object remove(java.lang.Object) -> remove
    1973:1974:void clear() -> clear
    1978:1978:java.util.Set keySet() -> keySet
    1983:1983:java.util.Iterator entryIterator() -> entryIterator
    1989:1989:java.util.Collection values() -> values
com.google.common.collect.Maps$TransformedEntriesNavigableMap -> com.google.common.collect.Maps$TransformedEntriesNavigableMap:
    2042:2043:void <init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    2047:2047:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    2052:2052:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    2057:2057:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    2062:2062:java.util.NavigableMap descendingMap() -> descendingMap
    2067:2067:java.util.Map$Entry firstEntry() -> firstEntry
    2072:2072:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    2077:2077:java.lang.Object floorKey(java.lang.Object) -> floorKey
    2082:2082:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    2087:2087:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    2092:2092:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    2097:2097:java.lang.Object higherKey(java.lang.Object) -> higherKey
    2102:2102:java.util.Map$Entry lastEntry() -> lastEntry
    2107:2107:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    2112:2112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    2117:2117:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    2122:2122:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    2127:2127:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    2133:2133:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    2139:2139:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2144:2144:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    2149:2149:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    2154:2154:java.util.Map$Entry transformEntry(java.util.Map$Entry) -> transformEntry
    2159:2159:java.util.NavigableMap fromMap() -> fromMap
    2036:2036:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    2036:2036:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2036:2036:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2036:2036:java.util.SortedMap fromMap() -> fromMap
com.google.common.collect.Maps$TransformedEntriesSortedMap -> com.google.common.collect.Maps$TransformedEntriesSortedMap:
    1997:1997:java.util.SortedMap fromMap() -> fromMap
    2002:2003:void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    2007:2007:java.util.Comparator comparator() -> comparator
    2012:2012:java.lang.Object firstKey() -> firstKey
    2017:2017:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2022:2022:java.lang.Object lastKey() -> lastKey
    2027:2027:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2032:2032:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$UnmodifiableBiMap -> com.google.common.collect.Maps$UnmodifiableBiMap:
    java.util.Map unmodifiableMap -> unmodifiableMap
    com.google.common.collect.BiMap delegate -> delegate
    com.google.common.collect.BiMap inverse -> inverse
    java.util.Set values -> values
    long serialVersionUID -> serialVersionUID
    1481:1485:void <init>(com.google.common.collect.BiMap,com.google.common.collect.BiMap) -> <init>
    1489:1489:java.util.Map delegate() -> delegate
    1494:1494:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    1499:1500:com.google.common.collect.BiMap inverse() -> inverse
    1507:1508:java.util.Set values() -> values
    1474:1474:java.util.Collection values() -> values
    1474:1474:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries -> com.google.common.collect.Maps$UnmodifiableEntries:
    java.util.Collection entries -> entries
    1315:1317:void <init>(java.util.Collection) -> <init>
    1321:1321:java.util.Collection delegate() -> delegate
    1326:1326:java.util.Iterator iterator() -> iterator
    1333:1333:java.lang.Object[] toArray() -> toArray
    1338:1338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    1312:1312:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntrySet -> com.google.common.collect.Maps$UnmodifiableEntrySet:
    1346:1347:void <init>(java.util.Set) -> <init>
    1353:1353:boolean equals(java.lang.Object) -> equals
    1358:1358:int hashCode() -> hashCode
com.google.common.collect.Maps$UnmodifiableNavigableMap -> com.google.common.collect.Maps$UnmodifiableNavigableMap:
    java.util.NavigableMap delegate -> delegate
    com.google.common.collect.Maps$UnmodifiableNavigableMap descendingMap -> descendingMap
    3221:3223:void <init>(java.util.NavigableMap) -> <init>
    3226:3229:void <init>(java.util.NavigableMap,com.google.common.collect.Maps$UnmodifiableNavigableMap) -> <init>
    3233:3233:java.util.SortedMap delegate() -> delegate
    3238:3238:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3243:3243:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3248:3248:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3253:3253:java.lang.Object floorKey(java.lang.Object) -> floorKey
    3258:3258:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3263:3263:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3268:3268:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3273:3273:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3278:3278:java.util.Map$Entry firstEntry() -> firstEntry
    3283:3283:java.util.Map$Entry lastEntry() -> lastEntry
    3288:3288:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3293:3293:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3300:3301:java.util.NavigableMap descendingMap() -> descendingMap
    3308:3308:java.util.Set keySet() -> keySet
    3313:3313:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3318:3318:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3323:3323:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    3328:3328:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3333:3333:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    3339:3339:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3345:3345:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    3350:3350:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    3216:3216:java.util.Map delegate() -> delegate
    3216:3216:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$ValueDifferenceImpl -> com.google.common.collect.Maps$ValueDifferenceImpl:
    java.lang.Object left -> left
    java.lang.Object right -> right
    548:548:com.google.common.collect.MapDifference$ValueDifference create(java.lang.Object,java.lang.Object) -> create
    551:554:void <init>(java.lang.Object,java.lang.Object) -> <init>
    558:558:java.lang.Object leftValue() -> leftValue
    563:563:java.lang.Object rightValue() -> rightValue
    568:573:boolean equals(java.lang.Object) -> equals
    578:578:int hashCode() -> hashCode
    583:583:java.lang.String toString() -> toString
com.google.common.collect.Maps$Values -> com.google.common.collect.Maps$Values:
    java.util.Map map -> map
    3796:3798:void <init>(java.util.Map) -> <init>
    3801:3801:java.util.Map map() -> map
    3806:3806:java.util.Iterator iterator() -> iterator
    3812:3820:boolean remove(java.lang.Object) -> remove
    3827:3835:boolean removeAll(java.util.Collection) -> removeAll
    3842:3850:boolean retainAll(java.util.Collection) -> retainAll
    3856:3856:int size() -> size
    3861:3861:boolean isEmpty() -> isEmpty
    3866:3866:boolean contains(java.lang.Object) -> contains
    3871:3872:void clear() -> clear
com.google.common.collect.Maps$ViewCachingAbstractMap -> com.google.common.collect.Maps$ViewCachingAbstractMap:
    java.util.Set entrySet -> entrySet
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    3413:3413:void <init>() -> <init>
    java.util.Set createEntrySet() -> createEntrySet
    3425:3426:java.util.Set entrySet() -> entrySet
    3433:3434:java.util.Set keySet() -> keySet
    3438:3438:java.util.Set createKeySet() -> createKeySet
    3445:3446:java.util.Collection values() -> values
    3450:3450:java.util.Collection createValues() -> createValues
com.google.common.collect.MinMaxPriorityQueue -> com.google.common.collect.MinMaxPriorityQueue:
    com.google.common.collect.MinMaxPriorityQueue$Heap minHeap -> minHeap
    com.google.common.collect.MinMaxPriorityQueue$Heap maxHeap -> maxHeap
    int maximumSize -> maximumSize
    java.lang.Object[] queue -> queue
    int size -> size
    int modCount -> modCount
    int EVEN_POWERS_OF_TWO -> EVEN_POWERS_OF_TWO
    int ODD_POWERS_OF_TWO -> ODD_POWERS_OF_TWO
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    112:112:com.google.common.collect.MinMaxPriorityQueue create() -> create
    121:121:com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    130:130:com.google.common.collect.MinMaxPriorityQueue$Builder orderedBy(java.util.Comparator) -> orderedBy
    139:139:com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    150:150:com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    239:249:void <init>(com.google.common.collect.MinMaxPriorityQueue$Builder,int) -> <init>
    253:253:int size() -> size
    266:267:boolean add(java.lang.Object) -> add
    272:277:boolean addAll(java.util.Collection) -> addAll
    288:297:boolean offer(java.lang.Object) -> offer
    302:302:java.lang.Object poll() -> poll
    307:307:java.lang.Object elementData(int) -> elementData
    312:312:java.lang.Object peek() -> peek
    319:327:int getMaxElementIndex() -> getMaxElementIndex
    336:336:java.lang.Object pollFirst() -> pollFirst
    345:345:java.lang.Object removeFirst() -> removeFirst
    353:353:java.lang.Object peekFirst() -> peekFirst
    361:361:java.lang.Object pollLast() -> pollLast
    370:373:java.lang.Object removeLast() -> removeLast
    381:381:java.lang.Object peekLast() -> peekLast
    401:425:com.google.common.collect.MinMaxPriorityQueue$MoveDesc removeAt(int) -> removeAt
    429:446:com.google.common.collect.MinMaxPriorityQueue$MoveDesc fillHole(int,java.lang.Object) -> fillHole
    465:467:java.lang.Object removeAndGet(int) -> removeAndGet
    471:471:com.google.common.collect.MinMaxPriorityQueue$Heap heapForIndex(int) -> heapForIndex
    479:481:boolean isEvenLevel(int) -> isEvenLevel
    492:497:boolean isIntact() -> isIntact
    882:882:java.util.Iterator iterator() -> iterator
    887:891:void clear() -> clear
    895:897:java.lang.Object[] toArray() -> toArray
    906:906:java.util.Comparator comparator() -> comparator
    911:911:int capacity() -> capacity
    922:934:int initialQueueSize(int,int,java.lang.Iterable) -> initialQueueSize
    938:944:void growIfNeeded() -> growIfNeeded
    948:953:int calculateNewCapacity() -> calculateNewCapacity
    958:958:int capAtMaximumSize(int,int) -> capAtMaximumSize
    105:105:void <init>(com.google.common.collect.MinMaxPriorityQueue$Builder,int,com.google.common.collect.MinMaxPriorityQueue$1) -> <init>
    105:105:java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue) -> access$500
    105:105:int access$600(com.google.common.collect.MinMaxPriorityQueue) -> access$600
    105:105:int access$700(com.google.common.collect.MinMaxPriorityQueue) -> access$700
com.google.common.collect.MinMaxPriorityQueue$1 -> com.google.common.collect.MinMaxPriorityQueue$1:
com.google.common.collect.MinMaxPriorityQueue$Builder -> com.google.common.collect.MinMaxPriorityQueue$Builder:
    int UNSET_EXPECTED_SIZE -> UNSET_EXPECTED_SIZE
    java.util.Comparator comparator -> comparator
    int expectedSize -> expectedSize
    int maximumSize -> maximumSize
    175:180:void <init>(java.util.Comparator) -> <init>
    187:189:com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    199:201:com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    209:209:com.google.common.collect.MinMaxPriorityQueue create() -> create
    217:223:com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    228:228:com.google.common.collect.Ordering ordering() -> ordering
    167:167:void <init>(java.util.Comparator,com.google.common.collect.MinMaxPriorityQueue$1) -> <init>
    167:167:com.google.common.collect.Ordering access$200(com.google.common.collect.MinMaxPriorityQueue$Builder) -> access$200
    167:167:int access$300(com.google.common.collect.MinMaxPriorityQueue$Builder) -> access$300
com.google.common.collect.MinMaxPriorityQueue$Heap -> com.google.common.collect.MinMaxPriorityQueue$Heap:
    com.google.common.collect.Ordering ordering -> ordering
    com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap -> otherHeap
    com.google.common.collect.MinMaxPriorityQueue this$0 -> this$0
    511:513:void <init>(com.google.common.collect.MinMaxPriorityQueue,com.google.common.collect.Ordering) -> <init>
    516:516:int compareElements(int,int) -> compareElements
    525:546:com.google.common.collect.MinMaxPriorityQueue$MoveDesc tryCrossOverAndBubbleUp(int,int,java.lang.Object) -> tryCrossOverAndBubbleUp
    554:564:void bubbleUp(int,java.lang.Object) -> bubbleUp
    571:581:int bubbleUpAlternatingLevels(int,java.lang.Object) -> bubbleUpAlternatingLevels
    590:601:int findMin(int,int) -> findMin
    608:608:int findMinChild(int) -> findMinChild
    615:619:int findMinGrandChild(int) -> findMinGrandChild
    628:655:int crossOverUp(int,java.lang.Object) -> crossOverUp
    668:681:int getCorrectLastElement(java.lang.Object) -> getCorrectLastElement
    691:699:int crossOver(int,java.lang.Object) -> crossOver
    712:716:int fillHoleAt(int) -> fillHoleAt
    720:732:boolean verifyIndex(int) -> verifyIndex
    738:738:int getLeftChildIndex(int) -> getLeftChildIndex
    742:742:int getRightChildIndex(int) -> getRightChildIndex
    746:746:int getParentIndex(int) -> getParentIndex
    750:750:int getGrandparentIndex(int) -> getGrandparentIndex
    507:507:boolean access$400(com.google.common.collect.MinMaxPriorityQueue$Heap,int) -> access$400
com.google.common.collect.MinMaxPriorityQueue$MoveDesc -> com.google.common.collect.MinMaxPriorityQueue$MoveDesc:
    java.lang.Object toTrickle -> toTrickle
    java.lang.Object replaced -> replaced
    455:458:void <init>(java.lang.Object,java.lang.Object) -> <init>
com.google.common.collect.MinMaxPriorityQueue$QueueIterator -> com.google.common.collect.MinMaxPriorityQueue$QueueIterator:
    int cursor -> cursor
    int expectedModCount -> expectedModCount
    java.util.Queue forgetMeNot -> forgetMeNot
    java.util.List skipMe -> skipMe
    java.lang.Object lastFromForgetMeNot -> lastFromForgetMeNot
    boolean canRemove -> canRemove
    com.google.common.collect.MinMaxPriorityQueue this$0 -> this$0
    760:762:void <init>(com.google.common.collect.MinMaxPriorityQueue) -> <init>
    770:771:boolean hasNext() -> hasNext
    777:791:java.lang.Object next() -> next
    796:815:void remove() -> remove
    819:824:boolean containsExact(java.lang.Iterable,java.lang.Object) -> containsExact
    829:835:boolean removeExact(java.lang.Object) -> removeExact
    839:842:void checkModCount() -> checkModCount
    849:854:int nextNotInSkipMe(int) -> nextNotInSkipMe
    760:760:void <init>(com.google.common.collect.MinMaxPriorityQueue,com.google.common.collect.MinMaxPriorityQueue$1) -> <init>
com.google.common.collect.Multimap -> com.google.common.collect.Multimap:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MultimapBuilder -> com.google.common.collect.MultimapBuilder:
    int DEFAULT_EXPECTED_KEYS -> DEFAULT_EXPECTED_KEYS
    81:81:void <init>() -> <init>
    89:89:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys() -> hashKeys
    99:100:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int) -> hashKeys
    117:117:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys() -> linkedHashKeys
    130:131:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys(int) -> linkedHashKeys
    151:151:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys treeKeys() -> treeKeys
    168:169:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys treeKeys(java.util.Comparator) -> treeKeys
    182:183:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys enumKeys(java.lang.Class) -> enumKeys
    com.google.common.collect.Multimap build() -> build
    433:435:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    75:75:void <init>(com.google.common.collect.MultimapBuilder$1) -> <init>
com.google.common.collect.MultimapBuilder$1 -> com.google.common.collect.MultimapBuilder$1:
    int val$expectedKeys -> val$expectedKeys
    100:100:void <init>(int) -> <init>
    103:103:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$2 -> com.google.common.collect.MultimapBuilder$2:
    int val$expectedKeys -> val$expectedKeys
    131:131:void <init>(int) -> <init>
    134:134:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$3 -> com.google.common.collect.MultimapBuilder$3:
    java.util.Comparator val$comparator -> val$comparator
    169:169:void <init>(java.util.Comparator) -> <init>
    172:172:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$4 -> com.google.common.collect.MultimapBuilder$4:
    java.lang.Class val$keyClass -> val$keyClass
    183:183:void <init>(java.lang.Class) -> <init>
    189:189:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$ArrayListSupplier -> com.google.common.collect.MultimapBuilder$ArrayListSupplier:
    int expectedValuesPerKey -> expectedValuesPerKey
    197:199:void <init>(int) -> <init>
    203:203:java.util.List get() -> get
    194:194:java.lang.Object get() -> get
com.google.common.collect.MultimapBuilder$EnumSetSupplier -> com.google.common.collect.MultimapBuilder$EnumSetSupplier:
    java.lang.Class clazz -> clazz
    266:268:void <init>(java.lang.Class) -> <init>
    272:272:java.util.Set get() -> get
    262:262:java.lang.Object get() -> get
com.google.common.collect.MultimapBuilder$HashSetSupplier -> com.google.common.collect.MultimapBuilder$HashSetSupplier:
    int expectedValuesPerKey -> expectedValuesPerKey
    226:228:void <init>(int) -> <init>
    232:232:java.util.Set get() -> get
    223:223:java.lang.Object get() -> get
com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier -> com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:
    int expectedValuesPerKey -> expectedValuesPerKey
    239:241:void <init>(int) -> <init>
    245:245:java.util.Set get() -> get
    236:236:java.lang.Object get() -> get
com.google.common.collect.MultimapBuilder$LinkedListSupplier -> com.google.common.collect.MultimapBuilder$LinkedListSupplier:
    com.google.common.collect.MultimapBuilder$LinkedListSupplier INSTANCE -> INSTANCE
    com.google.common.collect.MultimapBuilder$LinkedListSupplier[] $VALUES -> $VALUES
    207:207:com.google.common.collect.MultimapBuilder$LinkedListSupplier[] values() -> values
    207:207:com.google.common.collect.MultimapBuilder$LinkedListSupplier valueOf(java.lang.String) -> valueOf
    207:207:void <init>(java.lang.String,int) -> <init>
    213:214:com.google.common.base.Supplier instance() -> instance
    219:219:java.util.List get() -> get
    207:207:java.lang.Object get() -> get
    207:208:void <clinit>() -> <clinit>
com.google.common.collect.MultimapBuilder$ListMultimapBuilder -> com.google.common.collect.MultimapBuilder$ListMultimapBuilder:
    442:442:void <init>() -> <init>
    com.google.common.collect.ListMultimap build() -> build
    450:450:com.google.common.collect.ListMultimap build(com.google.common.collect.Multimap) -> build
    441:441:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    441:441:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:
    int DEFAULT_EXPECTED_VALUES_PER_KEY -> DEFAULT_EXPECTED_VALUES_PER_KEY
    286:286:void <init>() -> <init>
    java.util.Map createMap() -> createMap
    294:294:com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues() -> arrayListValues
    304:305:com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues(int) -> arrayListValues
    319:319:com.google.common.collect.MultimapBuilder$ListMultimapBuilder linkedListValues() -> linkedListValues
    332:332:com.google.common.collect.MultimapBuilder$SetMultimapBuilder hashSetValues() -> hashSetValues
    342:343:com.google.common.collect.MultimapBuilder$SetMultimapBuilder hashSetValues(int) -> hashSetValues
    357:357:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues() -> linkedHashSetValues
    367:368:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues(int) -> linkedHashSetValues
    383:383:com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder treeSetValues() -> treeSetValues
    393:394:com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder treeSetValues(java.util.Comparator) -> treeSetValues
    408:409:com.google.common.collect.MultimapBuilder$SetMultimapBuilder enumSetValues(java.lang.Class) -> enumSetValues
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1:
    int val$expectedValuesPerKey -> val$expectedValuesPerKey
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> this$0
    305:305:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    308:308:com.google.common.collect.ListMultimap build() -> build
    305:305:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2:
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> this$0
    319:319:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys) -> <init>
    322:322:com.google.common.collect.ListMultimap build() -> build
    319:319:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3:
    int val$expectedValuesPerKey -> val$expectedValuesPerKey
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> this$0
    343:343:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    346:346:com.google.common.collect.SetMultimap build() -> build
    343:343:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4:
    int val$expectedValuesPerKey -> val$expectedValuesPerKey
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> this$0
    368:368:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    371:371:com.google.common.collect.SetMultimap build() -> build
    368:368:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5:
    java.util.Comparator val$comparator -> val$comparator
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> this$0
    394:394:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,java.util.Comparator) -> <init>
    397:397:com.google.common.collect.SortedSetMultimap build() -> build
    394:394:com.google.common.collect.SetMultimap build() -> build
    394:394:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6:
    java.lang.Class val$valueClass -> val$valueClass
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> this$0
    409:409:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,java.lang.Class) -> <init>
    415:416:com.google.common.collect.SetMultimap build() -> build
    409:409:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$SetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SetMultimapBuilder:
    458:458:void <init>() -> <init>
    com.google.common.collect.SetMultimap build() -> build
    466:466:com.google.common.collect.SetMultimap build(com.google.common.collect.Multimap) -> build
    457:457:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    457:457:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder:
    474:474:void <init>() -> <init>
    com.google.common.collect.SortedSetMultimap build() -> build
    482:482:com.google.common.collect.SortedSetMultimap build(com.google.common.collect.Multimap) -> build
    473:473:com.google.common.collect.SetMultimap build(com.google.common.collect.Multimap) -> build
    473:473:com.google.common.collect.SetMultimap build() -> build
    473:473:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    473:473:com.google.common.collect.Multimap build() -> build
com.google.common.collect.MultimapBuilder$TreeSetSupplier -> com.google.common.collect.MultimapBuilder$TreeSetSupplier:
    java.util.Comparator comparator -> comparator
    252:254:void <init>(java.util.Comparator) -> <init>
    258:258:java.util.SortedSet get() -> get
    249:249:java.lang.Object get() -> get
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    69:69:void <init>() -> <init>
    116:116:com.google.common.collect.Multimap newMultimap(java.util.Map,com.google.common.base.Supplier) -> newMultimap
    196:196:com.google.common.collect.ListMultimap newListMultimap(java.util.Map,com.google.common.base.Supplier) -> newListMultimap
    272:272:com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
    347:347:com.google.common.collect.SortedSetMultimap newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSortedSetMultimap
    405:409:com.google.common.collect.Multimap invertFrom(com.google.common.collect.Multimap,com.google.common.collect.Multimap) -> invertFrom
    446:446:com.google.common.collect.Multimap synchronizedMultimap(com.google.common.collect.Multimap) -> synchronizedMultimap
    467:470:com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.Multimap) -> unmodifiableMultimap
    481:481:com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.ImmutableMultimap) -> unmodifiableMultimap
    713:713:com.google.common.collect.SetMultimap synchronizedSetMultimap(com.google.common.collect.SetMultimap) -> synchronizedSetMultimap
    735:738:com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.SetMultimap) -> unmodifiableSetMultimap
    750:750:com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap) -> unmodifiableSetMultimap
    767:767:com.google.common.collect.SortedSetMultimap synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> synchronizedSortedSetMultimap
    790:793:com.google.common.collect.SortedSetMultimap unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> unmodifiableSortedSetMultimap
    806:806:com.google.common.collect.ListMultimap synchronizedListMultimap(com.google.common.collect.ListMultimap) -> synchronizedListMultimap
    828:831:com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ListMultimap) -> unmodifiableListMultimap
    843:843:com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap) -> unmodifiableListMultimap
    855:862:java.util.Collection unmodifiableValueCollection(java.util.Collection) -> unmodifiableValueCollection
    876:879:java.util.Collection unmodifiableEntries(java.util.Collection) -> unmodifiableEntries
    892:892:java.util.Map asMap(com.google.common.collect.ListMultimap) -> asMap
    905:905:java.util.Map asMap(com.google.common.collect.SetMultimap) -> asMap
    919:919:java.util.Map asMap(com.google.common.collect.SortedSetMultimap) -> asMap
    930:930:java.util.Map asMap(com.google.common.collect.Multimap) -> asMap
    951:951:com.google.common.collect.SetMultimap forMap(java.util.Map) -> forMap
    1140:1142:com.google.common.collect.Multimap transformValues(com.google.common.collect.Multimap,com.google.common.base.Function) -> transformValues
    1202:1202:com.google.common.collect.Multimap transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1360:1362:com.google.common.collect.ListMultimap transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function) -> transformValues
    1419:1419:com.google.common.collect.ListMultimap transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1496:1496:com.google.common.collect.ImmutableListMultimap index(java.lang.Iterable,com.google.common.base.Function) -> index
    1544:1551:com.google.common.collect.ImmutableListMultimap index(java.util.Iterator,com.google.common.base.Function) -> index
    1845:1857:com.google.common.collect.Multimap filterKeys(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterKeys
    1894:1902:com.google.common.collect.SetMultimap filterKeys(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterKeys
    1939:1944:com.google.common.collect.ListMultimap filterKeys(com.google.common.collect.ListMultimap,com.google.common.base.Predicate) -> filterKeys
    1981:1981:com.google.common.collect.Multimap filterValues(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterValues
    2017:2017:com.google.common.collect.SetMultimap filterValues(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterValues
    2051:2055:com.google.common.collect.Multimap filterEntries(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterEntries
    2091:2092:com.google.common.collect.SetMultimap filterEntries(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterEntries
    2106:2107:com.google.common.collect.Multimap filterFiltered(com.google.common.collect.FilteredMultimap,com.google.common.base.Predicate) -> filterFiltered
    2118:2119:com.google.common.collect.SetMultimap filterFiltered(com.google.common.collect.FilteredSetMultimap,com.google.common.base.Predicate) -> filterFiltered
    2123:2130:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> equalsImpl
    68:68:java.util.Collection access$000(java.util.Collection) -> access$000
    68:68:java.util.Collection access$100(java.util.Collection) -> access$100
com.google.common.collect.Multimaps$AsMap -> com.google.common.collect.Multimaps$AsMap:
    com.google.common.collect.Multimap multimap -> multimap
    1732:1734:void <init>(com.google.common.collect.Multimap) -> <init>
    1738:1738:int size() -> size
    1743:1743:java.util.Set createEntrySet() -> createEntrySet
    1747:1748:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    1783:1783:java.util.Collection get(java.lang.Object) -> get
    1788:1788:java.util.Collection remove(java.lang.Object) -> remove
    1793:1793:java.util.Set keySet() -> keySet
    1798:1798:boolean isEmpty() -> isEmpty
    1803:1803:boolean containsKey(java.lang.Object) -> containsKey
    1808:1809:void clear() -> clear
    1729:1729:java.lang.Object remove(java.lang.Object) -> remove
    1729:1729:java.lang.Object get(java.lang.Object) -> get
    1729:1729:com.google.common.collect.Multimap access$200(com.google.common.collect.Multimaps$AsMap) -> access$200
com.google.common.collect.Multimaps$AsMap$EntrySet -> com.google.common.collect.Multimaps$AsMap$EntrySet:
    com.google.common.collect.Multimaps$AsMap this$0 -> this$0
    1751:1751:void <init>(com.google.common.collect.Multimaps$AsMap) -> <init>
    1754:1754:java.util.Map map() -> map
    1759:1759:java.util.Iterator iterator() -> iterator
    1771:1776:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$AsMap$EntrySet$1 -> com.google.common.collect.Multimaps$AsMap$EntrySet$1:
    com.google.common.collect.Multimaps$AsMap$EntrySet this$1 -> this$1
    1761:1761:void <init>(com.google.common.collect.Multimaps$AsMap$EntrySet) -> <init>
    1764:1764:java.util.Collection apply(java.lang.Object) -> apply
    1761:1761:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$CustomListMultimap -> com.google.common.collect.Multimaps$CustomListMultimap:
    com.google.common.base.Supplier factory -> factory
    long serialVersionUID -> serialVersionUID
    203:205:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    209:209:java.util.List createCollection() -> createCollection
    215:218:void writeObject(java.io.ObjectOutputStream) -> writeObject
    223:227:void readObject(java.io.ObjectInputStream) -> readObject
    199:199:java.util.Collection createCollection() -> createCollection
com.google.common.collect.Multimaps$CustomMultimap -> com.google.common.collect.Multimaps$CustomMultimap:
    com.google.common.base.Supplier factory -> factory
    long serialVersionUID -> serialVersionUID
    123:125:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    129:129:java.util.Collection createCollection() -> createCollection
    138:141:void writeObject(java.io.ObjectOutputStream) -> writeObject
    146:150:void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    com.google.common.base.Supplier factory -> factory
    long serialVersionUID -> serialVersionUID
    279:281:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    285:285:java.util.Set createCollection() -> createCollection
    291:294:void writeObject(java.io.ObjectOutputStream) -> writeObject
    299:303:void readObject(java.io.ObjectInputStream) -> readObject
    275:275:java.util.Collection createCollection() -> createCollection
com.google.common.collect.Multimaps$CustomSortedSetMultimap -> com.google.common.collect.Multimaps$CustomSortedSetMultimap:
    com.google.common.base.Supplier factory -> factory
    java.util.Comparator valueComparator -> valueComparator
    long serialVersionUID -> serialVersionUID
    355:358:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    362:362:java.util.SortedSet createCollection() -> createCollection
    367:367:java.util.Comparator valueComparator() -> valueComparator
    373:376:void writeObject(java.io.ObjectOutputStream) -> writeObject
    381:386:void readObject(java.io.ObjectInputStream) -> readObject
    350:350:java.util.Set createCollection() -> createCollection
    350:350:java.util.Collection createCollection() -> createCollection
com.google.common.collect.Multimaps$Entries -> com.google.common.collect.Multimaps$Entries:
    1694:1694:void <init>() -> <init>
    com.google.common.collect.Multimap multimap() -> multimap
    1699:1699:int size() -> size
    1704:1708:boolean contains(java.lang.Object) -> contains
    1713:1717:boolean remove(java.lang.Object) -> remove
    1722:1723:void clear() -> clear
com.google.common.collect.Multimaps$Keys -> com.google.common.collect.Multimaps$Keys:
    com.google.common.collect.Multimap multimap -> multimap
    1557:1559:void <init>(com.google.common.collect.Multimap) -> <init>
    1563:1563:java.util.Iterator entryIterator() -> entryIterator
    1584:1584:int distinctElements() -> distinctElements
    1589:1589:java.util.Set createEntrySet() -> createEntrySet
    1640:1640:boolean contains(java.lang.Object) -> contains
    1645:1645:java.util.Iterator iterator() -> iterator
    1650:1651:int count(java.lang.Object) -> count
    1656:1677:int remove(java.lang.Object,int) -> remove
    1682:1683:void clear() -> clear
    1687:1687:java.util.Set elementSet() -> elementSet
com.google.common.collect.Multimaps$Keys$1 -> com.google.common.collect.Multimaps$Keys$1:
    com.google.common.collect.Multimaps$Keys this$0 -> this$0
    1564:1564:void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator) -> <init>
    1567:1567:com.google.common.collect.Multiset$Entry transform(java.util.Map$Entry) -> transform
    1564:1564:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Multimaps$Keys$1$1 -> com.google.common.collect.Multimaps$Keys$1$1:
    java.util.Map$Entry val$backingEntry -> val$backingEntry
    com.google.common.collect.Multimaps$Keys$1 this$1 -> this$1
    1567:1567:void <init>(com.google.common.collect.Multimaps$Keys$1,java.util.Map$Entry) -> <init>
    1570:1570:java.lang.Object getElement() -> getElement
    1575:1575:int getCount() -> getCount
com.google.common.collect.Multimaps$Keys$KeysEntrySet -> com.google.common.collect.Multimaps$Keys$KeysEntrySet:
    com.google.common.collect.Multimaps$Keys this$0 -> this$0
    1593:1593:void <init>(com.google.common.collect.Multimaps$Keys) -> <init>
    1596:1596:com.google.common.collect.Multiset multiset() -> multiset
    1601:1601:java.util.Iterator iterator() -> iterator
    1606:1606:int size() -> size
    1611:1611:boolean isEmpty() -> isEmpty
    1616:1621:boolean contains(java.lang.Object) -> contains
    1626:1634:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$MapMultimap -> com.google.common.collect.Multimaps$MapMultimap:
    java.util.Map map -> map
    long serialVersionUID -> serialVersionUID
    959:961:void <init>(java.util.Map) -> <init>
    965:965:int size() -> size
    970:970:boolean containsKey(java.lang.Object) -> containsKey
    975:975:boolean containsValue(java.lang.Object) -> containsValue
    980:980:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    985:985:java.util.Set get(java.lang.Object) -> get
    1023:1023:boolean put(java.lang.Object,java.lang.Object) -> put
    1028:1028:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    1033:1033:boolean putAll(com.google.common.collect.Multimap) -> putAll
    1038:1038:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1043:1043:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1048:1053:java.util.Set removeAll(java.lang.Object) -> removeAll
    1058:1059:void clear() -> clear
    1063:1063:java.util.Set keySet() -> keySet
    1068:1068:java.util.Collection values() -> values
    1073:1073:java.util.Set entries() -> entries
    1078:1078:java.util.Iterator entryIterator() -> entryIterator
    1083:1083:java.util.Map createAsMap() -> createAsMap
    1088:1088:int hashCode() -> hashCode
    955:955:java.util.Collection entries() -> entries
    955:955:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    955:955:java.util.Collection get(java.lang.Object) -> get
    955:955:java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.Multimaps$MapMultimap$1 -> com.google.common.collect.Multimaps$MapMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.Multimaps$MapMultimap this$0 -> this$0
    985:985:void <init>(com.google.common.collect.Multimaps$MapMultimap,java.lang.Object) -> <init>
    988:988:java.util.Iterator iterator() -> iterator
    1016:1016:int size() -> size
com.google.common.collect.Multimaps$MapMultimap$1$1 -> com.google.common.collect.Multimaps$MapMultimap$1$1:
    int i -> i
    com.google.common.collect.Multimaps$MapMultimap$1 this$1 -> this$1
    988:988:void <init>(com.google.common.collect.Multimaps$MapMultimap$1) -> <init>
    993:993:boolean hasNext() -> hasNext
    998:1002:java.lang.Object next() -> next
    1007:1010:void remove() -> remove
com.google.common.collect.Multimaps$TransformedEntriesListMultimap -> com.google.common.collect.Multimaps$TransformedEntriesListMultimap:
    1427:1428:void <init>(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1432:1432:java.util.List transform(java.lang.Object,java.util.Collection) -> transform
    1437:1437:java.util.List get(java.lang.Object) -> get
    1443:1443:java.util.List removeAll(java.lang.Object) -> removeAll
    1448:1448:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1422:1422:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1422:1422:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1422:1422:java.util.Collection get(java.lang.Object) -> get
    1422:1422:java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
com.google.common.collect.Multimaps$TransformedEntriesMultimap -> com.google.common.collect.Multimaps$TransformedEntriesMultimap:
    com.google.common.collect.Multimap fromMultimap -> fromMultimap
    com.google.common.collect.Maps$EntryTransformer transformer -> transformer
    1211:1214:void <init>(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1217:1221:java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
    1227:1227:java.util.Map createAsMap() -> createAsMap
    1239:1240:void clear() -> clear
    1244:1244:boolean containsKey(java.lang.Object) -> containsKey
    1249:1249:java.util.Iterator entryIterator() -> entryIterator
    1255:1255:java.util.Collection get(java.lang.Object) -> get
    1260:1260:boolean isEmpty() -> isEmpty
    1265:1265:java.util.Set keySet() -> keySet
    1270:1270:com.google.common.collect.Multiset keys() -> keys
    1275:1275:boolean put(java.lang.Object,java.lang.Object) -> put
    1280:1280:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    1285:1285:boolean putAll(com.google.common.collect.Multimap) -> putAll
    1291:1291:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1297:1297:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1302:1302:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1307:1307:int size() -> size
    1312:1312:java.util.Collection createValues() -> createValues
com.google.common.collect.Multimaps$TransformedEntriesMultimap$1 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$1:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> this$0
    1229:1229:void <init>(com.google.common.collect.Multimaps$TransformedEntriesMultimap) -> <init>
    1232:1232:java.util.Collection transformEntry(java.lang.Object,java.util.Collection) -> transformEntry
    1229:1229:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$UnmodifiableListMultimap -> com.google.common.collect.Multimaps$UnmodifiableListMultimap:
    long serialVersionUID -> serialVersionUID
    602:603:void <init>(com.google.common.collect.ListMultimap) -> <init>
    607:607:com.google.common.collect.ListMultimap delegate() -> delegate
    612:612:java.util.List get(java.lang.Object) -> get
    617:617:java.util.List removeAll(java.lang.Object) -> removeAll
    622:622:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    599:599:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    599:599:java.util.Collection removeAll(java.lang.Object) -> removeAll
    599:599:java.util.Collection get(java.lang.Object) -> get
    599:599:com.google.common.collect.Multimap delegate() -> delegate
    599:599:java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap -> com.google.common.collect.Multimaps$UnmodifiableMultimap:
    com.google.common.collect.Multimap delegate -> delegate
    java.util.Collection entries -> entries
    com.google.common.collect.Multiset keys -> keys
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Map map -> map
    long serialVersionUID -> serialVersionUID
    493:495:void <init>(com.google.common.collect.Multimap) -> <init>
    499:499:com.google.common.collect.Multimap delegate() -> delegate
    504:504:void clear() -> clear
    509:522:java.util.Map asMap() -> asMap
    527:531:java.util.Collection entries() -> entries
    536:536:java.util.Collection get(java.lang.Object) -> get
    541:545:com.google.common.collect.Multiset keys() -> keys
    550:554:java.util.Set keySet() -> keySet
    559:559:boolean put(java.lang.Object,java.lang.Object) -> put
    564:564:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    569:569:boolean putAll(com.google.common.collect.Multimap) -> putAll
    574:574:boolean remove(java.lang.Object,java.lang.Object) -> remove
    579:579:java.util.Collection removeAll(java.lang.Object) -> removeAll
    584:584:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    589:593:java.util.Collection values() -> values
    484:484:java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap$1 -> com.google.common.collect.Multimaps$UnmodifiableMultimap$1:
    com.google.common.collect.Multimaps$UnmodifiableMultimap this$0 -> this$0
    515:515:void <init>(com.google.common.collect.Multimaps$UnmodifiableMultimap) -> <init>
    518:518:java.util.Collection apply(java.util.Collection) -> apply
    515:515:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$UnmodifiableSetMultimap -> com.google.common.collect.Multimaps$UnmodifiableSetMultimap:
    long serialVersionUID -> serialVersionUID
    631:632:void <init>(com.google.common.collect.SetMultimap) -> <init>
    636:636:com.google.common.collect.SetMultimap delegate() -> delegate
    645:645:java.util.Set get(java.lang.Object) -> get
    650:650:java.util.Set entries() -> entries
    655:655:java.util.Set removeAll(java.lang.Object) -> removeAll
    660:660:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    628:628:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    628:628:java.util.Collection removeAll(java.lang.Object) -> removeAll
    628:628:java.util.Collection get(java.lang.Object) -> get
    628:628:java.util.Collection entries() -> entries
    628:628:com.google.common.collect.Multimap delegate() -> delegate
    628:628:java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap -> com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:
    long serialVersionUID -> serialVersionUID
    669:670:void <init>(com.google.common.collect.SortedSetMultimap) -> <init>
    674:674:com.google.common.collect.SortedSetMultimap delegate() -> delegate
    679:679:java.util.SortedSet get(java.lang.Object) -> get
    684:684:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    689:689:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    694:694:java.util.Comparator valueComparator() -> valueComparator
    666:666:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    666:666:java.util.Set removeAll(java.lang.Object) -> removeAll
    666:666:java.util.Set get(java.lang.Object) -> get
    666:666:com.google.common.collect.SetMultimap delegate() -> delegate
    666:666:java.util.Collection get(java.lang.Object) -> get
    666:666:java.util.Collection removeAll(java.lang.Object) -> removeAll
    666:666:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    666:666:com.google.common.collect.Multimap delegate() -> delegate
    666:666:java.lang.Object delegate() -> delegate
com.google.common.collect.Multiset -> com.google.common.collect.Multiset:
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Multiset$Entry -> com.google.common.collect.Multiset$Entry:
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    com.google.common.collect.Ordering DECREASING_COUNT_ORDERING -> DECREASING_COUNT_ORDERING
    58:58:void <init>() -> <init>
    74:80:com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.Multiset) -> unmodifiableMultiset
    91:91:com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.ImmutableMultiset) -> unmodifiableMultiset
    210:210:com.google.common.collect.SortedMultiset unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset) -> unmodifiableSortedMultiset
    222:222:com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    282:289:com.google.common.collect.Multiset filter(com.google.common.collect.Multiset,com.google.common.base.Predicate) -> filter
    374:377:int inferDistinctElements(java.lang.Iterable) -> inferDistinctElements
    398:401:com.google.common.collect.Multiset union(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> union
    471:474:com.google.common.collect.Multiset intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> intersection
    531:535:com.google.common.collect.Multiset sum(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> sum
    611:615:com.google.common.collect.Multiset difference(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> difference
    655:663:boolean containsOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> containsOccurrences
    687:687:boolean retainOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> retainOccurrences
    695:711:boolean retainOccurrencesImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> retainOccurrencesImpl
    740:749:boolean removeOccurrences(com.google.common.collect.Multiset,java.lang.Iterable) -> removeOccurrences
    778:794:boolean removeOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> removeOccurrences
    845:866:boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> equalsImpl
    873:884:boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> addAllImpl
    891:896:boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> removeAllImpl
    903:909:boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> retainAllImpl
    916:927:int setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int) -> setCountImpl
    934:941:boolean setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int) -> setCountImpl
    1037:1037:java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> iteratorImpl
    1094:1098:int sizeImpl(com.google.common.collect.Multiset) -> sizeImpl
    1105:1105:com.google.common.collect.Multiset cast(java.lang.Iterable) -> cast
    1124:1126:com.google.common.collect.ImmutableMultiset copyHighestCountFirst(com.google.common.collect.Multiset) -> copyHighestCountFirst
    1108:1108:void <clinit>() -> <clinit>
com.google.common.collect.Multisets$1 -> com.google.common.collect.Multisets$1:
    com.google.common.collect.Multiset val$multiset1 -> val$multiset1
    com.google.common.collect.Multiset val$multiset2 -> val$multiset2
    401:401:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    404:404:boolean contains(java.lang.Object) -> contains
    409:409:boolean isEmpty() -> isEmpty
    414:414:int count(java.lang.Object) -> count
    419:419:java.util.Set createElementSet() -> createElementSet
    424:427:java.util.Iterator entryIterator() -> entryIterator
    450:450:int distinctElements() -> distinctElements
com.google.common.collect.Multisets$1$1 -> com.google.common.collect.Multisets$1$1:
    java.util.Iterator val$iterator1 -> val$iterator1
    java.util.Iterator val$iterator2 -> val$iterator2
    com.google.common.collect.Multisets$1 this$0 -> this$0
    427:427:void <init>(com.google.common.collect.Multisets$1,java.util.Iterator,java.util.Iterator) -> <init>
    430:443:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
    427:427:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$2 -> com.google.common.collect.Multisets$2:
    com.google.common.collect.Multiset val$multiset1 -> val$multiset1
    com.google.common.collect.Multiset val$multiset2 -> val$multiset2
    474:474:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    477:478:int count(java.lang.Object) -> count
    483:483:java.util.Set createElementSet() -> createElementSet
    488:490:java.util.Iterator entryIterator() -> entryIterator
    508:508:int distinctElements() -> distinctElements
com.google.common.collect.Multisets$2$1 -> com.google.common.collect.Multisets$2$1:
    java.util.Iterator val$iterator1 -> val$iterator1
    com.google.common.collect.Multisets$2 this$0 -> this$0
    490:490:void <init>(com.google.common.collect.Multisets$2,java.util.Iterator) -> <init>
    493:501:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
    490:490:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$3 -> com.google.common.collect.Multisets$3:
    com.google.common.collect.Multiset val$multiset1 -> val$multiset1
    com.google.common.collect.Multiset val$multiset2 -> val$multiset2
    535:535:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    538:538:boolean contains(java.lang.Object) -> contains
    543:543:boolean isEmpty() -> isEmpty
    548:548:int size() -> size
    553:553:int count(java.lang.Object) -> count
    558:558:java.util.Set createElementSet() -> createElementSet
    563:565:java.util.Iterator entryIterator() -> entryIterator
    588:588:int distinctElements() -> distinctElements
com.google.common.collect.Multisets$3$1 -> com.google.common.collect.Multisets$3$1:
    java.util.Iterator val$iterator1 -> val$iterator1
    java.util.Iterator val$iterator2 -> val$iterator2
    com.google.common.collect.Multisets$3 this$0 -> this$0
    565:565:void <init>(com.google.common.collect.Multisets$3,java.util.Iterator,java.util.Iterator) -> <init>
    568:581:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
    565:565:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$4 -> com.google.common.collect.Multisets$4:
    com.google.common.collect.Multiset val$multiset1 -> val$multiset1
    com.google.common.collect.Multiset val$multiset2 -> val$multiset2
    615:615:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    618:619:int count(java.lang.Object) -> count
    624:625:java.util.Iterator entryIterator() -> entryIterator
    643:643:int distinctElements() -> distinctElements
com.google.common.collect.Multisets$4$1 -> com.google.common.collect.Multisets$4$1:
    java.util.Iterator val$iterator1 -> val$iterator1
    com.google.common.collect.Multisets$4 this$0 -> this$0
    625:625:void <init>(com.google.common.collect.Multisets$4,java.util.Iterator) -> <init>
    628:636:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
    625:625:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$5 -> com.google.common.collect.Multisets$5:
    1109:1109:void <init>() -> <init>
    1112:1112:int compare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry) -> compare
    1109:1109:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Multisets$AbstractEntry -> com.google.common.collect.Multisets$AbstractEntry:
    801:801:void <init>() -> <init>
    808:813:boolean equals(java.lang.Object) -> equals
    822:823:int hashCode() -> hashCode
    835:837:java.lang.String toString() -> toString
com.google.common.collect.Multisets$ElementSet -> com.google.common.collect.Multisets$ElementSet:
    945:945:void <init>() -> <init>
    com.google.common.collect.Multiset multiset() -> multiset
    950:951:void clear() -> clear
    955:955:boolean contains(java.lang.Object) -> contains
    960:960:boolean containsAll(java.util.Collection) -> containsAll
    965:965:boolean isEmpty() -> isEmpty
    970:970:java.util.Iterator iterator() -> iterator
    980:980:boolean remove(java.lang.Object) -> remove
    985:985:int size() -> size
com.google.common.collect.Multisets$ElementSet$1 -> com.google.common.collect.Multisets$ElementSet$1:
    com.google.common.collect.Multisets$ElementSet this$0 -> this$0
    970:970:void <init>(com.google.common.collect.Multisets$ElementSet,java.util.Iterator) -> <init>
    973:973:java.lang.Object transform(com.google.common.collect.Multiset$Entry) -> transform
    970:970:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Multisets$EntrySet -> com.google.common.collect.Multisets$EntrySet:
    989:989:void <init>() -> <init>
    com.google.common.collect.Multiset multiset() -> multiset
    994:1006:boolean contains(java.lang.Object) -> contains
    1013:1024:boolean remove(java.lang.Object) -> remove
    1029:1030:void clear() -> clear
com.google.common.collect.Multisets$FilteredMultiset -> com.google.common.collect.Multisets$FilteredMultiset:
    com.google.common.collect.Multiset unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    296:299:void <init>(com.google.common.collect.Multiset,com.google.common.base.Predicate) -> <init>
    303:303:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    308:308:java.util.Set createElementSet() -> createElementSet
    313:313:java.util.Set createEntrySet() -> createEntrySet
    325:325:java.util.Iterator entryIterator() -> entryIterator
    330:330:int distinctElements() -> distinctElements
    335:341:int count(java.lang.Object) -> count
    346:348:int add(java.lang.Object,int) -> add
    353:357:int remove(java.lang.Object,int) -> remove
    363:364:void clear() -> clear
    292:292:java.util.Iterator iterator() -> iterator
com.google.common.collect.Multisets$FilteredMultiset$1 -> com.google.common.collect.Multisets$FilteredMultiset$1:
    com.google.common.collect.Multisets$FilteredMultiset this$0 -> this$0
    315:315:void <init>(com.google.common.collect.Multisets$FilteredMultiset) -> <init>
    318:318:boolean apply(com.google.common.collect.Multiset$Entry) -> apply
    315:315:boolean apply(java.lang.Object) -> apply
com.google.common.collect.Multisets$ImmutableEntry -> com.google.common.collect.Multisets$ImmutableEntry:
    java.lang.Object element -> element
    int count -> count
    long serialVersionUID -> serialVersionUID
    229:233:void <init>(java.lang.Object,int) -> <init>
    238:238:java.lang.Object getElement() -> getElement
    243:243:int getCount() -> getCount
    247:247:com.google.common.collect.Multisets$ImmutableEntry nextInBucket() -> nextInBucket
com.google.common.collect.Multisets$MultisetIteratorImpl -> com.google.common.collect.Multisets$MultisetIteratorImpl:
    com.google.common.collect.Multiset multiset -> multiset
    java.util.Iterator entryIterator -> entryIterator
    com.google.common.collect.Multiset$Entry currentEntry -> currentEntry
    int laterCount -> laterCount
    int totalCount -> totalCount
    boolean canRemove -> canRemove
    1053:1056:void <init>(com.google.common.collect.Multiset,java.util.Iterator) -> <init>
    1060:1060:boolean hasNext() -> hasNext
    1065:1074:java.lang.Object next() -> next
    1079:1087:void remove() -> remove
com.google.common.collect.Multisets$UnmodifiableMultiset -> com.google.common.collect.Multisets$UnmodifiableMultiset:
    com.google.common.collect.Multiset delegate -> delegate
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    97:99:void <init>(com.google.common.collect.Multiset) -> <init>
    105:105:com.google.common.collect.Multiset delegate() -> delegate
    111:111:java.util.Set createElementSet() -> createElementSet
    116:117:java.util.Set elementSet() -> elementSet
    125:126:java.util.Set entrySet() -> entrySet
    137:137:java.util.Iterator iterator() -> iterator
    142:142:boolean add(java.lang.Object) -> add
    147:147:int add(java.lang.Object,int) -> add
    152:152:boolean addAll(java.util.Collection) -> addAll
    157:157:boolean remove(java.lang.Object) -> remove
    162:162:int remove(java.lang.Object,int) -> remove
    167:167:boolean removeAll(java.util.Collection) -> removeAll
    172:172:boolean retainAll(java.util.Collection) -> retainAll
    177:177:void clear() -> clear
    182:182:int setCount(java.lang.Object,int) -> setCount
    187:187:boolean setCount(java.lang.Object,int,int) -> setCount
    94:94:java.util.Collection delegate() -> delegate
    94:94:java.lang.Object delegate() -> delegate
com.google.common.collect.MutableClassToInstanceMap -> com.google.common.collect.MutableClassToInstanceMap:
    com.google.common.collect.MapConstraint VALUE_CAN_BE_CAST_TO_KEY -> VALUE_CAN_BE_CAST_TO_KEY
    long serialVersionUID -> serialVersionUID
    44:44:com.google.common.collect.MutableClassToInstanceMap create() -> create
    53:53:com.google.common.collect.MutableClassToInstanceMap create(java.util.Map) -> create
    57:58:void <init>(java.util.Map) -> <init>
    70:70:java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    75:75:java.lang.Object getInstance(java.lang.Class) -> getInstance
    79:79:java.lang.Object cast(java.lang.Class,java.lang.Object) -> cast
    36:36:void putAll(java.util.Map) -> putAll
    36:36:java.util.Set entrySet() -> entrySet
    36:36:java.lang.Object access$000(java.lang.Class,java.lang.Object) -> access$000
    60:60:void <clinit>() -> <clinit>
com.google.common.collect.MutableClassToInstanceMap$1 -> com.google.common.collect.MutableClassToInstanceMap$1:
    61:61:void <init>() -> <init>
    64:65:void checkKeyValue(java.lang.Class,java.lang.Object) -> checkKeyValue
    61:61:void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    com.google.common.collect.NaturalOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    33:35:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    40:40:com.google.common.collect.Ordering reverse() -> reverse
    45:45:java.lang.Object readResolve() -> readResolve
    50:50:java.lang.String toString() -> toString
    53:53:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    29:29:void <clinit>() -> <clinit>
com.google.common.collect.NullsFirstOrdering -> com.google.common.collect.NullsFirstOrdering:
    com.google.common.collect.Ordering ordering -> ordering
    long serialVersionUID -> serialVersionUID
    30:32:void <init>(com.google.common.collect.Ordering) -> <init>
    36:45:int compare(java.lang.Object,java.lang.Object) -> compare
    51:51:com.google.common.collect.Ordering reverse() -> reverse
    57:57:com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    62:62:com.google.common.collect.Ordering nullsLast() -> nullsLast
    67:74:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
    84:84:java.lang.String toString() -> toString
com.google.common.collect.NullsLastOrdering -> com.google.common.collect.NullsLastOrdering:
    com.google.common.collect.Ordering ordering -> ordering
    long serialVersionUID -> serialVersionUID
    30:32:void <init>(com.google.common.collect.Ordering) -> <init>
    36:45:int compare(java.lang.Object,java.lang.Object) -> compare
    51:51:com.google.common.collect.Ordering reverse() -> reverse
    56:56:com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    62:62:com.google.common.collect.Ordering nullsLast() -> nullsLast
    67:74:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
    84:84:java.lang.String toString() -> toString
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    39:39:void <init>() -> <init>
    50:50:java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    61:61:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    73:76:java.lang.Object[] concat(java.lang.Object[],java.lang.Object[],java.lang.Class) -> concat
    89:92:java.lang.Object[] concat(java.lang.Object,java.lang.Object[]) -> concat
    105:107:java.lang.Object[] concat(java.lang.Object[],java.lang.Object) -> concat
    112:114:java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> arraysCopyOf
    142:150:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    165:172:java.lang.Object[] toArrayImpl(java.lang.Object[],int,int,java.lang.Object[]) -> toArrayImpl
    190:190:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
    198:204:java.lang.Object[] copyAsObjectArray(java.lang.Object[],int,int) -> copyAsObjectArray
    208:212:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    219:222:void swap(java.lang.Object[],int,int) -> swap
    225:225:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    229:232:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    238:241:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    37:37:void <clinit>() -> <clinit>
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    int LEFT_IS_GREATER -> LEFT_IS_GREATER
    int RIGHT_IS_GREATER -> RIGHT_IS_GREATER
    147:147:com.google.common.collect.Ordering natural() -> natural
    165:165:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    178:178:com.google.common.collect.Ordering from(com.google.common.collect.Ordering) -> from
    204:204:com.google.common.collect.Ordering explicit(java.util.List) -> explicit
    232:232:com.google.common.collect.Ordering explicit(java.lang.Object,java.lang.Object[]) -> explicit
    266:266:com.google.common.collect.Ordering allEqual() -> allEqual
    278:278:com.google.common.collect.Ordering usingToString() -> usingToString
    298:298:com.google.common.collect.Ordering arbitrary() -> arbitrary
    368:368:void <init>() -> <init>
    380:380:com.google.common.collect.Ordering reverse() -> reverse
    391:391:com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    402:402:com.google.common.collect.Ordering nullsLast() -> nullsLast
    416:416:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    420:420:com.google.common.collect.Ordering onKeys() -> onKeys
    436:436:com.google.common.collect.Ordering compound(java.util.Comparator) -> compound
    456:456:com.google.common.collect.Ordering compound(java.lang.Iterable) -> compound
    485:485:com.google.common.collect.Ordering lexicographical() -> lexicographical
    int compare(java.lang.Object,java.lang.Object) -> compare
    509:515:java.lang.Object min(java.util.Iterator) -> min
    528:528:java.lang.Object min(java.lang.Iterable) -> min
    545:545:java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    560:566:java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    584:590:java.lang.Object max(java.util.Iterator) -> max
    603:603:java.lang.Object max(java.lang.Iterable) -> max
    620:620:java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    635:641:java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    659:675:java.util.List leastOf(java.lang.Iterable,int) -> leastOf
    693:779:java.util.List leastOf(java.util.Iterator,int) -> leastOf
    785:798:int partition(java.lang.Object[],int,int,int) -> partition
    818:818:java.util.List greatestOf(java.lang.Iterable,int) -> greatestOf
    836:836:java.util.List greatestOf(java.util.Iterator,int) -> greatestOf
    859:861:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    884:889:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    899:910:boolean isOrdered(java.lang.Iterable) -> isOrdered
    920:931:boolean isStrictlyOrdered(java.lang.Iterable) -> isStrictlyOrdered
    943:943:int binarySearch(java.util.List,java.lang.Object) -> binarySearch
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    java.util.Map uids -> uids
    306:308:void <init>() -> <init>
    323:341:int compare(java.lang.Object,java.lang.Object) -> compare
    346:346:java.lang.String toString() -> toString
    358:358:int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Ordering$ArbitraryOrdering$1 -> com.google.common.collect.Ordering$ArbitraryOrdering$1:
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    com.google.common.collect.Ordering$ArbitraryOrdering this$0 -> this$0
    312:313:void <init>(com.google.common.collect.Ordering$ArbitraryOrdering) -> <init>
    317:317:java.lang.Integer apply(java.lang.Object) -> apply
    312:312:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Ordering$ArbitraryOrderingHolder -> com.google.common.collect.Ordering$ArbitraryOrderingHolder:
    com.google.common.collect.Ordering ARBITRARY_ORDERING -> ARBITRARY_ORDERING
    301:301:void <init>() -> <init>
    302:302:void <clinit>() -> <clinit>
com.google.common.collect.Ordering$IncomparableValueException -> com.google.common.collect.Ordering$IncomparableValueException:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    958:960:void <init>(java.lang.Object) -> <init>
com.google.common.collect.PeekingIterator -> com.google.common.collect.PeekingIterator:
    java.lang.Object peek() -> peek
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    50:56:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    60:60:java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    70:70:com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
    75:75:java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> mapsTransformEntriesSortedMap
    82:82:java.util.SortedMap mapsAsMapSortedSet(java.util.SortedSet,com.google.common.base.Function) -> mapsAsMapSortedSet
    88:88:java.util.SortedSet setsFilterSortedSet(java.util.SortedSet,com.google.common.base.Predicate) -> setsFilterSortedSet
    95:95:java.util.SortedMap mapsFilterSortedMap(java.util.SortedMap,com.google.common.base.Predicate) -> mapsFilterSortedMap
    101:101:java.util.Queue newFastestQueue(int) -> newFastestQueue
    104:104:void <init>() -> <init>
com.google.common.collect.Queues -> com.google.common.collect.Queues:
    42:42:void <init>() -> <init>
    51:51:java.util.concurrent.ArrayBlockingQueue newArrayBlockingQueue(int) -> newArrayBlockingQueue
    62:62:java.util.ArrayDeque newArrayDeque() -> newArrayDeque
    72:77:java.util.ArrayDeque newArrayDeque(java.lang.Iterable) -> newArrayDeque
    86:86:java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue() -> newConcurrentLinkedQueue
    95:100:java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue(java.lang.Iterable) -> newConcurrentLinkedQueue
    111:111:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque() -> newLinkedBlockingDeque
    121:121:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int) -> newLinkedBlockingDeque
    132:137:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(java.lang.Iterable) -> newLinkedBlockingDeque
    146:146:java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue() -> newLinkedBlockingQueue
    155:155:java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(int) -> newLinkedBlockingQueue
    167:172:java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(java.lang.Iterable) -> newLinkedBlockingQueue
    186:186:java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue() -> newPriorityBlockingQueue
    199:204:java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue(java.lang.Iterable) -> newPriorityBlockingQueue
    216:216:java.util.PriorityQueue newPriorityQueue() -> newPriorityQueue
    229:234:java.util.PriorityQueue newPriorityQueue(java.lang.Iterable) -> newPriorityQueue
    243:243:java.util.concurrent.SynchronousQueue newSynchronousQueue() -> newSynchronousQueue
    267:288:int drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drain
    311:342:int drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drainUninterruptibly
    373:373:java.util.Queue synchronizedQueue(java.util.Queue) -> synchronizedQueue
    404:404:java.util.Deque synchronizedDeque(java.util.Deque) -> synchronizedDeque
com.google.common.collect.Range -> com.google.common.collect.Range:
    com.google.common.base.Function LOWER_BOUND_FN -> LOWER_BOUND_FN
    com.google.common.base.Function UPPER_BOUND_FN -> UPPER_BOUND_FN
    com.google.common.collect.Ordering RANGE_LEX_ORDERING -> RANGE_LEX_ORDERING
    com.google.common.collect.Range ALL -> ALL
    com.google.common.collect.Cut lowerBound -> lowerBound
    com.google.common.collect.Cut upperBound -> upperBound
    long serialVersionUID -> serialVersionUID
    127:127:com.google.common.base.Function lowerBoundFn() -> lowerBoundFn
    140:140:com.google.common.base.Function upperBoundFn() -> upperBoundFn
    146:146:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> create
    158:158:com.google.common.collect.Range open(java.lang.Comparable,java.lang.Comparable) -> open
    170:170:com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable) -> closed
    182:182:com.google.common.collect.Range closedOpen(java.lang.Comparable,java.lang.Comparable) -> closedOpen
    194:194:com.google.common.collect.Range openClosed(java.lang.Comparable,java.lang.Comparable) -> openClosed
    208:215:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    225:225:com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    235:235:com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    245:251:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    262:262:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    272:272:com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    282:288:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    302:302:com.google.common.collect.Range all() -> all
    313:313:com.google.common.collect.Range singleton(java.lang.Comparable) -> singleton
    328:340:com.google.common.collect.Range encloseAll(java.lang.Iterable) -> encloseAll
    346:354:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    360:360:boolean hasLowerBound() -> hasLowerBound
    370:370:java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    381:381:com.google.common.collect.BoundType lowerBoundType() -> lowerBoundType
    388:388:boolean hasUpperBound() -> hasUpperBound
    398:398:java.lang.Comparable upperEndpoint() -> upperEndpoint
    409:409:com.google.common.collect.BoundType upperBoundType() -> upperBoundType
    422:422:boolean isEmpty() -> isEmpty
    431:433:boolean contains(java.lang.Comparable) -> contains
    443:443:boolean apply(java.lang.Comparable) -> apply
    451:469:boolean containsAll(java.lang.Iterable) -> containsAll
    497:497:boolean encloses(com.google.common.collect.Range) -> encloses
    526:526:boolean isConnected(com.google.common.collect.Range) -> isConnected
    547:556:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    572:581:com.google.common.collect.Range span(com.google.common.collect.Range) -> span
    610:613:com.google.common.collect.Range canonical(com.google.common.collect.DiscreteDomain) -> canonical
    625:629:boolean equals(java.lang.Object) -> equals
    635:635:int hashCode() -> hashCode
    644:644:java.lang.String toString() -> toString
    648:652:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> toString
    659:659:java.util.SortedSet cast(java.lang.Iterable) -> cast
    663:666:java.lang.Object readResolve() -> readResolve
    672:672:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> compareOrThrow
    113:113:boolean apply(java.lang.Object) -> apply
    117:292:void <clinit>() -> <clinit>
com.google.common.collect.Range$1 -> com.google.common.collect.Range$1:
    118:118:void <init>() -> <init>
    121:121:com.google.common.collect.Cut apply(com.google.common.collect.Range) -> apply
    118:118:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Range$2 -> com.google.common.collect.Range$2:
    131:131:void <init>() -> <init>
    134:134:com.google.common.collect.Cut apply(com.google.common.collect.Range) -> apply
    131:131:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Range$3 -> com.google.common.collect.Range$3:
    int[] $SwitchMap$com$google$common$collect$BoundType -> $SwitchMap$com$google$common$collect$BoundType
    245:245:void <clinit>() -> <clinit>
com.google.common.collect.Range$RangeLexOrdering -> com.google.common.collect.Range$RangeLexOrdering:
    long serialVersionUID -> serialVersionUID
    678:678:void <init>() -> <init>
    682:682:int compare(com.google.common.collect.Range,com.google.common.collect.Range) -> compare
    678:678:int compare(java.lang.Object,java.lang.Object) -> compare
    678:678:void <init>(com.google.common.collect.Range$1) -> <init>
com.google.common.collect.RangeMap -> com.google.common.collect.RangeMap:
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.RangeSet -> com.google.common.collect.RangeSet:
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    boolean isEmpty() -> isEmpty
    com.google.common.collect.Range span() -> span
    java.util.Set asRanges() -> asRanges
    java.util.Set asDescendingSetOfRanges() -> asDescendingSetOfRanges
    com.google.common.collect.RangeSet complement() -> complement
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void clear() -> clear
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.RegularContiguousSet -> com.google.common.collect.RegularContiguousSet:
    com.google.common.collect.Range range -> range
    long serialVersionUID -> serialVersionUID
    40:42:void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> <init>
    45:45:com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range) -> intersectionInCurrentDomain
    52:52:com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> headSetImpl
    58:62:com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSetImpl
    70:70:com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> tailSetImpl
    76:76:int indexOf(java.lang.Object) -> indexOf
    81:81:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    94:94:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    105:105:boolean equalsOrThrow(java.lang.Comparable,java.lang.Comparable) -> equalsOrThrow
    110:110:boolean isPartialView() -> isPartialView
    115:115:java.lang.Comparable first() -> first
    120:120:java.lang.Comparable last() -> last
    125:126:int size() -> size
    131:137:boolean contains(java.lang.Object) -> contains
    143:143:boolean containsAll(java.util.Collection) -> containsAll
    148:148:boolean isEmpty() -> isEmpty
    153:160:com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    168:168:com.google.common.collect.Range range() -> range
    173:173:com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    180:188:boolean equals(java.lang.Object) -> equals
    194:194:int hashCode() -> hashCode
    215:215:java.lang.Object writeReplace() -> writeReplace
    34:34:java.lang.Object last() -> last
    34:34:java.lang.Object first() -> first
    34:34:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    34:34:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    34:34:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    34:34:java.util.Iterator descendingIterator() -> descendingIterator
    34:34:java.util.Iterator iterator() -> iterator
    36:36:boolean access$000(java.lang.Comparable,java.lang.Comparable) -> access$000
com.google.common.collect.RegularContiguousSet$1 -> com.google.common.collect.RegularContiguousSet$1:
    java.lang.Comparable last -> last
    com.google.common.collect.RegularContiguousSet this$0 -> this$0
    81:82:void <init>(com.google.common.collect.RegularContiguousSet,java.lang.Comparable) -> <init>
    86:86:java.lang.Comparable computeNext(java.lang.Comparable) -> computeNext
    81:81:java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.RegularContiguousSet$2 -> com.google.common.collect.RegularContiguousSet$2:
    java.lang.Comparable first -> first
    com.google.common.collect.RegularContiguousSet this$0 -> this$0
    94:95:void <init>(com.google.common.collect.RegularContiguousSet,java.lang.Comparable) -> <init>
    99:99:java.lang.Comparable computeNext(java.lang.Comparable) -> computeNext
    94:94:java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.RegularContiguousSet$SerializedForm -> com.google.common.collect.RegularContiguousSet$SerializedForm:
    com.google.common.collect.Range range -> range
    com.google.common.collect.DiscreteDomain domain -> domain
    202:205:void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> <init>
    208:208:java.lang.Object readResolve() -> readResolve
    198:198:void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain,com.google.common.collect.RegularContiguousSet$1) -> <init>
com.google.common.collect.RegularImmutableAsList -> com.google.common.collect.RegularImmutableAsList:
    com.google.common.collect.ImmutableCollection delegate -> delegate
    com.google.common.collect.ImmutableList delegateList -> delegateList
    35:38:void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList) -> <init>
    41:42:void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[]) -> <init>
    46:46:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    50:50:com.google.common.collect.ImmutableList delegateList() -> delegateList
    56:56:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    62:62:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    67:67:java.lang.Object get(int) -> get
    29:29:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableBiMap -> com.google.common.collect.RegularImmutableBiMap:
    com.google.common.collect.RegularImmutableBiMap EMPTY -> EMPTY
    double MAX_LOAD_FACTOR -> MAX_LOAD_FACTOR
    com.google.common.collect.ImmutableMapEntry[] keyTable -> keyTable
    com.google.common.collect.ImmutableMapEntry[] valueTable -> valueTable
    java.util.Map$Entry[] entries -> entries
    int mask -> mask
    int hashCode -> hashCode
    com.google.common.collect.ImmutableBiMap inverse -> inverse
    53:53:com.google.common.collect.RegularImmutableBiMap fromEntries(java.util.Map$Entry[]) -> fromEntries
    57:107:com.google.common.collect.RegularImmutableBiMap fromEntryArray(int,java.util.Map$Entry[]) -> fromEntryArray
    115:121:void <init>(com.google.common.collect.ImmutableMapEntry[],com.google.common.collect.ImmutableMapEntry[],java.util.Map$Entry[],int,int) -> <init>
    127:130:void checkNoConflictInValueBucket(java.lang.Object,java.util.Map$Entry,com.google.common.collect.ImmutableMapEntry) -> checkNoConflictInValueBucket
    135:135:java.lang.Object get(java.lang.Object) -> get
    140:140:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    147:147:boolean isHashCodeFast() -> isHashCodeFast
    152:152:int hashCode() -> hashCode
    157:157:boolean isPartialView() -> isPartialView
    162:162:int size() -> size
    169:173:com.google.common.collect.ImmutableBiMap inverse() -> inverse
    37:37:com.google.common.collect.BiMap inverse() -> inverse
    39:39:com.google.common.collect.ImmutableMapEntry[] access$100(com.google.common.collect.RegularImmutableBiMap) -> access$100
    39:39:int access$200(com.google.common.collect.RegularImmutableBiMap) -> access$200
    39:39:int access$300(com.google.common.collect.RegularImmutableBiMap) -> access$300
    39:39:java.util.Map$Entry[] access$400(com.google.common.collect.RegularImmutableBiMap) -> access$400
    40:40:void <clinit>() -> <clinit>
com.google.common.collect.RegularImmutableBiMap$1 -> com.google.common.collect.RegularImmutableBiMap$1:
com.google.common.collect.RegularImmutableBiMap$Inverse -> com.google.common.collect.RegularImmutableBiMap$Inverse:
    com.google.common.collect.RegularImmutableBiMap this$0 -> this$0
    176:209:void <init>(com.google.common.collect.RegularImmutableBiMap) -> <init>
    180:180:int size() -> size
    185:185:com.google.common.collect.ImmutableBiMap inverse() -> inverse
    190:201:java.lang.Object get(java.lang.Object) -> get
    206:206:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    250:250:boolean isPartialView() -> isPartialView
    255:255:java.lang.Object writeReplace() -> writeReplace
    176:176:com.google.common.collect.BiMap inverse() -> inverse
    176:176:void <init>(com.google.common.collect.RegularImmutableBiMap,com.google.common.collect.RegularImmutableBiMap$1) -> <init>
com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet -> com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet:
    com.google.common.collect.RegularImmutableBiMap$Inverse this$1 -> this$1
    210:210:void <init>(com.google.common.collect.RegularImmutableBiMap$Inverse) -> <init>
    213:213:com.google.common.collect.ImmutableMap map() -> map
    218:218:boolean isHashCodeFast() -> isHashCodeFast
    223:223:int hashCode() -> hashCode
    228:228:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    233:233:com.google.common.collect.ImmutableList createAsList() -> createAsList
    209:209:java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1 -> com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1:
    com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet this$2 -> this$2
    233:233:void <init>(com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet) -> <init>
    236:237:java.util.Map$Entry get(int) -> get
    242:242:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    233:233:java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm -> com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm:
    com.google.common.collect.ImmutableBiMap forward -> forward
    long serialVersionUID -> serialVersionUID
    262:264:void <init>(com.google.common.collect.ImmutableBiMap) -> <init>
    267:267:java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    com.google.common.collect.ImmutableList EMPTY -> EMPTY
    int offset -> offset
    int size -> size
    java.lang.Object[] array -> array
    37:41:void <init>(java.lang.Object[],int,int) -> <init>
    44:45:void <init>(java.lang.Object[]) -> <init>
    49:49:int size() -> size
    54:54:boolean isPartialView() -> isPartialView
    59:60:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    67:68:java.lang.Object get(int) -> get
    73:73:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    81:81:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    27:27:java.util.ListIterator listIterator(int) -> listIterator
    30:30:void <clinit>() -> <clinit>
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    java.util.Map$Entry[] entries -> entries
    com.google.common.collect.ImmutableMapEntry[] table -> table
    int mask -> mask
    double MAX_LOAD_FACTOR -> MAX_LOAD_FACTOR
    long serialVersionUID -> serialVersionUID
    46:46:com.google.common.collect.RegularImmutableMap fromEntries(java.util.Map$Entry[]) -> fromEntries
    55:86:com.google.common.collect.RegularImmutableMap fromEntryArray(int,java.util.Map$Entry[]) -> fromEntryArray
    89:93:void <init>(java.util.Map$Entry[],com.google.common.collect.ImmutableMapEntry[],int) -> <init>
    97:100:void checkNoConflictInKeyBucket(java.lang.Object,java.util.Map$Entry,com.google.common.collect.ImmutableMapEntry) -> checkNoConflictInKeyBucket
    111:111:java.lang.Object get(java.lang.Object) -> get
    116:135:java.lang.Object get(java.lang.Object,com.google.common.collect.ImmutableMapEntry[],int) -> get
    140:140:int size() -> size
    145:145:boolean isPartialView() -> isPartialView
    150:150:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
com.google.common.collect.RegularImmutableMultiset -> com.google.common.collect.RegularImmutableMultiset:
    com.google.common.collect.RegularImmutableMultiset EMPTY -> EMPTY
    com.google.common.collect.Multisets$ImmutableEntry[] entries -> entries
    com.google.common.collect.Multisets$ImmutableEntry[] hashTable -> hashTable
    int size -> size
    int hashCode -> hashCode
    com.google.common.collect.ImmutableSet elementSet -> elementSet
    48:94:void <init>(java.util.Collection) -> <init>
    112:112:boolean isPartialView() -> isPartialView
    117:130:int count(java.lang.Object) -> count
    135:135:int size() -> size
    140:141:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    170:170:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    175:175:int hashCode() -> hashCode
    35:35:java.util.Set elementSet() -> elementSet
    37:37:com.google.common.collect.Multisets$ImmutableEntry[] access$100(com.google.common.collect.RegularImmutableMultiset) -> access$100
    38:38:void <clinit>() -> <clinit>
com.google.common.collect.RegularImmutableMultiset$1 -> com.google.common.collect.RegularImmutableMultiset$1:
com.google.common.collect.RegularImmutableMultiset$ElementSet -> com.google.common.collect.RegularImmutableMultiset$ElementSet:
    com.google.common.collect.RegularImmutableMultiset this$0 -> this$0
    145:145:void <init>(com.google.common.collect.RegularImmutableMultiset) -> <init>
    149:149:java.lang.Object get(int) -> get
    154:154:boolean contains(java.lang.Object) -> contains
    159:159:boolean isPartialView() -> isPartialView
    164:164:int size() -> size
    145:145:void <init>(com.google.common.collect.RegularImmutableMultiset,com.google.common.collect.RegularImmutableMultiset$1) -> <init>
com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry -> com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry:
    com.google.common.collect.Multisets$ImmutableEntry nextInBucket -> nextInBucket
    100:102:void <init>(java.lang.Object,int,com.google.common.collect.Multisets$ImmutableEntry) -> <init>
    106:106:com.google.common.collect.Multisets$ImmutableEntry nextInBucket() -> nextInBucket
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    com.google.common.collect.RegularImmutableSet EMPTY -> EMPTY
    java.lang.Object[] elements -> elements
    java.lang.Object[] table -> table
    int mask -> mask
    int hashCode -> hashCode
    42:47:void <init>(java.lang.Object[],int,java.lang.Object[],int) -> <init>
    51:61:boolean contains(java.lang.Object) -> contains
    68:68:int size() -> size
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    79:80:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    85:85:com.google.common.collect.ImmutableList createAsList() -> createAsList
    90:90:boolean isPartialView() -> isPartialView
    95:95:int hashCode() -> hashCode
    100:100:boolean isHashCodeFast() -> isHashCodeFast
    29:29:java.util.Iterator iterator() -> iterator
    32:32:void <clinit>() -> <clinit>
com.google.common.collect.RegularImmutableSortedMultiset -> com.google.common.collect.RegularImmutableSortedMultiset:
    long[] ZERO_CUMULATIVE_COUNTS -> ZERO_CUMULATIVE_COUNTS
    com.google.common.collect.RegularImmutableSortedSet elementSet -> elementSet
    long[] cumulativeCounts -> cumulativeCounts
    int offset -> offset
    int length -> length
    41:46:void <init>(java.util.Comparator) -> <init>
    49:54:void <init>(com.google.common.collect.RegularImmutableSortedSet,long[],int,int) -> <init>
    57:57:int getCount(int) -> getCount
    62:62:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    67:67:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    72:72:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    77:78:int count(java.lang.Object) -> count
    83:84:int size() -> size
    89:89:com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    94:94:com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    99:99:com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    104:112:com.google.common.collect.ImmutableSortedMultiset getSubMultiset(int,int) -> getSubMultiset
    119:119:boolean isPartialView() -> isPartialView
    32:32:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    32:32:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    32:32:java.util.NavigableSet elementSet() -> elementSet
    32:32:java.util.SortedSet elementSet() -> elementSet
    32:32:java.util.Set elementSet() -> elementSet
    34:34:void <clinit>() -> <clinit>
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    com.google.common.collect.ImmutableList elements -> elements
    52:54:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    58:58:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    64:64:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    69:69:int size() -> size
    75:77:boolean contains(java.lang.Object) -> contains
    87:129:boolean containsAll(java.util.Collection) -> containsAll
    133:133:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    138:138:boolean isPartialView() -> isPartialView
    143:143:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    148:180:boolean equals(java.lang.Object) -> equals
    185:188:java.lang.Object first() -> first
    193:196:java.lang.Object last() -> last
    201:202:java.lang.Object lower(java.lang.Object) -> lower
    207:208:java.lang.Object floor(java.lang.Object) -> floor
    213:214:java.lang.Object ceiling(java.lang.Object) -> ceiling
    219:220:java.lang.Object higher(java.lang.Object) -> higher
    225:225:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    229:229:int headIndex(java.lang.Object,boolean) -> headIndex
    240:240:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    245:245:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    249:249:int tailIndex(java.lang.Object,boolean) -> tailIndex
    262:262:java.util.Comparator unsafeComparator() -> unsafeComparator
    266:272:com.google.common.collect.RegularImmutableSortedSet getSubSet(int,int) -> getSubSet
    278:288:int indexOf(java.lang.Object) -> indexOf
    293:293:com.google.common.collect.ImmutableList createAsList() -> createAsList
    298:299:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    45:45:java.util.Iterator descendingIterator() -> descendingIterator
    45:45:java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable -> com.google.common.collect.RegularImmutableTable:
    39:39:void <init>() -> <init>
    com.google.common.collect.Table$Cell getCell(int) -> getCell
    45:45:com.google.common.collect.ImmutableSet createCellSet() -> createCellSet
    java.lang.Object getValue(int) -> getValue
    80:80:com.google.common.collect.ImmutableCollection createValues() -> createValues
    105:132:com.google.common.collect.RegularImmutableTable forCells(java.util.List,java.util.Comparator,java.util.Comparator) -> forCells
    136:136:com.google.common.collect.RegularImmutableTable forCells(java.lang.Iterable) -> forCells
    147:168:com.google.common.collect.RegularImmutableTable forCellsInternal(java.lang.Iterable,java.util.Comparator,java.util.Comparator) -> forCellsInternal
    37:37:java.util.Collection createValues() -> createValues
    37:37:java.util.Set createCellSet() -> createCellSet
com.google.common.collect.RegularImmutableTable$1 -> com.google.common.collect.RegularImmutableTable$1:
    java.util.Comparator val$rowComparator -> val$rowComparator
    java.util.Comparator val$columnComparator -> val$columnComparator
    115:115:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    118:125:int compare(com.google.common.collect.Table$Cell,com.google.common.collect.Table$Cell) -> compare
    115:115:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.RegularImmutableTable$CellSet -> com.google.common.collect.RegularImmutableTable$CellSet:
    com.google.common.collect.RegularImmutableTable this$0 -> this$0
    49:49:void <init>(com.google.common.collect.RegularImmutableTable) -> <init>
    52:52:int size() -> size
    57:57:com.google.common.collect.Table$Cell get(int) -> get
    62:67:boolean contains(java.lang.Object) -> contains
    72:72:boolean isPartialView() -> isPartialView
    48:48:java.lang.Object get(int) -> get
    49:49:void <init>(com.google.common.collect.RegularImmutableTable,com.google.common.collect.RegularImmutableTable$1) -> <init>
com.google.common.collect.RegularImmutableTable$Values -> com.google.common.collect.RegularImmutableTable$Values:
    com.google.common.collect.RegularImmutableTable this$0 -> this$0
    84:84:void <init>(com.google.common.collect.RegularImmutableTable) -> <init>
    87:87:int size() -> size
    92:92:java.lang.Object get(int) -> get
    97:97:boolean isPartialView() -> isPartialView
    84:84:void <init>(com.google.common.collect.RegularImmutableTable,com.google.common.collect.RegularImmutableTable$1) -> <init>
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    34:39:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    44:44:com.google.common.collect.Ordering reverse() -> reverse
    51:51:java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable) -> min
    56:56:java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> min
    61:61:java.lang.Comparable min(java.util.Iterator) -> min
    66:66:java.lang.Comparable min(java.lang.Iterable) -> min
    71:71:java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable) -> max
    76:76:java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> max
    81:81:java.lang.Comparable max(java.util.Iterator) -> max
    86:86:java.lang.Comparable max(java.lang.Iterable) -> max
    91:91:java.lang.Object readResolve() -> readResolve
    96:96:java.lang.String toString() -> toString
    99:99:void <init>() -> <init>
    27:27:java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    27:27:java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    27:27:java.lang.Object max(java.lang.Iterable) -> max
    27:27:java.lang.Object max(java.util.Iterator) -> max
    27:27:java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    27:27:java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    27:27:java.lang.Object min(java.lang.Iterable) -> min
    27:27:java.lang.Object min(java.util.Iterator) -> min
    27:27:int compare(java.lang.Object,java.lang.Object) -> compare
    30:30:void <clinit>() -> <clinit>
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    com.google.common.collect.Ordering forwardOrder -> forwardOrder
    long serialVersionUID -> serialVersionUID
    33:35:void <init>(com.google.common.collect.Ordering) -> <init>
    39:39:int compare(java.lang.Object,java.lang.Object) -> compare
    45:45:com.google.common.collect.Ordering reverse() -> reverse
    52:52:java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    57:57:java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    62:62:java.lang.Object min(java.util.Iterator) -> min
    67:67:java.lang.Object min(java.lang.Iterable) -> min
    72:72:java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    77:77:java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    82:82:java.lang.Object max(java.util.Iterator) -> max
    87:87:java.lang.Object max(java.lang.Iterable) -> max
    92:92:int hashCode() -> hashCode
    97:104:boolean equals(java.lang.Object) -> equals
    109:109:java.lang.String toString() -> toString
com.google.common.collect.RowSortedTable -> com.google.common.collect.RowSortedTable:
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
com.google.common.collect.Serialization -> com.google.common.collect.Serialization:
    35:35:void <init>() -> <init>
    47:47:int readCount(java.io.ObjectInputStream) -> readCount
    59:64:void writeMap(java.util.Map,java.io.ObjectOutputStream) -> writeMap
    72:74:void populateMap(java.util.Map,java.io.ObjectInputStream) -> populateMap
    83:90:void populateMap(java.util.Map,java.io.ObjectInputStream,int) -> populateMap
    102:108:void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream) -> writeMultiset
    116:118:void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream) -> populateMultiset
    128:134:void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int) -> populateMultiset
    148:156:void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> writeMultimap
    164:166:void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream) -> populateMultimap
    176:187:void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int) -> populateMultimap
    192:195:com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String) -> getFieldSetter
com.google.common.collect.Serialization$1 -> com.google.common.collect.Serialization$1:
com.google.common.collect.Serialization$FieldSetter -> com.google.common.collect.Serialization$FieldSetter:
    java.lang.reflect.Field field -> field
    203:206:void <init>(java.lang.reflect.Field) -> <init>
    210:214:void set(java.lang.Object,java.lang.Object) -> set
    218:222:void set(java.lang.Object,int) -> set
    200:200:void <init>(java.lang.reflect.Field,com.google.common.collect.Serialization$1) -> <init>
com.google.common.collect.SetMultimap -> com.google.common.collect.SetMultimap:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    66:66:void <init>() -> <init>
    99:99:com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Enum,java.lang.Enum[]) -> immutableEnumSet
    116:132:com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Iterable) -> immutableEnumSet
    144:146:java.util.EnumSet newEnumSet(java.lang.Iterable,java.lang.Class) -> newEnumSet
    164:164:java.util.HashSet newHashSet() -> newHashSet
    181:183:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    199:199:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    221:221:java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    239:241:java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    256:256:java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    274:276:java.util.Set newConcurrentHashSet(java.lang.Iterable) -> newConcurrentHashSet
    290:290:java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    308:308:java.util.LinkedHashSet newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    323:328:java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable) -> newLinkedHashSet
    343:343:java.util.TreeSet newTreeSet() -> newTreeSet
    362:364:java.util.TreeSet newTreeSet(java.lang.Iterable) -> newTreeSet
    379:379:java.util.TreeSet newTreeSet(java.util.Comparator) -> newTreeSet
    393:393:java.util.Set newIdentityHashSet() -> newIdentityHashSet
    407:407:java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> newCopyOnWriteArraySet
    421:425:java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet(java.lang.Iterable) -> newCopyOnWriteArraySet
    444:450:java.util.EnumSet complementOf(java.util.Collection) -> complementOf
    467:468:java.util.EnumSet complementOf(java.util.Collection,java.lang.Class) -> complementOf
    475:477:java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class) -> makeComplementByHand
    513:513:java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    578:583:com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set) -> union
    646:650:com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set) -> intersection
    690:694:com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set) -> difference
    731:734:com.google.common.collect.Sets$SetView symmetricDifference(java.util.Set,java.util.Set) -> symmetricDifference
    805:816:java.util.Set filter(java.util.Set,com.google.common.base.Predicate) -> filter
    866:866:java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate) -> filter
    871:879:java.util.SortedSet filterSortedIgnoreNavigable(java.util.SortedSet,com.google.common.base.Predicate) -> filterSortedIgnoreNavigable
    961:969:java.util.NavigableSet filter(java.util.NavigableSet,com.google.common.base.Predicate) -> filter
    1104:1104:java.util.Set cartesianProduct(java.util.List) -> cartesianProduct
    1163:1163:java.util.Set cartesianProduct(java.util.Set[]) -> cartesianProduct
    1277:1277:java.util.Set powerSet(java.util.Set) -> powerSet
    1391:1398:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    1405:1419:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    1440:1443:java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
    1572:1572:java.util.NavigableSet synchronizedNavigableSet(java.util.NavigableSet) -> synchronizedNavigableSet
    1579:1583:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1587:1601:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
com.google.common.collect.Sets$1 -> com.google.common.collect.Sets$1:
    java.util.Set val$set1 -> val$set1
    java.util.Set val$set2minus1 -> val$set2minus1
    java.util.Set val$set2 -> val$set2
    583:583:void <init>(java.util.Set,java.util.Set,java.util.Set) -> <init>
    586:586:int size() -> size
    591:591:boolean isEmpty() -> isEmpty
    596:596:java.util.Iterator iterator() -> iterator
    602:602:boolean contains(java.lang.Object) -> contains
    607:609:java.util.Set copyInto(java.util.Set) -> copyInto
    614:614:com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
com.google.common.collect.Sets$2 -> com.google.common.collect.Sets$2:
    java.util.Set val$set1 -> val$set1
    com.google.common.base.Predicate val$inSet2 -> val$inSet2
    java.util.Set val$set2 -> val$set2
    650:650:void <init>(java.util.Set,com.google.common.base.Predicate,java.util.Set) -> <init>
    653:653:java.util.Iterator iterator() -> iterator
    658:658:int size() -> size
    663:663:boolean isEmpty() -> isEmpty
    668:668:boolean contains(java.lang.Object) -> contains
    673:673:boolean containsAll(java.util.Collection) -> containsAll
com.google.common.collect.Sets$3 -> com.google.common.collect.Sets$3:
    java.util.Set val$set1 -> val$set1
    com.google.common.base.Predicate val$notInSet2 -> val$notInSet2
    java.util.Set val$set2 -> val$set2
    694:694:void <init>(java.util.Set,com.google.common.base.Predicate,java.util.Set) -> <init>
    697:697:java.util.Iterator iterator() -> iterator
    702:702:int size() -> size
    707:707:boolean isEmpty() -> isEmpty
    712:712:boolean contains(java.lang.Object) -> contains
com.google.common.collect.Sets$4 -> com.google.common.collect.Sets$4:
    java.util.Set val$set1 -> val$set1
    java.util.Set val$set2 -> val$set2
    734:734:void <init>(java.util.Set,java.util.Set) -> <init>
    737:739:java.util.Iterator iterator() -> iterator
    761:761:int size() -> size
    766:766:boolean isEmpty() -> isEmpty
    771:771:boolean contains(java.lang.Object) -> contains
com.google.common.collect.Sets$4$1 -> com.google.common.collect.Sets$4$1:
    java.util.Iterator val$itr1 -> val$itr1
    java.util.Iterator val$itr2 -> val$itr2
    com.google.common.collect.Sets$4 this$0 -> this$0
    739:739:void <init>(com.google.common.collect.Sets$4,java.util.Iterator,java.util.Iterator) -> <init>
    742:754:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Sets$CartesianSet -> com.google.common.collect.Sets$CartesianSet:
    com.google.common.collect.ImmutableList axes -> axes
    com.google.common.collect.CartesianList delegate -> delegate
    1172:1199:java.util.Set create(java.util.List) -> create
    1202:1205:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.CartesianList) -> <init>
    1209:1209:java.util.Collection delegate() -> delegate
    1216:1220:boolean equals(java.lang.Object) -> equals
    1229:1242:int hashCode() -> hashCode
    1166:1166:java.lang.Object delegate() -> delegate
com.google.common.collect.Sets$CartesianSet$1 -> com.google.common.collect.Sets$CartesianSet$1:
    com.google.common.collect.ImmutableList val$axes -> val$axes
    1183:1183:void <init>(com.google.common.collect.ImmutableList) -> <init>
    1186:1186:int size() -> size
    1191:1191:java.util.List get(int) -> get
    1196:1196:boolean isPartialView() -> isPartialView
    1183:1183:java.lang.Object get(int) -> get
com.google.common.collect.Sets$DescendingSet -> com.google.common.collect.Sets$DescendingSet:
    java.util.NavigableSet forward -> forward
    1609:1611:void <init>(java.util.NavigableSet) -> <init>
    1615:1615:java.util.NavigableSet delegate() -> delegate
    1620:1620:java.lang.Object lower(java.lang.Object) -> lower
    1625:1625:java.lang.Object floor(java.lang.Object) -> floor
    1630:1630:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1635:1635:java.lang.Object higher(java.lang.Object) -> higher
    1640:1640:java.lang.Object pollFirst() -> pollFirst
    1645:1645:java.lang.Object pollLast() -> pollLast
    1650:1650:java.util.NavigableSet descendingSet() -> descendingSet
    1655:1655:java.util.Iterator descendingIterator() -> descendingIterator
    1661:1661:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1666:1666:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1671:1671:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1677:1681:java.util.Comparator comparator() -> comparator
    1687:1687:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    1692:1692:java.lang.Object first() -> first
    1697:1697:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1702:1702:java.lang.Object last() -> last
    1707:1707:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1712:1712:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1717:1717:java.util.Iterator iterator() -> iterator
    1722:1722:java.lang.Object[] toArray() -> toArray
    1727:1727:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    1732:1732:java.lang.String toString() -> toString
    1605:1605:java.util.SortedSet delegate() -> delegate
    1605:1605:java.util.Set delegate() -> delegate
    1605:1605:java.util.Collection delegate() -> delegate
    1605:1605:java.lang.Object delegate() -> delegate
com.google.common.collect.Sets$FilteredNavigableSet -> com.google.common.collect.Sets$FilteredNavigableSet:
    976:977:void <init>(java.util.NavigableSet,com.google.common.base.Predicate) -> <init>
    980:980:java.util.NavigableSet unfiltered() -> unfiltered
    986:986:java.lang.Object lower(java.lang.Object) -> lower
    992:992:java.lang.Object floor(java.lang.Object) -> floor
    997:997:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1002:1002:java.lang.Object higher(java.lang.Object) -> higher
    1007:1007:java.lang.Object pollFirst() -> pollFirst
    1012:1012:java.lang.Object pollLast() -> pollLast
    1017:1017:java.util.NavigableSet descendingSet() -> descendingSet
    1022:1022:java.util.Iterator descendingIterator() -> descendingIterator
    1027:1027:java.lang.Object last() -> last
    1033:1033:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1039:1039:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1044:1044:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.Sets$FilteredSet -> com.google.common.collect.Sets$FilteredSet:
    821:822:void <init>(java.util.Set,com.google.common.base.Predicate) -> <init>
    826:826:boolean equals(java.lang.Object) -> equals
    831:831:int hashCode() -> hashCode
com.google.common.collect.Sets$FilteredSortedSet -> com.google.common.collect.Sets$FilteredSortedSet:
    885:886:void <init>(java.util.SortedSet,com.google.common.base.Predicate) -> <init>
    890:890:java.util.Comparator comparator() -> comparator
    895:895:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    901:901:java.util.SortedSet headSet(java.lang.Object) -> headSet
    906:906:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    911:911:java.lang.Object first() -> first
    916:923:java.lang.Object last() -> last
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    72:72:void <init>() -> <init>
    75:75:boolean removeAll(java.util.Collection) -> removeAll
    80:80:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$PowerSet -> com.google.common.collect.Sets$PowerSet:
    com.google.common.collect.ImmutableMap inputSet -> inputSet
    1327:1331:void <init>(java.util.Set) -> <init>
    1335:1335:int size() -> size
    1340:1340:boolean isEmpty() -> isEmpty
    1345:1345:java.util.Iterator iterator() -> iterator
    1355:1359:boolean contains(java.lang.Object) -> contains
    1364:1368:boolean equals(java.lang.Object) -> equals
    1378:1378:int hashCode() -> hashCode
    1383:1383:java.lang.String toString() -> toString
com.google.common.collect.Sets$PowerSet$1 -> com.google.common.collect.Sets$PowerSet$1:
    com.google.common.collect.Sets$PowerSet this$0 -> this$0
    1345:1345:void <init>(com.google.common.collect.Sets$PowerSet,int) -> <init>
    1348:1348:java.util.Set get(int) -> get
    1345:1345:java.lang.Object get(int) -> get
com.google.common.collect.Sets$SetView -> com.google.common.collect.Sets$SetView:
    527:527:void <init>() -> <init>
    539:539:com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
    552:553:java.util.Set copyInto(java.util.Set) -> copyInto
    526:526:void <init>(com.google.common.collect.Sets$1) -> <init>
com.google.common.collect.Sets$SubSet -> com.google.common.collect.Sets$SubSet:
    com.google.common.collect.ImmutableMap inputSet -> inputSet
    int mask -> mask
    1284:1287:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    1291:1291:java.util.Iterator iterator() -> iterator
    1314:1314:int size() -> size
    1319:1320:boolean contains(java.lang.Object) -> contains
    1280:1280:com.google.common.collect.ImmutableMap access$100(com.google.common.collect.Sets$SubSet) -> access$100
    1280:1280:int access$200(com.google.common.collect.Sets$SubSet) -> access$200
com.google.common.collect.Sets$SubSet$1 -> com.google.common.collect.Sets$SubSet$1:
    com.google.common.collect.ImmutableList elements -> elements
    int remainingSetBits -> remainingSetBits
    com.google.common.collect.Sets$SubSet this$0 -> this$0
    1291:1293:void <init>(com.google.common.collect.Sets$SubSet) -> <init>
    1297:1297:boolean hasNext() -> hasNext
    1302:1307:java.lang.Object next() -> next
com.google.common.collect.Sets$UnmodifiableNavigableSet -> com.google.common.collect.Sets$UnmodifiableNavigableSet:
    java.util.NavigableSet delegate -> delegate
    com.google.common.collect.Sets$UnmodifiableNavigableSet descendingSet -> descendingSet
    long serialVersionUID -> serialVersionUID
    1451:1453:void <init>(java.util.NavigableSet) -> <init>
    1457:1457:java.util.SortedSet delegate() -> delegate
    1462:1462:java.lang.Object lower(java.lang.Object) -> lower
    1467:1467:java.lang.Object floor(java.lang.Object) -> floor
    1472:1472:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1477:1477:java.lang.Object higher(java.lang.Object) -> higher
    1482:1482:java.lang.Object pollFirst() -> pollFirst
    1487:1487:java.lang.Object pollLast() -> pollLast
    1494:1499:java.util.NavigableSet descendingSet() -> descendingSet
    1504:1504:java.util.Iterator descendingIterator() -> descendingIterator
    1510:1510:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1516:1516:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1521:1521:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1446:1446:java.util.Set delegate() -> delegate
    1446:1446:java.util.Collection delegate() -> delegate
    1446:1446:java.lang.Object delegate() -> delegate
com.google.common.collect.SingletonImmutableBiMap -> com.google.common.collect.SingletonImmutableBiMap:
    java.lang.Object singleKey -> singleKey
    java.lang.Object singleValue -> singleValue
    com.google.common.collect.ImmutableBiMap inverse -> inverse
    38:42:void <init>(java.lang.Object,java.lang.Object) -> <init>
    44:48:void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableBiMap) -> <init>
    52:52:java.lang.Object get(java.lang.Object) -> get
    57:57:int size() -> size
    62:62:boolean containsKey(java.lang.Object) -> containsKey
    67:67:boolean containsValue(java.lang.Object) -> containsValue
    72:72:boolean isPartialView() -> isPartialView
    77:77:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    82:82:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    90:94:com.google.common.collect.ImmutableBiMap inverse() -> inverse
    31:31:com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.SingletonImmutableList -> com.google.common.collect.SingletonImmutableList:
    java.lang.Object element -> element
    35:37:void <init>(java.lang.Object) -> <init>
    41:42:java.lang.Object get(int) -> get
    47:47:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    52:52:int size() -> size
    57:58:com.google.common.collect.ImmutableList subList(int,int) -> subList
    63:64:java.lang.String toString() -> toString
    73:73:boolean isPartialView() -> isPartialView
    29:29:java.util.List subList(int,int) -> subList
    29:29:java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    java.lang.Object element -> element
    int cachedHashCode -> cachedHashCode
    42:44:void <init>(java.lang.Object) -> <init>
    46:50:void <init>(java.lang.Object,int) -> <init>
    54:54:int size() -> size
    59:59:boolean contains(java.lang.Object) -> contains
    64:64:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:boolean isPartialView() -> isPartialView
    74:75:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    81:85:int hashCode() -> hashCode
    90:90:boolean isHashCodeFast() -> isHashCodeFast
    95:96:java.lang.String toString() -> toString
    28:28:java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableTable -> com.google.common.collect.SingletonImmutableTable:
    java.lang.Object singleRowKey -> singleRowKey
    java.lang.Object singleColumnKey -> singleColumnKey
    java.lang.Object singleValue -> singleValue
    36:40:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    43:44:void <init>(com.google.common.collect.Table$Cell) -> <init>
    48:49:com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    56:56:com.google.common.collect.ImmutableMap columnMap() -> columnMap
    61:61:com.google.common.collect.ImmutableMap rowMap() -> rowMap
    66:66:int size() -> size
    71:71:com.google.common.collect.ImmutableSet createCellSet() -> createCellSet
    76:76:com.google.common.collect.ImmutableCollection createValues() -> createValues
    30:30:java.util.Collection createValues() -> createValues
    30:30:java.util.Set createCellSet() -> createCellSet
    30:30:java.util.Map columnMap() -> columnMap
    30:30:java.util.Map rowMap() -> rowMap
    30:30:java.util.Map column(java.lang.Object) -> column
com.google.common.collect.SortedIterable -> com.google.common.collect.SortedIterable:
    java.util.Comparator comparator() -> comparator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SortedIterables -> com.google.common.collect.SortedIterables:
    31:31:void <init>() -> <init>
    38:48:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
    54:58:java.util.Comparator comparator(java.util.SortedSet) -> comparator
com.google.common.collect.SortedLists -> com.google.common.collect.SortedLists:
    42:42:void <init>() -> <init>
    195:196:int binarySearch(java.util.List,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
    211:211:int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
    229:229:int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
    262:286:int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
com.google.common.collect.SortedLists$1 -> com.google.common.collect.SortedLists$1:
com.google.common.collect.SortedLists$KeyAbsentBehavior -> com.google.common.collect.SortedLists$KeyAbsentBehavior:
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER -> NEXT_LOWER
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER -> NEXT_HIGHER
    com.google.common.collect.SortedLists$KeyAbsentBehavior INVERTED_INSERTION_INDEX -> INVERTED_INSERTION_INDEX
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] $VALUES -> $VALUES
    140:140:com.google.common.collect.SortedLists$KeyAbsentBehavior[] values() -> values
    140:140:com.google.common.collect.SortedLists$KeyAbsentBehavior valueOf(java.lang.String) -> valueOf
    140:140:void <init>(java.lang.String,int) -> <init>
    int resultIndex(int) -> resultIndex
    140:140:void <init>(java.lang.String,int,com.google.common.collect.SortedLists$1) -> <init>
    140:173:void <clinit>() -> <clinit>
com.google.common.collect.SortedLists$KeyAbsentBehavior$1 -> com.google.common.collect.SortedLists$KeyAbsentBehavior$1:
    145:145:void <init>(java.lang.String,int) -> <init>
    148:148:int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyAbsentBehavior$2 -> com.google.common.collect.SortedLists$KeyAbsentBehavior$2:
    155:155:void <init>(java.lang.String,int) -> <init>
    158:158:int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyAbsentBehavior$3 -> com.google.common.collect.SortedLists$KeyAbsentBehavior$3:
    173:173:void <init>(java.lang.String,int) -> <init>
    176:176:int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior -> com.google.common.collect.SortedLists$KeyPresentBehavior:
    com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT -> ANY_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_PRESENT -> LAST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_PRESENT -> FIRST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER -> FIRST_AFTER
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_BEFORE -> LAST_BEFORE
    com.google.common.collect.SortedLists$KeyPresentBehavior[] $VALUES -> $VALUES
    48:48:com.google.common.collect.SortedLists$KeyPresentBehavior[] values() -> values
    48:48:com.google.common.collect.SortedLists$KeyPresentBehavior valueOf(java.lang.String) -> valueOf
    48:48:void <init>(java.lang.String,int) -> <init>
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
    48:48:void <init>(java.lang.String,int,com.google.common.collect.SortedLists$1) -> <init>
    48:124:void <clinit>() -> <clinit>
com.google.common.collect.SortedLists$KeyPresentBehavior$1 -> com.google.common.collect.SortedLists$KeyPresentBehavior$1:
    53:53:void <init>(java.lang.String,int) -> <init>
    57:57:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$2 -> com.google.common.collect.SortedLists$KeyPresentBehavior$2:
    63:63:void <init>(java.lang.String,int) -> <init>
    69:81:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$3 -> com.google.common.collect.SortedLists$KeyPresentBehavior$3:
    87:87:void <init>(java.lang.String,int) -> <init>
    93:106:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$4 -> com.google.common.collect.SortedLists$KeyPresentBehavior$4:
    113:113:void <init>(java.lang.String,int) -> <init>
    117:117:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$5 -> com.google.common.collect.SortedLists$KeyPresentBehavior$5:
    124:124:void <init>(java.lang.String,int) -> <init>
    128:128:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedMapDifference -> com.google.common.collect.SortedMapDifference:
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesDiffering() -> entriesDiffering
com.google.common.collect.SortedMultiset -> com.google.common.collect.SortedMultiset:
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableSet elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.SortedMultisetBridge -> com.google.common.collect.SortedMultisetBridge:
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.SortedMultisets -> com.google.common.collect.SortedMultisets:
    43:43:void <init>() -> <init>
    163:166:java.lang.Object getElementOrThrow(com.google.common.collect.Multiset$Entry) -> getElementOrThrow
    170:170:java.lang.Object getElementOrNull(com.google.common.collect.Multiset$Entry) -> getElementOrNull
    42:42:java.lang.Object access$000(com.google.common.collect.Multiset$Entry) -> access$000
    42:42:java.lang.Object access$100(com.google.common.collect.Multiset$Entry) -> access$100
com.google.common.collect.SortedMultisets$ElementSet -> com.google.common.collect.SortedMultisets$ElementSet:
    com.google.common.collect.SortedMultiset multiset -> multiset
    51:53:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    57:57:com.google.common.collect.SortedMultiset multiset() -> multiset
    62:62:java.util.Comparator comparator() -> comparator
    67:67:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    72:72:java.util.SortedSet headSet(java.lang.Object) -> headSet
    77:77:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    82:82:java.lang.Object first() -> first
    87:87:java.lang.Object last() -> last
    48:48:com.google.common.collect.Multiset multiset() -> multiset
com.google.common.collect.SortedMultisets$NavigableElementSet -> com.google.common.collect.SortedMultisets$NavigableElementSet:
    97:98:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    102:102:java.lang.Object lower(java.lang.Object) -> lower
    107:107:java.lang.Object floor(java.lang.Object) -> floor
    112:112:java.lang.Object ceiling(java.lang.Object) -> ceiling
    117:117:java.lang.Object higher(java.lang.Object) -> higher
    122:122:java.util.NavigableSet descendingSet() -> descendingSet
    127:127:java.util.Iterator descendingIterator() -> descendingIterator
    132:132:java.lang.Object pollFirst() -> pollFirst
    137:137:java.lang.Object pollLast() -> pollLast
    143:143:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    151:151:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    157:157:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SortedSetMultimap -> com.google.common.collect.SortedSetMultimap:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.SparseImmutableTable -> com.google.common.collect.SparseImmutableTable:
    com.google.common.collect.ImmutableMap rowMap -> rowMap
    com.google.common.collect.ImmutableMap columnMap -> columnMap
    int[] iterationOrderRow -> iterationOrderRow
    int[] iterationOrderColumn -> iterationOrderColumn
    39:83:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet) -> <init>
    87:87:com.google.common.collect.ImmutableMap columnMap() -> columnMap
    92:92:com.google.common.collect.ImmutableMap rowMap() -> rowMap
    97:97:int size() -> size
    102:107:com.google.common.collect.Table$Cell getCell(int) -> getCell
    112:115:java.lang.Object getValue(int) -> getValue
    27:27:java.util.Map columnMap() -> columnMap
    27:27:java.util.Map rowMap() -> rowMap
com.google.common.collect.StandardRowSortedTable -> com.google.common.collect.StandardRowSortedTable:
    long serialVersionUID -> serialVersionUID
    60:61:void <init>(java.util.SortedMap,com.google.common.base.Supplier) -> <init>
    64:64:java.util.SortedMap sortedBackingMap() -> sortedBackingMap
    75:75:java.util.SortedSet rowKeySet() -> rowKeySet
    86:86:java.util.SortedMap rowMap() -> rowMap
    91:91:java.util.SortedMap createRowMap() -> createRowMap
    49:49:java.util.Map createRowMap() -> createRowMap
    49:49:java.util.Map rowMap() -> rowMap
    49:49:java.util.Set rowKeySet() -> rowKeySet
    50:50:java.util.SortedMap access$100(com.google.common.collect.StandardRowSortedTable) -> access$100
com.google.common.collect.StandardRowSortedTable$1 -> com.google.common.collect.StandardRowSortedTable$1:
com.google.common.collect.StandardRowSortedTable$RowSortedMap -> com.google.common.collect.StandardRowSortedTable$RowSortedMap:
    com.google.common.collect.StandardRowSortedTable this$0 -> this$0
    95:95:void <init>(com.google.common.collect.StandardRowSortedTable) -> <init>
    98:98:java.util.SortedSet keySet() -> keySet
    103:103:java.util.SortedSet createKeySet() -> createKeySet
    108:108:java.util.Comparator comparator() -> comparator
    113:113:java.lang.Object firstKey() -> firstKey
    118:118:java.lang.Object lastKey() -> lastKey
    123:124:java.util.SortedMap headMap(java.lang.Object) -> headMap
    130:132:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    138:139:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    94:94:java.util.Set createKeySet() -> createKeySet
    94:94:java.util.Set keySet() -> keySet
    95:95:void <init>(com.google.common.collect.StandardRowSortedTable,com.google.common.collect.StandardRowSortedTable$1) -> <init>
com.google.common.collect.StandardTable -> com.google.common.collect.StandardTable:
    java.util.Map backingMap -> backingMap
    com.google.common.base.Supplier factory -> factory
    java.util.Set columnKeySet -> columnKeySet
    java.util.Map rowMap -> rowMap
    com.google.common.collect.StandardTable$ColumnMap columnMap -> columnMap
    long serialVersionUID -> serialVersionUID
    73:76:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    82:82:boolean contains(java.lang.Object,java.lang.Object) -> contains
    87:95:boolean containsColumn(java.lang.Object) -> containsColumn
    100:100:boolean containsRow(java.lang.Object) -> containsRow
    105:105:boolean containsValue(java.lang.Object) -> containsValue
    110:110:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    115:115:boolean isEmpty() -> isEmpty
    120:124:int size() -> size
    131:132:void clear() -> clear
    135:140:java.util.Map getOrCreate(java.lang.Object) -> getOrCreate
    145:148:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    153:164:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    168:180:java.util.Map removeColumn(java.lang.Object) -> removeColumn
    184:184:boolean containsMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> containsMapping
    189:193:boolean removeMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> removeMapping
    227:227:java.util.Set cellSet() -> cellSet
    232:232:java.util.Iterator cellIterator() -> cellIterator
    266:266:java.util.Map row(java.lang.Object) -> row
    396:396:java.util.Map column(java.lang.Object) -> column
    594:594:java.util.Set rowKeySet() -> rowKeySet
    610:611:java.util.Set columnKeySet() -> columnKeySet
    692:692:java.util.Iterator createColumnKeyIterator() -> createColumnKeyIterator
    728:728:java.util.Collection values() -> values
    735:736:java.util.Map rowMap() -> rowMap
    740:740:java.util.Map createRowMap() -> createRowMap
    814:815:java.util.Map columnMap() -> columnMap
    69:69:boolean access$300(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> access$300
    69:69:boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> access$400
    69:69:java.util.Map access$900(com.google.common.collect.StandardTable,java.lang.Object) -> access$900
com.google.common.collect.StandardTable$1 -> com.google.common.collect.StandardTable$1:
com.google.common.collect.StandardTable$CellIterator -> com.google.common.collect.StandardTable$CellIterator:
    java.util.Iterator rowIterator -> rowIterator
    java.util.Map$Entry rowEntry -> rowEntry
    java.util.Iterator columnIterator -> columnIterator
    com.google.common.collect.StandardTable this$0 -> this$0
    235:238:void <init>(com.google.common.collect.StandardTable) -> <init>
    242:242:boolean hasNext() -> hasNext
    247:252:com.google.common.collect.Table$Cell next() -> next
    257:261:void remove() -> remove
    235:235:java.lang.Object next() -> next
    235:235:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.StandardTable$Column -> com.google.common.collect.StandardTable$Column:
    java.lang.Object columnKey -> columnKey
    com.google.common.collect.StandardTable this$0 -> this$0
    402:404:void <init>(com.google.common.collect.StandardTable,java.lang.Object) -> <init>
    408:408:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    413:413:java.lang.Object get(java.lang.Object) -> get
    418:418:boolean containsKey(java.lang.Object) -> containsKey
    423:423:java.lang.Object remove(java.lang.Object) -> remove
    431:445:boolean removeFromColumnIf(com.google.common.base.Predicate) -> removeFromColumnIf
    450:450:java.util.Set createEntrySet() -> createEntrySet
    539:539:java.util.Set createKeySet() -> createKeySet
    566:566:java.util.Collection createValues() -> createValues
com.google.common.collect.StandardTable$Column$EntrySet -> com.google.common.collect.StandardTable$Column$EntrySet:
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    454:454:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    457:457:java.util.Iterator iterator() -> iterator
    462:468:int size() -> size
    473:473:boolean isEmpty() -> isEmpty
    478:479:void clear() -> clear
    483:487:boolean contains(java.lang.Object) -> contains
    492:496:boolean remove(java.lang.Object) -> remove
    501:501:boolean retainAll(java.util.Collection) -> retainAll
    454:454:void <init>(com.google.common.collect.StandardTable$Column,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.StandardTable$Column$EntrySetIterator -> com.google.common.collect.StandardTable$Column$EntrySetIterator:
    java.util.Iterator iterator -> iterator
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    505:506:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    510:533:java.util.Map$Entry computeNext() -> computeNext
    505:505:java.lang.Object computeNext() -> computeNext
    505:505:void <init>(com.google.common.collect.StandardTable$Column,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.StandardTable$Column$EntrySetIterator$1EntryImpl -> com.google.common.collect.StandardTable$Column$EntrySetIterator$1EntryImpl:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.StandardTable$Column$EntrySetIterator this$2 -> this$2
    514:514:void <init>(com.google.common.collect.StandardTable$Column$EntrySetIterator,java.util.Map$Entry) -> <init>
    517:517:java.lang.Object getKey() -> getKey
    522:522:java.lang.Object getValue() -> getValue
    527:527:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.StandardTable$Column$KeySet -> com.google.common.collect.StandardTable$Column$KeySet:
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    544:546:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    550:550:boolean contains(java.lang.Object) -> contains
    555:555:boolean remove(java.lang.Object) -> remove
    560:560:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$Values -> com.google.common.collect.StandardTable$Column$Values:
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    571:573:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    577:577:boolean remove(java.lang.Object) -> remove
    582:582:boolean removeAll(java.util.Collection) -> removeAll
    587:587:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnKeyIterator -> com.google.common.collect.StandardTable$ColumnKeyIterator:
    java.util.Map seen -> seen
    java.util.Iterator mapIterator -> mapIterator
    java.util.Iterator entryIterator -> entryIterator
    com.google.common.collect.StandardTable this$0 -> this$0
    695:700:void <init>(com.google.common.collect.StandardTable) -> <init>
    705:714:java.lang.Object computeNext() -> computeNext
    695:695:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.StandardTable$ColumnKeySet -> com.google.common.collect.StandardTable$ColumnKeySet:
    com.google.common.collect.StandardTable this$0 -> this$0
    615:615:void <init>(com.google.common.collect.StandardTable) -> <init>
    618:618:java.util.Iterator iterator() -> iterator
    623:623:int size() -> size
    628:642:boolean remove(java.lang.Object) -> remove
    647:661:boolean removeAll(java.util.Collection) -> removeAll
    666:678:boolean retainAll(java.util.Collection) -> retainAll
    683:683:boolean contains(java.lang.Object) -> contains
    615:615:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.StandardTable$ColumnMap -> com.google.common.collect.StandardTable$ColumnMap:
    com.google.common.collect.StandardTable this$0 -> this$0
    819:923:void <init>(com.google.common.collect.StandardTable) -> <init>
    825:825:java.util.Map get(java.lang.Object) -> get
    830:830:boolean containsKey(java.lang.Object) -> containsKey
    835:835:java.util.Map remove(java.lang.Object) -> remove
    840:840:java.util.Set createEntrySet() -> createEntrySet
    845:845:java.util.Set keySet() -> keySet
    850:850:java.util.Collection createValues() -> createValues
    818:818:java.lang.Object remove(java.lang.Object) -> remove
    818:818:java.lang.Object get(java.lang.Object) -> get
    819:819:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> this$1
    854:854:void <init>(com.google.common.collect.StandardTable$ColumnMap) -> <init>
    857:857:java.util.Iterator iterator() -> iterator
    869:869:int size() -> size
    874:884:boolean contains(java.lang.Object) -> contains
    889:894:boolean remove(java.lang.Object) -> remove
    905:906:boolean removeAll(java.util.Collection) -> removeAll
    911:919:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1 -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1:
    com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet this$2 -> this$2
    859:859:void <init>(com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet) -> <init>
    862:862:java.util.Map apply(java.lang.Object) -> apply
    859:859:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> this$1
    925:927:void <init>(com.google.common.collect.StandardTable$ColumnMap) -> <init>
    931:937:boolean remove(java.lang.Object) -> remove
    942:950:boolean removeAll(java.util.Collection) -> removeAll
    955:963:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Row -> com.google.common.collect.StandardTable$Row:
    java.lang.Object rowKey -> rowKey
    java.util.Map backingRowMap -> backingRowMap
    com.google.common.collect.StandardTable this$0 -> this$0
    272:274:void <init>(com.google.common.collect.StandardTable,java.lang.Object) -> <init>
    279:279:java.util.Map backingRowMap() -> backingRowMap
    285:285:java.util.Map computeBackingRowMap() -> computeBackingRowMap
    290:294:void maintainEmptyInvariant() -> maintainEmptyInvariant
    298:299:boolean containsKey(java.lang.Object) -> containsKey
    304:305:java.lang.Object get(java.lang.Object) -> get
    310:315:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    320:326:java.lang.Object remove(java.lang.Object) -> remove
    331:336:void clear() -> clear
    340:341:int size() -> size
    346:351:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.StandardTable$Row$1 -> com.google.common.collect.StandardTable$Row$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.StandardTable$Row this$1 -> this$1
    351:351:void <init>(com.google.common.collect.StandardTable$Row,java.util.Iterator) -> <init>
    354:354:boolean hasNext() -> hasNext
    359:360:java.util.Map$Entry next() -> next
    381:383:void remove() -> remove
    351:351:java.lang.Object next() -> next
com.google.common.collect.StandardTable$Row$1$1 -> com.google.common.collect.StandardTable$Row$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.StandardTable$Row$1 this$2 -> this$2
    360:360:void <init>(com.google.common.collect.StandardTable$Row$1,java.util.Map$Entry) -> <init>
    363:363:java.util.Map$Entry delegate() -> delegate
    368:368:java.lang.Object setValue(java.lang.Object) -> setValue
    374:374:boolean equals(java.lang.Object) -> equals
    360:360:java.lang.Object delegate() -> delegate
com.google.common.collect.StandardTable$RowMap -> com.google.common.collect.StandardTable$RowMap:
    com.google.common.collect.StandardTable this$0 -> this$0
    744:767:void <init>(com.google.common.collect.StandardTable) -> <init>
    747:747:boolean containsKey(java.lang.Object) -> containsKey
    754:754:java.util.Map get(java.lang.Object) -> get
    759:759:java.util.Map remove(java.lang.Object) -> remove
    764:764:java.util.Set createEntrySet() -> createEntrySet
    743:743:java.lang.Object remove(java.lang.Object) -> remove
    743:743:java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$RowMap$EntrySet -> com.google.common.collect.StandardTable$RowMap$EntrySet:
    com.google.common.collect.StandardTable$RowMap this$1 -> this$1
    768:768:void <init>(com.google.common.collect.StandardTable$RowMap) -> <init>
    771:771:java.util.Iterator iterator() -> iterator
    783:783:int size() -> size
    788:794:boolean contains(java.lang.Object) -> contains
    799:805:boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$RowMap$EntrySet$1 -> com.google.common.collect.StandardTable$RowMap$EntrySet$1:
    com.google.common.collect.StandardTable$RowMap$EntrySet this$2 -> this$2
    773:773:void <init>(com.google.common.collect.StandardTable$RowMap$EntrySet) -> <init>
    776:776:java.util.Map apply(java.lang.Object) -> apply
    773:773:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$TableSet -> com.google.common.collect.StandardTable$TableSet:
    com.google.common.collect.StandardTable this$0 -> this$0
    203:203:void <init>(com.google.common.collect.StandardTable) -> <init>
    206:206:boolean isEmpty() -> isEmpty
    211:212:void clear() -> clear
    203:203:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    61:61:void <init>() -> <init>
    102:102:java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    211:211:java.util.Set set(java.util.Set,java.lang.Object) -> set
    246:246:java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
    305:305:java.util.List list(java.util.List,java.lang.Object) -> list
    416:419:com.google.common.collect.Multiset multiset(com.google.common.collect.Multiset,java.lang.Object) -> multiset
    512:515:com.google.common.collect.Multimap multimap(com.google.common.collect.Multimap,java.lang.Object) -> multimap
    699:702:com.google.common.collect.ListMultimap listMultimap(com.google.common.collect.ListMultimap,java.lang.Object) -> listMultimap
    741:744:com.google.common.collect.SetMultimap setMultimap(com.google.common.collect.SetMultimap,java.lang.Object) -> setMultimap
    796:799:com.google.common.collect.SortedSetMultimap sortedSetMultimap(com.google.common.collect.SortedSetMultimap,java.lang.Object) -> sortedSetMultimap
    846:855:java.util.Collection typePreservingCollection(java.util.Collection,java.lang.Object) -> typePreservingCollection
    859:862:java.util.Set typePreservingSet(java.util.Set,java.lang.Object) -> typePreservingSet
    960:960:java.util.Map map(java.util.Map,java.lang.Object) -> map
    1092:1092:java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    1153:1156:com.google.common.collect.BiMap biMap(com.google.common.collect.BiMap,java.lang.Object) -> biMap
    1387:1387:java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> navigableSet
    1392:1392:java.util.NavigableSet navigableSet(java.util.NavigableSet) -> navigableSet
    1397:1397:java.util.NavigableMap navigableMap(java.util.NavigableMap) -> navigableMap
    1403:1403:java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> navigableMap
    1588:1591:java.util.Map$Entry nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object) -> nullableSynchronizedEntry
    1646:1646:java.util.Queue queue(java.util.Queue,java.lang.Object) -> queue
    1700:1700:java.util.Deque deque(java.util.Deque,java.lang.Object) -> deque
    60:60:java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    60:60:java.util.List access$200(java.util.List,java.lang.Object) -> access$200
    60:60:java.util.Set access$300(java.util.Set,java.lang.Object) -> access$300
    60:60:java.util.Collection access$400(java.util.Collection,java.lang.Object) -> access$400
    60:60:java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
    60:60:java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> access$700
com.google.common.collect.Synchronized$1 -> com.google.common.collect.Synchronized$1:
com.google.common.collect.Synchronized$SynchronizedAsMap -> com.google.common.collect.Synchronized$SynchronizedAsMap:
    java.util.Set asMapEntrySet -> asMapEntrySet
    java.util.Collection asMapValues -> asMapValues
    long serialVersionUID -> serialVersionUID
    1211:1212:void <init>(java.util.Map,java.lang.Object) -> <init>
    1216:1219:java.util.Collection get(java.lang.Object) -> get
    1224:1229:java.util.Set entrySet() -> entrySet
    1234:1239:java.util.Collection values() -> values
    1245:1245:boolean containsValue(java.lang.Object) -> containsValue
    1206:1206:java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Synchronized$SynchronizedAsMapEntries -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries:
    long serialVersionUID -> serialVersionUID
    869:870:void <init>(java.util.Set,java.lang.Object) -> <init>
    875:875:java.util.Iterator iterator() -> iterator
    898:900:java.lang.Object[] toArray() -> toArray
    905:907:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    912:914:boolean contains(java.lang.Object) -> contains
    919:921:boolean containsAll(java.util.Collection) -> containsAll
    926:931:boolean equals(java.lang.Object) -> equals
    936:938:boolean remove(java.lang.Object) -> remove
    943:945:boolean removeAll(java.util.Collection) -> removeAll
    950:952:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1:
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries this$0 -> this$0
    876:876:void <init>(com.google.common.collect.Synchronized$SynchronizedAsMapEntries,java.util.Iterator) -> <init>
    879:879:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
    876:876:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 this$1 -> this$1
    879:879:void <init>(com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1,java.util.Map$Entry) -> <init>
    882:882:java.util.Map$Entry delegate() -> delegate
    887:887:java.util.Collection getValue() -> getValue
    879:879:java.lang.Object getValue() -> getValue
    879:879:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapValues -> com.google.common.collect.Synchronized$SynchronizedAsMapValues:
    long serialVersionUID -> serialVersionUID
    1253:1254:void <init>(java.util.Collection,java.lang.Object) -> <init>
    1259:1259:java.util.Iterator iterator() -> iterator
com.google.common.collect.Synchronized$SynchronizedAsMapValues$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapValues$1:
    com.google.common.collect.Synchronized$SynchronizedAsMapValues this$0 -> this$0
    1259:1259:void <init>(com.google.common.collect.Synchronized$SynchronizedAsMapValues,java.util.Iterator) -> <init>
    1262:1262:java.util.Collection transform(java.util.Collection) -> transform
    1259:1259:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    java.util.Set valueSet -> valueSet
    com.google.common.collect.BiMap inverse -> inverse
    long serialVersionUID -> serialVersionUID
    1167:1169:void <init>(com.google.common.collect.BiMap,java.lang.Object,com.google.common.collect.BiMap) -> <init>
    1173:1173:com.google.common.collect.BiMap delegate() -> delegate
    1178:1183:java.util.Set values() -> values
    1188:1190:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    1195:1200:com.google.common.collect.BiMap inverse() -> inverse
    1159:1159:java.util.Collection values() -> values
    1159:1159:java.util.Map delegate() -> delegate
    1159:1159:java.lang.Object delegate() -> delegate
    1160:1160:void <init>(com.google.common.collect.BiMap,java.lang.Object,com.google.common.collect.BiMap,com.google.common.collect.Synchronized$1) -> <init>
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    long serialVersionUID -> serialVersionUID
    108:109:void <init>(java.util.Collection,java.lang.Object) -> <init>
    114:114:java.util.Collection delegate() -> delegate
    119:121:boolean add(java.lang.Object) -> add
    126:128:boolean addAll(java.util.Collection) -> addAll
    133:136:void clear() -> clear
    140:142:boolean contains(java.lang.Object) -> contains
    147:149:boolean containsAll(java.util.Collection) -> containsAll
    154:156:boolean isEmpty() -> isEmpty
    161:161:java.util.Iterator iterator() -> iterator
    166:168:boolean remove(java.lang.Object) -> remove
    173:175:boolean removeAll(java.util.Collection) -> removeAll
    180:182:boolean retainAll(java.util.Collection) -> retainAll
    187:189:int size() -> size
    194:196:java.lang.Object[] toArray() -> toArray
    201:203:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    105:105:java.lang.Object delegate() -> delegate
    106:106:void <init>(java.util.Collection,java.lang.Object,com.google.common.collect.Synchronized$1) -> <init>
com.google.common.collect.Synchronized$SynchronizedDeque -> com.google.common.collect.Synchronized$SynchronizedDeque:
    long serialVersionUID -> serialVersionUID
    1707:1708:void <init>(java.util.Deque,java.lang.Object) -> <init>
    1712:1712:java.util.Deque delegate() -> delegate
    1717:1720:void addFirst(java.lang.Object) -> addFirst
    1724:1727:void addLast(java.lang.Object) -> addLast
    1731:1733:boolean offerFirst(java.lang.Object) -> offerFirst
    1738:1740:boolean offerLast(java.lang.Object) -> offerLast
    1745:1747:java.lang.Object removeFirst() -> removeFirst
    1752:1754:java.lang.Object removeLast() -> removeLast
    1759:1761:java.lang.Object pollFirst() -> pollFirst
    1766:1768:java.lang.Object pollLast() -> pollLast
    1773:1775:java.lang.Object getFirst() -> getFirst
    1780:1782:java.lang.Object getLast() -> getLast
    1787:1789:java.lang.Object peekFirst() -> peekFirst
    1794:1796:java.lang.Object peekLast() -> peekLast
    1801:1803:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    1808:1810:boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    1815:1818:void push(java.lang.Object) -> push
    1822:1824:java.lang.Object pop() -> pop
    1829:1831:java.util.Iterator descendingIterator() -> descendingIterator
    1703:1703:java.util.Queue delegate() -> delegate
    1703:1703:java.util.Collection delegate() -> delegate
    1703:1703:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedEntry -> com.google.common.collect.Synchronized$SynchronizedEntry:
    long serialVersionUID -> serialVersionUID
    1598:1599:void <init>(java.util.Map$Entry,java.lang.Object) -> <init>
    1604:1604:java.util.Map$Entry delegate() -> delegate
    1609:1611:boolean equals(java.lang.Object) -> equals
    1616:1618:int hashCode() -> hashCode
    1623:1625:java.lang.Object getKey() -> getKey
    1630:1632:java.lang.Object getValue() -> getValue
    1637:1639:java.lang.Object setValue(java.lang.Object) -> setValue
    1594:1594:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedList -> com.google.common.collect.Synchronized$SynchronizedList:
    long serialVersionUID -> serialVersionUID
    312:313:void <init>(java.util.List,java.lang.Object) -> <init>
    317:317:java.util.List delegate() -> delegate
    322:325:void add(int,java.lang.Object) -> add
    329:331:boolean addAll(int,java.util.Collection) -> addAll
    336:338:java.lang.Object get(int) -> get
    343:345:int indexOf(java.lang.Object) -> indexOf
    350:352:int lastIndexOf(java.lang.Object) -> lastIndexOf
    357:357:java.util.ListIterator listIterator() -> listIterator
    362:362:java.util.ListIterator listIterator(int) -> listIterator
    367:369:java.lang.Object remove(int) -> remove
    374:376:java.lang.Object set(int,java.lang.Object) -> set
    381:383:java.util.List subList(int,int) -> subList
    388:393:boolean equals(java.lang.Object) -> equals
    398:400:int hashCode() -> hashCode
    310:310:java.util.Collection delegate() -> delegate
    310:310:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedListMultimap -> com.google.common.collect.Synchronized$SynchronizedListMultimap:
    long serialVersionUID -> serialVersionUID
    708:709:void <init>(com.google.common.collect.ListMultimap,java.lang.Object) -> <init>
    713:713:com.google.common.collect.ListMultimap delegate() -> delegate
    718:720:java.util.List get(java.lang.Object) -> get
    725:727:java.util.List removeAll(java.lang.Object) -> removeAll
    732:734:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    705:705:java.util.Collection removeAll(java.lang.Object) -> removeAll
    705:705:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    705:705:java.util.Collection get(java.lang.Object) -> get
    705:705:com.google.common.collect.Multimap delegate() -> delegate
    705:705:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    969:970:void <init>(java.util.Map,java.lang.Object) -> <init>
    975:975:java.util.Map delegate() -> delegate
    980:983:void clear() -> clear
    987:989:boolean containsKey(java.lang.Object) -> containsKey
    994:996:boolean containsValue(java.lang.Object) -> containsValue
    1001:1006:java.util.Set entrySet() -> entrySet
    1011:1013:java.lang.Object get(java.lang.Object) -> get
    1018:1020:boolean isEmpty() -> isEmpty
    1025:1030:java.util.Set keySet() -> keySet
    1035:1037:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1042:1045:void putAll(java.util.Map) -> putAll
    1049:1051:java.lang.Object remove(java.lang.Object) -> remove
    1056:1058:int size() -> size
    1063:1068:java.util.Collection values() -> values
    1073:1078:boolean equals(java.lang.Object) -> equals
    1083:1085:int hashCode() -> hashCode
    963:963:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedMultimap -> com.google.common.collect.Synchronized$SynchronizedMultimap:
    java.util.Set keySet -> keySet
    java.util.Collection valuesCollection -> valuesCollection
    java.util.Collection entries -> entries
    java.util.Map asMap -> asMap
    com.google.common.collect.Multiset keys -> keys
    long serialVersionUID -> serialVersionUID
    529:529:com.google.common.collect.Multimap delegate() -> delegate
    533:534:void <init>(com.google.common.collect.Multimap,java.lang.Object) -> <init>
    538:540:int size() -> size
    545:547:boolean isEmpty() -> isEmpty
    552:554:boolean containsKey(java.lang.Object) -> containsKey
    559:561:boolean containsValue(java.lang.Object) -> containsValue
    566:568:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    573:575:java.util.Collection get(java.lang.Object) -> get
    580:582:boolean put(java.lang.Object,java.lang.Object) -> put
    587:589:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    594:596:boolean putAll(com.google.common.collect.Multimap) -> putAll
    601:603:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    608:610:boolean remove(java.lang.Object,java.lang.Object) -> remove
    615:617:java.util.Collection removeAll(java.lang.Object) -> removeAll
    622:625:void clear() -> clear
    629:634:java.util.Set keySet() -> keySet
    639:644:java.util.Collection values() -> values
    649:654:java.util.Collection entries() -> entries
    659:664:java.util.Map asMap() -> asMap
    669:674:com.google.common.collect.Multiset keys() -> keys
    679:684:boolean equals(java.lang.Object) -> equals
    689:691:int hashCode() -> hashCode
    518:518:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedMultiset -> com.google.common.collect.Synchronized$SynchronizedMultiset:
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    428:429:void <init>(com.google.common.collect.Multiset,java.lang.Object) -> <init>
    433:433:com.google.common.collect.Multiset delegate() -> delegate
    438:440:int count(java.lang.Object) -> count
    445:447:int add(java.lang.Object,int) -> add
    452:454:int remove(java.lang.Object,int) -> remove
    459:461:int setCount(java.lang.Object,int) -> setCount
    466:468:boolean setCount(java.lang.Object,int,int) -> setCount
    473:478:java.util.Set elementSet() -> elementSet
    483:488:java.util.Set entrySet() -> entrySet
    493:498:boolean equals(java.lang.Object) -> equals
    503:505:int hashCode() -> hashCode
    422:422:java.util.Collection delegate() -> delegate
    422:422:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> com.google.common.collect.Synchronized$SynchronizedNavigableMap:
    java.util.NavigableSet descendingKeySet -> descendingKeySet
    java.util.NavigableMap descendingMap -> descendingMap
    java.util.NavigableSet navigableKeySet -> navigableKeySet
    long serialVersionUID -> serialVersionUID
    1412:1413:void <init>(java.util.NavigableMap,java.lang.Object) -> <init>
    1417:1417:java.util.NavigableMap delegate() -> delegate
    1422:1424:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1429:1431:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1438:1443:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1450:1455:java.util.NavigableMap descendingMap() -> descendingMap
    1460:1462:java.util.Map$Entry firstEntry() -> firstEntry
    1467:1469:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1474:1476:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1481:1483:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1488:1490:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1495:1497:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1502:1504:java.util.Map$Entry lastEntry() -> lastEntry
    1509:1511:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1516:1518:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1523:1523:java.util.Set keySet() -> keySet
    1530:1535:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1540:1542:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1547:1549:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1555:1557:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1562:1564:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1569:1569:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1574:1574:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1579:1579:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1406:1406:java.util.SortedMap delegate() -> delegate
    1406:1406:java.util.Map delegate() -> delegate
    1406:1406:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> com.google.common.collect.Synchronized$SynchronizedNavigableSet:
    java.util.NavigableSet descendingSet -> descendingSet
    long serialVersionUID -> serialVersionUID
    1275:1276:void <init>(java.util.NavigableSet,java.lang.Object) -> <init>
    1280:1280:java.util.NavigableSet delegate() -> delegate
    1285:1287:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1292:1292:java.util.Iterator descendingIterator() -> descendingIterator
    1299:1306:java.util.NavigableSet descendingSet() -> descendingSet
    1311:1313:java.lang.Object floor(java.lang.Object) -> floor
    1318:1320:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1325:1327:java.lang.Object higher(java.lang.Object) -> higher
    1332:1334:java.lang.Object lower(java.lang.Object) -> lower
    1339:1341:java.lang.Object pollFirst() -> pollFirst
    1346:1348:java.lang.Object pollLast() -> pollLast
    1354:1357:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1362:1364:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1369:1369:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1374:1374:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1379:1379:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1270:1270:java.util.SortedSet delegate() -> delegate
    1270:1270:java.util.Set delegate() -> delegate
    1270:1270:java.util.Collection delegate() -> delegate
    1270:1270:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    java.lang.Object delegate -> delegate
    java.lang.Object mutex -> mutex
    long serialVersionUID -> serialVersionUID
    67:70:void <init>(java.lang.Object,java.lang.Object) -> <init>
    73:73:java.lang.Object delegate() -> delegate
    80:82:java.lang.String toString() -> toString
    92:95:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedQueue -> com.google.common.collect.Synchronized$SynchronizedQueue:
    long serialVersionUID -> serialVersionUID
    1652:1653:void <init>(java.util.Queue,java.lang.Object) -> <init>
    1657:1657:java.util.Queue delegate() -> delegate
    1662:1664:java.lang.Object element() -> element
    1669:1671:boolean offer(java.lang.Object) -> offer
    1676:1678:java.lang.Object peek() -> peek
    1683:1685:java.lang.Object poll() -> poll
    1690:1692:java.lang.Object remove() -> remove
    1649:1649:java.util.Collection delegate() -> delegate
    1649:1649:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedRandomAccessList -> com.google.common.collect.Synchronized$SynchronizedRandomAccessList:
    long serialVersionUID -> serialVersionUID
    409:410:void <init>(java.util.List,java.lang.Object) -> <init>
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    long serialVersionUID -> serialVersionUID
    217:218:void <init>(java.util.Set,java.lang.Object) -> <init>
    222:222:java.util.Set delegate() -> delegate
    227:232:boolean equals(java.lang.Object) -> equals
    237:239:int hashCode() -> hashCode
    214:214:java.util.Collection delegate() -> delegate
    214:214:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSetMultimap -> com.google.common.collect.Synchronized$SynchronizedSetMultimap:
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    752:753:void <init>(com.google.common.collect.SetMultimap,java.lang.Object) -> <init>
    757:757:com.google.common.collect.SetMultimap delegate() -> delegate
    762:764:java.util.Set get(java.lang.Object) -> get
    769:771:java.util.Set removeAll(java.lang.Object) -> removeAll
    776:778:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    783:788:java.util.Set entries() -> entries
    747:747:java.util.Collection entries() -> entries
    747:747:java.util.Collection removeAll(java.lang.Object) -> removeAll
    747:747:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    747:747:java.util.Collection get(java.lang.Object) -> get
    747:747:com.google.common.collect.Multimap delegate() -> delegate
    747:747:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    long serialVersionUID -> serialVersionUID
    1099:1100:void <init>(java.util.SortedMap,java.lang.Object) -> <init>
    1104:1104:java.util.SortedMap delegate() -> delegate
    1109:1111:java.util.Comparator comparator() -> comparator
    1116:1118:java.lang.Object firstKey() -> firstKey
    1123:1125:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1130:1132:java.lang.Object lastKey() -> lastKey
    1137:1139:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1144:1146:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1095:1095:java.util.Map delegate() -> delegate
    1095:1095:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    long serialVersionUID -> serialVersionUID
    251:252:void <init>(java.util.SortedSet,java.lang.Object) -> <init>
    256:256:java.util.SortedSet delegate() -> delegate
    261:263:java.util.Comparator comparator() -> comparator
    268:270:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    275:277:java.util.SortedSet headSet(java.lang.Object) -> headSet
    282:284:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    289:291:java.lang.Object first() -> first
    296:298:java.lang.Object last() -> last
    249:249:java.util.Set delegate() -> delegate
    249:249:java.util.Collection delegate() -> delegate
    249:249:java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap -> com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:
    long serialVersionUID -> serialVersionUID
    805:806:void <init>(com.google.common.collect.SortedSetMultimap,java.lang.Object) -> <init>
    810:810:com.google.common.collect.SortedSetMultimap delegate() -> delegate
    815:817:java.util.SortedSet get(java.lang.Object) -> get
    822:824:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    829:831:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    836:838:java.util.Comparator valueComparator() -> valueComparator
    802:802:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    802:802:java.util.Set removeAll(java.lang.Object) -> removeAll
    802:802:java.util.Set get(java.lang.Object) -> get
    802:802:com.google.common.collect.SetMultimap delegate() -> delegate
    802:802:java.util.Collection get(java.lang.Object) -> get
    802:802:java.util.Collection removeAll(java.lang.Object) -> removeAll
    802:802:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    802:802:com.google.common.collect.Multimap delegate() -> delegate
    802:802:java.lang.Object delegate() -> delegate
com.google.common.collect.Table -> com.google.common.collect.Table:
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set cellSet() -> cellSet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
com.google.common.collect.Table$Cell -> com.google.common.collect.Table$Cell:
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Tables -> com.google.common.collect.Tables:
    com.google.common.base.Function UNMODIFIABLE_WRAPPER -> UNMODIFIABLE_WRAPPER
    53:53:void <init>() -> <init>
    67:67:com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object) -> immutableCell
    143:143:com.google.common.collect.Table transpose(com.google.common.collect.Table) -> transpose
    300:303:com.google.common.collect.Table newCustomTable(java.util.Map,com.google.common.base.Supplier) -> newCustomTable
    335:335:com.google.common.collect.Table transformValues(com.google.common.collect.Table,com.google.common.base.Function) -> transformValues
    468:468:com.google.common.collect.Table unmodifiableTable(com.google.common.collect.Table) -> unmodifiableTable
    570:570:com.google.common.collect.RowSortedTable unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable) -> unmodifiableRowSortedTable
    601:601:com.google.common.base.Function unmodifiableWrapper() -> unmodifiableWrapper
    613:619:boolean equalsImpl(com.google.common.collect.Table,java.lang.Object) -> equalsImpl
    52:52:com.google.common.base.Function access$000() -> access$000
    604:604:void <clinit>() -> <clinit>
com.google.common.collect.Tables$1 -> com.google.common.collect.Tables$1:
    605:605:void <init>() -> <init>
    608:608:java.util.Map apply(java.util.Map) -> apply
    605:605:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$AbstractCell -> com.google.common.collect.Tables$AbstractCell:
    101:101:void <init>() -> <init>
    105:114:boolean equals(java.lang.Object) -> equals
    119:119:int hashCode() -> hashCode
    124:124:java.lang.String toString() -> toString
com.google.common.collect.Tables$ImmutableCell -> com.google.common.collect.Tables$ImmutableCell:
    java.lang.Object rowKey -> rowKey
    java.lang.Object columnKey -> columnKey
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    75:79:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    83:83:java.lang.Object getRowKey() -> getRowKey
    88:88:java.lang.Object getColumnKey() -> getColumnKey
    93:93:java.lang.Object getValue() -> getValue
com.google.common.collect.Tables$TransformedTable -> com.google.common.collect.Tables$TransformedTable:
    com.google.common.collect.Table fromTable -> fromTable
    com.google.common.base.Function function -> function
    342:345:void <init>(com.google.common.collect.Table,com.google.common.base.Function) -> <init>
    349:349:boolean contains(java.lang.Object,java.lang.Object) -> contains
    356:356:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    361:361:int size() -> size
    366:367:void clear() -> clear
    371:371:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    376:376:void putAll(com.google.common.collect.Table) -> putAll
    381:381:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    388:388:java.util.Map row(java.lang.Object) -> row
    393:393:java.util.Map column(java.lang.Object) -> column
    397:397:com.google.common.base.Function cellFunction() -> cellFunction
    408:408:java.util.Iterator cellIterator() -> cellIterator
    413:413:java.util.Set rowKeySet() -> rowKeySet
    418:418:java.util.Set columnKeySet() -> columnKeySet
    423:423:java.util.Collection createValues() -> createValues
    428:435:java.util.Map rowMap() -> rowMap
    440:447:java.util.Map columnMap() -> columnMap
com.google.common.collect.Tables$TransformedTable$1 -> com.google.common.collect.Tables$TransformedTable$1:
    com.google.common.collect.Tables$TransformedTable this$0 -> this$0
    397:397:void <init>(com.google.common.collect.Tables$TransformedTable) -> <init>
    400:400:com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell) -> apply
    397:397:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$2 -> com.google.common.collect.Tables$TransformedTable$2:
    com.google.common.collect.Tables$TransformedTable this$0 -> this$0
    429:429:void <init>(com.google.common.collect.Tables$TransformedTable) -> <init>
    432:432:java.util.Map apply(java.util.Map) -> apply
    429:429:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$3 -> com.google.common.collect.Tables$TransformedTable$3:
    com.google.common.collect.Tables$TransformedTable this$0 -> this$0
    441:441:void <init>(com.google.common.collect.Tables$TransformedTable) -> <init>
    444:444:java.util.Map apply(java.util.Map) -> apply
    441:441:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransposeTable -> com.google.common.collect.Tables$TransposeTable:
    com.google.common.collect.Table original -> original
    com.google.common.base.Function TRANSPOSE_CELL -> TRANSPOSE_CELL
    151:153:void <init>(com.google.common.collect.Table) -> <init>
    157:158:void clear() -> clear
    162:162:java.util.Map column(java.lang.Object) -> column
    167:167:java.util.Set columnKeySet() -> columnKeySet
    172:172:java.util.Map columnMap() -> columnMap
    177:177:boolean contains(java.lang.Object,java.lang.Object) -> contains
    182:182:boolean containsColumn(java.lang.Object) -> containsColumn
    187:187:boolean containsRow(java.lang.Object) -> containsRow
    192:192:boolean containsValue(java.lang.Object) -> containsValue
    197:197:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    202:202:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    207:208:void putAll(com.google.common.collect.Table) -> putAll
    212:212:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    217:217:java.util.Map row(java.lang.Object) -> row
    222:222:java.util.Set rowKeySet() -> rowKeySet
    227:227:java.util.Map rowMap() -> rowMap
    232:232:int size() -> size
    237:237:java.util.Collection values() -> values
    252:252:java.util.Iterator cellIterator() -> cellIterator
    241:241:void <clinit>() -> <clinit>
com.google.common.collect.Tables$TransposeTable$1 -> com.google.common.collect.Tables$TransposeTable$1:
    242:242:void <init>() -> <init>
    245:245:com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell) -> apply
    242:242:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$UnmodifiableRowSortedMap -> com.google.common.collect.Tables$UnmodifiableRowSortedMap:
    long serialVersionUID -> serialVersionUID
    577:578:void <init>(com.google.common.collect.RowSortedTable) -> <init>
    582:582:com.google.common.collect.RowSortedTable delegate() -> delegate
    587:588:java.util.SortedMap rowMap() -> rowMap
    593:593:java.util.SortedSet rowKeySet() -> rowKeySet
    573:573:java.util.Map rowMap() -> rowMap
    573:573:java.util.Set rowKeySet() -> rowKeySet
    573:573:com.google.common.collect.Table delegate() -> delegate
    573:573:java.lang.Object delegate() -> delegate
com.google.common.collect.Tables$UnmodifiableTable -> com.google.common.collect.Tables$UnmodifiableTable:
    com.google.common.collect.Table delegate -> delegate
    long serialVersionUID -> serialVersionUID
    475:477:void <init>(com.google.common.collect.Table) -> <init>
    482:482:com.google.common.collect.Table delegate() -> delegate
    487:487:java.util.Set cellSet() -> cellSet
    492:492:void clear() -> clear
    497:497:java.util.Map column(java.lang.Object) -> column
    502:502:java.util.Set columnKeySet() -> columnKeySet
    507:508:java.util.Map columnMap() -> columnMap
    513:513:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    518:518:void putAll(com.google.common.collect.Table) -> putAll
    523:523:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    528:528:java.util.Map row(java.lang.Object) -> row
    533:533:java.util.Set rowKeySet() -> rowKeySet
    538:539:java.util.Map rowMap() -> rowMap
    544:544:java.util.Collection values() -> values
    471:471:java.lang.Object delegate() -> delegate
com.google.common.collect.TransformedIterator -> com.google.common.collect.TransformedIterator:
    java.util.Iterator backingIterator -> backingIterator
    35:37:void <init>(java.util.Iterator) -> <init>
    java.lang.Object transform(java.lang.Object) -> transform
    43:43:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
    53:54:void remove() -> remove
com.google.common.collect.TransformedListIterator -> com.google.common.collect.TransformedListIterator:
    35:36:void <init>(java.util.ListIterator) -> <init>
    39:39:java.util.ListIterator backingIterator() -> backingIterator
    44:44:boolean hasPrevious() -> hasPrevious
    49:49:java.lang.Object previous() -> previous
    54:54:int nextIndex() -> nextIndex
    59:59:int previousIndex() -> previousIndex
    64:64:void set(java.lang.Object) -> set
    69:69:void add(java.lang.Object) -> add
com.google.common.collect.TreeBasedTable -> com.google.common.collect.TreeBasedTable:
    java.util.Comparator columnComparator -> columnComparator
    long serialVersionUID -> serialVersionUID
    107:107:com.google.common.collect.TreeBasedTable create() -> create
    119:121:com.google.common.collect.TreeBasedTable create(java.util.Comparator,java.util.Comparator) -> create
    129:132:com.google.common.collect.TreeBasedTable create(com.google.common.collect.TreeBasedTable) -> create
    136:138:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    147:147:java.util.Comparator rowComparator() -> rowComparator
    155:155:java.util.Comparator columnComparator() -> columnComparator
    172:172:java.util.SortedMap row(java.lang.Object) -> row
    308:308:java.util.SortedSet rowKeySet() -> rowKeySet
    313:313:java.util.SortedMap rowMap() -> rowMap
    322:336:java.util.Iterator createColumnKeyIterator() -> createColumnKeyIterator
    77:77:java.util.Map rowMap() -> rowMap
    77:77:java.util.Set rowKeySet() -> rowKeySet
    77:77:java.util.Map row(java.lang.Object) -> row
    77:77:java.util.Map columnMap() -> columnMap
    77:77:java.util.Collection values() -> values
    77:77:java.util.Set columnKeySet() -> columnKeySet
    77:77:java.util.Map column(java.lang.Object) -> column
    77:77:java.util.Set cellSet() -> cellSet
    77:77:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    77:77:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    77:77:void clear() -> clear
    77:77:int size() -> size
    77:77:boolean isEmpty() -> isEmpty
    77:77:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    77:77:boolean containsValue(java.lang.Object) -> containsValue
    77:77:boolean containsRow(java.lang.Object) -> containsRow
    77:77:boolean containsColumn(java.lang.Object) -> containsColumn
    77:77:boolean contains(java.lang.Object,java.lang.Object) -> contains
    77:77:java.lang.String toString() -> toString
    77:77:int hashCode() -> hashCode
    77:77:boolean equals(java.lang.Object) -> equals
    77:77:void putAll(com.google.common.collect.Table) -> putAll
com.google.common.collect.TreeBasedTable$1 -> com.google.common.collect.TreeBasedTable$1:
    com.google.common.collect.TreeBasedTable this$0 -> this$0
    328:328:void <init>(com.google.common.collect.TreeBasedTable) -> <init>
    331:331:java.util.Iterator apply(java.util.Map) -> apply
    328:328:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.TreeBasedTable$2 -> com.google.common.collect.TreeBasedTable$2:
    java.lang.Object lastValue -> lastValue
    java.util.Iterator val$merged -> val$merged
    java.util.Comparator val$comparator -> val$comparator
    com.google.common.collect.TreeBasedTable this$0 -> this$0
    336:336:void <init>(com.google.common.collect.TreeBasedTable,java.util.Iterator,java.util.Comparator) -> <init>
    341:353:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeBasedTable$Factory -> com.google.common.collect.TreeBasedTable$Factory:
    java.util.Comparator comparator -> comparator
    long serialVersionUID -> serialVersionUID
    85:87:void <init>(java.util.Comparator) -> <init>
    91:91:java.util.TreeMap get() -> get
    82:82:java.lang.Object get() -> get
com.google.common.collect.TreeBasedTable$TreeRow -> com.google.common.collect.TreeBasedTable$TreeRow:
    java.lang.Object lowerBound -> lowerBound
    java.lang.Object upperBound -> upperBound
    java.util.SortedMap wholeRow -> wholeRow
    com.google.common.collect.TreeBasedTable this$0 -> this$0
    180:181:void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object) -> <init>
    183:189:void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    193:193:java.util.SortedSet keySet() -> keySet
    198:198:java.util.Comparator comparator() -> comparator
    204:205:int compare(java.lang.Object,java.lang.Object) -> compare
    209:209:boolean rangeContains(java.lang.Object) -> rangeContains
    216:217:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    222:223:java.util.SortedMap headMap(java.lang.Object) -> headMap
    228:229:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    234:238:java.lang.Object firstKey() -> firstKey
    243:247:java.lang.Object lastKey() -> lastKey
    257:260:java.util.SortedMap wholeRow() -> wholeRow
    265:265:java.util.SortedMap backingRowMap() -> backingRowMap
    270:280:java.util.SortedMap computeBackingRowMap() -> computeBackingRowMap
    285:290:void maintainEmptyInvariant() -> maintainEmptyInvariant
    294:294:boolean containsKey(java.lang.Object) -> containsKey
    299:300:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    175:175:java.util.Map computeBackingRowMap() -> computeBackingRowMap
    175:175:java.util.Map backingRowMap() -> backingRowMap
    175:175:java.util.Set keySet() -> keySet
com.google.common.collect.TreeMultimap -> com.google.common.collect.TreeMultimap:
    java.util.Comparator keyComparator -> keyComparator
    java.util.Comparator valueComparator -> valueComparator
    long serialVersionUID -> serialVersionUID
    88:88:com.google.common.collect.TreeMultimap create() -> create
    101:101:com.google.common.collect.TreeMultimap create(java.util.Comparator,java.util.Comparator) -> create
    112:112:com.google.common.collect.TreeMultimap create(com.google.common.collect.Multimap) -> create
    116:119:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    125:127:void <init>(java.util.Comparator,java.util.Comparator,com.google.common.collect.Multimap) -> <init>
    139:139:java.util.SortedSet createCollection() -> createCollection
    144:147:java.util.Collection createCollection(java.lang.Object) -> createCollection
    154:154:java.util.Comparator keyComparator() -> keyComparator
    159:159:java.util.Comparator valueComparator() -> valueComparator
    171:171:java.util.NavigableMap backingMap() -> backingMap
    180:180:java.util.NavigableSet get(java.lang.Object) -> get
    186:186:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    192:192:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    207:207:java.util.NavigableSet keySet() -> keySet
    213:213:java.util.NavigableSet createKeySet() -> createKeySet
    228:228:java.util.NavigableMap asMap() -> asMap
    234:234:java.util.NavigableMap createAsMap() -> createAsMap
    244:248:void writeObject(java.io.ObjectOutputStream) -> writeObject
    253:258:void readObject(java.io.ObjectInputStream) -> readObject
    78:78:java.util.SortedSet keySet() -> keySet
    78:78:java.util.SortedMap backingMap() -> backingMap
    78:78:java.util.SortedMap asMap() -> asMap
    78:78:java.util.Collection values() -> values
    78:78:java.util.Map asMap() -> asMap
    78:78:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    78:78:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    78:78:java.util.SortedSet get(java.lang.Object) -> get
    78:78:java.util.Set get(java.lang.Object) -> get
    78:78:java.util.Set keySet() -> keySet
    78:78:java.util.Collection get(java.lang.Object) -> get
    78:78:boolean equals(java.lang.Object) -> equals
    78:78:boolean put(java.lang.Object,java.lang.Object) -> put
    78:78:java.util.Set entries() -> entries
    78:78:java.util.Set createCollection() -> createCollection
    78:78:java.util.Map createAsMap() -> createAsMap
    78:78:java.util.Set createKeySet() -> createKeySet
    78:78:void clear() -> clear
    78:78:boolean containsKey(java.lang.Object) -> containsKey
    78:78:int size() -> size
    78:78:java.util.Map backingMap() -> backingMap
    78:78:java.util.Collection createCollection() -> createCollection
    78:78:java.lang.String toString() -> toString
    78:78:int hashCode() -> hashCode
    78:78:com.google.common.collect.Multiset keys() -> keys
    78:78:boolean putAll(com.google.common.collect.Multimap) -> putAll
    78:78:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    78:78:boolean remove(java.lang.Object,java.lang.Object) -> remove
    78:78:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    78:78:boolean containsValue(java.lang.Object) -> containsValue
    78:78:boolean isEmpty() -> isEmpty
com.google.common.collect.TreeMultiset -> com.google.common.collect.TreeMultiset:
    com.google.common.collect.TreeMultiset$Reference rootReference -> rootReference
    com.google.common.collect.GeneralRange range -> range
    com.google.common.collect.TreeMultiset$AvlNode header -> header
    long serialVersionUID -> serialVersionUID
    74:74:com.google.common.collect.TreeMultiset create() -> create
    91:91:com.google.common.collect.TreeMultiset create(java.util.Comparator) -> create
    106:108:com.google.common.collect.TreeMultiset create(java.lang.Iterable) -> create
    116:120:void <init>(com.google.common.collect.TreeMultiset$Reference,com.google.common.collect.GeneralRange,com.google.common.collect.TreeMultiset$AvlNode) -> <init>
    123:128:void <init>(java.util.Comparator) -> <init>
    163:171:long aggregateForEntries(com.google.common.collect.TreeMultiset$Aggregate) -> aggregateForEntries
    175:191:long aggregateBelowRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> aggregateBelowRange
    198:214:long aggregateAboveRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> aggregateAboveRange
    222:222:int size() -> size
    227:227:int distinctElements() -> distinctElements
    234:243:int count(java.lang.Object) -> count
    249:265:int add(java.lang.Object,int) -> add
    270:290:int remove(java.lang.Object,int) -> remove
    295:311:int setCount(java.lang.Object,int) -> setCount
    316:334:boolean setCount(java.lang.Object,int,int) -> setCount
    338:338:com.google.common.collect.Multiset$Entry wrapEntry(com.google.common.collect.TreeMultiset$AvlNode) -> wrapEntry
    361:379:com.google.common.collect.TreeMultiset$AvlNode firstNode() -> firstNode
    384:402:com.google.common.collect.TreeMultiset$AvlNode lastNode() -> lastNode
    407:407:java.util.Iterator entryIterator() -> entryIterator
    449:449:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    491:491:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    499:499:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    506:506:int distinctElements(com.google.common.collect.TreeMultiset$AvlNode) -> distinctElements
    946:948:void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> successor
    951:953:void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> successor
    967:970:void writeObject(java.io.ObjectOutputStream) -> writeObject
    974:987:void readObject(java.io.ObjectInputStream) -> readObject
    58:58:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    58:58:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    58:58:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    58:58:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    58:58:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    58:58:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    58:58:java.util.Comparator comparator() -> comparator
    58:58:java.util.NavigableSet elementSet() -> elementSet
    58:58:java.lang.String toString() -> toString
    58:58:int hashCode() -> hashCode
    58:58:boolean equals(java.lang.Object) -> equals
    58:58:java.util.Set entrySet() -> entrySet
    58:58:void clear() -> clear
    58:58:boolean retainAll(java.util.Collection) -> retainAll
    58:58:boolean removeAll(java.util.Collection) -> removeAll
    58:58:boolean addAll(java.util.Collection) -> addAll
    58:58:boolean remove(java.lang.Object) -> remove
    58:58:boolean add(java.lang.Object) -> add
    58:58:java.util.Iterator iterator() -> iterator
    58:58:boolean contains(java.lang.Object) -> contains
    58:58:boolean isEmpty() -> isEmpty
    59:59:com.google.common.collect.TreeMultiset$AvlNode access$1200(com.google.common.collect.TreeMultiset) -> access$1200
    59:59:com.google.common.collect.GeneralRange access$1300(com.google.common.collect.TreeMultiset) -> access$1300
    59:59:com.google.common.collect.Multiset$Entry access$1400(com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset$AvlNode) -> access$1400
    59:59:com.google.common.collect.TreeMultiset$AvlNode access$1500(com.google.common.collect.TreeMultiset) -> access$1500
    59:59:com.google.common.collect.TreeMultiset$AvlNode access$1600(com.google.common.collect.TreeMultiset) -> access$1600
    59:59:void access$1700(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$1700
    59:59:void access$1800(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$1800
com.google.common.collect.TreeMultiset$1 -> com.google.common.collect.TreeMultiset$1:
    com.google.common.collect.TreeMultiset$AvlNode val$baseEntry -> val$baseEntry
    com.google.common.collect.TreeMultiset this$0 -> this$0
    338:338:void <init>(com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset$AvlNode) -> <init>
    341:341:java.lang.Object getElement() -> getElement
    346:350:int getCount() -> getCount
com.google.common.collect.TreeMultiset$2 -> com.google.common.collect.TreeMultiset$2:
    com.google.common.collect.TreeMultiset$AvlNode current -> current
    com.google.common.collect.Multiset$Entry prevEntry -> prevEntry
    com.google.common.collect.TreeMultiset this$0 -> this$0
    407:408:void <init>(com.google.common.collect.TreeMultiset) -> <init>
    413:419:boolean hasNext() -> hasNext
    425:435:com.google.common.collect.Multiset$Entry next() -> next
    440:443:void remove() -> remove
    407:407:java.lang.Object next() -> next
com.google.common.collect.TreeMultiset$3 -> com.google.common.collect.TreeMultiset$3:
    com.google.common.collect.TreeMultiset$AvlNode current -> current
    com.google.common.collect.Multiset$Entry prevEntry -> prevEntry
    com.google.common.collect.TreeMultiset this$0 -> this$0
    449:451:void <init>(com.google.common.collect.TreeMultiset) -> <init>
    455:461:boolean hasNext() -> hasNext
    467:477:com.google.common.collect.Multiset$Entry next() -> next
    482:485:void remove() -> remove
    449:449:java.lang.Object next() -> next
com.google.common.collect.TreeMultiset$4 -> com.google.common.collect.TreeMultiset$4:
    int[] $SwitchMap$com$google$common$collect$BoundType -> $SwitchMap$com$google$common$collect$BoundType
    182:182:void <clinit>() -> <clinit>
com.google.common.collect.TreeMultiset$Aggregate -> com.google.common.collect.TreeMultiset$Aggregate:
    com.google.common.collect.TreeMultiset$Aggregate SIZE -> SIZE
    com.google.common.collect.TreeMultiset$Aggregate DISTINCT -> DISTINCT
    com.google.common.collect.TreeMultiset$Aggregate[] $VALUES -> $VALUES
    133:133:com.google.common.collect.TreeMultiset$Aggregate[] values() -> values
    133:133:com.google.common.collect.TreeMultiset$Aggregate valueOf(java.lang.String) -> valueOf
    133:133:void <init>(java.lang.String,int) -> <init>
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> nodeAggregate
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> treeAggregate
    133:133:void <init>(java.lang.String,int,com.google.common.collect.TreeMultiset$1) -> <init>
    133:145:void <clinit>() -> <clinit>
com.google.common.collect.TreeMultiset$Aggregate$1 -> com.google.common.collect.TreeMultiset$Aggregate$1:
    134:134:void <init>(java.lang.String,int) -> <init>
    137:137:int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> nodeAggregate
    142:142:long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> treeAggregate
com.google.common.collect.TreeMultiset$Aggregate$2 -> com.google.common.collect.TreeMultiset$Aggregate$2:
    145:145:void <init>(java.lang.String,int) -> <init>
    148:148:int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> nodeAggregate
    153:153:long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> treeAggregate
com.google.common.collect.TreeMultiset$AvlNode -> com.google.common.collect.TreeMultiset$AvlNode:
    java.lang.Object elem -> elem
    int elemCount -> elemCount
    int distinctElements -> distinctElements
    long totalCount -> totalCount
    int height -> height
    com.google.common.collect.TreeMultiset$AvlNode left -> left
    com.google.common.collect.TreeMultiset$AvlNode right -> right
    com.google.common.collect.TreeMultiset$AvlNode pred -> pred
    com.google.common.collect.TreeMultiset$AvlNode succ -> succ
    539:548:void <init>(java.lang.Object,int) -> <init>
    551:557:int count(java.util.Comparator,java.lang.Object) -> count
    562:567:com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int) -> addRightChild
    571:576:com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int) -> addLeftChild
    584:621:com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[]) -> add
    625:671:com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[]) -> remove
    676:720:com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[]) -> setCount
    729:783:com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int,int[]) -> setCount
    787:808:com.google.common.collect.TreeMultiset$AvlNode deleteMe() -> deleteMe
    814:820:com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode) -> removeMin
    826:832:com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode) -> removeMax
    837:840:void recomputeMultiset() -> recomputeMultiset
    843:844:void recomputeHeight() -> recomputeHeight
    847:849:void recompute() -> recompute
    852:865:com.google.common.collect.TreeMultiset$AvlNode rebalance() -> rebalance
    870:870:int balanceFactor() -> balanceFactor
    874:882:com.google.common.collect.TreeMultiset$AvlNode rotateLeft() -> rotateLeft
    886:894:com.google.common.collect.TreeMultiset$AvlNode rotateRight() -> rotateRight
    898:898:long totalCount(com.google.common.collect.TreeMultiset$AvlNode) -> totalCount
    902:902:int height(com.google.common.collect.TreeMultiset$AvlNode) -> height
    907:913:com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object) -> ceiling
    919:925:com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object) -> floor
    931:931:java.lang.Object getElement() -> getElement
    936:936:int getCount() -> getCount
    941:941:java.lang.String toString() -> toString
    525:525:int access$200(com.google.common.collect.TreeMultiset$AvlNode) -> access$200
    525:525:long access$300(com.google.common.collect.TreeMultiset$AvlNode) -> access$300
    525:525:int access$400(com.google.common.collect.TreeMultiset$AvlNode) -> access$400
    525:525:java.lang.Object access$500(com.google.common.collect.TreeMultiset$AvlNode) -> access$500
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$600(com.google.common.collect.TreeMultiset$AvlNode) -> access$600
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$700(com.google.common.collect.TreeMultiset$AvlNode) -> access$700
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$800(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> access$800
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$900(com.google.common.collect.TreeMultiset$AvlNode) -> access$900
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$1000(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> access$1000
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$1100(com.google.common.collect.TreeMultiset$AvlNode) -> access$1100
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$902(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$902
    525:525:com.google.common.collect.TreeMultiset$AvlNode access$1102(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$1102
com.google.common.collect.TreeMultiset$Reference -> com.google.common.collect.TreeMultiset$Reference:
    java.lang.Object value -> value
    509:509:void <init>() -> <init>
    514:514:java.lang.Object get() -> get
    518:522:void checkAndSet(java.lang.Object,java.lang.Object) -> checkAndSet
    509:509:void <init>(com.google.common.collect.TreeMultiset$1) -> <init>
com.google.common.collect.TreeRangeMap -> com.google.common.collect.TreeRangeMap:
    java.util.NavigableMap entriesByLowerBound -> entriesByLowerBound
    com.google.common.collect.RangeMap EMPTY_SUB_RANGE_MAP -> EMPTY_SUB_RANGE_MAP
    61:61:com.google.common.collect.TreeRangeMap create() -> create
    64:66:void <init>() -> <init>
    108:109:java.lang.Object get(java.lang.Comparable) -> get
    115:120:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    126:131:void put(com.google.common.collect.Range,java.lang.Object) -> put
    135:138:void putAll(com.google.common.collect.RangeMap) -> putAll
    142:143:void clear() -> clear
    147:152:com.google.common.collect.Range span() -> span
    157:158:void putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> putRangeMapEntry
    162:209:void remove(com.google.common.collect.Range) -> remove
    213:213:java.util.Map asMapOfRanges() -> asMapOfRanges
    218:218:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    260:263:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    269:269:com.google.common.collect.RangeMap emptySubRangeMap() -> emptySubRangeMap
    645:649:boolean equals(java.lang.Object) -> equals
    654:654:int hashCode() -> hashCode
    659:659:java.lang.String toString() -> toString
    56:56:java.util.NavigableMap access$000(com.google.common.collect.TreeRangeMap) -> access$000
    56:56:com.google.common.collect.RangeMap access$100(com.google.common.collect.TreeRangeMap) -> access$100
    272:272:void <clinit>() -> <clinit>
com.google.common.collect.TreeRangeMap$1 -> com.google.common.collect.TreeRangeMap$1:
    273:273:void <init>() -> <init>
    277:277:java.lang.Object get(java.lang.Comparable) -> get
    283:283:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    288:288:com.google.common.collect.Range span() -> span
    293:294:void put(com.google.common.collect.Range,java.lang.Object) -> put
    300:304:void putAll(com.google.common.collect.RangeMap) -> putAll
    307:307:void clear() -> clear
    311:312:void remove(com.google.common.collect.Range) -> remove
    316:316:java.util.Map asMapOfRanges() -> asMapOfRanges
    321:321:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    326:327:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
com.google.common.collect.TreeRangeMap$AsMapOfRanges -> com.google.common.collect.TreeRangeMap$AsMapOfRanges:
    java.lang.Iterable entryIterable -> entryIterable
    com.google.common.collect.TreeRangeMap this$0 -> this$0
    226:228:void <init>(com.google.common.collect.TreeRangeMap,java.lang.Iterable) -> <init>
    232:232:boolean containsKey(java.lang.Object) -> containsKey
    237:244:java.lang.Object get(java.lang.Object) -> get
    249:249:int size() -> size
    254:254:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.TreeRangeMap$RangeMapEntry -> com.google.common.collect.TreeRangeMap$RangeMapEntry:
    com.google.common.collect.Range range -> range
    java.lang.Object value -> value
    74:75:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> <init>
    77:80:void <init>(com.google.common.collect.Range,java.lang.Object) -> <init>
    84:84:com.google.common.collect.Range getKey() -> getKey
    89:89:java.lang.Object getValue() -> getValue
    93:93:boolean contains(java.lang.Comparable) -> contains
    97:97:com.google.common.collect.Cut getLowerBound() -> getLowerBound
    101:101:com.google.common.collect.Cut getUpperBound() -> getUpperBound
    68:68:java.lang.Object getKey() -> getKey
com.google.common.collect.TreeRangeMap$SubRangeMap -> com.google.common.collect.TreeRangeMap$SubRangeMap:
    com.google.common.collect.Range subRange -> subRange
    com.google.common.collect.TreeRangeMap this$0 -> this$0
    335:337:void <init>(com.google.common.collect.TreeRangeMap,com.google.common.collect.Range) -> <init>
    342:342:java.lang.Object get(java.lang.Comparable) -> get
    348:354:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    360:382:com.google.common.collect.Range span() -> span
    387:390:void put(com.google.common.collect.Range,java.lang.Object) -> put
    394:404:void putAll(com.google.common.collect.RangeMap) -> putAll
    408:409:void clear() -> clear
    413:416:void remove(com.google.common.collect.Range) -> remove
    420:423:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    429:429:java.util.Map asMapOfRanges() -> asMapOfRanges
    434:434:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    467:471:boolean equals(java.lang.Object) -> equals
    476:476:int hashCode() -> hashCode
    481:481:java.lang.String toString() -> toString
    331:331:com.google.common.collect.Range access$200(com.google.common.collect.TreeRangeMap$SubRangeMap) -> access$200
com.google.common.collect.TreeRangeMap$SubRangeMap$1 -> com.google.common.collect.TreeRangeMap$SubRangeMap$1:
    com.google.common.collect.TreeRangeMap$SubRangeMap this$1 -> this$1
    434:434:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap) -> <init>
    438:447:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.TreeRangeMap$SubRangeMap$1$1 -> com.google.common.collect.TreeRangeMap$SubRangeMap$1$1:
    java.util.Iterator val$backingItr -> val$backingItr
    com.google.common.collect.TreeRangeMap$SubRangeMap$1 this$2 -> this$2
    447:447:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$1,java.util.Iterator) -> <init>
    451:458:java.util.Map$Entry computeNext() -> computeNext
    447:447:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:
    com.google.common.collect.TreeRangeMap$SubRangeMap this$1 -> this$1
    484:484:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap) -> <init>
    488:488:boolean containsKey(java.lang.Object) -> containsKey
    494:521:java.lang.Object get(java.lang.Object) -> get
    526:533:java.lang.Object remove(java.lang.Object) -> remove
    538:539:void clear() -> clear
    542:551:boolean removeEntryIf(com.google.common.base.Predicate) -> removeEntryIf
    556:556:java.util.Set keySet() -> keySet
    571:571:java.util.Set entrySet() -> entrySet
    600:608:java.util.Iterator entryIterator() -> entryIterator
    628:628:java.util.Collection values() -> values
    484:484:boolean access$300(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,com.google.common.base.Predicate) -> access$300
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> this$2
    556:556:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,java.util.Map) -> <init>
    559:559:boolean remove(java.lang.Object) -> remove
    564:564:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> this$2
    571:571:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap) -> <init>
    574:574:java.util.Map map() -> map
    579:579:java.util.Iterator iterator() -> iterator
    584:584:boolean retainAll(java.util.Collection) -> retainAll
    589:589:int size() -> size
    594:594:boolean isEmpty() -> isEmpty
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3:
    java.util.Iterator val$backingItr -> val$backingItr
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> this$2
    608:608:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,java.util.Iterator) -> <init>
    612:621:java.util.Map$Entry computeNext() -> computeNext
    608:608:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$4 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$4:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> this$2
    628:628:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,java.util.Map) -> <init>
    631:631:boolean removeAll(java.util.Collection) -> removeAll
    636:636:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeSet -> com.google.common.collect.TreeRangeSet:
    java.util.NavigableMap rangesByLowerBound -> rangesByLowerBound
    java.util.Set asRanges -> asRanges
    java.util.Set asDescendingSetOfRanges -> asDescendingSetOfRanges
    com.google.common.collect.RangeSet complement -> complement
    52:52:com.google.common.collect.TreeRangeSet create() -> create
    59:61:com.google.common.collect.TreeRangeSet create(com.google.common.collect.RangeSet) -> create
    64:66:void <init>(java.util.NavigableMap) -> <init>
    73:74:java.util.Set asRanges() -> asRanges
    79:80:java.util.Set asDescendingSetOfRanges() -> asDescendingSetOfRanges
    112:118:com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    124:126:boolean encloses(com.google.common.collect.Range) -> encloses
    131:133:com.google.common.collect.Range rangeEnclosing(com.google.common.collect.Range) -> rangeEnclosing
    140:145:com.google.common.collect.Range span() -> span
    150:193:void add(com.google.common.collect.Range) -> add
    197:236:void remove(com.google.common.collect.Range) -> remove
    239:244:void replaceRangeWithSameLowerBound(com.google.common.collect.Range) -> replaceRangeWithSameLowerBound
    250:251:com.google.common.collect.RangeSet complement() -> complement
    832:832:com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    42:42:boolean equals(java.lang.Object) -> equals
    42:42:void removeAll(com.google.common.collect.RangeSet) -> removeAll
    42:42:void addAll(com.google.common.collect.RangeSet) -> addAll
    42:42:boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    42:42:void clear() -> clear
    42:42:boolean isEmpty() -> isEmpty
    42:42:boolean contains(java.lang.Comparable) -> contains
    44:44:void <init>(java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1) -> <init>
    44:44:com.google.common.collect.Range access$600(com.google.common.collect.TreeRangeSet,com.google.common.collect.Range) -> access$600
com.google.common.collect.TreeRangeSet$1 -> com.google.common.collect.TreeRangeSet$1:
com.google.common.collect.TreeRangeSet$AsRanges -> com.google.common.collect.TreeRangeSet$AsRanges:
    java.util.Collection delegate -> delegate
    com.google.common.collect.TreeRangeSet this$0 -> this$0
    89:91:void <init>(com.google.common.collect.TreeRangeSet,java.util.Collection) -> <init>
    95:95:java.util.Collection delegate() -> delegate
    100:100:int hashCode() -> hashCode
    105:105:boolean equals(java.lang.Object) -> equals
    85:85:java.lang.Object delegate() -> delegate
com.google.common.collect.TreeRangeSet$Complement -> com.google.common.collect.TreeRangeSet$Complement:
    com.google.common.collect.TreeRangeSet this$0 -> this$0
    624:626:void <init>(com.google.common.collect.TreeRangeSet) -> <init>
    630:631:void add(com.google.common.collect.Range) -> add
    635:636:void remove(com.google.common.collect.Range) -> remove
    640:640:boolean contains(java.lang.Comparable) -> contains
    645:645:com.google.common.collect.RangeSet complement() -> complement
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound -> com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:
    java.util.NavigableMap positiveRangesByLowerBound -> positiveRangesByLowerBound
    java.util.NavigableMap positiveRangesByUpperBound -> positiveRangesByUpperBound
    com.google.common.collect.Range complementLowerBoundWindow -> complementLowerBoundWindow
    432:433:void <init>(java.util.NavigableMap) -> <init>
    436:440:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    443:447:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    454:454:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    462:462:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    467:467:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
    472:472:java.util.Comparator comparator() -> comparator
    487:508:java.util.Iterator entryIterator() -> entryIterator
    541:568:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    595:595:int size() -> size
    601:614:com.google.common.collect.Range get(java.lang.Object) -> get
    619:619:boolean containsKey(java.lang.Object) -> containsKey
    419:419:java.lang.Object get(java.lang.Object) -> get
    419:419:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    419:419:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    419:419:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    419:419:com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound) -> access$100
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1 -> com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1:
    com.google.common.collect.Cut nextComplementRangeLowerBound -> nextComplementRangeLowerBound
    com.google.common.collect.Cut val$firstComplementRangeLowerBound -> val$firstComplementRangeLowerBound
    com.google.common.collect.PeekingIterator val$positiveItr -> val$positiveItr
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> this$0
    508:509:void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator) -> <init>
    513:526:java.util.Map$Entry computeNext() -> computeNext
    508:508:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2 -> com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2:
    com.google.common.collect.Cut nextComplementRangeUpperBound -> nextComplementRangeUpperBound
    com.google.common.collect.Cut val$firstComplementRangeUpperBound -> val$firstComplementRangeUpperBound
    com.google.common.collect.PeekingIterator val$positiveItr -> val$positiveItr
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> this$0
    568:569:void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator) -> <init>
    573:588:java.util.Map$Entry computeNext() -> computeNext
    568:568:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.google.common.collect.TreeRangeSet$RangesByUpperBound:
    java.util.NavigableMap rangesByLowerBound -> rangesByLowerBound
    com.google.common.collect.Range upperBoundWindow -> upperBoundWindow
    265:268:void <init>(java.util.NavigableMap) -> <init>
    271:274:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    277:280:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    287:287:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    295:295:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    300:300:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
    305:305:java.util.Comparator comparator() -> comparator
    310:310:boolean containsKey(java.lang.Object) -> containsKey
    315:330:com.google.common.collect.Range get(java.lang.Object) -> get
    340:356:java.util.Iterator entryIterator() -> entryIterator
    375:389:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    405:408:int size() -> size
    413:413:boolean isEmpty() -> isEmpty
    254:254:java.lang.Object get(java.lang.Object) -> get
    254:254:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    254:254:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    254:254:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    255:255:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> access$000
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$1:
    java.util.Iterator val$backingItr -> val$backingItr
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> this$0
    356:356:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    359:366:java.util.Map$Entry computeNext() -> computeNext
    356:356:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$2:
    com.google.common.collect.PeekingIterator val$backingItr -> val$backingItr
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> this$0
    389:389:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    392:396:java.util.Map$Entry computeNext() -> computeNext
    389:389:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSet -> com.google.common.collect.TreeRangeSet$SubRangeSet:
    com.google.common.collect.Range restriction -> restriction
    com.google.common.collect.TreeRangeSet this$0 -> this$0
    838:842:void <init>(com.google.common.collect.TreeRangeSet,com.google.common.collect.Range) -> <init>
    846:850:boolean encloses(com.google.common.collect.Range) -> encloses
    856:860:com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    865:871:void add(com.google.common.collect.Range) -> add
    875:878:void remove(com.google.common.collect.Range) -> remove
    882:882:boolean contains(java.lang.Comparable) -> contains
    887:888:void clear() -> clear
    892:897:com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound -> com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:
    com.google.common.collect.Range lowerBoundWindow -> lowerBoundWindow
    com.google.common.collect.Range restriction -> restriction
    java.util.NavigableMap rangesByLowerBound -> rangesByLowerBound
    java.util.NavigableMap rangesByUpperBound -> rangesByUpperBound
    669:674:void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap) -> <init>
    677:680:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    688:688:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    698:698:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    703:703:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
    708:708:java.util.Comparator comparator() -> comparator
    713:713:boolean containsKey(java.lang.Object) -> containsKey
    719:743:com.google.common.collect.Range get(java.lang.Object) -> get
    748:771:java.util.Iterator entryIterator() -> entryIterator
    790:804:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    826:826:int size() -> size
    649:649:java.lang.Object get(java.lang.Object) -> get
    649:649:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    649:649:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    649:649:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    649:649:com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> access$300
    649:649:com.google.common.collect.Range access$400(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> access$400
    649:649:void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1) -> <init>
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1 -> com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1:
    java.util.Iterator val$completeRangeItr -> val$completeRangeItr
    com.google.common.collect.Cut val$upperBoundOnLowerBounds -> val$upperBoundOnLowerBounds
    com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound this$0 -> this$0
    771:771:void <init>(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound,java.util.Iterator,com.google.common.collect.Cut) -> <init>
    774:782:java.util.Map$Entry computeNext() -> computeNext
    771:771:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2 -> com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2:
    java.util.Iterator val$completeRangeItr -> val$completeRangeItr
    com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound this$0 -> this$0
    804:804:void <init>(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound,java.util.Iterator) -> <init>
    807:818:java.util.Map$Entry computeNext() -> computeNext
    804:804:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeTraverser -> com.google.common.collect.TreeTraverser:
    54:189:void <init>() -> <init>
    java.lang.Iterable children(java.lang.Object) -> children
    70:71:com.google.common.collect.FluentIterable preOrderTraversal(java.lang.Object) -> preOrderTraversal
    81:81:com.google.common.collect.UnmodifiableIterator preOrderIterator(java.lang.Object) -> preOrderIterator
    120:121:com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object) -> postOrderTraversal
    131:131:com.google.common.collect.UnmodifiableIterator postOrderIterator(java.lang.Object) -> postOrderIterator
    180:181:com.google.common.collect.FluentIterable breadthFirstTraversal(java.lang.Object) -> breadthFirstTraversal
com.google.common.collect.TreeTraverser$1 -> com.google.common.collect.TreeTraverser$1:
    java.lang.Object val$root -> val$root
    com.google.common.collect.TreeTraverser this$0 -> this$0
    71:71:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    71:71:java.util.Iterator iterator() -> iterator
com.google.common.collect.TreeTraverser$2 -> com.google.common.collect.TreeTraverser$2:
    java.lang.Object val$root -> val$root
    com.google.common.collect.TreeTraverser this$0 -> this$0
    121:121:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    124:124:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    121:121:java.util.Iterator iterator() -> iterator
com.google.common.collect.TreeTraverser$3 -> com.google.common.collect.TreeTraverser$3:
    java.lang.Object val$root -> val$root
    com.google.common.collect.TreeTraverser this$0 -> this$0
    181:181:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    184:184:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    181:181:java.util.Iterator iterator() -> iterator
com.google.common.collect.TreeTraverser$BreadthFirstIterator -> com.google.common.collect.TreeTraverser$BreadthFirstIterator:
    java.util.Queue queue -> queue
    com.google.common.collect.TreeTraverser this$0 -> this$0
    193:196:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    200:200:boolean hasNext() -> hasNext
    205:205:java.lang.Object peek() -> peek
    210:212:java.lang.Object next() -> next
com.google.common.collect.TreeTraverser$PostOrderIterator -> com.google.common.collect.TreeTraverser$PostOrderIterator:
    java.util.ArrayDeque stack -> stack
    com.google.common.collect.TreeTraverser this$0 -> this$0
    147:150:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    154:164:java.lang.Object computeNext() -> computeNext
    168:168:com.google.common.collect.TreeTraverser$PostOrderNode expand(java.lang.Object) -> expand
com.google.common.collect.TreeTraverser$PostOrderNode -> com.google.common.collect.TreeTraverser$PostOrderNode:
    java.lang.Object root -> root
    java.util.Iterator childIterator -> childIterator
    138:141:void <init>(java.lang.Object,java.util.Iterator) -> <init>
com.google.common.collect.TreeTraverser$PreOrderIterator -> com.google.common.collect.TreeTraverser$PreOrderIterator:
    java.util.Deque stack -> stack
    com.google.common.collect.TreeTraverser this$0 -> this$0
    87:90:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    94:94:boolean hasNext() -> hasNext
    99:108:java.lang.Object next() -> next
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    36:36:void <init>() -> <init>
    47:47:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    34:34:void <init>() -> <init>
    45:45:void add(java.lang.Object) -> add
    57:57:void set(java.lang.Object) -> set
com.google.common.collect.UnmodifiableSortedMultiset -> com.google.common.collect.UnmodifiableSortedMultiset:
    com.google.common.collect.UnmodifiableSortedMultiset descendingMultiset -> descendingMultiset
    long serialVersionUID -> serialVersionUID
    36:37:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    41:41:com.google.common.collect.SortedMultiset delegate() -> delegate
    46:46:java.util.Comparator comparator() -> comparator
    51:51:java.util.NavigableSet createElementSet() -> createElementSet
    56:56:java.util.NavigableSet elementSet() -> elementSet
    63:69:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    74:74:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    79:79:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    84:84:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    89:89:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    94:94:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    100:100:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    106:106:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    32:32:java.util.Set elementSet() -> elementSet
    32:32:java.util.Set createElementSet() -> createElementSet
    32:32:com.google.common.collect.Multiset delegate() -> delegate
    32:32:java.util.Collection delegate() -> delegate
    32:32:java.lang.Object delegate() -> delegate
    32:32:java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.UsingToStringOrdering -> com.google.common.collect.UsingToStringOrdering:
    com.google.common.collect.UsingToStringOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    33:33:int compare(java.lang.Object,java.lang.Object) -> compare
    38:38:java.lang.Object readResolve() -> readResolve
    43:43:java.lang.String toString() -> toString
    46:46:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
com.google.common.collect.WellBehavedMap -> com.google.common.collect.WellBehavedMap:
    java.util.Map delegate -> delegate
    java.util.Set entrySet -> entrySet
    42:44:void <init>(java.util.Map) -> <init>
    53:53:com.google.common.collect.WellBehavedMap wrap(java.util.Map) -> wrap
    58:58:java.util.Map delegate() -> delegate
    63:67:java.util.Set entrySet() -> entrySet
    37:37:java.lang.Object delegate() -> delegate
com.google.common.collect.WellBehavedMap$1 -> com.google.common.collect.WellBehavedMap$1:
com.google.common.collect.WellBehavedMap$EntrySet -> com.google.common.collect.WellBehavedMap$EntrySet:
    com.google.common.collect.WellBehavedMap this$0 -> this$0
    71:71:void <init>(com.google.common.collect.WellBehavedMap) -> <init>
    74:74:java.util.Map map() -> map
    79:79:java.util.Iterator iterator() -> iterator
    71:71:void <init>(com.google.common.collect.WellBehavedMap,com.google.common.collect.WellBehavedMap$1) -> <init>
com.google.common.collect.WellBehavedMap$EntrySet$1 -> com.google.common.collect.WellBehavedMap$EntrySet$1:
    com.google.common.collect.WellBehavedMap$EntrySet this$1 -> this$1
    79:79:void <init>(com.google.common.collect.WellBehavedMap$EntrySet,java.util.Iterator) -> <init>
    82:82:java.util.Map$Entry transform(java.lang.Object) -> transform
    79:79:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.WellBehavedMap$EntrySet$1$1 -> com.google.common.collect.WellBehavedMap$EntrySet$1$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.WellBehavedMap$EntrySet$1 this$2 -> this$2
    82:82:void <init>(com.google.common.collect.WellBehavedMap$EntrySet$1,java.lang.Object) -> <init>
    85:85:java.lang.Object getKey() -> getKey
    90:90:java.lang.Object getValue() -> getValue
    95:95:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.package-info -> com.google.common.collect.package-info:
com.google.common.escape.ArrayBasedCharEscaper -> com.google.common.escape.ArrayBasedCharEscaper:
    char[][] replacements -> replacements
    int replacementsLength -> replacementsLength
    char safeMin -> safeMin
    char safeMax -> safeMax
    77:78:void <init>(java.util.Map,char,char) -> <init>
    96:109:void <init>(com.google.common.escape.ArrayBasedEscaperMap,char,char) -> <init>
    118:126:java.lang.String escape(java.lang.String) -> escape
    135:144:char[] escape(char) -> escape
    char[] escapeUnsafe(char) -> escapeUnsafe
com.google.common.escape.ArrayBasedEscaperMap -> com.google.common.escape.ArrayBasedEscaperMap:
    char[][] replacementArray -> replacementArray
    char[][] EMPTY_REPLACEMENT_ARRAY -> EMPTY_REPLACEMENT_ARRAY
    56:56:com.google.common.escape.ArrayBasedEscaperMap create(java.util.Map) -> create
    63:65:void <init>(char[][]) -> <init>
    69:69:char[][] getReplacementArray() -> getReplacementArray
    77:86:char[][] createReplacementArray(java.util.Map) -> createReplacementArray
    90:90:void <clinit>() -> <clinit>
com.google.common.escape.ArrayBasedUnicodeEscaper -> com.google.common.escape.ArrayBasedUnicodeEscaper:
    char[][] replacements -> replacements
    int replacementsLength -> replacementsLength
    int safeMin -> safeMin
    int safeMax -> safeMax
    char safeMinChar -> safeMinChar
    char safeMaxChar -> safeMaxChar
    83:85:void <init>(java.util.Map,int,int,java.lang.String) -> <init>
    105:144:void <init>(com.google.common.escape.ArrayBasedEscaperMap,int,int,java.lang.String) -> <init>
    153:161:java.lang.String escape(java.lang.String) -> escape
    167:175:int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    185:194:char[] escape(int) -> escape
    char[] escapeUnsafe(int) -> escapeUnsafe
com.google.common.escape.CharEscaper -> com.google.common.escape.CharEscaper:
    int DEST_PAD_MULTIPLIER -> DEST_PAD_MULTIPLIER
    49:49:void <init>() -> <init>
    59:67:java.lang.String escape(java.lang.String) -> escape
    82:138:java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    char[] escape(char) -> escape
    163:167:char[] growBuffer(char[],int,int) -> growBuffer
com.google.common.escape.CharEscaperBuilder -> com.google.common.escape.CharEscaperBuilder:
    java.util.Map map -> map
    int max -> max
    76:83:void <init>() -> <init>
    89:93:com.google.common.escape.CharEscaperBuilder addEscape(char,java.lang.String) -> addEscape
    100:104:com.google.common.escape.CharEscaperBuilder addEscapes(char[],java.lang.String) -> addEscapes
    115:119:char[][] toArray() -> toArray
    129:129:com.google.common.escape.Escaper toEscaper() -> toEscaper
com.google.common.escape.CharEscaperBuilder$CharArrayDecorator -> com.google.common.escape.CharEscaperBuilder$CharArrayDecorator:
    char[][] replacements -> replacements
    int replaceLength -> replaceLength
    47:50:void <init>(char[][]) -> <init>
    57:64:java.lang.String escape(java.lang.String) -> escape
    68:68:char[] escape(char) -> escape
com.google.common.escape.Escaper -> com.google.common.escape.Escaper:
    com.google.common.base.Function asFunction -> asFunction
    64:89:void <init>() -> <init>
    java.lang.String escape(java.lang.String) -> escape
    101:101:com.google.common.base.Function asFunction() -> asFunction
com.google.common.escape.Escaper$1 -> com.google.common.escape.Escaper$1:
    com.google.common.escape.Escaper this$0 -> this$0
    90:90:void <init>(com.google.common.escape.Escaper) -> <init>
    93:93:java.lang.String apply(java.lang.String) -> apply
    90:90:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.escape.Escapers -> com.google.common.escape.Escapers:
    com.google.common.escape.Escaper NULL_ESCAPER -> NULL_ESCAPER
    39:39:void <init>() -> <init>
    46:46:com.google.common.escape.Escaper nullEscaper() -> nullEscaper
    78:78:com.google.common.escape.Escapers$Builder builder() -> builder
    183:191:com.google.common.escape.UnicodeEscaper asUnicodeEscaper(com.google.common.escape.Escaper) -> asUnicodeEscaper
    206:206:java.lang.String computeReplacement(com.google.common.escape.CharEscaper,char) -> computeReplacement
    220:220:java.lang.String computeReplacement(com.google.common.escape.UnicodeEscaper,int) -> computeReplacement
    224:224:java.lang.String stringOrNull(char[]) -> stringOrNull
    229:229:com.google.common.escape.UnicodeEscaper wrap(com.google.common.escape.CharEscaper) -> wrap
    51:51:void <clinit>() -> <clinit>
com.google.common.escape.Escapers$1 -> com.google.common.escape.Escapers$1:
    51:51:void <init>() -> <init>
    53:53:java.lang.String escape(java.lang.String) -> escape
    58:58:char[] escape(char) -> escape
com.google.common.escape.Escapers$2 -> com.google.common.escape.Escapers$2:
    com.google.common.escape.CharEscaper val$escaper -> val$escaper
    229:229:void <init>(com.google.common.escape.CharEscaper) -> <init>
    232:271:char[] escape(int) -> escape
com.google.common.escape.Escapers$Builder -> com.google.common.escape.Escapers$Builder:
    java.util.Map replacementMap -> replacementMap
    char safeMin -> safeMin
    char safeMax -> safeMax
    java.lang.String unsafeReplacement -> unsafeReplacement
    95:102:void <init>() -> <init>
    115:117:com.google.common.escape.Escapers$Builder setSafeRange(char,char) -> setSafeRange
    130:131:com.google.common.escape.Escapers$Builder setUnsafeReplacement(java.lang.String) -> setUnsafeReplacement
    146:149:com.google.common.escape.Escapers$Builder addEscape(char,java.lang.String) -> addEscape
    156:156:com.google.common.escape.Escaper build() -> build
    94:94:void <init>(com.google.common.escape.Escapers$1) -> <init>
    94:94:java.lang.String access$100(com.google.common.escape.Escapers$Builder) -> access$100
com.google.common.escape.Escapers$Builder$1 -> com.google.common.escape.Escapers$Builder$1:
    char[] replacementChars -> replacementChars
    com.google.common.escape.Escapers$Builder this$0 -> this$0
    156:157:void <init>(com.google.common.escape.Escapers$Builder,java.util.Map,char,char) -> <init>
    160:160:char[] escapeUnsafe(char) -> escapeUnsafe
com.google.common.escape.Platform -> com.google.common.escape.Platform:
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    28:28:void <init>() -> <init>
    32:32:char[] charBufferFromThreadLocal() -> charBufferFromThreadLocal
    40:40:void <clinit>() -> <clinit>
com.google.common.escape.Platform$1 -> com.google.common.escape.Platform$1:
    40:40:void <init>() -> <init>
    43:43:char[] initialValue() -> initialValue
    40:40:java.lang.Object initialValue() -> initialValue
com.google.common.escape.UnicodeEscaper -> com.google.common.escape.UnicodeEscaper:
    int DEST_PAD -> DEST_PAD
    64:64:void <init>() -> <init>
    char[] escape(int) -> escape
    116:124:int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    152:155:java.lang.String escape(java.lang.String) -> escape
    176:230:java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    266:294:int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    303:307:char[] growBuffer(char[],int,int) -> growBuffer
com.google.common.escape.package-info -> com.google.common.escape.package-info:
com.google.common.eventbus.AllowConcurrentEvents -> com.google.common.eventbus.AllowConcurrentEvents:
com.google.common.eventbus.AsyncEventBus -> com.google.common.eventbus.AsyncEventBus:
    43:44:void <init>(java.lang.String,java.util.concurrent.Executor) -> <init>
    58:59:void <init>(java.util.concurrent.Executor,com.google.common.eventbus.SubscriberExceptionHandler) -> <init>
    70:71:void <init>(java.util.concurrent.Executor) -> <init>
com.google.common.eventbus.DeadEvent -> com.google.common.eventbus.DeadEvent:
    java.lang.Object source -> source
    java.lang.Object event -> event
    47:50:void <init>(java.lang.Object,java.lang.Object) -> <init>
    59:59:java.lang.Object getSource() -> getSource
    69:69:java.lang.Object getEvent() -> getEvent
    74:74:java.lang.String toString() -> toString
com.google.common.eventbus.Dispatcher -> com.google.common.eventbus.Dispatcher:
    37:196:void <init>() -> <init>
    50:50:com.google.common.eventbus.Dispatcher perThreadDispatchQueue() -> perThreadDispatchQueue
    60:60:com.google.common.eventbus.Dispatcher legacyAsync() -> legacyAsync
    69:69:com.google.common.eventbus.Dispatcher immediate() -> immediate
    void dispatch(java.lang.Object,java.util.Iterator) -> dispatch
com.google.common.eventbus.Dispatcher$1 -> com.google.common.eventbus.Dispatcher$1:
com.google.common.eventbus.Dispatcher$ImmediateDispatcher -> com.google.common.eventbus.Dispatcher$ImmediateDispatcher:
    com.google.common.eventbus.Dispatcher$ImmediateDispatcher INSTANCE -> INSTANCE
    196:196:void <init>() -> <init>
    201:205:void dispatch(java.lang.Object,java.util.Iterator) -> dispatch
    196:196:com.google.common.eventbus.Dispatcher$ImmediateDispatcher access$200() -> access$200
    197:197:void <clinit>() -> <clinit>
com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher -> com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher:
    java.util.concurrent.ConcurrentLinkedQueue queue -> queue
    143:182:void <init>() -> <init>
    171:180:void dispatch(java.lang.Object,java.util.Iterator) -> dispatch
    143:143:void <init>(com.google.common.eventbus.Dispatcher$1) -> <init>
com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher$EventWithSubscriber -> com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher$EventWithSubscriber:
    java.lang.Object event -> event
    com.google.common.eventbus.Subscriber subscriber -> subscriber
    186:189:void <init>(java.lang.Object,com.google.common.eventbus.Subscriber) -> <init>
    182:182:void <init>(java.lang.Object,com.google.common.eventbus.Subscriber,com.google.common.eventbus.Dispatcher$1) -> <init>
    182:182:java.lang.Object access$700(com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher$EventWithSubscriber) -> access$700
    182:182:com.google.common.eventbus.Subscriber access$800(com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher$EventWithSubscriber) -> access$800
com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher -> com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher:
    java.lang.ThreadLocal queue -> queue
    java.lang.ThreadLocal dispatching -> dispatching
    80:129:void <init>() -> <init>
    108:127:void dispatch(java.lang.Object,java.util.Iterator) -> dispatch
    80:80:void <init>(com.google.common.eventbus.Dispatcher$1) -> <init>
com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$1 -> com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$1:
    com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher this$0 -> this$0
    88:88:void <init>(com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher) -> <init>
    91:91:java.util.Queue initialValue() -> initialValue
    88:88:java.lang.Object initialValue() -> initialValue
com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$2 -> com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$2:
    com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher this$0 -> this$0
    99:99:void <init>(com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher) -> <init>
    102:102:java.lang.Boolean initialValue() -> initialValue
    99:99:java.lang.Object initialValue() -> initialValue
com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$Event -> com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$Event:
    java.lang.Object event -> event
    java.util.Iterator subscribers -> subscribers
    133:136:void <init>(java.lang.Object,java.util.Iterator) -> <init>
    129:129:void <init>(java.lang.Object,java.util.Iterator,com.google.common.eventbus.Dispatcher$1) -> <init>
    129:129:java.util.Iterator access$400(com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$Event) -> access$400
    129:129:java.lang.Object access$500(com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$Event) -> access$500
com.google.common.eventbus.EventBus -> com.google.common.eventbus.EventBus:
    java.util.logging.Logger logger -> logger
    java.lang.String identifier -> identifier
    java.util.concurrent.Executor executor -> executor
    com.google.common.eventbus.SubscriberExceptionHandler exceptionHandler -> exceptionHandler
    com.google.common.eventbus.SubscriberRegistry subscribers -> subscribers
    com.google.common.eventbus.Dispatcher dispatcher -> dispatcher
    117:118:void <init>() -> <init>
    127:129:void <init>(java.lang.String) -> <init>
    138:140:void <init>(com.google.common.eventbus.SubscriberExceptionHandler) -> <init>
    110:148:void <init>(java.lang.String,java.util.concurrent.Executor,com.google.common.eventbus.Dispatcher,com.google.common.eventbus.SubscriberExceptionHandler) -> <init>
    156:156:java.lang.String identifier() -> identifier
    163:163:java.util.concurrent.Executor executor() -> executor
    170:180:void handleSubscriberException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext) -> handleSubscriberException
    188:189:void register(java.lang.Object) -> register
    198:199:void unregister(java.lang.Object) -> unregister
    213:220:void post(java.lang.Object) -> post
    224:224:java.lang.String toString() -> toString
    104:104:void <clinit>() -> <clinit>
com.google.common.eventbus.EventBus$LoggingHandler -> com.google.common.eventbus.EventBus$LoggingHandler:
    com.google.common.eventbus.EventBus$LoggingHandler INSTANCE -> INSTANCE
    232:232:void <init>() -> <init>
    237:241:void handleException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext) -> handleException
    244:244:java.util.logging.Logger logger(com.google.common.eventbus.SubscriberExceptionContext) -> logger
    248:249:java.lang.String message(com.google.common.eventbus.SubscriberExceptionContext) -> message
    233:233:void <clinit>() -> <clinit>
com.google.common.eventbus.Subscribe -> com.google.common.eventbus.Subscribe:
com.google.common.eventbus.Subscriber -> com.google.common.eventbus.Subscriber:
    com.google.common.eventbus.EventBus bus -> bus
    java.lang.Object target -> target
    java.lang.reflect.Method method -> method
    java.util.concurrent.Executor executor -> executor
    45:45:com.google.common.eventbus.Subscriber create(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method) -> create
    63:70:void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method) -> <init>
    76:86:void dispatchEvent(java.lang.Object) -> dispatchEvent
    95:106:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
    112:112:com.google.common.eventbus.SubscriberExceptionContext context(java.lang.Object) -> context
    117:117:int hashCode() -> hashCode
    122:129:boolean equals(java.lang.Object) -> equals
    137:137:boolean isDeclaredThreadSafe(java.lang.reflect.Method) -> isDeclaredThreadSafe
    39:39:com.google.common.eventbus.SubscriberExceptionContext access$100(com.google.common.eventbus.Subscriber,java.lang.Object) -> access$100
    39:39:com.google.common.eventbus.EventBus access$200(com.google.common.eventbus.Subscriber) -> access$200
    39:39:void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method,com.google.common.eventbus.Subscriber$1) -> <init>
com.google.common.eventbus.Subscriber$1 -> com.google.common.eventbus.Subscriber$1:
    java.lang.Object val$event -> val$event
    com.google.common.eventbus.Subscriber this$0 -> this$0
    76:76:void <init>(com.google.common.eventbus.Subscriber,java.lang.Object) -> <init>
    80:84:void run() -> run
com.google.common.eventbus.Subscriber$SynchronizedSubscriber -> com.google.common.eventbus.Subscriber$SynchronizedSubscriber:
    148:149:void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method) -> <init>
    153:156:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
    145:145:void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method,com.google.common.eventbus.Subscriber$1) -> <init>
com.google.common.eventbus.SubscriberExceptionContext -> com.google.common.eventbus.SubscriberExceptionContext:
    com.google.common.eventbus.EventBus eventBus -> eventBus
    java.lang.Object event -> event
    java.lang.Object subscriber -> subscriber
    java.lang.reflect.Method subscriberMethod -> subscriberMethod
    41:46:void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.Object,java.lang.reflect.Method) -> <init>
    53:53:com.google.common.eventbus.EventBus getEventBus() -> getEventBus
    60:60:java.lang.Object getEvent() -> getEvent
    67:67:java.lang.Object getSubscriber() -> getSubscriber
    74:74:java.lang.reflect.Method getSubscriberMethod() -> getSubscriberMethod
com.google.common.eventbus.SubscriberExceptionHandler -> com.google.common.eventbus.SubscriberExceptionHandler:
    void handleException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext) -> handleException
com.google.common.eventbus.SubscriberRegistry -> com.google.common.eventbus.SubscriberRegistry:
    java.util.concurrent.ConcurrentMap subscribers -> subscribers
    com.google.common.eventbus.EventBus bus -> bus
    com.google.common.cache.LoadingCache subscriberMethodsCache -> subscriberMethodsCache
    com.google.common.cache.LoadingCache flattenHierarchyCache -> flattenHierarchyCache
    65:75:void <init>(com.google.common.eventbus.EventBus) -> <init>
    81:97:void register(java.lang.Object) -> register
    103:122:void unregister(java.lang.Object) -> unregister
    126:126:java.util.Set getSubscribersForTesting(java.lang.Class) -> getSubscribersForTesting
    134:147:java.util.Iterator getSubscribers(java.lang.Object) -> getSubscribers
    170:177:com.google.common.collect.Multimap findAllSubscribers(java.lang.Object) -> findAllSubscribers
    181:181:com.google.common.collect.ImmutableList getAnnotatedMethods(java.lang.Class) -> getAnnotatedMethods
    185:204:com.google.common.collect.ImmutableList getAnnotatedMethodsNotCached(java.lang.Class) -> getAnnotatedMethodsNotCached
    229:231:com.google.common.collect.ImmutableSet flattenHierarchy(java.lang.Class) -> flattenHierarchy
    57:57:com.google.common.collect.ImmutableList access$000(java.lang.Class) -> access$000
    156:210:void <clinit>() -> <clinit>
com.google.common.eventbus.SubscriberRegistry$1 -> com.google.common.eventbus.SubscriberRegistry$1:
    159:159:void <init>() -> <init>
    162:162:com.google.common.collect.ImmutableList load(java.lang.Class) -> load
    159:159:java.lang.Object load(java.lang.Object) -> load
com.google.common.eventbus.SubscriberRegistry$2 -> com.google.common.eventbus.SubscriberRegistry$2:
    213:213:void <init>() -> <init>
    217:217:com.google.common.collect.ImmutableSet load(java.lang.Class) -> load
    213:213:java.lang.Object load(java.lang.Object) -> load
com.google.common.eventbus.SubscriberRegistry$MethodIdentifier -> com.google.common.eventbus.SubscriberRegistry$MethodIdentifier:
    java.lang.String name -> name
    java.util.List parameterTypes -> parameterTypes
    240:243:void <init>(java.lang.reflect.Method) -> <init>
    247:247:int hashCode() -> hashCode
    252:256:boolean equals(java.lang.Object) -> equals
com.google.common.hash.AbstractByteHasher -> com.google.common.hash.AbstractByteHasher:
    java.nio.ByteBuffer scratch -> scratch
    36:37:void <init>() -> <init>
    void update(byte) -> update
    48:49:void update(byte[]) -> update
    55:58:void update(byte[],int,int) -> update
    62:63:com.google.common.hash.Hasher putByte(byte) -> putByte
    68:70:com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    75:77:com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    85:89:com.google.common.hash.Hasher update(int) -> update
    94:95:com.google.common.hash.Hasher putShort(short) -> putShort
    100:101:com.google.common.hash.Hasher putInt(int) -> putInt
    106:107:com.google.common.hash.Hasher putLong(long) -> putLong
    112:113:com.google.common.hash.Hasher putChar(char) -> putChar
    118:119:com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    36:36:com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    36:36:com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    36:36:com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    36:36:com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    36:36:com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    36:36:com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    36:36:com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractCompositeHashFunction -> com.google.common.hash.AbstractCompositeHashFunction:
    com.google.common.hash.HashFunction[] functions -> functions
    long serialVersionUID -> serialVersionUID
    33:38:void <init>(com.google.common.hash.HashFunction[]) -> <init>
    com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]) -> makeHash
    50:54:com.google.common.hash.Hasher newHasher() -> newHasher
com.google.common.hash.AbstractCompositeHashFunction$1 -> com.google.common.hash.AbstractCompositeHashFunction$1:
    com.google.common.hash.Hasher[] val$hashers -> val$hashers
    com.google.common.hash.AbstractCompositeHashFunction this$0 -> this$0
    54:54:void <init>(com.google.common.hash.AbstractCompositeHashFunction,com.google.common.hash.Hasher[]) -> <init>
    57:60:com.google.common.hash.Hasher putByte(byte) -> putByte
    65:68:com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    73:76:com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    81:84:com.google.common.hash.Hasher putShort(short) -> putShort
    89:92:com.google.common.hash.Hasher putInt(int) -> putInt
    97:100:com.google.common.hash.Hasher putLong(long) -> putLong
    105:108:com.google.common.hash.Hasher putFloat(float) -> putFloat
    113:116:com.google.common.hash.Hasher putDouble(double) -> putDouble
    121:124:com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    129:132:com.google.common.hash.Hasher putChar(char) -> putChar
    137:140:com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    145:148:com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    153:156:com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    161:161:com.google.common.hash.HashCode hash() -> hash
    54:54:com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    54:54:com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    54:54:com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    54:54:com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    54:54:com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    54:54:com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
    54:54:com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    54:54:com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    54:54:com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    54:54:com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    54:54:com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    54:54:com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractHasher -> com.google.common.hash.AbstractHasher:
    26:26:void <init>() -> <init>
    29:29:com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    34:34:com.google.common.hash.Hasher putDouble(double) -> putDouble
    39:39:com.google.common.hash.Hasher putFloat(float) -> putFloat
    44:47:com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    52:52:com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    26:26:com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    26:26:com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    26:26:com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    26:26:com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    26:26:com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
com.google.common.hash.AbstractNonStreamingHashFunction -> com.google.common.hash.AbstractNonStreamingHashFunction:
    32:156:void <init>() -> <init>
    35:35:com.google.common.hash.Hasher newHasher() -> newHasher
    40:41:com.google.common.hash.Hasher newHasher(int) -> newHasher
    46:46:com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    51:56:com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence) -> hashUnencodedChars
    61:61:com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    66:66:com.google.common.hash.HashCode hashInt(int) -> hashInt
    71:71:com.google.common.hash.HashCode hashLong(long) -> hashLong
    76:76:com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher -> com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher:
    com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream -> stream
    int BOTTOM_BYTE -> BOTTOM_BYTE
    com.google.common.hash.AbstractNonStreamingHashFunction this$0 -> this$0
    86:88:void <init>(com.google.common.hash.AbstractNonStreamingHashFunction,int) -> <init>
    92:93:com.google.common.hash.Hasher putByte(byte) -> putByte
    99:103:com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    108:109:com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    114:116:com.google.common.hash.Hasher putShort(short) -> putShort
    121:125:com.google.common.hash.Hasher putInt(int) -> putInt
    130:133:com.google.common.hash.Hasher putLong(long) -> putLong
    138:140:com.google.common.hash.Hasher putChar(char) -> putChar
    145:146:com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    151:151:com.google.common.hash.HashCode hash() -> hash
    82:82:com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    82:82:com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    82:82:com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    82:82:com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    82:82:com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    82:82:com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    82:82:com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream -> com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream:
    158:159:void <init>(int) -> <init>
    162:162:byte[] byteArray() -> byteArray
    166:166:int length() -> length
com.google.common.hash.AbstractStreamingHashFunction -> com.google.common.hash.AbstractStreamingHashFunction:
    35:85:void <init>() -> <init>
    38:38:com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    43:43:com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence) -> hashUnencodedChars
    48:48:com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    53:53:com.google.common.hash.HashCode hashInt(int) -> hashInt
    58:58:com.google.common.hash.HashCode hashLong(long) -> hashLong
    63:63:com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
    68:68:com.google.common.hash.HashCode hashBytes(byte[],int,int) -> hashBytes
    73:74:com.google.common.hash.Hasher newHasher(int) -> newHasher
com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher -> com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher:
    java.nio.ByteBuffer buffer -> buffer
    int bufferSize -> bufferSize
    int chunkSize -> chunkSize
    103:104:void <init>(int) -> <init>
    115:124:void <init>(int,int) -> <init>
    void process(java.nio.ByteBuffer) -> process
    140:148:void processRemaining(java.nio.ByteBuffer) -> processRemaining
    152:152:com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    157:157:com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    162:182:com.google.common.hash.Hasher putBytes(java.nio.ByteBuffer) -> putBytes
    187:190:com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    205:207:com.google.common.hash.Hasher putByte(byte) -> putByte
    212:214:com.google.common.hash.Hasher putShort(short) -> putShort
    219:221:com.google.common.hash.Hasher putChar(char) -> putChar
    226:228:com.google.common.hash.Hasher putInt(int) -> putInt
    233:235:com.google.common.hash.Hasher putLong(long) -> putLong
    240:241:com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    246:251:com.google.common.hash.HashCode hash() -> hash
    com.google.common.hash.HashCode makeHash() -> makeHash
    258:262:void munchIfFull() -> munchIfFull
    265:272:void munch() -> munch
    85:85:com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    85:85:com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    85:85:com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    85:85:com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    85:85:com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    85:85:com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    85:85:com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    85:85:com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.BloomFilter -> com.google.common.hash.BloomFilter:
    com.google.common.hash.BloomFilterStrategies$BitArray bits -> bits
    int numHashFunctions -> numHashFunctions
    com.google.common.hash.Funnel funnel -> funnel
    com.google.common.hash.BloomFilter$Strategy strategy -> strategy
    113:121:void <init>(com.google.common.hash.BloomFilterStrategies$BitArray,int,com.google.common.hash.Funnel,com.google.common.hash.BloomFilter$Strategy) -> <init>
    131:131:com.google.common.hash.BloomFilter copy() -> copy
    140:140:boolean mightContain(java.lang.Object) -> mightContain
    151:151:boolean apply(java.lang.Object) -> apply
    167:167:boolean put(java.lang.Object) -> put
    184:184:double expectedFpp() -> expectedFpp
    192:192:long bitSize() -> bitSize
    212:213:boolean isCompatible(com.google.common.hash.BloomFilter) -> isCompatible
    231:254:void putAll(com.google.common.hash.BloomFilter) -> putAll
    258:268:boolean equals(java.lang.Object) -> equals
    273:273:int hashCode() -> hashCode
    300:300:com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,int,double) -> create
    328:328:com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,long,double) -> create
    334:355:com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,long,double,com.google.common.hash.BloomFilter$Strategy) -> create
    381:381:com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,int) -> create
    407:407:com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,long) -> create
    436:436:int optimalNumOfHashFunctions(long,long) -> optimalNumOfHashFunctions
    450:453:long optimalNumOfBits(long,double) -> optimalNumOfBits
    457:457:java.lang.Object writeReplace() -> writeReplace
    495:502:void writeTo(java.io.OutputStream) -> writeTo
    518:545:com.google.common.hash.BloomFilter readFrom(java.io.InputStream,com.google.common.hash.Funnel) -> readFrom
    63:63:com.google.common.hash.BloomFilterStrategies$BitArray access$000(com.google.common.hash.BloomFilter) -> access$000
    63:63:int access$100(com.google.common.hash.BloomFilter) -> access$100
    63:63:com.google.common.hash.Funnel access$200(com.google.common.hash.BloomFilter) -> access$200
    63:63:com.google.common.hash.BloomFilter$Strategy access$300(com.google.common.hash.BloomFilter) -> access$300
    63:63:void <init>(com.google.common.hash.BloomFilterStrategies$BitArray,int,com.google.common.hash.Funnel,com.google.common.hash.BloomFilter$Strategy,com.google.common.hash.BloomFilter$1) -> <init>
com.google.common.hash.BloomFilter$1 -> com.google.common.hash.BloomFilter$1:
com.google.common.hash.BloomFilter$SerialForm -> com.google.common.hash.BloomFilter$SerialForm:
    long[] data -> data
    int numHashFunctions -> numHashFunctions
    com.google.common.hash.Funnel funnel -> funnel
    com.google.common.hash.BloomFilter$Strategy strategy -> strategy
    long serialVersionUID -> serialVersionUID
    466:471:void <init>(com.google.common.hash.BloomFilter) -> <init>
    474:474:java.lang.Object readResolve() -> readResolve
com.google.common.hash.BloomFilter$Strategy -> com.google.common.hash.BloomFilter$Strategy:
    boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> put
    boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> mightContain
    int ordinal() -> ordinal
com.google.common.hash.BloomFilterStrategies -> com.google.common.hash.BloomFilterStrategies:
    com.google.common.hash.BloomFilterStrategies MURMUR128_MITZ_32 -> MURMUR128_MITZ_32
    com.google.common.hash.BloomFilterStrategies MURMUR128_MITZ_64 -> MURMUR128_MITZ_64
    com.google.common.hash.BloomFilterStrategies[] $VALUES -> $VALUES
    38:38:com.google.common.hash.BloomFilterStrategies[] values() -> values
    38:38:com.google.common.hash.BloomFilterStrategies valueOf(java.lang.String) -> valueOf
    38:142:void <init>(java.lang.String,int) -> <init>
    38:38:void <init>(java.lang.String,int,com.google.common.hash.BloomFilterStrategies$1) -> <init>
    38:92:void <clinit>() -> <clinit>
com.google.common.hash.BloomFilterStrategies$1 -> com.google.common.hash.BloomFilterStrategies$1:
    44:44:void <init>(java.lang.String,int) -> <init>
    48:62:boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> put
    68:83:boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> mightContain
com.google.common.hash.BloomFilterStrategies$2 -> com.google.common.hash.BloomFilterStrategies$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    96:108:boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> put
    114:127:boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> mightContain
    131:131:long lowerEight(byte[]) -> lowerEight
    136:136:long upperEight(byte[]) -> upperEight
com.google.common.hash.BloomFilterStrategies$BitArray -> com.google.common.hash.BloomFilterStrategies$BitArray:
    long[] data -> data
    long bitCount -> bitCount
    147:148:void <init>(long) -> <init>
    151:159:void <init>(long[]) -> <init>
    163:168:boolean set(long) -> set
    172:172:boolean get(long) -> get
    177:177:long bitSize() -> bitSize
    182:182:long bitCount() -> bitCount
    186:186:com.google.common.hash.BloomFilterStrategies$BitArray copy() -> copy
    191:201:void putAll(com.google.common.hash.BloomFilterStrategies$BitArray) -> putAll
    205:209:boolean equals(java.lang.Object) -> equals
    214:214:int hashCode() -> hashCode
com.google.common.hash.ChecksumHashFunction -> com.google.common.hash.ChecksumHashFunction:
    com.google.common.base.Supplier checksumSupplier -> checksumSupplier
    int bits -> bits
    java.lang.String toString -> toString
    long serialVersionUID -> serialVersionUID
    35:40:void <init>(com.google.common.base.Supplier,int,java.lang.String) -> <init>
    44:44:int bits() -> bits
    49:49:com.google.common.hash.Hasher newHasher() -> newHasher
    54:54:java.lang.String toString() -> toString
    30:30:int access$100(com.google.common.hash.ChecksumHashFunction) -> access$100
com.google.common.hash.ChecksumHashFunction$1 -> com.google.common.hash.ChecksumHashFunction$1:
com.google.common.hash.ChecksumHashFunction$ChecksumHasher -> com.google.common.hash.ChecksumHashFunction$ChecksumHasher:
    java.util.zip.Checksum checksum -> checksum
    com.google.common.hash.ChecksumHashFunction this$0 -> this$0
    63:65:void <init>(com.google.common.hash.ChecksumHashFunction,java.util.zip.Checksum) -> <init>
    69:70:void update(byte) -> update
    74:75:void update(byte[],int,int) -> update
    79:88:com.google.common.hash.HashCode hash() -> hash
    60:60:void <init>(com.google.common.hash.ChecksumHashFunction,java.util.zip.Checksum,com.google.common.hash.ChecksumHashFunction$1) -> <init>
com.google.common.hash.Crc32cHashFunction -> com.google.common.hash.Crc32cHashFunction:
    23:39:void <init>() -> <init>
    26:26:int bits() -> bits
    31:31:com.google.common.hash.Hasher newHasher() -> newHasher
    36:36:java.lang.String toString() -> toString
com.google.common.hash.Crc32cHashFunction$Crc32cHasher -> com.google.common.hash.Crc32cHashFunction$Crc32cHasher:
    int[] CRC_TABLE -> CRC_TABLE
    int crc -> crc
    39:109:void <init>() -> <init>
    113:116:void update(byte) -> update
    120:120:com.google.common.hash.HashCode hash() -> hash
    42:42:void <clinit>() -> <clinit>
com.google.common.hash.Funnel -> com.google.common.hash.Funnel:
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels -> com.google.common.hash.Funnels:
    36:36:void <init>() -> <init>
    42:42:com.google.common.hash.Funnel byteArrayFunnel() -> byteArrayFunnel
    66:66:com.google.common.hash.Funnel unencodedCharsFunnel() -> unencodedCharsFunnel
    89:89:com.google.common.hash.Funnel stringFunnel(java.nio.charset.Charset) -> stringFunnel
    147:147:com.google.common.hash.Funnel integerFunnel() -> integerFunnel
    170:170:com.google.common.hash.Funnel sequentialFunnel(com.google.common.hash.Funnel) -> sequentialFunnel
    212:212:com.google.common.hash.Funnel longFunnel() -> longFunnel
    239:239:java.io.OutputStream asOutputStream(com.google.common.hash.PrimitiveSink) -> asOutputStream
com.google.common.hash.Funnels$ByteArrayFunnel -> com.google.common.hash.Funnels$ByteArrayFunnel:
    com.google.common.hash.Funnels$ByteArrayFunnel INSTANCE -> INSTANCE
    com.google.common.hash.Funnels$ByteArrayFunnel[] $VALUES -> $VALUES
    45:45:com.google.common.hash.Funnels$ByteArrayFunnel[] values() -> values
    45:45:com.google.common.hash.Funnels$ByteArrayFunnel valueOf(java.lang.String) -> valueOf
    45:45:void <init>(java.lang.String,int) -> <init>
    49:50:void funnel(byte[],com.google.common.hash.PrimitiveSink) -> funnel
    54:54:java.lang.String toString() -> toString
    45:45:void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
    45:46:void <clinit>() -> <clinit>
com.google.common.hash.Funnels$IntegerFunnel -> com.google.common.hash.Funnels$IntegerFunnel:
    com.google.common.hash.Funnels$IntegerFunnel INSTANCE -> INSTANCE
    com.google.common.hash.Funnels$IntegerFunnel[] $VALUES -> $VALUES
    150:150:com.google.common.hash.Funnels$IntegerFunnel[] values() -> values
    150:150:com.google.common.hash.Funnels$IntegerFunnel valueOf(java.lang.String) -> valueOf
    150:150:void <init>(java.lang.String,int) -> <init>
    154:155:void funnel(java.lang.Integer,com.google.common.hash.PrimitiveSink) -> funnel
    159:159:java.lang.String toString() -> toString
    150:150:void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
    150:151:void <clinit>() -> <clinit>
com.google.common.hash.Funnels$LongFunnel -> com.google.common.hash.Funnels$LongFunnel:
    com.google.common.hash.Funnels$LongFunnel INSTANCE -> INSTANCE
    com.google.common.hash.Funnels$LongFunnel[] $VALUES -> $VALUES
    215:215:com.google.common.hash.Funnels$LongFunnel[] values() -> values
    215:215:com.google.common.hash.Funnels$LongFunnel valueOf(java.lang.String) -> valueOf
    215:215:void <init>(java.lang.String,int) -> <init>
    219:220:void funnel(java.lang.Long,com.google.common.hash.PrimitiveSink) -> funnel
    224:224:java.lang.String toString() -> toString
    215:215:void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
    215:216:void <clinit>() -> <clinit>
com.google.common.hash.Funnels$SequentialFunnel -> com.google.common.hash.Funnels$SequentialFunnel:
    com.google.common.hash.Funnel elementFunnel -> elementFunnel
    176:178:void <init>(com.google.common.hash.Funnel) -> <init>
    181:184:void funnel(java.lang.Iterable,com.google.common.hash.PrimitiveSink) -> funnel
    188:188:java.lang.String toString() -> toString
    193:197:boolean equals(java.lang.Object) -> equals
    202:202:int hashCode() -> hashCode
    173:173:void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$SinkAsStream -> com.google.common.hash.Funnels$SinkAsStream:
    com.google.common.hash.PrimitiveSink sink -> sink
    245:247:void <init>(com.google.common.hash.PrimitiveSink) -> <init>
    251:252:void write(int) -> write
    256:257:void write(byte[]) -> write
    261:262:void write(byte[],int,int) -> write
    266:266:java.lang.String toString() -> toString
com.google.common.hash.Funnels$StringCharsetFunnel -> com.google.common.hash.Funnels$StringCharsetFunnel:
    java.nio.charset.Charset charset -> charset
    95:97:void <init>(java.nio.charset.Charset) -> <init>
    100:101:void funnel(java.lang.CharSequence,com.google.common.hash.PrimitiveSink) -> funnel
    105:105:java.lang.String toString() -> toString
    110:114:boolean equals(java.lang.Object) -> equals
    119:119:int hashCode() -> hashCode
    123:123:java.lang.Object writeReplace() -> writeReplace
    92:92:void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm -> com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm:
    java.lang.String charsetCanonicalName -> charsetCanonicalName
    long serialVersionUID -> serialVersionUID
    129:131:void <init>(java.nio.charset.Charset) -> <init>
    134:134:java.lang.Object readResolve() -> readResolve
com.google.common.hash.Funnels$UnencodedCharsFunnel -> com.google.common.hash.Funnels$UnencodedCharsFunnel:
    com.google.common.hash.Funnels$UnencodedCharsFunnel INSTANCE -> INSTANCE
    com.google.common.hash.Funnels$UnencodedCharsFunnel[] $VALUES -> $VALUES
    69:69:com.google.common.hash.Funnels$UnencodedCharsFunnel[] values() -> values
    69:69:com.google.common.hash.Funnels$UnencodedCharsFunnel valueOf(java.lang.String) -> valueOf
    69:69:void <init>(java.lang.String,int) -> <init>
    73:74:void funnel(java.lang.CharSequence,com.google.common.hash.PrimitiveSink) -> funnel
    78:78:java.lang.String toString() -> toString
    69:69:void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
    69:70:void <clinit>() -> <clinit>
com.google.common.hash.HashCode -> com.google.common.hash.HashCode:
    char[] hexDigits -> hexDigits
    40:40:void <init>() -> <init>
    int bits() -> bits
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
    byte[] asBytes() -> asBytes
    95:98:int writeBytesTo(byte[],int,int) -> writeBytesTo
    void writeBytesToImpl(byte[],int,int) -> writeBytesToImpl
    109:109:byte[] getBytesInternal() -> getBytesInternal
    boolean equalsSameBits(com.google.common.hash.HashCode) -> equalsSameBits
    126:126:com.google.common.hash.HashCode fromInt(int) -> fromInt
    189:189:com.google.common.hash.HashCode fromLong(long) -> fromLong
    256:257:com.google.common.hash.HashCode fromBytes(byte[]) -> fromBytes
    265:265:com.google.common.hash.HashCode fromBytesNoCopy(byte[]) -> fromBytesNoCopy
    355:368:com.google.common.hash.HashCode fromString(java.lang.String) -> fromString
    372:378:int decode(char) -> decode
    390:394:boolean equals(java.lang.Object) -> equals
    406:415:int hashCode() -> hashCode
    431:436:java.lang.String toString() -> toString
    439:439:void <clinit>() -> <clinit>
com.google.common.hash.HashCode$BytesHashCode -> com.google.common.hash.HashCode$BytesHashCode:
    byte[] bytes -> bytes
    long serialVersionUID -> serialVersionUID
    271:273:void <init>(byte[]) -> <init>
    277:277:int bits() -> bits
    282:282:byte[] asBytes() -> asBytes
    287:291:int asInt() -> asInt
    299:303:long asLong() -> asLong
    308:312:long padToLong() -> padToLong
    317:318:void writeBytesToImpl(byte[],int,int) -> writeBytesToImpl
    322:322:byte[] getBytesInternal() -> getBytesInternal
    329:337:boolean equalsSameBits(com.google.common.hash.HashCode) -> equalsSameBits
com.google.common.hash.HashCode$IntHashCode -> com.google.common.hash.HashCode$IntHashCode:
    int hash -> hash
    long serialVersionUID -> serialVersionUID
    132:134:void <init>(int) -> <init>
    138:138:int bits() -> bits
    143:143:byte[] asBytes() -> asBytes
    153:153:int asInt() -> asInt
    158:158:long asLong() -> asLong
    163:163:long padToLong() -> padToLong
    168:171:void writeBytesToImpl(byte[],int,int) -> writeBytesToImpl
    175:175:boolean equalsSameBits(com.google.common.hash.HashCode) -> equalsSameBits
com.google.common.hash.HashCode$LongHashCode -> com.google.common.hash.HashCode$LongHashCode:
    long hash -> hash
    long serialVersionUID -> serialVersionUID
    195:197:void <init>(long) -> <init>
    201:201:int bits() -> bits
    206:206:byte[] asBytes() -> asBytes
    220:220:int asInt() -> asInt
    225:225:long asLong() -> asLong
    230:230:long padToLong() -> padToLong
    235:238:void writeBytesToImpl(byte[],int,int) -> writeBytesToImpl
    242:242:boolean equalsSameBits(com.google.common.hash.HashCode) -> equalsSameBits
com.google.common.hash.HashFunction -> com.google.common.hash.HashFunction:
    com.google.common.hash.Hasher newHasher() -> newHasher
    com.google.common.hash.Hasher newHasher(int) -> newHasher
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
    com.google.common.hash.HashCode hashBytes(byte[],int,int) -> hashBytes
    com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence) -> hashUnencodedChars
    com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    int bits() -> bits
com.google.common.hash.Hasher -> com.google.common.hash.Hasher:
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
    int hashCode() -> hashCode
com.google.common.hash.Hashing -> com.google.common.hash.Hashing:
    int GOOD_FAST_HASH_SEED -> GOOD_FAST_HASH_SEED
    66:84:com.google.common.hash.HashFunction goodFastHash(int) -> goodFastHash
    102:102:com.google.common.hash.HashFunction murmur3_32(int) -> murmur3_32
    114:114:com.google.common.hash.HashFunction murmur3_32() -> murmur3_32
    133:133:com.google.common.hash.HashFunction murmur3_128(int) -> murmur3_128
    145:145:com.google.common.hash.HashFunction murmur3_128() -> murmur3_128
    163:163:com.google.common.hash.HashFunction sipHash24() -> sipHash24
    179:179:com.google.common.hash.HashFunction sipHash24(long,long) -> sipHash24
    187:187:com.google.common.hash.HashFunction md5() -> md5
    199:199:com.google.common.hash.HashFunction sha1() -> sha1
    211:211:com.google.common.hash.HashFunction sha256() -> sha256
    226:226:com.google.common.hash.HashFunction sha384() -> sha384
    239:239:com.google.common.hash.HashFunction sha512() -> sha512
    254:254:com.google.common.hash.HashFunction crc32c() -> crc32c
    271:271:com.google.common.hash.HashFunction crc32() -> crc32
    288:288:com.google.common.hash.HashFunction adler32() -> adler32
    297:297:com.google.common.hash.HashFunction checksumHashFunction(com.google.common.hash.Hashing$ChecksumType,java.lang.String) -> checksumHashFunction
    356:356:int consistentHash(com.google.common.hash.HashCode,int) -> consistentHash
    391:402:int consistentHash(long,int) -> consistentHash
    418:430:com.google.common.hash.HashCode combineOrdered(java.lang.Iterable) -> combineOrdered
    444:455:com.google.common.hash.HashCode combineUnordered(java.lang.Iterable) -> combineUnordered
    462:463:int checkPositiveAndMakeMultipleOf32(int) -> checkPositiveAndMakeMultipleOf32
    479:485:com.google.common.hash.HashFunction concatenating(com.google.common.hash.HashFunction,com.google.common.hash.HashFunction,com.google.common.hash.HashFunction[]) -> concatenating
    499:506:com.google.common.hash.HashFunction concatenating(java.lang.Iterable) -> concatenating
    574:574:void <init>() -> <init>
    49:49:int access$100() -> access$100
    49:49:com.google.common.hash.HashFunction access$200(com.google.common.hash.Hashing$ChecksumType,java.lang.String) -> access$200
    91:91:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$1 -> com.google.common.hash.Hashing$1:
com.google.common.hash.Hashing$Adler32Holder -> com.google.common.hash.Hashing$Adler32Holder:
    com.google.common.hash.HashFunction ADLER_32 -> ADLER_32
    291:291:void <init>() -> <init>
    292:292:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$ChecksumType -> com.google.common.hash.Hashing$ChecksumType:
    com.google.common.hash.Hashing$ChecksumType CRC_32 -> CRC_32
    com.google.common.hash.Hashing$ChecksumType ADLER_32 -> ADLER_32
    int bits -> bits
    com.google.common.hash.Hashing$ChecksumType[] $VALUES -> $VALUES
    300:300:com.google.common.hash.Hashing$ChecksumType[] values() -> values
    300:300:com.google.common.hash.Hashing$ChecksumType valueOf(java.lang.String) -> valueOf
    316:318:void <init>(java.lang.String,int,int) -> <init>
    java.util.zip.Checksum get() -> get
    300:300:java.lang.Object get() -> get
    300:300:int access$300(com.google.common.hash.Hashing$ChecksumType) -> access$300
    300:300:void <init>(java.lang.String,int,int,com.google.common.hash.Hashing$1) -> <init>
    300:307:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$ChecksumType$1 -> com.google.common.hash.Hashing$ChecksumType$1:
    301:301:void <init>(java.lang.String,int,int) -> <init>
    304:304:java.util.zip.Checksum get() -> get
    301:301:java.lang.Object get() -> get
com.google.common.hash.Hashing$ChecksumType$2 -> com.google.common.hash.Hashing$ChecksumType$2:
    307:307:void <init>(java.lang.String,int,int) -> <init>
    310:310:java.util.zip.Checksum get() -> get
    307:307:java.lang.Object get() -> get
com.google.common.hash.Hashing$ConcatenatedHashFunction -> com.google.common.hash.Hashing$ConcatenatedHashFunction:
    int bits -> bits
    513:524:void <init>(com.google.common.hash.HashFunction[]) -> <init>
    528:534:com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]) -> makeHash
    539:539:int bits() -> bits
    544:548:boolean equals(java.lang.Object) -> equals
    553:553:int hashCode() -> hashCode
    509:509:void <init>(com.google.common.hash.HashFunction[],com.google.common.hash.Hashing$1) -> <init>
com.google.common.hash.Hashing$Crc32Holder -> com.google.common.hash.Hashing$Crc32Holder:
    com.google.common.hash.HashFunction CRC_32 -> CRC_32
    274:274:void <init>() -> <init>
    275:275:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Crc32cHolder -> com.google.common.hash.Hashing$Crc32cHolder:
    com.google.common.hash.HashFunction CRC_32_C -> CRC_32_C
    257:257:void <init>() -> <init>
    258:258:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$LinearCongruentialGenerator -> com.google.common.hash.Hashing$LinearCongruentialGenerator:
    long state -> state
    564:566:void <init>(long) -> <init>
    569:570:double nextDouble() -> nextDouble
com.google.common.hash.Hashing$Md5Holder -> com.google.common.hash.Hashing$Md5Holder:
    com.google.common.hash.HashFunction MD5 -> MD5
    190:190:void <init>() -> <init>
    191:191:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Murmur3_128Holder -> com.google.common.hash.Hashing$Murmur3_128Holder:
    com.google.common.hash.HashFunction MURMUR3_128 -> MURMUR3_128
    com.google.common.hash.HashFunction GOOD_FAST_HASH_FUNCTION_128 -> GOOD_FAST_HASH_FUNCTION_128
    148:148:void <init>() -> <init>
    149:152:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Murmur3_32Holder -> com.google.common.hash.Hashing$Murmur3_32Holder:
    com.google.common.hash.HashFunction MURMUR3_32 -> MURMUR3_32
    com.google.common.hash.HashFunction GOOD_FAST_HASH_FUNCTION_32 -> GOOD_FAST_HASH_FUNCTION_32
    117:117:void <init>() -> <init>
    118:121:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Sha1Holder -> com.google.common.hash.Hashing$Sha1Holder:
    com.google.common.hash.HashFunction SHA_1 -> SHA_1
    202:202:void <init>() -> <init>
    203:203:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Sha256Holder -> com.google.common.hash.Hashing$Sha256Holder:
    com.google.common.hash.HashFunction SHA_256 -> SHA_256
    214:214:void <init>() -> <init>
    215:215:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Sha384Holder -> com.google.common.hash.Hashing$Sha384Holder:
    com.google.common.hash.HashFunction SHA_384 -> SHA_384
    229:229:void <init>() -> <init>
    230:230:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$Sha512Holder -> com.google.common.hash.Hashing$Sha512Holder:
    com.google.common.hash.HashFunction SHA_512 -> SHA_512
    242:242:void <init>() -> <init>
    243:243:void <clinit>() -> <clinit>
com.google.common.hash.Hashing$SipHash24Holder -> com.google.common.hash.Hashing$SipHash24Holder:
    com.google.common.hash.HashFunction SIP_HASH_24 -> SIP_HASH_24
    166:166:void <init>() -> <init>
    167:167:void <clinit>() -> <clinit>
com.google.common.hash.HashingInputStream -> com.google.common.hash.HashingInputStream:
    com.google.common.hash.Hasher hasher -> hasher
    44:46:void <init>(com.google.common.hash.HashFunction,java.io.InputStream) -> <init>
    54:58:int read() -> read
    67:71:int read(byte[],int,int) -> read
    81:81:boolean markSupported() -> markSupported
    88:88:void mark(int) -> mark
    96:96:void reset() -> reset
    105:105:com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.HashingOutputStream -> com.google.common.hash.HashingOutputStream:
    com.google.common.hash.Hasher hasher -> hasher
    48:50:void <init>(com.google.common.hash.HashFunction,java.io.OutputStream) -> <init>
    54:56:void write(int) -> write
    60:62:void write(byte[],int,int) -> write
    70:70:com.google.common.hash.HashCode hash() -> hash
    78:79:void close() -> close
com.google.common.hash.MessageDigestHashFunction -> com.google.common.hash.MessageDigestHashFunction:
    java.security.MessageDigest prototype -> prototype
    int bytes -> bytes
    boolean supportsClone -> supportsClone
    java.lang.String toString -> toString
    39:44:void <init>(java.lang.String,java.lang.String) -> <init>
    46:54:void <init>(java.lang.String,int,java.lang.String) -> <init>
    58:61:boolean supportsClone() -> supportsClone
    67:67:int bits() -> bits
    72:72:java.lang.String toString() -> toString
    77:79:java.security.MessageDigest getMessageDigest(java.lang.String) -> getMessageDigest
    85:92:com.google.common.hash.Hasher newHasher() -> newHasher
    114:114:java.lang.Object writeReplace() -> writeReplace
com.google.common.hash.MessageDigestHashFunction$1 -> com.google.common.hash.MessageDigestHashFunction$1:
com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher -> com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher:
    java.security.MessageDigest digest -> digest
    int bytes -> bytes
    boolean done -> done
    125:128:void <init>(java.security.MessageDigest,int) -> <init>
    132:134:void update(byte) -> update
    138:140:void update(byte[]) -> update
    144:146:void update(byte[],int,int) -> update
    149:150:void checkNotDone() -> checkNotDone
    154:156:com.google.common.hash.HashCode hash() -> hash
    120:120:void <init>(java.security.MessageDigest,int,com.google.common.hash.MessageDigestHashFunction$1) -> <init>
com.google.common.hash.MessageDigestHashFunction$SerializedForm -> com.google.common.hash.MessageDigestHashFunction$SerializedForm:
    java.lang.String algorithmName -> algorithmName
    int bytes -> bytes
    java.lang.String toString -> toString
    long serialVersionUID -> serialVersionUID
    100:104:void <init>(java.lang.String,int,java.lang.String) -> <init>
    107:107:java.lang.Object readResolve() -> readResolve
    95:95:void <init>(java.lang.String,int,java.lang.String,com.google.common.hash.MessageDigestHashFunction$1) -> <init>
com.google.common.hash.Murmur3_128HashFunction -> com.google.common.hash.Murmur3_128HashFunction:
    int seed -> seed
    long serialVersionUID -> serialVersionUID
    47:49:void <init>(int) -> <init>
    53:53:int bits() -> bits
    58:58:com.google.common.hash.Hasher newHasher() -> newHasher
    63:63:java.lang.String toString() -> toString
    68:72:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher -> com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher:
    int CHUNK_SIZE -> CHUNK_SIZE
    long C1 -> C1
    long C2 -> C2
    long h1 -> h1
    long h2 -> h2
    int length -> length
    89:93:void <init>(int) -> <init>
    97:101:void process(java.nio.ByteBuffer) -> process
    104:115:void bmix64(long,long) -> bmix64
    119:160:void processRemaining(java.nio.ByteBuffer) -> processRemaining
    164:176:com.google.common.hash.HashCode makeHash() -> makeHash
    185:190:long fmix64(long) -> fmix64
    194:197:long mixK1(long) -> mixK1
    201:204:long mixK2(long) -> mixK2
com.google.common.hash.Murmur3_32HashFunction -> com.google.common.hash.Murmur3_32HashFunction:
    int C1 -> C1
    int C2 -> C2
    int seed -> seed
    long serialVersionUID -> serialVersionUID
    53:55:void <init>(int) -> <init>
    59:59:int bits() -> bits
    64:64:com.google.common.hash.Hasher newHasher() -> newHasher
    69:69:java.lang.String toString() -> toString
    74:78:boolean equals(java.lang.Object) -> equals
    83:83:int hashCode() -> hashCode
    88:91:com.google.common.hash.HashCode hashInt(int) -> hashInt
    96:105:com.google.common.hash.HashCode hashLong(long) -> hashLong
    111:127:com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence) -> hashUnencodedChars
    131:134:int mixK1(int) -> mixK1
    138:141:int mixH1(int,int) -> mixH1
    146:152:com.google.common.hash.HashCode fmix(int,int) -> fmix
    47:47:int access$000(int) -> access$000
    47:47:int access$100(int,int) -> access$100
    47:47:com.google.common.hash.HashCode access$200(int,int) -> access$200
com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher -> com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher:
    int CHUNK_SIZE -> CHUNK_SIZE
    int h1 -> h1
    int length -> length
    161:164:void <init>(int) -> <init>
    168:171:void process(java.nio.ByteBuffer) -> process
    175:181:void processRemaining(java.nio.ByteBuffer) -> processRemaining
    185:185:com.google.common.hash.HashCode makeHash() -> makeHash
com.google.common.hash.PrimitiveSink -> com.google.common.hash.PrimitiveSink:
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
com.google.common.hash.SipHashFunction -> com.google.common.hash.SipHashFunction:
    int c -> c
    int d -> d
    long k0 -> k0
    long k1 -> k1
    long serialVersionUID -> serialVersionUID
    52:61:void <init>(int,int,long,long) -> <init>
    65:65:int bits() -> bits
    70:70:com.google.common.hash.Hasher newHasher() -> newHasher
    77:77:java.lang.String toString() -> toString
    82:89:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
com.google.common.hash.SipHashFunction$SipHasher -> com.google.common.hash.SipHashFunction$SipHasher:
    int CHUNK_SIZE -> CHUNK_SIZE
    int c -> c
    int d -> d
    long v0 -> v0
    long v1 -> v1
    long v2 -> v2
    long v3 -> v3
    long b -> b
    long finalM -> finalM
    109:129:void <init>(int,int,long,long) -> <init>
    133:135:void process(java.nio.ByteBuffer) -> process
    139:143:void processRemaining(java.nio.ByteBuffer) -> processRemaining
    148:154:com.google.common.hash.HashCode makeHash() -> makeHash
    158:161:void processM(long) -> processM
    164:180:void sipRound(int) -> sipRound
com.google.common.hash.package-info -> com.google.common.hash.package-info:
com.google.common.html.HtmlEscapers -> com.google.common.html.HtmlEscapers:
    com.google.common.escape.Escaper HTML_ESCAPER -> HTML_ESCAPER
    62:62:com.google.common.escape.Escaper htmlEscaper() -> htmlEscaper
    78:78:void <init>() -> <init>
    68:68:void <clinit>() -> <clinit>
com.google.common.html.package-info -> com.google.common.html.package-info:
com.google.common.io.AppendableWriter -> com.google.common.io.AppendableWriter:
    java.lang.Appendable target -> target
    boolean closed -> closed
    46:48:void <init>(java.lang.Appendable) -> <init>
    56:60:void write(char[],int,int) -> write
    63:67:void flush() -> flush
    70:74:void close() -> close
    82:84:void write(int) -> write
    87:89:void write(java.lang.String) -> write
    92:95:void write(java.lang.String,int,int) -> write
    98:100:java.io.Writer append(char) -> append
    104:106:java.io.Writer append(java.lang.CharSequence) -> append
    111:113:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    117:120:void checkNotClosed() -> checkNotClosed
    37:37:java.lang.Appendable append(char) -> append
    37:37:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    37:37:java.lang.Appendable append(java.lang.CharSequence) -> append
com.google.common.io.BaseEncoding -> com.google.common.io.BaseEncoding:
    com.google.common.io.BaseEncoding BASE64 -> BASE64
    com.google.common.io.BaseEncoding BASE64_URL -> BASE64_URL
    com.google.common.io.BaseEncoding BASE32 -> BASE32
    com.google.common.io.BaseEncoding BASE32_HEX -> BASE32_HEX
    com.google.common.io.BaseEncoding BASE16 -> BASE16
    127:127:void <init>() -> <init>
    149:149:java.lang.String encode(byte[]) -> encode
    157:164:java.lang.String encode(byte[],int,int) -> encode
    java.io.OutputStream encodingStream(java.io.Writer) -> encodingStream
    180:181:com.google.common.io.ByteSink encodingSink(com.google.common.io.CharSink) -> encodingSink
    192:197:byte[] extract(byte[],int) -> extract
    210:212:byte[] decode(java.lang.CharSequence) -> decode
    224:227:byte[] decodeChecked(java.lang.CharSequence) -> decodeChecked
    java.io.InputStream decodingStream(java.io.Reader) -> decodingStream
    244:245:com.google.common.io.ByteSource decodingSource(com.google.common.io.CharSource) -> decodingSource
    int maxEncodedSize(int) -> maxEncodedSize
    void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
    int maxDecodedSize(int) -> maxDecodedSize
    int decodeTo(byte[],java.lang.CharSequence) -> decodeTo
    com.google.common.base.CharMatcher padding() -> padding
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    334:334:com.google.common.io.BaseEncoding base64() -> base64
    355:355:com.google.common.io.BaseEncoding base64Url() -> base64Url
    375:375:com.google.common.io.BaseEncoding base32() -> base32
    394:394:com.google.common.io.BaseEncoding base32Hex() -> base32Hex
    414:414:com.google.common.io.BaseEncoding base16() -> base16
    899:901:java.io.Reader ignoringReader(java.io.Reader,com.google.common.base.CharMatcher) -> ignoringReader
    925:928:java.lang.Appendable separatingAppendable(java.lang.Appendable,java.lang.String,int) -> separatingAppendable
    957:959:java.io.Writer separatingWriter(java.io.Writer,java.lang.String,int) -> separatingWriter
    317:397:void <clinit>() -> <clinit>
com.google.common.io.BaseEncoding$1 -> com.google.common.io.BaseEncoding$1:
    com.google.common.io.CharSink val$encodedSink -> val$encodedSink
    com.google.common.io.BaseEncoding this$0 -> this$0
    181:181:void <init>(com.google.common.io.BaseEncoding,com.google.common.io.CharSink) -> <init>
    184:184:java.io.OutputStream openStream() -> openStream
com.google.common.io.BaseEncoding$2 -> com.google.common.io.BaseEncoding$2:
    com.google.common.io.CharSource val$encodedSource -> val$encodedSource
    com.google.common.io.BaseEncoding this$0 -> this$0
    245:245:void <init>(com.google.common.io.BaseEncoding,com.google.common.io.CharSource) -> <init>
    248:248:java.io.InputStream openStream() -> openStream
com.google.common.io.BaseEncoding$3 -> com.google.common.io.BaseEncoding$3:
    java.io.Reader val$delegate -> val$delegate
    com.google.common.base.CharMatcher val$toIgnore -> val$toIgnore
    901:901:void <init>(java.io.Reader,com.google.common.base.CharMatcher) -> <init>
    906:908:int read() -> read
    913:913:int read(char[],int,int) -> read
    918:919:void close() -> close
com.google.common.io.BaseEncoding$4 -> com.google.common.io.BaseEncoding$4:
    int charsUntilSeparator -> charsUntilSeparator
    int val$afterEveryChars -> val$afterEveryChars
    java.lang.Appendable val$delegate -> val$delegate
    java.lang.String val$separator -> val$separator
    928:929:void <init>(int,java.lang.Appendable,java.lang.String) -> <init>
    933:939:java.lang.Appendable append(char) -> append
    944:944:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    949:949:java.lang.Appendable append(java.lang.CharSequence) -> append
com.google.common.io.BaseEncoding$5 -> com.google.common.io.BaseEncoding$5:
    java.lang.Appendable val$seperatingAppendable -> val$seperatingAppendable
    java.io.Writer val$delegate -> val$delegate
    959:959:void <init>(java.lang.Appendable,java.io.Writer) -> <init>
    962:963:void write(int) -> write
    967:967:void write(char[],int,int) -> write
    972:973:void flush() -> flush
    977:978:void close() -> close
com.google.common.io.BaseEncoding$Alphabet -> com.google.common.io.BaseEncoding$Alphabet:
    java.lang.String name -> name
    char[] chars -> chars
    int mask -> mask
    int bitsPerChar -> bitsPerChar
    int charsPerChunk -> charsPerChunk
    int bytesPerChunk -> bytesPerChunk
    byte[] decodabet -> decodabet
    boolean[] validPadding -> validPadding
    428:462:void <init>(java.lang.String,char[]) -> <init>
    465:465:char encode(int) -> encode
    469:469:boolean isValidPaddingStartPosition(int) -> isValidPaddingStartPosition
    473:477:int decode(char) -> decode
    481:486:boolean hasLowerCase() -> hasLowerCase
    490:495:boolean hasUpperCase() -> hasUpperCase
    499:507:com.google.common.io.BaseEncoding$Alphabet upperCase() -> upperCase
    512:520:com.google.common.io.BaseEncoding$Alphabet lowerCase() -> lowerCase
    526:526:boolean matches(char) -> matches
    531:531:java.lang.String toString() -> toString
    417:417:char[] access$000(com.google.common.io.BaseEncoding$Alphabet) -> access$000
com.google.common.io.BaseEncoding$Base16Encoding -> com.google.common.io.BaseEncoding$Base16Encoding:
    char[] encoding -> encoding
    797:798:void <init>(java.lang.String,java.lang.String) -> <init>
    794:807:void <init>(com.google.common.io.BaseEncoding$Alphabet) -> <init>
    811:818:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
    822:831:int decodeTo(byte[],java.lang.CharSequence) -> decodeTo
    836:836:com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> newInstance
com.google.common.io.BaseEncoding$Base64Encoding -> com.google.common.io.BaseEncoding$Base64Encoding:
    842:843:void <init>(java.lang.String,java.lang.String,java.lang.Character) -> <init>
    846:848:void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> <init>
    852:865:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
    869:888:int decodeTo(byte[],java.lang.CharSequence) -> decodeTo
    893:893:com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> newInstance
com.google.common.io.BaseEncoding$DecodingException -> com.google.common.io.BaseEncoding$DecodingException:
    137:138:void <init>(java.lang.String) -> <init>
    141:142:void <init>(java.lang.Throwable) -> <init>
com.google.common.io.BaseEncoding$SeparatedBaseEncoding -> com.google.common.io.BaseEncoding$SeparatedBaseEncoding:
    com.google.common.io.BaseEncoding delegate -> delegate
    java.lang.String separator -> separator
    int afterEveryChars -> afterEveryChars
    com.google.common.base.CharMatcher separatorChars -> separatorChars
    988:995:void <init>(com.google.common.io.BaseEncoding,java.lang.String,int) -> <init>
    999:999:com.google.common.base.CharMatcher padding() -> padding
    1004:1005:int maxEncodedSize(int) -> maxEncodedSize
    1012:1012:java.io.OutputStream encodingStream(java.io.Writer) -> encodingStream
    1017:1018:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
    1022:1022:int maxDecodedSize(int) -> maxDecodedSize
    1027:1027:int decodeTo(byte[],java.lang.CharSequence) -> decodeTo
    1033:1033:java.io.InputStream decodingStream(java.io.Reader) -> decodingStream
    1038:1038:com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    1043:1043:com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    1048:1048:com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    1053:1053:com.google.common.io.BaseEncoding upperCase() -> upperCase
    1058:1058:com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    1063:1063:java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$StandardBaseEncoding -> com.google.common.io.BaseEncoding$StandardBaseEncoding:
    com.google.common.io.BaseEncoding$Alphabet alphabet -> alphabet
    java.lang.Character paddingChar -> paddingChar
    com.google.common.io.BaseEncoding upperCase -> upperCase
    com.google.common.io.BaseEncoding lowerCase -> lowerCase
    543:544:void <init>(java.lang.String,java.lang.String,java.lang.Character) -> <init>
    546:551:void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> <init>
    555:555:com.google.common.base.CharMatcher padding() -> padding
    560:560:int maxEncodedSize(int) -> maxEncodedSize
    566:567:java.io.OutputStream encodingStream(java.io.Writer) -> encodingStream
    612:617:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
    621:643:void encodeChunkTo(java.lang.Appendable,byte[],int,int) -> encodeChunkTo
    647:647:int maxDecodedSize(int) -> maxDecodedSize
    652:672:int decodeTo(byte[],java.lang.CharSequence) -> decodeTo
    678:679:java.io.InputStream decodingStream(java.io.Reader) -> decodingStream
    729:729:com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    734:738:com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    744:746:com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    754:760:com.google.common.io.BaseEncoding upperCase() -> upperCase
    765:771:com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    775:775:com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> newInstance
    780:789:java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$StandardBaseEncoding$1 -> com.google.common.io.BaseEncoding$StandardBaseEncoding$1:
    int bitBuffer -> bitBuffer
    int bitBufferLength -> bitBufferLength
    int writtenChars -> writtenChars
    java.io.Writer val$out -> val$out
    com.google.common.io.BaseEncoding$StandardBaseEncoding this$0 -> this$0
    567:570:void <init>(com.google.common.io.BaseEncoding$StandardBaseEncoding,java.io.Writer) -> <init>
    574:584:void write(int) -> write
    588:589:void flush() -> flush
    593:606:void close() -> close
com.google.common.io.BaseEncoding$StandardBaseEncoding$2 -> com.google.common.io.BaseEncoding$StandardBaseEncoding$2:
    int bitBuffer -> bitBuffer
    int bitBufferLength -> bitBufferLength
    int readChars -> readChars
    boolean hitPadding -> hitPadding
    com.google.common.base.CharMatcher paddingMatcher -> paddingMatcher
    java.io.Reader val$reader -> val$reader
    com.google.common.io.BaseEncoding$StandardBaseEncoding this$0 -> this$0
    679:684:void <init>(com.google.common.io.BaseEncoding$StandardBaseEncoding,java.io.Reader) -> <init>
    689:717:int read() -> read
    722:723:void close() -> close
com.google.common.io.ByteArrayDataInput -> com.google.common.io.ByteArrayDataInput:
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteArrayDataOutput -> com.google.common.io.ByteArrayDataOutput:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeShort(int) -> writeShort
    void writeChar(int) -> writeChar
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeFloat(float) -> writeFloat
    void writeDouble(double) -> writeDouble
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void writeBytes(java.lang.String) -> writeBytes
    byte[] toByteArray() -> toByteArray
com.google.common.io.ByteProcessor -> com.google.common.io.ByteProcessor:
    boolean processBytes(byte[],int,int) -> processBytes
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteSink -> com.google.common.io.ByteSink:
    52:52:void <init>() -> <init>
    59:59:com.google.common.io.CharSink asCharSink(java.nio.charset.Charset) -> asCharSink
    java.io.OutputStream openStream() -> openStream
    85:86:java.io.OutputStream openBufferedStream() -> openBufferedStream
    97:109:void write(byte[]) -> write
    119:130:long writeFrom(java.io.InputStream) -> writeFrom
com.google.common.io.ByteSink$1 -> com.google.common.io.ByteSink$1:
com.google.common.io.ByteSink$AsCharSink -> com.google.common.io.ByteSink$AsCharSink:
    java.nio.charset.Charset charset -> charset
    com.google.common.io.ByteSink this$0 -> this$0
    142:144:void <init>(com.google.common.io.ByteSink,java.nio.charset.Charset) -> <init>
    148:148:java.io.Writer openStream() -> openStream
    153:153:java.lang.String toString() -> toString
    138:138:void <init>(com.google.common.io.ByteSink,java.nio.charset.Charset,com.google.common.io.ByteSink$1) -> <init>
com.google.common.io.ByteSource -> com.google.common.io.ByteSource:
    67:67:void <init>() -> <init>
    74:74:com.google.common.io.CharSource asCharSource(java.nio.charset.Charset) -> asCharSource
    java.io.InputStream openStream() -> openStream
    100:101:java.io.InputStream openBufferedStream() -> openBufferedStream
    116:116:com.google.common.io.ByteSource slice(long,long) -> slice
    133:144:boolean isEmpty() -> isEmpty
    164:164:com.google.common.base.Optional sizeIfKnown() -> sizeIfKnown
    187:209:long size() -> size
    218:223:long countBySkipping(java.io.InputStream) -> countBySkipping
    227:232:long countByReading(java.io.InputStream) -> countByReading
    243:252:long copyTo(java.io.OutputStream) -> copyTo
    263:273:long copyTo(com.google.common.io.ByteSink) -> copyTo
    283:290:byte[] read() -> read
    305:314:java.lang.Object read(com.google.common.io.ByteProcessor) -> read
    324:326:com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) -> hash
    337:358:boolean contentEquals(com.google.common.io.ByteSource) -> contentEquals
    374:374:com.google.common.io.ByteSource concat(java.lang.Iterable) -> concat
    396:396:com.google.common.io.ByteSource concat(java.util.Iterator) -> concat
    412:412:com.google.common.io.ByteSource concat(com.google.common.io.ByteSource[]) -> concat
    422:422:com.google.common.io.ByteSource wrap(byte[]) -> wrap
    431:431:com.google.common.io.ByteSource empty() -> empty
com.google.common.io.ByteSource$1 -> com.google.common.io.ByteSource$1:
com.google.common.io.ByteSource$AsCharSource -> com.google.common.io.ByteSource$AsCharSource:
    java.nio.charset.Charset charset -> charset
    com.google.common.io.ByteSource this$0 -> this$0
    442:444:void <init>(com.google.common.io.ByteSource,java.nio.charset.Charset) -> <init>
    448:448:java.io.Reader openStream() -> openStream
    453:453:java.lang.String toString() -> toString
    438:438:void <init>(com.google.common.io.ByteSource,java.nio.charset.Charset,com.google.common.io.ByteSource$1) -> <init>
com.google.common.io.ByteSource$ByteArrayByteSource -> com.google.common.io.ByteSource$ByteArrayByteSource:
    byte[] bytes -> bytes
    int offset -> offset
    int length -> length
    543:544:void <init>(byte[]) -> <init>
    547:551:void <init>(byte[],int,int) -> <init>
    555:555:java.io.InputStream openStream() -> openStream
    560:560:java.io.InputStream openBufferedStream() -> openBufferedStream
    565:565:boolean isEmpty() -> isEmpty
    570:570:long size() -> size
    575:575:com.google.common.base.Optional sizeIfKnown() -> sizeIfKnown
    580:580:byte[] read() -> read
    585:586:long copyTo(java.io.OutputStream) -> copyTo
    591:592:java.lang.Object read(com.google.common.io.ByteProcessor) -> read
    597:597:com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) -> hash
    602:608:com.google.common.io.ByteSource slice(long,long) -> slice
    613:613:java.lang.String toString() -> toString
com.google.common.io.ByteSource$ConcatenatedByteSource -> com.google.common.io.ByteSource$ConcatenatedByteSource:
    java.lang.Iterable sources -> sources
    647:649:void <init>(java.lang.Iterable) -> <init>
    653:653:java.io.InputStream openStream() -> openStream
    658:663:boolean isEmpty() -> isEmpty
    668:676:com.google.common.base.Optional sizeIfKnown() -> sizeIfKnown
    681:685:long size() -> size
    690:690:java.lang.String toString() -> toString
com.google.common.io.ByteSource$EmptyByteSource -> com.google.common.io.ByteSource$EmptyByteSource:
    com.google.common.io.ByteSource$EmptyByteSource INSTANCE -> INSTANCE
    623:624:void <init>() -> <init>
    628:629:com.google.common.io.CharSource asCharSource(java.nio.charset.Charset) -> asCharSource
    634:634:byte[] read() -> read
    639:639:java.lang.String toString() -> toString
    620:620:void <clinit>() -> <clinit>
com.google.common.io.ByteSource$SlicedByteSource -> com.google.common.io.ByteSource$SlicedByteSource:
    long offset -> offset
    long length -> length
    com.google.common.io.ByteSource this$0 -> this$0
    465:470:void <init>(com.google.common.io.ByteSource,long,long) -> <init>
    474:474:java.io.InputStream openStream() -> openStream
    479:479:java.io.InputStream openBufferedStream() -> openBufferedStream
    483:503:java.io.InputStream sliceStream(java.io.InputStream) -> sliceStream
    508:511:com.google.common.io.ByteSource slice(long,long) -> slice
    516:516:boolean isEmpty() -> isEmpty
    521:527:com.google.common.base.Optional sizeIfKnown() -> sizeIfKnown
    532:532:java.lang.String toString() -> toString
com.google.common.io.ByteStreams -> com.google.common.io.ByteStreams:
    int BUF_SIZE -> BUF_SIZE
    byte[] skipBuffer -> skipBuffer
    int ZERO_COPY_CHUNK_SIZE -> ZERO_COPY_CHUNK_SIZE
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    92:92:void <init>() -> <init>
    105:117:long copy(java.io.InputStream,java.io.OutputStream) -> copy
    131:155:long copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel) -> copy
    167:169:byte[] toByteArray(java.io.InputStream) -> toByteArray
    180:208:byte[] toByteArray(java.io.InputStream,int) -> toByteArray
    230:230:com.google.common.io.ByteArrayDataInput newDataInput(byte[]) -> newDataInput
    241:242:com.google.common.io.ByteArrayDataInput newDataInput(byte[],int) -> newDataInput
    255:255:com.google.common.io.ByteArrayDataInput newDataInput(java.io.ByteArrayInputStream) -> newDataInput
    392:392:com.google.common.io.ByteArrayDataOutput newDataOutput() -> newDataOutput
    404:407:com.google.common.io.ByteArrayDataOutput newDataOutput(int) -> newDataOutput
    426:426:com.google.common.io.ByteArrayDataOutput newDataOutput(java.io.ByteArrayOutputStream) -> newDataOutput
    584:584:java.io.OutputStream nullOutputStream() -> nullOutputStream
    597:597:java.io.InputStream limit(java.io.InputStream,long) -> limit
    679:680:void readFully(java.io.InputStream,byte[]) -> readFully
    698:703:void readFully(java.io.InputStream,byte[],int,int) -> readFully
    718:723:void skipFully(java.io.InputStream,long) -> skipFully
    732:752:long skipUpTo(java.io.InputStream,long) -> skipUpTo
    763:764:long skipSafely(java.io.InputStream,long) -> skipSafely
    778:786:java.lang.Object readBytes(java.io.InputStream,com.google.common.io.ByteProcessor) -> readBytes
    815:828:int read(java.io.InputStream,byte[],int,int) -> read
    61:558:void <clinit>() -> <clinit>
com.google.common.io.ByteStreams$1 -> com.google.common.io.ByteStreams$1:
    559:559:void <init>() -> <init>
    562:562:void write(int) -> write
    565:566:void write(byte[]) -> write
    569:570:void write(byte[],int,int) -> write
    574:574:java.lang.String toString() -> toString
com.google.common.io.ByteStreams$ByteArrayDataInputStream -> com.google.common.io.ByteStreams$ByteArrayDataInputStream:
    java.io.DataInput input -> input
    261:263:void <init>(java.io.ByteArrayInputStream) -> <init>
    267:271:void readFully(byte[]) -> readFully
    275:279:void readFully(byte[],int,int) -> readFully
    283:285:int skipBytes(int) -> skipBytes
    291:293:boolean readBoolean() -> readBoolean
    299:303:byte readByte() -> readByte
    309:311:int readUnsignedByte() -> readUnsignedByte
    317:319:short readShort() -> readShort
    325:327:int readUnsignedShort() -> readUnsignedShort
    333:335:char readChar() -> readChar
    341:343:int readInt() -> readInt
    349:351:long readLong() -> readLong
    357:359:float readFloat() -> readFloat
    365:367:double readDouble() -> readDouble
    373:375:java.lang.String readLine() -> readLine
    381:383:java.lang.String readUTF() -> readUTF
com.google.common.io.ByteStreams$ByteArrayDataOutputStream -> com.google.common.io.ByteStreams$ByteArrayDataOutputStream:
    java.io.DataOutput output -> output
    java.io.ByteArrayOutputStream byteArrayOutputSteam -> byteArrayOutputSteam
    436:439:void <init>(java.io.ByteArrayOutputStream) -> <init>
    443:447:void write(int) -> write
    451:455:void write(byte[]) -> write
    459:463:void write(byte[],int,int) -> write
    467:471:void writeBoolean(boolean) -> writeBoolean
    475:479:void writeByte(int) -> writeByte
    483:487:void writeBytes(java.lang.String) -> writeBytes
    491:495:void writeChar(int) -> writeChar
    499:503:void writeChars(java.lang.String) -> writeChars
    507:511:void writeDouble(double) -> writeDouble
    515:519:void writeFloat(float) -> writeFloat
    523:527:void writeInt(int) -> writeInt
    531:535:void writeLong(long) -> writeLong
    539:543:void writeShort(int) -> writeShort
    547:551:void writeUTF(java.lang.String) -> writeUTF
    554:554:byte[] toByteArray() -> toByteArray
com.google.common.io.ByteStreams$FastByteArrayOutputStream -> com.google.common.io.ByteStreams$FastByteArrayOutputStream:
    214:214:void <init>() -> <init>
    221:222:void writeTo(byte[],int) -> writeTo
    214:214:void <init>(com.google.common.io.ByteStreams$1) -> <init>
com.google.common.io.ByteStreams$LimitedInputStream -> com.google.common.io.ByteStreams$LimitedInputStream:
    long left -> left
    long mark -> mark
    603:610:void <init>(java.io.InputStream,long) -> <init>
    613:613:int available() -> available
    618:620:void mark(int) -> mark
    623:631:int read() -> read
    635:644:int read(byte[],int,int) -> read
    648:657:void reset() -> reset
    660:663:long skip(long) -> skip
com.google.common.io.CharSequenceReader -> com.google.common.io.CharSequenceReader:
    java.lang.CharSequence seq -> seq
    int pos -> pos
    int mark -> mark
    43:45:void <init>(java.lang.CharSequence) -> <init>
    48:51:void checkOpen() -> checkOpen
    54:54:boolean hasRemaining() -> hasRemaining
    58:58:int remaining() -> remaining
    63:72:int read(java.nio.CharBuffer) -> read
    77:78:int read() -> read
    83:92:int read(char[],int,int) -> read
    97:101:long skip(long) -> skip
    106:107:boolean ready() -> ready
    112:112:boolean markSupported() -> markSupported
    117:120:void mark(int) -> mark
    124:126:void reset() -> reset
    130:131:void close() -> close
com.google.common.io.CharSink -> com.google.common.io.CharSink:
    54:54:void <init>() -> <init>
    java.io.Writer openStream() -> openStream
    79:80:java.io.Writer openBufferedStream() -> openBufferedStream
    91:103:void write(java.lang.CharSequence) -> write
    113:114:void writeLines(java.lang.Iterable) -> writeLines
    124:139:void writeLines(java.lang.Iterable,java.lang.String) -> writeLines
    149:160:long writeFrom(java.lang.Readable) -> writeFrom
com.google.common.io.CharSource -> com.google.common.io.CharSource:
    71:71:void <init>() -> <init>
    java.io.Reader openStream() -> openStream
    92:93:java.io.BufferedReader openBufferedStream() -> openBufferedStream
    114:114:com.google.common.base.Optional lengthIfKnown() -> lengthIfKnown
    138:150:long length() -> length
    155:160:long countBySkipping(java.io.Reader) -> countBySkipping
    171:180:long copyTo(java.lang.Appendable) -> copyTo
    191:201:long copyTo(com.google.common.io.CharSink) -> copyTo
    211:218:java.lang.String read() -> read
    232:239:java.lang.String readFirstLine() -> readFirstLine
    254:266:com.google.common.collect.ImmutableList readLines() -> readLines
    286:295:java.lang.Object readLines(com.google.common.io.LineProcessor) -> readLines
    312:323:boolean isEmpty() -> isEmpty
    339:339:com.google.common.io.CharSource concat(java.lang.Iterable) -> concat
    361:361:com.google.common.io.CharSource concat(java.util.Iterator) -> concat
    377:377:com.google.common.io.CharSource concat(com.google.common.io.CharSource[]) -> concat
    388:388:com.google.common.io.CharSource wrap(java.lang.CharSequence) -> wrap
    397:397:com.google.common.io.CharSource empty() -> empty
com.google.common.io.CharSource$CharSequenceCharSource -> com.google.common.io.CharSource$CharSequenceCharSource:
    com.google.common.base.Splitter LINE_SPLITTER -> LINE_SPLITTER
    java.lang.CharSequence seq -> seq
    407:409:void <init>(java.lang.CharSequence) -> <init>
    413:413:java.io.Reader openStream() -> openStream
    418:418:java.lang.String read() -> read
    423:423:boolean isEmpty() -> isEmpty
    428:428:long length() -> length
    433:433:com.google.common.base.Optional lengthIfKnown() -> lengthIfKnown
    442:442:java.lang.Iterable lines() -> lines
    466:467:java.lang.String readFirstLine() -> readFirstLine
    472:472:com.google.common.collect.ImmutableList readLines() -> readLines
    477:482:java.lang.Object readLines(com.google.common.io.LineProcessor) -> readLines
    487:487:java.lang.String toString() -> toString
    400:400:java.lang.CharSequence access$100(com.google.common.io.CharSource$CharSequenceCharSource) -> access$100
    400:400:com.google.common.base.Splitter access$200() -> access$200
    402:402:void <clinit>() -> <clinit>
com.google.common.io.CharSource$CharSequenceCharSource$1 -> com.google.common.io.CharSource$CharSequenceCharSource$1:
    com.google.common.io.CharSource$CharSequenceCharSource this$0 -> this$0
    442:442:void <init>(com.google.common.io.CharSource$CharSequenceCharSource) -> <init>
    445:445:java.util.Iterator iterator() -> iterator
com.google.common.io.CharSource$CharSequenceCharSource$1$1 -> com.google.common.io.CharSource$CharSequenceCharSource$1$1:
    java.util.Iterator lines -> lines
    com.google.common.io.CharSource$CharSequenceCharSource$1 this$1 -> this$1
    445:446:void <init>(com.google.common.io.CharSource$CharSequenceCharSource$1) -> <init>
    450:457:java.lang.String computeNext() -> computeNext
    445:445:java.lang.Object computeNext() -> computeNext
com.google.common.io.CharSource$ConcatenatedCharSource -> com.google.common.io.CharSource$ConcatenatedCharSource:
    java.lang.Iterable sources -> sources
    509:511:void <init>(java.lang.Iterable) -> <init>
    515:515:java.io.Reader openStream() -> openStream
    520:525:boolean isEmpty() -> isEmpty
    530:538:com.google.common.base.Optional lengthIfKnown() -> lengthIfKnown
    543:547:long length() -> length
    552:552:java.lang.String toString() -> toString
com.google.common.io.CharSource$EmptyCharSource -> com.google.common.io.CharSource$EmptyCharSource:
    com.google.common.io.CharSource$EmptyCharSource INSTANCE -> INSTANCE
    496:497:void <init>() -> <init>
    501:501:java.lang.String toString() -> toString
    491:491:com.google.common.io.CharSource$EmptyCharSource access$000() -> access$000
    493:493:void <clinit>() -> <clinit>
com.google.common.io.CharStreams -> com.google.common.io.CharStreams:
    int BUF_SIZE -> BUF_SIZE
    52:52:void <init>() -> <init>
    64:74:long copy(java.lang.Readable,java.lang.Appendable) -> copy
    86:86:java.lang.String toString(java.lang.Readable) -> toString
    98:100:java.lang.StringBuilder toStringBuilder(java.lang.Readable) -> toStringBuilder
    117:123:java.util.List readLines(java.lang.Readable) -> readLines
    138:148:java.lang.Object readLines(java.lang.Readable,com.google.common.io.LineProcessor) -> readLines
    163:171:void skipFully(java.io.Reader,long) -> skipFully
    179:179:java.io.Writer nullWriter() -> nullWriter
    252:255:java.io.Writer asWriter(java.lang.Appendable) -> asWriter
    261:265:java.io.Reader asReader(java.lang.Readable) -> asReader
com.google.common.io.CharStreams$1 -> com.google.common.io.CharStreams$1:
    java.lang.Readable val$readable -> val$readable
    265:265:void <init>(java.lang.Readable) -> <init>
    268:268:int read(char[],int,int) -> read
    273:273:int read(java.nio.CharBuffer) -> read
    278:281:void close() -> close
com.google.common.io.CharStreams$NullWriter -> com.google.common.io.CharStreams$NullWriter:
    com.google.common.io.CharStreams$NullWriter INSTANCE -> INSTANCE
    182:182:void <init>() -> <init>
    188:188:void write(int) -> write
    192:193:void write(char[]) -> write
    197:198:void write(char[],int,int) -> write
    202:203:void write(java.lang.String) -> write
    207:208:void write(java.lang.String,int,int) -> write
    212:213:java.io.Writer append(java.lang.CharSequence) -> append
    218:219:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    224:224:java.io.Writer append(char) -> append
    229:229:void flush() -> flush
    233:233:void close() -> close
    237:237:java.lang.String toString() -> toString
    182:182:java.lang.Appendable append(char) -> append
    182:182:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    182:182:java.lang.Appendable append(java.lang.CharSequence) -> append
    182:182:com.google.common.io.CharStreams$NullWriter access$000() -> access$000
    184:184:void <clinit>() -> <clinit>
com.google.common.io.Closeables -> com.google.common.io.Closeables:
    java.util.logging.Logger logger -> logger
    42:42:void <init>() -> <init>
    75:88:void close(java.io.Closeable,boolean) -> close
    106:110:void closeQuietly(java.io.InputStream) -> closeQuietly
    127:131:void closeQuietly(java.io.Reader) -> closeQuietly
    39:39:void <clinit>() -> <clinit>
com.google.common.io.Closer -> com.google.common.io.Closer:
    com.google.common.io.Closer$Suppressor SUPPRESSOR -> SUPPRESSOR
    com.google.common.io.Closer$Suppressor suppressor -> suppressor
    java.util.Deque stack -> stack
    java.lang.Throwable thrown -> thrown
    104:104:com.google.common.io.Closer create() -> create
    110:115:void <init>(com.google.common.io.Closer$Suppressor) -> <init>
    125:129:java.io.Closeable register(java.io.Closeable) -> register
    146:149:java.lang.RuntimeException rethrow(java.lang.Throwable) -> rethrow
    168:172:java.lang.RuntimeException rethrow(java.lang.Throwable,java.lang.Class) -> rethrow
    192:196:java.lang.RuntimeException rethrow(java.lang.Throwable,java.lang.Class,java.lang.Class) -> rethrow
    208:228:void close() -> close
    96:96:void <clinit>() -> <clinit>
com.google.common.io.Closer$LoggingSuppressor -> com.google.common.io.Closer$LoggingSuppressor:
    com.google.common.io.Closer$LoggingSuppressor INSTANCE -> INSTANCE
    245:245:void <init>() -> <init>
    252:254:void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> suppress
    247:247:void <clinit>() -> <clinit>
com.google.common.io.Closer$SuppressingSuppressor -> com.google.common.io.Closer$SuppressingSuppressor:
    com.google.common.io.Closer$SuppressingSuppressor INSTANCE -> INSTANCE
    java.lang.reflect.Method addSuppressed -> addSuppressed
    261:261:void <init>() -> <init>
    266:266:boolean isAvailable() -> isAvailable
    273:275:java.lang.reflect.Method getAddSuppressed() -> getAddSuppressed
    282:291:void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> suppress
    263:269:void <clinit>() -> <clinit>
com.google.common.io.Closer$Suppressor -> com.google.common.io.Closer$Suppressor:
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> suppress
com.google.common.io.CountingInputStream -> com.google.common.io.CountingInputStream:
    long count -> count
    long mark -> mark
    37:46:void <init>(java.io.InputStream) -> <init>
    50:50:long getCount() -> getCount
    54:58:int read() -> read
    62:66:int read(byte[],int,int) -> read
    70:72:long skip(long) -> skip
    76:79:void mark(int) -> mark
    82:91:void reset() -> reset
com.google.common.io.CountingOutputStream -> com.google.common.io.CountingOutputStream:
    long count -> count
    44:45:void <init>(java.io.OutputStream) -> <init>
    49:49:long getCount() -> getCount
    53:55:void write(byte[],int,int) -> write
    58:60:void write(int) -> write
    66:67:void close() -> close
com.google.common.io.FileBackedOutputStream -> com.google.common.io.FileBackedOutputStream:
    int fileThreshold -> fileThreshold
    boolean resetOnFinalize -> resetOnFinalize
    com.google.common.io.ByteSource source -> source
    java.io.OutputStream out -> out
    com.google.common.io.FileBackedOutputStream$MemoryOutput memory -> memory
    java.io.File file -> file
    64:64:java.io.File getFile() -> getFile
    76:77:void <init>(int) -> <init>
    90:119:void <init>(int,boolean) -> <init>
    128:128:com.google.common.io.ByteSource asByteSource() -> asByteSource
    132:135:java.io.InputStream openInputStream() -> openInputStream
    149:165:void reset() -> reset
    168:170:void write(int) -> write
    173:174:void write(byte[]) -> write
    178:180:void write(byte[],int,int) -> write
    183:184:void close() -> close
    187:188:void flush() -> flush
    195:211:void update(int) -> update
    41:41:java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream) -> access$100
com.google.common.io.FileBackedOutputStream$1 -> com.google.common.io.FileBackedOutputStream$1:
    com.google.common.io.FileBackedOutputStream this$0 -> this$0
    97:97:void <init>(com.google.common.io.FileBackedOutputStream) -> <init>
    100:100:java.io.InputStream openStream() -> openStream
    105:109:void finalize() -> finalize
com.google.common.io.FileBackedOutputStream$2 -> com.google.common.io.FileBackedOutputStream$2:
    com.google.common.io.FileBackedOutputStream this$0 -> this$0
    112:112:void <init>(com.google.common.io.FileBackedOutputStream) -> <init>
    115:115:java.io.InputStream openStream() -> openStream
com.google.common.io.FileBackedOutputStream$MemoryOutput -> com.google.common.io.FileBackedOutputStream$MemoryOutput:
    52:52:void <init>() -> <init>
    54:54:byte[] getBuffer() -> getBuffer
    58:58:int getCount() -> getCount
    52:52:void <init>(com.google.common.io.FileBackedOutputStream$1) -> <init>
com.google.common.io.FileWriteMode -> com.google.common.io.FileWriteMode:
    com.google.common.io.FileWriteMode APPEND -> APPEND
    com.google.common.io.FileWriteMode[] $VALUES -> $VALUES
    25:25:com.google.common.io.FileWriteMode[] values() -> values
    25:25:com.google.common.io.FileWriteMode valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:27:void <clinit>() -> <clinit>
com.google.common.io.Files -> com.google.common.io.Files:
    int TEMP_DIR_ATTEMPTS -> TEMP_DIR_ATTEMPTS
    com.google.common.collect.TreeTraverser FILE_TREE_TRAVERSER -> FILE_TREE_TRAVERSER
    71:71:void <init>() -> <init>
    84:86:java.io.BufferedReader newReader(java.io.File,java.nio.charset.Charset) -> newReader
    101:103:java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset) -> newWriter
    113:113:com.google.common.io.ByteSource asByteSource(java.io.File) -> asByteSource
    173:180:byte[] readFile(java.io.InputStream,long) -> readFile
    195:195:com.google.common.io.ByteSink asByteSink(java.io.File,com.google.common.io.FileWriteMode[]) -> asByteSink
    226:226:com.google.common.io.CharSource asCharSource(java.io.File,java.nio.charset.Charset) -> asCharSource
    241:241:com.google.common.io.CharSink asCharSink(java.io.File,java.nio.charset.Charset,com.google.common.io.FileWriteMode[]) -> asCharSink
    245:245:com.google.common.io.FileWriteMode[] modes(boolean) -> modes
    260:260:byte[] toByteArray(java.io.File) -> toByteArray
    274:274:java.lang.String toString(java.io.File,java.nio.charset.Charset) -> toString
    285:286:void write(byte[],java.io.File) -> write
    296:297:void copy(java.io.File,java.io.OutputStream) -> copy
    313:316:void copy(java.io.File,java.io.File) -> copy
    330:331:void write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> write
    345:346:void append(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> append
    361:362:void write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset,boolean) -> write
    376:377:void copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable) -> copy
    385:401:boolean equal(java.io.File,java.io.File) -> equal
    424:433:java.io.File createTempDir() -> createTempDir
    446:451:void touch(java.io.File) -> touch
    464:480:void createParentDirs(java.io.File) -> createParentDirs
    494:508:void move(java.io.File,java.io.File) -> move
    523:523:java.lang.String readFirstLine(java.io.File,java.nio.charset.Charset) -> readFirstLine
    545:545:java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    574:574:java.lang.Object readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    590:590:java.lang.Object readBytes(java.io.File,com.google.common.io.ByteProcessor) -> readBytes
    604:604:com.google.common.hash.HashCode hash(java.io.File,com.google.common.hash.HashFunction) -> hash
    624:625:java.nio.MappedByteBuffer map(java.io.File) -> map
    648:653:java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode) -> map
    679:690:java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode,long) -> map
    696:703:java.nio.MappedByteBuffer map(java.io.RandomAccessFile,java.nio.channels.FileChannel$MapMode,long) -> map
    729:769:java.lang.String simplifyPath(java.lang.String) -> simplifyPath
    780:783:java.lang.String getFileExtension(java.lang.String) -> getFileExtension
    797:800:java.lang.String getNameWithoutExtension(java.lang.String) -> getNameWithoutExtension
    814:814:com.google.common.collect.TreeTraverser fileTreeTraverser() -> fileTreeTraverser
    843:843:com.google.common.base.Predicate isDirectory() -> isDirectory
    852:852:com.google.common.base.Predicate isFile() -> isFile
    817:817:void <clinit>() -> <clinit>
com.google.common.io.Files$1 -> com.google.common.io.Files$1:
    java.util.List result -> result
    545:546:void <init>() -> <init>
    550:551:boolean processLine(java.lang.String) -> processLine
    556:556:java.util.List getResult() -> getResult
    545:545:java.lang.Object getResult() -> getResult
com.google.common.io.Files$2 -> com.google.common.io.Files$2:
    817:817:void <init>() -> <init>
    821:828:java.lang.Iterable children(java.io.File) -> children
    833:833:java.lang.String toString() -> toString
    817:817:java.lang.Iterable children(java.lang.Object) -> children
com.google.common.io.Files$FileByteSink -> com.google.common.io.Files$FileByteSink:
    java.io.File file -> file
    com.google.common.collect.ImmutableSet modes -> modes
    203:206:void <init>(java.io.File,com.google.common.io.FileWriteMode[]) -> <init>
    210:210:java.io.FileOutputStream openStream() -> openStream
    215:215:java.lang.String toString() -> toString
    198:198:java.io.OutputStream openStream() -> openStream
    198:198:void <init>(java.io.File,com.google.common.io.FileWriteMode[],com.google.common.io.Files$1) -> <init>
com.google.common.io.Files$FileByteSource -> com.google.common.io.Files$FileByteSource:
    java.io.File file -> file
    120:122:void <init>(java.io.File) -> <init>
    126:126:java.io.FileInputStream openStream() -> openStream
    131:134:com.google.common.base.Optional sizeIfKnown() -> sizeIfKnown
    140:143:long size() -> size
    148:155:byte[] read() -> read
    161:161:java.lang.String toString() -> toString
    116:116:java.io.InputStream openStream() -> openStream
    116:116:void <init>(java.io.File,com.google.common.io.Files$1) -> <init>
com.google.common.io.Files$FilePredicate -> com.google.common.io.Files$FilePredicate:
    com.google.common.io.Files$FilePredicate IS_DIRECTORY -> IS_DIRECTORY
    com.google.common.io.Files$FilePredicate IS_FILE -> IS_FILE
    com.google.common.io.Files$FilePredicate[] $VALUES -> $VALUES
    855:855:com.google.common.io.Files$FilePredicate[] values() -> values
    855:855:com.google.common.io.Files$FilePredicate valueOf(java.lang.String) -> valueOf
    855:855:void <init>(java.lang.String,int) -> <init>
    855:855:void <init>(java.lang.String,int,com.google.common.io.Files$1) -> <init>
    855:868:void <clinit>() -> <clinit>
com.google.common.io.Files$FilePredicate$1 -> com.google.common.io.Files$FilePredicate$1:
    856:856:void <init>(java.lang.String,int) -> <init>
    859:859:boolean apply(java.io.File) -> apply
    864:864:java.lang.String toString() -> toString
    856:856:boolean apply(java.lang.Object) -> apply
com.google.common.io.Files$FilePredicate$2 -> com.google.common.io.Files$FilePredicate$2:
    868:868:void <init>(java.lang.String,int) -> <init>
    871:871:boolean apply(java.io.File) -> apply
    876:876:java.lang.String toString() -> toString
    868:868:boolean apply(java.lang.Object) -> apply
com.google.common.io.Flushables -> com.google.common.io.Flushables:
    java.util.logging.Logger logger -> logger
    37:37:void <init>() -> <init>
    56:65:void flush(java.io.Flushable,boolean) -> flush
    75:79:void flushQuietly(java.io.Flushable) -> flushQuietly
    34:34:void <clinit>() -> <clinit>
com.google.common.io.InputSupplier -> com.google.common.io.InputSupplier:
    java.lang.Object getInput() -> getInput
com.google.common.io.LineBuffer -> com.google.common.io.LineBuffer:
    java.lang.StringBuilder line -> line
    boolean sawReturn -> sawReturn
    33:35:void <init>() -> <init>
    51:84:void add(char[],int,int) -> add
    88:93:boolean finishLine(boolean) -> finishLine
    104:107:void finish() -> finish
    void handleLine(java.lang.String,java.lang.String) -> handleLine
com.google.common.io.LineProcessor -> com.google.common.io.LineProcessor:
    boolean processLine(java.lang.String) -> processLine
    java.lang.Object getResult() -> getResult
com.google.common.io.LineReader -> com.google.common.io.LineReader:
    java.lang.Readable readable -> readable
    java.io.Reader reader -> reader
    char[] buf -> buf
    java.nio.CharBuffer cbuf -> cbuf
    java.util.Queue lines -> lines
    com.google.common.io.LineBuffer lineBuf -> lineBuf
    41:58:void <init>(java.lang.Readable) -> <init>
    72:85:java.lang.String readLine() -> readLine
    38:38:java.util.Queue access$000(com.google.common.io.LineReader) -> access$000
com.google.common.io.LineReader$1 -> com.google.common.io.LineReader$1:
    com.google.common.io.LineReader this$0 -> this$0
    45:45:void <init>(com.google.common.io.LineReader) -> <init>
    47:48:void handleLine(java.lang.String,java.lang.String) -> handleLine
com.google.common.io.LittleEndianDataInputStream -> com.google.common.io.LittleEndianDataInputStream:
    53:54:void <init>(java.io.InputStream) -> <init>
    61:61:java.lang.String readLine() -> readLine
    66:67:void readFully(byte[]) -> readFully
    71:72:void readFully(byte[],int,int) -> readFully
    76:76:int skipBytes(int) -> skipBytes
    81:86:int readUnsignedByte() -> readUnsignedByte
    100:103:int readUnsignedShort() -> readUnsignedShort
    116:121:int readInt() -> readInt
    134:143:long readLong() -> readLong
    156:156:float readFloat() -> readFloat
    170:170:double readDouble() -> readDouble
    175:175:java.lang.String readUTF() -> readUTF
    188:188:short readShort() -> readShort
    201:201:char readChar() -> readChar
    206:206:byte readByte() -> readByte
    211:211:boolean readBoolean() -> readBoolean
    223:229:byte readAndCheckByte() -> readAndCheckByte
com.google.common.io.LittleEndianDataOutputStream -> com.google.common.io.LittleEndianDataOutputStream:
    52:53:void <init>(java.io.OutputStream) -> <init>
    57:58:void write(byte[],int,int) -> write
    61:62:void writeBoolean(boolean) -> writeBoolean
    65:66:void writeByte(int) -> writeByte
    75:76:void writeBytes(java.lang.String) -> writeBytes
    85:86:void writeChar(int) -> writeChar
    96:99:void writeChars(java.lang.String) -> writeChars
    109:110:void writeDouble(double) -> writeDouble
    120:121:void writeFloat(float) -> writeFloat
    131:135:void writeInt(int) -> writeInt
    145:147:void writeLong(long) -> writeLong
    157:159:void writeShort(int) -> writeShort
    162:163:void writeUTF(java.lang.String) -> writeUTF
    169:170:void close() -> close
com.google.common.io.MultiInputStream -> com.google.common.io.MultiInputStream:
    java.util.Iterator it -> it
    java.io.InputStream in -> in
    45:48:void <init>(java.util.Iterator) -> <init>
    51:58:void close() -> close
    64:68:void advance() -> advance
    71:74:int available() -> available
    78:78:boolean markSupported() -> markSupported
    82:90:int read() -> read
    94:102:int read(byte[],int,int) -> read
    106:116:long skip(long) -> skip
com.google.common.io.MultiReader -> com.google.common.io.MultiReader:
    java.util.Iterator it -> it
    java.io.Reader current -> current
    37:40:void <init>(java.util.Iterator) -> <init>
    46:50:void advance() -> advance
    53:61:int read(char[],int,int) -> read
    65:75:long skip(long) -> skip
    79:79:boolean ready() -> ready
    83:90:void close() -> close
com.google.common.io.OutputSupplier -> com.google.common.io.OutputSupplier:
    java.lang.Object getOutput() -> getOutput
com.google.common.io.PatternFilenameFilter -> com.google.common.io.PatternFilenameFilter:
    java.util.regex.Pattern pattern -> pattern
    48:49:void <init>(java.lang.String) -> <init>
    55:57:void <init>(java.util.regex.Pattern) -> <init>
    60:60:boolean accept(java.io.File,java.lang.String) -> accept
com.google.common.io.Resources -> com.google.common.io.Resources:
    48:48:void <init>() -> <init>
    56:56:com.google.common.io.ByteSource asByteSource(java.net.URL) -> asByteSource
    88:88:com.google.common.io.CharSource asCharSource(java.net.URL,java.nio.charset.Charset) -> asCharSource
    99:99:byte[] toByteArray(java.net.URL) -> toByteArray
    113:113:java.lang.String toString(java.net.URL,java.nio.charset.Charset) -> toString
    129:129:java.lang.Object readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    151:151:java.util.List readLines(java.net.URL,java.nio.charset.Charset) -> readLines
    175:176:void copy(java.net.URL,java.io.OutputStream) -> copy
    193:198:java.net.URL getResource(java.lang.String) -> getResource
    208:211:java.net.URL getResource(java.lang.Class,java.lang.String) -> getResource
com.google.common.io.Resources$1 -> com.google.common.io.Resources$1:
    java.util.List result -> result
    151:152:void <init>() -> <init>
    156:157:boolean processLine(java.lang.String) -> processLine
    162:162:java.util.List getResult() -> getResult
    151:151:java.lang.Object getResult() -> getResult
com.google.common.io.Resources$UrlByteSource -> com.google.common.io.Resources$UrlByteSource:
    java.net.URL url -> url
    66:68:void <init>(java.net.URL) -> <init>
    72:72:java.io.InputStream openStream() -> openStream
    77:77:java.lang.String toString() -> toString
    62:62:void <init>(java.net.URL,com.google.common.io.Resources$1) -> <init>
com.google.common.io.package-info -> com.google.common.io.package-info:
com.google.common.math.BigIntegerMath -> com.google.common.math.BigIntegerMath:
    int SQRT2_PRECOMPUTE_THRESHOLD -> SQRT2_PRECOMPUTE_THRESHOLD
    java.math.BigInteger SQRT2_PRECOMPUTED_BITS -> SQRT2_PRECOMPUTED_BITS
    double LN_10 -> LN_10
    double LN_2 -> LN_2
    56:57:boolean isPowerOfTwo(java.math.BigInteger) -> isPowerOfTwo
    70:106:int log2(java.math.BigInteger,java.math.RoundingMode) -> log2
    130:191:int log10(java.math.BigInteger,java.math.RoundingMode) -> log10
    208:237:java.math.BigInteger sqrt(java.math.BigInteger,java.math.RoundingMode) -> sqrt
    263:282:java.math.BigInteger sqrtFloor(java.math.BigInteger) -> sqrtFloor
    287:287:java.math.BigInteger sqrtApproxWithDoubles(java.math.BigInteger) -> sqrtApproxWithDoubles
    299:301:java.math.BigInteger divide(java.math.BigInteger,java.math.BigInteger,java.math.RoundingMode) -> divide
    317:368:java.math.BigInteger factorial(int) -> factorial
    372:372:java.math.BigInteger listProduct(java.util.List) -> listProduct
    376:388:java.math.BigInteger listProduct(java.util.List,int,int) -> listProduct
    401:442:java.math.BigInteger binomial(int,int) -> binomial
    450:450:boolean fitsInLong(java.math.BigInteger) -> fitsInLong
    453:453:void <init>() -> <init>
    117:196:void <clinit>() -> <clinit>
com.google.common.math.BigIntegerMath$1 -> com.google.common.math.BigIntegerMath$1:
    int[] $SwitchMap$java$math$RoundingMode -> $SwitchMap$java$math$RoundingMode
    72:72:void <clinit>() -> <clinit>
com.google.common.math.DoubleMath -> com.google.common.math.DoubleMath:
    double MIN_INT_AS_DOUBLE -> MIN_INT_AS_DOUBLE
    double MAX_INT_AS_DOUBLE -> MAX_INT_AS_DOUBLE
    double MIN_LONG_AS_DOUBLE -> MIN_LONG_AS_DOUBLE
    double MAX_LONG_AS_DOUBLE_PLUS_ONE -> MAX_LONG_AS_DOUBLE_PLUS_ONE
    double LN_2 -> LN_2
    int MAX_FACTORIAL -> MAX_FACTORIAL
    double[] everySixteenthFactorial -> everySixteenthFactorial
    58:112:double roundIntermediate(double,java.math.RoundingMode) -> roundIntermediate
    132:134:int roundToInt(double,java.math.RoundingMode) -> roundToInt
    156:158:long roundToLong(double,java.math.RoundingMode) -> roundToLong
    182:189:java.math.BigInteger roundToBigInteger(double,java.math.RoundingMode) -> roundToBigInteger
    198:198:boolean isPowerOfTwo(double) -> isPowerOfTwo
    217:217:double log2(double) -> log2
    234:269:int log2(double,java.math.RoundingMode) -> log2
    280:280:boolean isMathematicalInteger(double) -> isMathematicalInteger
    295:305:double factorial(int) -> factorial
    352:353:boolean fuzzyEquals(double,double,double) -> fuzzyEquals
    375:382:int fuzzyCompare(double,double,double) -> fuzzyCompare
    398:407:double mean(double[]) -> mean
    421:429:double mean(int[]) -> mean
    444:452:double mean(long[]) -> mean
    468:468:double mean(java.lang.Iterable) -> mean
    484:493:double mean(java.util.Iterator) -> mean
    498:499:double checkFinite(double) -> checkFinite
    502:502:void <init>() -> <init>
    220:313:void <clinit>() -> <clinit>
com.google.common.math.DoubleMath$1 -> com.google.common.math.DoubleMath$1:
    int[] $SwitchMap$java$math$RoundingMode -> $SwitchMap$java$math$RoundingMode
    61:61:void <clinit>() -> <clinit>
com.google.common.math.DoubleUtils -> com.google.common.math.DoubleUtils:
    long SIGNIFICAND_MASK -> SIGNIFICAND_MASK
    long EXPONENT_MASK -> EXPONENT_MASK
    long SIGN_MASK -> SIGN_MASK
    int SIGNIFICAND_BITS -> SIGNIFICAND_BITS
    int EXPONENT_BIAS -> EXPONENT_BIAS
    long IMPLICIT_BIT -> IMPLICIT_BIT
    long ONE_BITS -> ONE_BITS
    36:37:void <init>() -> <init>
    40:40:double nextDown(double) -> nextDown
    65:69:long getSignificand(double) -> getSignificand
    75:75:boolean isFinite(double) -> isFinite
    79:79:boolean isNormal(double) -> isNormal
    87:88:double scaleNormalize(double) -> scaleNormalize
    93:132:double bigToDouble(java.math.BigInteger) -> bigToDouble
    139:143:double ensureNonNegative(double) -> ensureNonNegative
    147:147:void <clinit>() -> <clinit>
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    int MAX_POWER_OF_SQRT2_UNSIGNED -> MAX_POWER_OF_SQRT2_UNSIGNED
    byte[] maxLog10ForLeadingZeros -> maxLog10ForLeadingZeros
    int[] powersOf10 -> powersOf10
    int[] halfPowersOf10 -> halfPowersOf10
    int FLOOR_SQRT_MAX_INT -> FLOOR_SQRT_MAX_INT
    int[] factorials -> factorials
    int[] biggestBinomials -> biggestBinomials
    63:63:boolean isPowerOfTwo(int) -> isPowerOfTwo
    75:75:int lessThanBranchFree(int,int) -> lessThanBranchFree
    88:112:int log2(int,java.math.RoundingMode) -> log2
    129:148:int log10(int,java.math.RoundingMode) -> log10
    160:165:int log10Floor(int) -> log10Floor
    190:217:int pow(int,int) -> pow
    232:260:int sqrt(int,java.math.RoundingMode) -> sqrt
    267:267:int sqrtFloor(int) -> sqrtFloor
    279:331:int divide(int,int,java.math.RoundingMode) -> divide
    351:355:int mod(int,int) -> mod
    370:406:int gcd(int,int) -> gcd
    415:417:int checkedAdd(int,int) -> checkedAdd
    426:428:int checkedSubtract(int,int) -> checkedSubtract
    437:439:int checkedMultiply(int,int) -> checkedMultiply
    451:482:int checkedPow(int,int) -> checkedPow
    498:499:int factorial(int) -> factorial
    525:545:int binomial(int,int) -> binomial
    580:580:int mean(int,int) -> mean
    583:583:void <init>() -> <init>
    169:550:void <clinit>() -> <clinit>
com.google.common.math.IntMath$1 -> com.google.common.math.IntMath$1:
    int[] $SwitchMap$java$math$RoundingMode -> $SwitchMap$java$math$RoundingMode
    89:89:void <clinit>() -> <clinit>
com.google.common.math.LongMath -> com.google.common.math.LongMath:
    long MAX_POWER_OF_SQRT2_UNSIGNED -> MAX_POWER_OF_SQRT2_UNSIGNED
    byte[] maxLog10ForLeadingZeros -> maxLog10ForLeadingZeros
    long[] powersOf10 -> powersOf10
    long[] halfPowersOf10 -> halfPowersOf10
    long FLOOR_SQRT_MAX_LONG -> FLOOR_SQRT_MAX_LONG
    long[] factorials -> factorials
    int[] biggestBinomials -> biggestBinomials
    int[] biggestSimpleBinomials -> biggestSimpleBinomials
    long[][] millerRabinBaseSets -> millerRabinBaseSets
    63:63:boolean isPowerOfTwo(long) -> isPowerOfTwo
    74:74:int lessThanBranchFree(long,long) -> lessThanBranchFree
    87:111:int log2(long,java.math.RoundingMode) -> log2
    129:148:int log10(long,java.math.RoundingMode) -> log10
    161:166:int log10Floor(long) -> log10Floor
    233:262:long pow(long,int) -> pow
    277:335:long sqrt(long,java.math.RoundingMode) -> sqrt
    349:398:long divide(long,long,java.math.RoundingMode) -> divide
    422:422:int mod(long,int) -> mod
    445:449:long mod(long,long) -> mod
    464:500:long gcd(long,long) -> gcd
    510:512:long checkedAdd(long,long) -> checkedAdd
    522:524:long checkedSubtract(long,long) -> checkedSubtract
    535:554:long checkedMultiply(long,long) -> checkedMultiply
    565:598:long checkedPow(long,int) -> checkedPow
    615:616:long factorial(int) -> factorial
    650:704:long binomial(int,int) -> binomial
    713:721:long multiplyFraction(long,long,long) -> multiplyFraction
    745:745:boolean fitsInInt(long) -> fitsInInt
    758:758:long mean(long,long) -> mean
    944:944:void <init>() -> <init>
    170:768:void <clinit>() -> <clinit>
com.google.common.math.LongMath$1 -> com.google.common.math.LongMath$1:
    int[] $SwitchMap$java$math$RoundingMode -> $SwitchMap$java$math$RoundingMode
    88:88:void <clinit>() -> <clinit>
com.google.common.math.LongMath$MillerRabinTester -> com.google.common.math.LongMath$MillerRabinTester:
    com.google.common.math.LongMath$MillerRabinTester SMALL -> SMALL
    com.google.common.math.LongMath$MillerRabinTester LARGE -> LARGE
    com.google.common.math.LongMath$MillerRabinTester[] $VALUES -> $VALUES
    782:782:com.google.common.math.LongMath$MillerRabinTester[] values() -> values
    782:782:com.google.common.math.LongMath$MillerRabinTester valueOf(java.lang.String) -> valueOf
    782:782:void <init>(java.lang.String,int) -> <init>
    888:888:boolean test(long,long) -> test
    long mulMod(long,long,long) -> mulMod
    long squareMod(long,long) -> squareMod
    905:912:long powMod(long,long,long) -> powMod
    919:940:boolean testWitness(long,long) -> testWitness
    782:782:void <init>(java.lang.String,int,com.google.common.math.LongMath$1) -> <init>
    782:806:void <clinit>() -> <clinit>
com.google.common.math.LongMath$MillerRabinTester$1 -> com.google.common.math.LongMath$MillerRabinTester$1:
    786:786:void <init>(java.lang.String,int) -> <init>
    795:795:long mulMod(long,long,long) -> mulMod
    800:800:long squareMod(long,long) -> squareMod
com.google.common.math.LongMath$MillerRabinTester$2 -> com.google.common.math.LongMath$MillerRabinTester$2:
    806:806:void <init>(java.lang.String,int) -> <init>
    811:811:long plusMod(long,long,long) -> plusMod
    818:826:long times2ToThe32Mod(long,long) -> times2ToThe32Mod
    831:852:long mulMod(long,long,long) -> mulMod
    860:878:long squareMod(long,long) -> squareMod
com.google.common.math.MathPreconditions -> com.google.common.math.MathPreconditions:
    31:34:int checkPositive(java.lang.String,int) -> checkPositive
    38:41:long checkPositive(java.lang.String,long) -> checkPositive
    45:48:java.math.BigInteger checkPositive(java.lang.String,java.math.BigInteger) -> checkPositive
    52:55:int checkNonNegative(java.lang.String,int) -> checkNonNegative
    59:62:long checkNonNegative(java.lang.String,long) -> checkNonNegative
    66:69:java.math.BigInteger checkNonNegative(java.lang.String,java.math.BigInteger) -> checkNonNegative
    73:76:double checkNonNegative(java.lang.String,double) -> checkNonNegative
    80:83:void checkRoundingUnnecessary(boolean) -> checkRoundingUnnecessary
    86:89:void checkInRange(boolean) -> checkInRange
    92:95:void checkNoOverflow(boolean) -> checkNoOverflow
    97:97:void <init>() -> <init>
com.google.common.math.package-info -> com.google.common.math.package-info:
com.google.common.net.HostAndPort -> com.google.common.net.HostAndPort:
    int NO_PORT -> NO_PORT
    java.lang.String host -> host
    int port -> port
    boolean hasBracketlessColons -> hasBracketlessColons
    long serialVersionUID -> serialVersionUID
    80:84:void <init>(java.lang.String,int,boolean) -> <init>
    94:94:java.lang.String getHostText() -> getHostText
    99:99:boolean hasPort() -> hasPort
    110:111:int getPort() -> getPort
    118:118:int getPortOrDefault(int) -> getPortOrDefault
    134:137:com.google.common.net.HostAndPort fromParts(java.lang.String,int) -> fromParts
    152:154:com.google.common.net.HostAndPort fromHost(java.lang.String) -> fromHost
    168:203:com.google.common.net.HostAndPort fromString(java.lang.String) -> fromString
    214:233:java.lang.String[] getHostAndPortFromBracketedHost(java.lang.String) -> getHostAndPortFromBracketedHost
    248:252:com.google.common.net.HostAndPort withDefaultPort(int) -> withDefaultPort
    271:272:com.google.common.net.HostAndPort requireBracketsForIPv6() -> requireBracketsForIPv6
    277:286:boolean equals(java.lang.Object) -> equals
    291:291:int hashCode() -> hashCode
    298:307:java.lang.String toString() -> toString
    312:312:boolean isValidPort(int) -> isValidPort
com.google.common.net.HostSpecifier -> com.google.common.net.HostSpecifier:
    java.lang.String canonicalForm -> canonicalForm
    56:58:void <init>(java.lang.String) -> <init>
    78:106:com.google.common.net.HostSpecifier fromValid(java.lang.String) -> fromValid
    121:130:com.google.common.net.HostSpecifier from(java.lang.String) -> from
    141:144:boolean isValid(java.lang.String) -> isValid
    150:159:boolean equals(java.lang.Object) -> equals
    164:164:int hashCode() -> hashCode
    176:176:java.lang.String toString() -> toString
com.google.common.net.HttpHeaders -> com.google.common.net.HttpHeaders:
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    java.lang.String ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String COOKIE -> COOKIE
    java.lang.String EXPECT -> EXPECT
    java.lang.String FROM -> FROM
    java.lang.String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN -> FOLLOW_ONLY_WHEN_PRERENDER_SHOWN
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_EVENT_ID -> LAST_EVENT_ID
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String ORIGIN -> ORIGIN
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String TE -> TE
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    java.lang.String ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    java.lang.String ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_SECURITY_POLICY -> CONTENT_SECURITY_POLICY
    java.lang.String CONTENT_SECURITY_POLICY_REPORT_ONLY -> CONTENT_SECURITY_POLICY_REPORT_ONLY
    java.lang.String ETAG -> ETAG
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LINK -> LINK
    java.lang.String LOCATION -> LOCATION
    java.lang.String P3P -> P3P
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String REFRESH -> REFRESH
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
    java.lang.String STRICT_TRANSPORT_SECURITY -> STRICT_TRANSPORT_SECURITY
    java.lang.String TIMING_ALLOW_ORIGIN -> TIMING_ALLOW_ORIGIN
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String VARY -> VARY
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    java.lang.String DNT -> DNT
    java.lang.String X_CONTENT_TYPE_OPTIONS -> X_CONTENT_TYPE_OPTIONS
    java.lang.String X_DO_NOT_TRACK -> X_DO_NOT_TRACK
    java.lang.String X_FORWARDED_FOR -> X_FORWARDED_FOR
    java.lang.String X_FORWARDED_PROTO -> X_FORWARDED_PROTO
    java.lang.String X_FRAME_OPTIONS -> X_FRAME_OPTIONS
    java.lang.String X_POWERED_BY -> X_POWERED_BY
    java.lang.String PUBLIC_KEY_PINS -> PUBLIC_KEY_PINS
    java.lang.String PUBLIC_KEY_PINS_REPORT_ONLY -> PUBLIC_KEY_PINS_REPORT_ONLY
    java.lang.String X_REQUESTED_WITH -> X_REQUESTED_WITH
    java.lang.String X_USER_IP -> X_USER_IP
    java.lang.String X_XSS_PROTECTION -> X_XSS_PROTECTION
    java.lang.String PING_FROM -> PING_FROM
    java.lang.String PING_TO -> PING_TO
    38:38:void <init>() -> <init>
com.google.common.net.InetAddresses -> com.google.common.net.InetAddresses:
    int IPV4_PART_COUNT -> IPV4_PART_COUNT
    int IPV6_PART_COUNT -> IPV6_PART_COUNT
    java.net.Inet4Address LOOPBACK4 -> LOOPBACK4
    java.net.Inet4Address ANY4 -> ANY4
    121:121:void <init>() -> <init>
    131:136:java.net.Inet4Address getInet4Address(byte[]) -> getInet4Address
    150:157:java.net.InetAddress forString(java.lang.String) -> forString
    168:168:boolean isInetAddress(java.lang.String) -> isInetAddress
    173:201:byte[] ipStringToBytes(java.lang.String) -> ipStringToBytes
    205:219:byte[] textToNumericFormatV4(java.lang.String) -> textToNumericFormatV4
    224:282:byte[] textToNumericFormatV6(java.lang.String) -> textToNumericFormatV6
    286:295:java.lang.String convertDottedQuadToHex(java.lang.String) -> convertDottedQuadToHex
    300:306:byte parseOctet(java.lang.String) -> parseOctet
    311:315:short parseHextet(java.lang.String) -> parseHextet
    331:333:java.net.InetAddress bytesToInetAddress(byte[]) -> bytesToInetAddress
    355:368:java.lang.String toAddrString(java.net.InetAddress) -> toAddrString
    381:401:void compressLongestRunOfZeroes(int[]) -> compressLongestRunOfZeroes
    418:434:java.lang.String hextetsToIPv6String(int[]) -> hextetsToIPv6String
    463:466:java.lang.String toUriString(java.net.InetAddress) -> toUriString
    485:504:java.net.InetAddress forUriString(java.lang.String) -> forUriString
    516:519:boolean isUriInetAddress(java.lang.String) -> isUriInetAddress
    548:558:boolean isCompatIPv4Address(java.net.Inet6Address) -> isCompatIPv4Address
    569:572:java.net.Inet4Address getCompatIPv4Address(java.net.Inet6Address) -> getCompatIPv4Address
    590:591:boolean is6to4Address(java.net.Inet6Address) -> is6to4Address
    602:605:java.net.Inet4Address get6to4IPv4Address(java.net.Inet6Address) -> get6to4IPv4Address
    680:681:boolean isTeredoAddress(java.net.Inet6Address) -> isTeredoAddress
    693:711:com.google.common.net.InetAddresses$TeredoInfo getTeredoInfo(java.net.Inet6Address) -> getTeredoInfo
    733:746:boolean isIsatapAddress(java.net.Inet6Address) -> isIsatapAddress
    758:761:java.net.Inet4Address getIsatapIPv4Address(java.net.Inet6Address) -> getIsatapIPv4Address
    777:777:boolean hasEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> hasEmbeddedIPv4ClientAddress
    794:806:java.net.Inet4Address getEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> getEmbeddedIPv4ClientAddress
    832:846:boolean isMappedIPv4Address(java.lang.String) -> isMappedIPv4Address
    870:911:java.net.Inet4Address getCoercedIPv4Address(java.net.InetAddress) -> getCoercedIPv4Address
    936:936:int coerceToInteger(java.net.InetAddress) -> coerceToInteger
    947:947:java.net.Inet4Address fromInteger(int) -> fromInteger
    962:966:java.net.InetAddress fromLittleEndianByteArray(byte[]) -> fromLittleEndianByteArray
    979:989:java.net.InetAddress decrement(java.net.InetAddress) -> decrement
    1002:1012:java.net.InetAddress increment(java.net.InetAddress) -> increment
    1024:1030:boolean isMaximum(java.net.InetAddress) -> isMaximum
    1035:1035:java.lang.IllegalArgumentException formatIllegalArgumentException(java.lang.String,java.lang.Object[]) -> formatIllegalArgumentException
    115:115:java.net.Inet4Address access$000() -> access$000
    118:119:void <clinit>() -> <clinit>
com.google.common.net.InetAddresses$TeredoInfo -> com.google.common.net.InetAddresses$TeredoInfo:
    java.net.Inet4Address server -> server
    java.net.Inet4Address client -> client
    int port -> port
    int flags -> flags
    642:652:void <init>(java.net.Inet4Address,java.net.Inet4Address,int,int) -> <init>
    655:655:java.net.Inet4Address getServer() -> getServer
    659:659:java.net.Inet4Address getClient() -> getClient
    663:663:int getPort() -> getPort
    667:667:int getFlags() -> getFlags
com.google.common.net.InternetDomainName -> com.google.common.net.InternetDomainName:
    com.google.common.base.CharMatcher DOTS_MATCHER -> DOTS_MATCHER
    com.google.common.base.Splitter DOT_SPLITTER -> DOT_SPLITTER
    com.google.common.base.Joiner DOT_JOINER -> DOT_JOINER
    int NO_PUBLIC_SUFFIX_FOUND -> NO_PUBLIC_SUFFIX_FOUND
    java.lang.String DOT_REGEX -> DOT_REGEX
    int MAX_PARTS -> MAX_PARTS
    int MAX_LENGTH -> MAX_LENGTH
    int MAX_DOMAIN_PART_LENGTH -> MAX_DOMAIN_PART_LENGTH
    java.lang.String name -> name
    com.google.common.collect.ImmutableList parts -> parts
    int publicSuffixIndex -> publicSuffixIndex
    com.google.common.base.CharMatcher DASH_MATCHER -> DASH_MATCHER
    com.google.common.base.CharMatcher PART_CHAR_MATCHER -> PART_CHAR_MATCHER
    137:159:void <init>(java.lang.String) -> <init>
    168:189:int findPublicSuffix() -> findPublicSuffix
    213:213:com.google.common.net.InternetDomainName from(java.lang.String) -> from
    223:238:boolean validateSyntax(java.util.List) -> validateSyntax
    259:298:boolean validatePart(java.lang.String,boolean) -> validatePart
    307:307:com.google.common.collect.ImmutableList parts() -> parts
    324:324:boolean isPublicSuffix() -> isPublicSuffix
    338:338:boolean hasPublicSuffix() -> hasPublicSuffix
    348:348:com.google.common.net.InternetDomainName publicSuffix() -> publicSuffix
    371:371:boolean isUnderPublicSuffix() -> isUnderPublicSuffix
    395:395:boolean isTopPrivateDomain() -> isTopPrivateDomain
    421:425:com.google.common.net.InternetDomainName topPrivateDomain() -> topPrivateDomain
    432:432:boolean hasParent() -> hasParent
    444:445:com.google.common.net.InternetDomainName parent() -> parent
    457:457:com.google.common.net.InternetDomainName ancestor(int) -> ancestor
    471:471:com.google.common.net.InternetDomainName child(java.lang.String) -> child
    498:501:boolean isValid(java.lang.String) -> isValid
    510:511:boolean matchesWildcardPublicSuffix(java.lang.String) -> matchesWildcardPublicSuffix
    519:519:java.lang.String toString() -> toString
    531:540:boolean equals(java.lang.Object) -> equals
    545:545:int hashCode() -> hashCode
    79:243:void <clinit>() -> <clinit>
com.google.common.net.MediaType -> com.google.common.net.MediaType:
    java.lang.String CHARSET_ATTRIBUTE -> CHARSET_ATTRIBUTE
    com.google.common.collect.ImmutableListMultimap UTF_8_CONSTANT_PARAMETERS -> UTF_8_CONSTANT_PARAMETERS
    com.google.common.base.CharMatcher TOKEN_MATCHER -> TOKEN_MATCHER
    com.google.common.base.CharMatcher QUOTED_TEXT_MATCHER -> QUOTED_TEXT_MATCHER
    com.google.common.base.CharMatcher LINEAR_WHITE_SPACE -> LINEAR_WHITE_SPACE
    java.lang.String APPLICATION_TYPE -> APPLICATION_TYPE
    java.lang.String AUDIO_TYPE -> AUDIO_TYPE
    java.lang.String IMAGE_TYPE -> IMAGE_TYPE
    java.lang.String TEXT_TYPE -> TEXT_TYPE
    java.lang.String VIDEO_TYPE -> VIDEO_TYPE
    java.lang.String WILDCARD -> WILDCARD
    java.util.Map KNOWN_TYPES -> KNOWN_TYPES
    com.google.common.net.MediaType ANY_TYPE -> ANY_TYPE
    com.google.common.net.MediaType ANY_TEXT_TYPE -> ANY_TEXT_TYPE
    com.google.common.net.MediaType ANY_IMAGE_TYPE -> ANY_IMAGE_TYPE
    com.google.common.net.MediaType ANY_AUDIO_TYPE -> ANY_AUDIO_TYPE
    com.google.common.net.MediaType ANY_VIDEO_TYPE -> ANY_VIDEO_TYPE
    com.google.common.net.MediaType ANY_APPLICATION_TYPE -> ANY_APPLICATION_TYPE
    com.google.common.net.MediaType CACHE_MANIFEST_UTF_8 -> CACHE_MANIFEST_UTF_8
    com.google.common.net.MediaType CSS_UTF_8 -> CSS_UTF_8
    com.google.common.net.MediaType CSV_UTF_8 -> CSV_UTF_8
    com.google.common.net.MediaType HTML_UTF_8 -> HTML_UTF_8
    com.google.common.net.MediaType I_CALENDAR_UTF_8 -> I_CALENDAR_UTF_8
    com.google.common.net.MediaType PLAIN_TEXT_UTF_8 -> PLAIN_TEXT_UTF_8
    com.google.common.net.MediaType TEXT_JAVASCRIPT_UTF_8 -> TEXT_JAVASCRIPT_UTF_8
    com.google.common.net.MediaType TSV_UTF_8 -> TSV_UTF_8
    com.google.common.net.MediaType VCARD_UTF_8 -> VCARD_UTF_8
    com.google.common.net.MediaType WML_UTF_8 -> WML_UTF_8
    com.google.common.net.MediaType XML_UTF_8 -> XML_UTF_8
    com.google.common.net.MediaType BMP -> BMP
    com.google.common.net.MediaType CRW -> CRW
    com.google.common.net.MediaType GIF -> GIF
    com.google.common.net.MediaType ICO -> ICO
    com.google.common.net.MediaType JPEG -> JPEG
    com.google.common.net.MediaType PNG -> PNG
    com.google.common.net.MediaType PSD -> PSD
    com.google.common.net.MediaType SVG_UTF_8 -> SVG_UTF_8
    com.google.common.net.MediaType TIFF -> TIFF
    com.google.common.net.MediaType WEBP -> WEBP
    com.google.common.net.MediaType MP4_AUDIO -> MP4_AUDIO
    com.google.common.net.MediaType MPEG_AUDIO -> MPEG_AUDIO
    com.google.common.net.MediaType OGG_AUDIO -> OGG_AUDIO
    com.google.common.net.MediaType WEBM_AUDIO -> WEBM_AUDIO
    com.google.common.net.MediaType MP4_VIDEO -> MP4_VIDEO
    com.google.common.net.MediaType MPEG_VIDEO -> MPEG_VIDEO
    com.google.common.net.MediaType OGG_VIDEO -> OGG_VIDEO
    com.google.common.net.MediaType QUICKTIME -> QUICKTIME
    com.google.common.net.MediaType WEBM_VIDEO -> WEBM_VIDEO
    com.google.common.net.MediaType WMV -> WMV
    com.google.common.net.MediaType APPLICATION_XML_UTF_8 -> APPLICATION_XML_UTF_8
    com.google.common.net.MediaType ATOM_UTF_8 -> ATOM_UTF_8
    com.google.common.net.MediaType BZIP2 -> BZIP2
    com.google.common.net.MediaType DART_UTF_8 -> DART_UTF_8
    com.google.common.net.MediaType APPLE_PASSBOOK -> APPLE_PASSBOOK
    com.google.common.net.MediaType EOT -> EOT
    com.google.common.net.MediaType EPUB -> EPUB
    com.google.common.net.MediaType FORM_DATA -> FORM_DATA
    com.google.common.net.MediaType KEY_ARCHIVE -> KEY_ARCHIVE
    com.google.common.net.MediaType APPLICATION_BINARY -> APPLICATION_BINARY
    com.google.common.net.MediaType GZIP -> GZIP
    com.google.common.net.MediaType JAVASCRIPT_UTF_8 -> JAVASCRIPT_UTF_8
    com.google.common.net.MediaType JSON_UTF_8 -> JSON_UTF_8
    com.google.common.net.MediaType MANIFEST_JSON_UTF_8 -> MANIFEST_JSON_UTF_8
    com.google.common.net.MediaType KML -> KML
    com.google.common.net.MediaType KMZ -> KMZ
    com.google.common.net.MediaType MBOX -> MBOX
    com.google.common.net.MediaType APPLE_MOBILE_CONFIG -> APPLE_MOBILE_CONFIG
    com.google.common.net.MediaType MICROSOFT_EXCEL -> MICROSOFT_EXCEL
    com.google.common.net.MediaType MICROSOFT_POWERPOINT -> MICROSOFT_POWERPOINT
    com.google.common.net.MediaType MICROSOFT_WORD -> MICROSOFT_WORD
    com.google.common.net.MediaType OCTET_STREAM -> OCTET_STREAM
    com.google.common.net.MediaType OGG_CONTAINER -> OGG_CONTAINER
    com.google.common.net.MediaType OOXML_DOCUMENT -> OOXML_DOCUMENT
    com.google.common.net.MediaType OOXML_PRESENTATION -> OOXML_PRESENTATION
    com.google.common.net.MediaType OOXML_SHEET -> OOXML_SHEET
    com.google.common.net.MediaType OPENDOCUMENT_GRAPHICS -> OPENDOCUMENT_GRAPHICS
    com.google.common.net.MediaType OPENDOCUMENT_PRESENTATION -> OPENDOCUMENT_PRESENTATION
    com.google.common.net.MediaType OPENDOCUMENT_SPREADSHEET -> OPENDOCUMENT_SPREADSHEET
    com.google.common.net.MediaType OPENDOCUMENT_TEXT -> OPENDOCUMENT_TEXT
    com.google.common.net.MediaType PDF -> PDF
    com.google.common.net.MediaType POSTSCRIPT -> POSTSCRIPT
    com.google.common.net.MediaType PROTOBUF -> PROTOBUF
    com.google.common.net.MediaType RDF_XML_UTF_8 -> RDF_XML_UTF_8
    com.google.common.net.MediaType RTF_UTF_8 -> RTF_UTF_8
    com.google.common.net.MediaType SFNT -> SFNT
    com.google.common.net.MediaType SHOCKWAVE_FLASH -> SHOCKWAVE_FLASH
    com.google.common.net.MediaType SKETCHUP -> SKETCHUP
    com.google.common.net.MediaType TAR -> TAR
    com.google.common.net.MediaType WOFF -> WOFF
    com.google.common.net.MediaType XHTML_UTF_8 -> XHTML_UTF_8
    com.google.common.net.MediaType XRD_UTF_8 -> XRD_UTF_8
    com.google.common.net.MediaType ZIP -> ZIP
    java.lang.String type -> type
    java.lang.String subtype -> subtype
    com.google.common.collect.ImmutableListMultimap parameters -> parameters
    java.lang.String toString -> toString
    int hashCode -> hashCode
    com.google.common.base.Joiner$MapJoiner PARAMETER_JOINER -> PARAMETER_JOINER
    112:112:com.google.common.net.MediaType createConstant(java.lang.String,java.lang.String) -> createConstant
    116:116:com.google.common.net.MediaType createConstantUtf8(java.lang.String,java.lang.String) -> createConstantUtf8
    120:121:com.google.common.net.MediaType addKnownType(com.google.common.net.MediaType) -> addKnownType
    391:395:void <init>(java.lang.String,java.lang.String,com.google.common.collect.ImmutableListMultimap) -> <init>
    399:399:java.lang.String type() -> type
    404:404:java.lang.String subtype() -> subtype
    409:409:com.google.common.collect.ImmutableListMultimap parameters() -> parameters
    413:413:java.util.Map parametersAsMap() -> parametersAsMap
    430:437:com.google.common.base.Optional charset() -> charset
    446:446:com.google.common.net.MediaType withoutParameters() -> withoutParameters
    455:455:com.google.common.net.MediaType withParameters(com.google.common.collect.Multimap) -> withParameters
    467:480:com.google.common.net.MediaType withParameter(java.lang.String,java.lang.String) -> withParameter
    493:494:com.google.common.net.MediaType withCharset(java.nio.charset.Charset) -> withCharset
    499:499:boolean hasWildcard() -> hasWildcard
    529:529:boolean is(com.google.common.net.MediaType) -> is
    541:541:com.google.common.net.MediaType create(java.lang.String,java.lang.String) -> create
    550:550:com.google.common.net.MediaType createApplicationType(java.lang.String) -> createApplicationType
    559:559:com.google.common.net.MediaType createAudioType(java.lang.String) -> createAudioType
    568:568:com.google.common.net.MediaType createImageType(java.lang.String) -> createImageType
    577:577:com.google.common.net.MediaType createTextType(java.lang.String) -> createTextType
    586:586:com.google.common.net.MediaType createVideoType(java.lang.String) -> createVideoType
    591:605:com.google.common.net.MediaType create(java.lang.String,java.lang.String,com.google.common.collect.Multimap) -> create
    609:610:java.lang.String normalizeToken(java.lang.String) -> normalizeToken
    614:614:java.lang.String normalizeParameterValue(java.lang.String,java.lang.String) -> normalizeParameterValue
    623:656:com.google.common.net.MediaType parse(java.lang.String) -> parse
    708:717:boolean equals(java.lang.Object) -> equals
    723:728:int hashCode() -> hashCode
    739:744:java.lang.String toString() -> toString
    748:759:java.lang.String computeToString() -> computeToString
    763:771:java.lang.String escapeAndQuote(java.lang.String) -> escapeAndQuote
    83:83:com.google.common.base.CharMatcher access$000() -> access$000
    83:83:java.lang.String access$100(java.lang.String) -> access$100
    85:731:void <clinit>() -> <clinit>
com.google.common.net.MediaType$1 -> com.google.common.net.MediaType$1:
    com.google.common.net.MediaType this$0 -> this$0
    414:414:void <init>(com.google.common.net.MediaType) -> <init>
    416:416:com.google.common.collect.ImmutableMultiset apply(java.util.Collection) -> apply
    414:414:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.net.MediaType$2 -> com.google.common.net.MediaType$2:
    com.google.common.net.MediaType this$0 -> this$0
    752:752:void <init>(com.google.common.net.MediaType) -> <init>
    754:754:java.lang.String apply(java.lang.String) -> apply
    752:752:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.net.MediaType$Tokenizer -> com.google.common.net.MediaType$Tokenizer:
    java.lang.String input -> input
    int position -> position
    662:666:void <init>(java.lang.String) -> <init>
    669:672:java.lang.String consumeTokenIfPresent(com.google.common.base.CharMatcher) -> consumeTokenIfPresent
    676:679:java.lang.String consumeToken(com.google.common.base.CharMatcher) -> consumeToken
    683:687:char consumeCharacter(com.google.common.base.CharMatcher) -> consumeCharacter
    691:694:char consumeCharacter(char) -> consumeCharacter
    698:699:char previewChar() -> previewChar
    703:703:boolean hasMore() -> hasMore
com.google.common.net.PercentEscaper -> com.google.common.net.PercentEscaper:
    char[] PLUS_SIGN -> PLUS_SIGN
    char[] UPPER_HEX_DIGITS -> UPPER_HEX_DIGITS
    boolean plusForSpace -> plusForSpace
    boolean[] safeOctets -> safeOctets
    95:116:void <init>(java.lang.String,boolean) -> <init>
    124:133:boolean[] createSafeOctets(java.lang.String) -> createSafeOctets
    143:150:int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    160:168:java.lang.String escape(java.lang.String) -> escape
    178:247:char[] escape(int) -> escape
    62:65:void <clinit>() -> <clinit>
com.google.common.net.UrlEscapers -> com.google.common.net.UrlEscapers:
    java.lang.String URL_FORM_PARAMETER_OTHER_SAFE_CHARS -> URL_FORM_PARAMETER_OTHER_SAFE_CHARS
    java.lang.String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS -> URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS
    com.google.common.escape.Escaper URL_FORM_PARAMETER_ESCAPER -> URL_FORM_PARAMETER_ESCAPER
    com.google.common.escape.Escaper URL_PATH_SEGMENT_ESCAPER -> URL_PATH_SEGMENT_ESCAPER
    com.google.common.escape.Escaper URL_FRAGMENT_ESCAPER -> URL_FRAGMENT_ESCAPER
    39:39:void <init>() -> <init>
    85:85:com.google.common.escape.Escaper urlFormParameterEscaper() -> urlFormParameterEscaper
    126:126:com.google.common.escape.Escaper urlPathSegmentEscaper() -> urlPathSegmentEscaper
    164:164:com.google.common.escape.Escaper urlFragmentEscaper() -> urlFragmentEscaper
    88:167:void <clinit>() -> <clinit>
com.google.common.net.package-info -> com.google.common.net.package-info:
com.google.common.primitives.Booleans -> com.google.common.primitives.Booleans:
    53:53:void <init>() -> <init>
    63:63:int hashCode(boolean) -> hashCode
    80:80:int compare(boolean,boolean) -> compare
    98:103:boolean contains(boolean[],boolean) -> contains
    121:121:int indexOf(boolean[],boolean) -> indexOf
    126:131:int indexOf(boolean[],boolean,int,int) -> indexOf
    146:161:int indexOf(boolean[],boolean[]) -> indexOf
    174:174:int lastIndexOf(boolean[],boolean) -> lastIndexOf
    179:184:int lastIndexOf(boolean[],boolean,int,int) -> lastIndexOf
    197:207:boolean[] concat(boolean[][]) -> concat
    227:229:boolean[] ensureCapacity(boolean[],int,int) -> ensureCapacity
    236:238:boolean[] copyOf(boolean[],int) -> copyOf
    251:262:java.lang.String join(java.lang.String,boolean[]) -> join
    282:282:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    319:330:boolean[] toArray(java.util.Collection) -> toArray
    348:351:java.util.List asList(boolean[]) -> asList
    495:501:int countTrue(boolean[]) -> countTrue
    52:52:int access$000(boolean[],boolean,int,int) -> access$000
    52:52:int access$100(boolean[],boolean,int,int) -> access$100
com.google.common.primitives.Booleans$BooleanArrayAsList -> com.google.common.primitives.Booleans$BooleanArrayAsList:
    boolean[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    362:363:void <init>(boolean[]) -> <init>
    365:369:void <init>(boolean[],int,int) -> <init>
    373:373:int size() -> size
    378:378:boolean isEmpty() -> isEmpty
    383:384:java.lang.Boolean get(int) -> get
    390:390:boolean contains(java.lang.Object) -> contains
    397:403:int indexOf(java.lang.Object) -> indexOf
    409:415:int lastIndexOf(java.lang.Object) -> lastIndexOf
    420:424:java.lang.Boolean set(int,java.lang.Boolean) -> set
    429:434:java.util.List subList(int,int) -> subList
    439:455:boolean equals(java.lang.Object) -> equals
    460:464:int hashCode() -> hashCode
    469:474:java.lang.String toString() -> toString
    479:482:boolean[] toBooleanArray() -> toBooleanArray
    354:354:java.lang.Object set(int,java.lang.Object) -> set
    354:354:java.lang.Object get(int) -> get
com.google.common.primitives.Booleans$LexicographicalComparator -> com.google.common.primitives.Booleans$LexicographicalComparator:
    com.google.common.primitives.Booleans$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Booleans$LexicographicalComparator[] $VALUES -> $VALUES
    285:285:com.google.common.primitives.Booleans$LexicographicalComparator[] values() -> values
    285:285:com.google.common.primitives.Booleans$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    285:285:void <init>(java.lang.String,int) -> <init>
    290:297:int compare(boolean[],boolean[]) -> compare
    285:285:int compare(java.lang.Object,java.lang.Object) -> compare
    285:286:void <clinit>() -> <clinit>
com.google.common.primitives.Bytes -> com.google.common.primitives.Bytes:
    56:56:void <init>() -> <init>
    66:66:int hashCode(byte) -> hashCode
    79:84:boolean contains(byte[],byte) -> contains
    97:97:int indexOf(byte[],byte) -> indexOf
    102:107:int indexOf(byte[],byte,int,int) -> indexOf
    122:137:int indexOf(byte[],byte[]) -> indexOf
    150:150:int lastIndexOf(byte[],byte) -> lastIndexOf
    155:160:int lastIndexOf(byte[],byte,int,int) -> lastIndexOf
    173:183:byte[] concat(byte[][]) -> concat
    203:205:byte[] ensureCapacity(byte[],int,int) -> ensureCapacity
    212:214:byte[] copyOf(byte[],int) -> copyOf
    233:244:byte[] toArray(java.util.Collection) -> toArray
    262:265:java.util.List asList(byte[]) -> asList
    55:55:int access$000(byte[],byte,int,int) -> access$000
    55:55:int access$100(byte[],byte,int,int) -> access$100
com.google.common.primitives.Bytes$ByteArrayAsList -> com.google.common.primitives.Bytes$ByteArrayAsList:
    byte[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    276:277:void <init>(byte[]) -> <init>
    279:283:void <init>(byte[],int,int) -> <init>
    287:287:int size() -> size
    292:292:boolean isEmpty() -> isEmpty
    297:298:java.lang.Byte get(int) -> get
    304:304:boolean contains(java.lang.Object) -> contains
    310:316:int indexOf(java.lang.Object) -> indexOf
    322:328:int lastIndexOf(java.lang.Object) -> lastIndexOf
    333:337:java.lang.Byte set(int,java.lang.Byte) -> set
    342:347:java.util.List subList(int,int) -> subList
    352:368:boolean equals(java.lang.Object) -> equals
    373:377:int hashCode() -> hashCode
    382:387:java.lang.String toString() -> toString
    392:395:byte[] toByteArray() -> toByteArray
    268:268:java.lang.Object set(int,java.lang.Object) -> set
    268:268:java.lang.Object get(int) -> get
com.google.common.primitives.Chars -> com.google.common.primitives.Chars:
    int BYTES -> BYTES
    56:56:void <init>() -> <init>
    72:72:int hashCode(char) -> hashCode
    84:89:char checkedCast(long) -> checkedCast
    101:107:char saturatedCast(long) -> saturatedCast
    123:123:int compare(char,char) -> compare
    136:141:boolean contains(char[],char) -> contains
    154:154:int indexOf(char[],char) -> indexOf
    159:164:int indexOf(char[],char,int,int) -> indexOf
    179:194:int indexOf(char[],char[]) -> indexOf
    207:207:int lastIndexOf(char[],char) -> lastIndexOf
    212:217:int lastIndexOf(char[],char,int,int) -> lastIndexOf
    229:236:char min(char[]) -> min
    248:255:char max(char[]) -> max
    268:278:char[] concat(char[][]) -> concat
    294:294:byte[] toByteArray(char) -> toByteArray
    311:312:char fromByteArray(byte[]) -> fromByteArray
    324:324:char fromBytes(byte,byte) -> fromBytes
    344:346:char[] ensureCapacity(char[],int,int) -> ensureCapacity
    353:355:char[] copyOf(char[],int) -> copyOf
    368:379:java.lang.String join(java.lang.String,char[]) -> join
    399:399:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    433:444:char[] toArray(java.util.Collection) -> toArray
    462:465:java.util.List asList(char[]) -> asList
    55:55:int access$000(char[],char,int,int) -> access$000
    55:55:int access$100(char[],char,int,int) -> access$100
com.google.common.primitives.Chars$CharArrayAsList -> com.google.common.primitives.Chars$CharArrayAsList:
    char[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    476:477:void <init>(char[]) -> <init>
    479:483:void <init>(char[],int,int) -> <init>
    487:487:int size() -> size
    492:492:boolean isEmpty() -> isEmpty
    497:498:java.lang.Character get(int) -> get
    504:504:boolean contains(java.lang.Object) -> contains
    511:517:int indexOf(java.lang.Object) -> indexOf
    523:529:int lastIndexOf(java.lang.Object) -> lastIndexOf
    534:538:java.lang.Character set(int,java.lang.Character) -> set
    543:548:java.util.List subList(int,int) -> subList
    553:569:boolean equals(java.lang.Object) -> equals
    574:578:int hashCode() -> hashCode
    583:588:java.lang.String toString() -> toString
    593:596:char[] toCharArray() -> toCharArray
    468:468:java.lang.Object set(int,java.lang.Object) -> set
    468:468:java.lang.Object get(int) -> get
com.google.common.primitives.Chars$LexicographicalComparator -> com.google.common.primitives.Chars$LexicographicalComparator:
    com.google.common.primitives.Chars$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Chars$LexicographicalComparator[] $VALUES -> $VALUES
    402:402:com.google.common.primitives.Chars$LexicographicalComparator[] values() -> values
    402:402:com.google.common.primitives.Chars$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    402:402:void <init>(java.lang.String,int) -> <init>
    407:414:int compare(char[],char[]) -> compare
    402:402:int compare(java.lang.Object,java.lang.Object) -> compare
    402:403:void <clinit>() -> <clinit>
com.google.common.primitives.Doubles -> com.google.common.primitives.Doubles:
    int BYTES -> BYTES
    java.util.regex.Pattern FLOATING_POINT_PATTERN -> FLOATING_POINT_PATTERN
    59:59:void <init>() -> <init>
    77:77:int hashCode(double) -> hashCode
    99:99:int compare(double,double) -> compare
    110:110:boolean isFinite(double) -> isFinite
    124:129:boolean contains(double[],double) -> contains
    143:143:int indexOf(double[],double) -> indexOf
    148:153:int indexOf(double[],double,int,int) -> indexOf
    171:186:int indexOf(double[],double[]) -> indexOf
    200:200:int lastIndexOf(double[],double) -> lastIndexOf
    205:210:int lastIndexOf(double[],double,int,int) -> lastIndexOf
    223:228:double min(double[]) -> min
    241:246:double max(double[]) -> max
    259:269:double[] concat(double[][]) -> concat
    306:306:com.google.common.base.Converter stringConverter() -> stringConverter
    326:328:double[] ensureCapacity(double[],int,int) -> ensureCapacity
    335:337:double[] copyOf(double[],int) -> copyOf
    355:366:java.lang.String join(java.lang.String,double[]) -> join
    386:386:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    421:432:double[] toArray(java.util.Collection) -> toArray
    453:456:java.util.List asList(double[]) -> asList
    604:609:java.util.regex.Pattern fpPattern() -> fpPattern
    636:646:java.lang.Double tryParse(java.lang.String) -> tryParse
    58:58:int access$000(double[],double,int,int) -> access$000
    58:58:int access$100(double[],double,int,int) -> access$100
    600:600:void <clinit>() -> <clinit>
com.google.common.primitives.Doubles$DoubleArrayAsList -> com.google.common.primitives.Doubles$DoubleArrayAsList:
    double[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    467:468:void <init>(double[]) -> <init>
    470:474:void <init>(double[],int,int) -> <init>
    478:478:int size() -> size
    483:483:boolean isEmpty() -> isEmpty
    488:489:java.lang.Double get(int) -> get
    495:495:boolean contains(java.lang.Object) -> contains
    502:508:int indexOf(java.lang.Object) -> indexOf
    514:520:int lastIndexOf(java.lang.Object) -> lastIndexOf
    525:529:java.lang.Double set(int,java.lang.Double) -> set
    534:539:java.util.List subList(int,int) -> subList
    544:560:boolean equals(java.lang.Object) -> equals
    565:569:int hashCode() -> hashCode
    574:579:java.lang.String toString() -> toString
    584:587:double[] toDoubleArray() -> toDoubleArray
    459:459:java.lang.Object set(int,java.lang.Object) -> set
    459:459:java.lang.Object get(int) -> get
com.google.common.primitives.Doubles$DoubleConverter -> com.google.common.primitives.Doubles$DoubleConverter:
    com.google.common.primitives.Doubles$DoubleConverter INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    272:272:void <init>() -> <init>
    278:278:java.lang.Double doForward(java.lang.String) -> doForward
    283:283:java.lang.String doBackward(java.lang.Double) -> doBackward
    288:288:java.lang.String toString() -> toString
    292:292:java.lang.Object readResolve() -> readResolve
    272:272:java.lang.Object doBackward(java.lang.Object) -> doBackward
    272:272:java.lang.Object doForward(java.lang.Object) -> doForward
    274:274:void <clinit>() -> <clinit>
com.google.common.primitives.Doubles$LexicographicalComparator -> com.google.common.primitives.Doubles$LexicographicalComparator:
    com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES -> $VALUES
    389:389:com.google.common.primitives.Doubles$LexicographicalComparator[] values() -> values
    389:389:com.google.common.primitives.Doubles$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    389:389:void <init>(java.lang.String,int) -> <init>
    394:401:int compare(double[],double[]) -> compare
    389:389:int compare(java.lang.Object,java.lang.Object) -> compare
    389:390:void <clinit>() -> <clinit>
com.google.common.primitives.Floats -> com.google.common.primitives.Floats:
    int BYTES -> BYTES
    58:58:void <init>() -> <init>
    77:77:int hashCode(float) -> hashCode
    95:95:int compare(float,float) -> compare
    106:106:boolean isFinite(float) -> isFinite
    120:125:boolean contains(float[],float) -> contains
    139:139:int indexOf(float[],float) -> indexOf
    144:149:int indexOf(float[],float,int,int) -> indexOf
    167:182:int indexOf(float[],float[]) -> indexOf
    196:196:int lastIndexOf(float[],float) -> lastIndexOf
    201:206:int lastIndexOf(float[],float,int,int) -> lastIndexOf
    219:224:float min(float[]) -> min
    237:242:float max(float[]) -> max
    255:265:float[] concat(float[][]) -> concat
    302:302:com.google.common.base.Converter stringConverter() -> stringConverter
    322:324:float[] ensureCapacity(float[],int,int) -> ensureCapacity
    331:333:float[] copyOf(float[],int) -> copyOf
    351:362:java.lang.String join(java.lang.String,float[]) -> join
    382:382:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    417:428:float[] toArray(java.util.Collection) -> toArray
    449:452:java.util.List asList(float[]) -> asList
    612:622:java.lang.Float tryParse(java.lang.String) -> tryParse
    57:57:int access$000(float[],float,int,int) -> access$000
    57:57:int access$100(float[],float,int,int) -> access$100
com.google.common.primitives.Floats$FloatArrayAsList -> com.google.common.primitives.Floats$FloatArrayAsList:
    float[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    463:464:void <init>(float[]) -> <init>
    466:470:void <init>(float[],int,int) -> <init>
    474:474:int size() -> size
    479:479:boolean isEmpty() -> isEmpty
    484:485:java.lang.Float get(int) -> get
    491:491:boolean contains(java.lang.Object) -> contains
    497:503:int indexOf(java.lang.Object) -> indexOf
    509:515:int lastIndexOf(java.lang.Object) -> lastIndexOf
    520:524:java.lang.Float set(int,java.lang.Float) -> set
    529:534:java.util.List subList(int,int) -> subList
    539:555:boolean equals(java.lang.Object) -> equals
    560:564:int hashCode() -> hashCode
    569:574:java.lang.String toString() -> toString
    579:582:float[] toFloatArray() -> toFloatArray
    455:455:java.lang.Object set(int,java.lang.Object) -> set
    455:455:java.lang.Object get(int) -> get
com.google.common.primitives.Floats$FloatConverter -> com.google.common.primitives.Floats$FloatConverter:
    com.google.common.primitives.Floats$FloatConverter INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    268:268:void <init>() -> <init>
    274:274:java.lang.Float doForward(java.lang.String) -> doForward
    279:279:java.lang.String doBackward(java.lang.Float) -> doBackward
    284:284:java.lang.String toString() -> toString
    288:288:java.lang.Object readResolve() -> readResolve
    268:268:java.lang.Object doBackward(java.lang.Object) -> doBackward
    268:268:java.lang.Object doForward(java.lang.Object) -> doForward
    270:270:void <clinit>() -> <clinit>
com.google.common.primitives.Floats$LexicographicalComparator -> com.google.common.primitives.Floats$LexicographicalComparator:
    com.google.common.primitives.Floats$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Floats$LexicographicalComparator[] $VALUES -> $VALUES
    385:385:com.google.common.primitives.Floats$LexicographicalComparator[] values() -> values
    385:385:com.google.common.primitives.Floats$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    385:385:void <init>(java.lang.String,int) -> <init>
    390:397:int compare(float[],float[]) -> compare
    385:385:int compare(java.lang.Object,java.lang.Object) -> compare
    385:386:void <clinit>() -> <clinit>
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    int BYTES -> BYTES
    int MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    56:56:void <init>() -> <init>
    79:79:int hashCode(int) -> hashCode
    91:96:int checkedCast(long) -> checkedCast
    108:114:int saturatedCast(long) -> saturatedCast
    130:130:int compare(int,int) -> compare
    143:148:boolean contains(int[],int) -> contains
    161:161:int indexOf(int[],int) -> indexOf
    166:171:int indexOf(int[],int,int,int) -> indexOf
    186:201:int indexOf(int[],int[]) -> indexOf
    214:214:int lastIndexOf(int[],int) -> lastIndexOf
    219:224:int lastIndexOf(int[],int,int,int) -> lastIndexOf
    236:243:int min(int[]) -> min
    255:262:int max(int[]) -> max
    275:285:int[] concat(int[][]) -> concat
    301:301:byte[] toByteArray(int) -> toByteArray
    323:324:int fromByteArray(byte[]) -> fromByteArray
    336:336:int fromBytes(byte,byte,byte,byte) -> fromBytes
    373:373:com.google.common.base.Converter stringConverter() -> stringConverter
    393:395:int[] ensureCapacity(int[],int,int) -> ensureCapacity
    402:404:int[] copyOf(int[],int) -> copyOf
    417:428:java.lang.String join(java.lang.String,int[]) -> join
    447:447:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    482:493:int[] toArray(java.util.Collection) -> toArray
    511:514:java.util.List asList(int[]) -> asList
    674:674:java.lang.Integer tryParse(java.lang.String) -> tryParse
    705:709:java.lang.Integer tryParse(java.lang.String,int) -> tryParse
    55:55:int access$000(int[],int,int,int) -> access$000
    55:55:int access$100(int[],int,int,int) -> access$100
com.google.common.primitives.Ints$IntArrayAsList -> com.google.common.primitives.Ints$IntArrayAsList:
    int[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    525:526:void <init>(int[]) -> <init>
    528:532:void <init>(int[],int,int) -> <init>
    536:536:int size() -> size
    541:541:boolean isEmpty() -> isEmpty
    546:547:java.lang.Integer get(int) -> get
    553:553:boolean contains(java.lang.Object) -> contains
    559:565:int indexOf(java.lang.Object) -> indexOf
    571:577:int lastIndexOf(java.lang.Object) -> lastIndexOf
    582:586:java.lang.Integer set(int,java.lang.Integer) -> set
    591:596:java.util.List subList(int,int) -> subList
    601:617:boolean equals(java.lang.Object) -> equals
    622:626:int hashCode() -> hashCode
    631:636:java.lang.String toString() -> toString
    641:644:int[] toIntArray() -> toIntArray
    517:517:java.lang.Object set(int,java.lang.Object) -> set
    517:517:java.lang.Object get(int) -> get
com.google.common.primitives.Ints$IntConverter -> com.google.common.primitives.Ints$IntConverter:
    com.google.common.primitives.Ints$IntConverter INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    339:339:void <init>() -> <init>
    345:345:java.lang.Integer doForward(java.lang.String) -> doForward
    350:350:java.lang.String doBackward(java.lang.Integer) -> doBackward
    355:355:java.lang.String toString() -> toString
    359:359:java.lang.Object readResolve() -> readResolve
    339:339:java.lang.Object doBackward(java.lang.Object) -> doBackward
    339:339:java.lang.Object doForward(java.lang.Object) -> doForward
    341:341:void <clinit>() -> <clinit>
com.google.common.primitives.Ints$LexicographicalComparator -> com.google.common.primitives.Ints$LexicographicalComparator:
    com.google.common.primitives.Ints$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Ints$LexicographicalComparator[] $VALUES -> $VALUES
    450:450:com.google.common.primitives.Ints$LexicographicalComparator[] values() -> values
    450:450:com.google.common.primitives.Ints$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    450:450:void <init>(java.lang.String,int) -> <init>
    455:462:int compare(int[],int[]) -> compare
    450:450:int compare(java.lang.Object,java.lang.Object) -> compare
    450:451:void <clinit>() -> <clinit>
com.google.common.primitives.Longs -> com.google.common.primitives.Longs:
    int BYTES -> BYTES
    long MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    byte[] asciiDigits -> asciiDigits
    55:55:void <init>() -> <init>
    83:83:int hashCode(long) -> hashCode
    99:99:int compare(long,long) -> compare
    112:117:boolean contains(long[],long) -> contains
    130:130:int indexOf(long[],long) -> indexOf
    135:140:int indexOf(long[],long,int,int) -> indexOf
    155:170:int indexOf(long[],long[]) -> indexOf
    183:183:int lastIndexOf(long[],long) -> lastIndexOf
    188:193:int lastIndexOf(long[],long,int,int) -> lastIndexOf
    205:212:long min(long[]) -> min
    224:231:long max(long[]) -> max
    244:254:long[] concat(long[][]) -> concat
    271:276:byte[] toByteArray(long) -> toByteArray
    293:294:long fromByteArray(byte[]) -> fromByteArray
    307:307:long fromBytes(byte,byte,byte,byte,byte,byte,byte,byte) -> fromBytes
    320:329:byte[] createAsciiDigits() -> createAsciiDigits
    333:333:int digit(char) -> digit
    360:360:java.lang.Long tryParse(java.lang.String) -> tryParse
    390:427:java.lang.Long tryParse(java.lang.String,int) -> tryParse
    464:464:com.google.common.base.Converter stringConverter() -> stringConverter
    484:486:long[] ensureCapacity(long[],int,int) -> ensureCapacity
    493:495:long[] copyOf(long[],int) -> copyOf
    508:519:java.lang.String join(java.lang.String,long[]) -> join
    539:539:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    574:585:long[] toArray(java.util.Collection) -> toArray
    603:606:java.util.List asList(long[]) -> asList
    54:54:int access$000(long[],long,int,int) -> access$000
    54:54:int access$100(long[],long,int,int) -> access$100
    317:317:void <clinit>() -> <clinit>
com.google.common.primitives.Longs$LexicographicalComparator -> com.google.common.primitives.Longs$LexicographicalComparator:
    com.google.common.primitives.Longs$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Longs$LexicographicalComparator[] $VALUES -> $VALUES
    542:542:com.google.common.primitives.Longs$LexicographicalComparator[] values() -> values
    542:542:com.google.common.primitives.Longs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    542:542:void <init>(java.lang.String,int) -> <init>
    547:554:int compare(long[],long[]) -> compare
    542:542:int compare(java.lang.Object,java.lang.Object) -> compare
    542:543:void <clinit>() -> <clinit>
com.google.common.primitives.Longs$LongArrayAsList -> com.google.common.primitives.Longs$LongArrayAsList:
    long[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    617:618:void <init>(long[]) -> <init>
    620:624:void <init>(long[],int,int) -> <init>
    628:628:int size() -> size
    633:633:boolean isEmpty() -> isEmpty
    638:639:java.lang.Long get(int) -> get
    645:645:boolean contains(java.lang.Object) -> contains
    651:657:int indexOf(java.lang.Object) -> indexOf
    663:669:int lastIndexOf(java.lang.Object) -> lastIndexOf
    674:678:java.lang.Long set(int,java.lang.Long) -> set
    683:688:java.util.List subList(int,int) -> subList
    693:709:boolean equals(java.lang.Object) -> equals
    714:718:int hashCode() -> hashCode
    723:728:java.lang.String toString() -> toString
    733:736:long[] toLongArray() -> toLongArray
    609:609:java.lang.Object set(int,java.lang.Object) -> set
    609:609:java.lang.Object get(int) -> get
com.google.common.primitives.Longs$LongConverter -> com.google.common.primitives.Longs$LongConverter:
    com.google.common.primitives.Longs$LongConverter INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    431:431:void <init>() -> <init>
    436:436:java.lang.Long doForward(java.lang.String) -> doForward
    441:441:java.lang.String doBackward(java.lang.Long) -> doBackward
    446:446:java.lang.String toString() -> toString
    450:450:java.lang.Object readResolve() -> readResolve
    431:431:java.lang.Object doBackward(java.lang.Object) -> doBackward
    431:431:java.lang.Object doForward(java.lang.Object) -> doForward
    432:432:void <clinit>() -> <clinit>
com.google.common.primitives.ParseRequest -> com.google.common.primitives.ParseRequest:
    java.lang.String rawValue -> rawValue
    int radix -> radix
    30:33:void <init>(java.lang.String,int) -> <init>
    36:58:com.google.common.primitives.ParseRequest fromString(java.lang.String) -> fromString
com.google.common.primitives.Primitives -> com.google.common.primitives.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    37:37:void <init>() -> <init>
    70:72:void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    82:82:java.util.Set allPrimitiveTypes() -> allPrimitiveTypes
    92:92:java.util.Set allWrapperTypes() -> allWrapperTypes
    102:102:boolean isWrapperType(java.lang.Class) -> isWrapperType
    115:120:java.lang.Class wrap(java.lang.Class) -> wrap
    133:138:java.lang.Class unwrap(java.lang.Class) -> unwrap
    48:63:void <clinit>() -> <clinit>
com.google.common.primitives.Shorts -> com.google.common.primitives.Shorts:
    int BYTES -> BYTES
    short MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    54:54:void <init>() -> <init>
    77:77:int hashCode(short) -> hashCode
    90:95:short checkedCast(long) -> checkedCast
    107:113:short saturatedCast(long) -> saturatedCast
    129:129:int compare(short,short) -> compare
    142:147:boolean contains(short[],short) -> contains
    160:160:int indexOf(short[],short) -> indexOf
    165:170:int indexOf(short[],short,int,int) -> indexOf
    185:200:int indexOf(short[],short[]) -> indexOf
    213:213:int lastIndexOf(short[],short) -> lastIndexOf
    218:223:int lastIndexOf(short[],short,int,int) -> lastIndexOf
    235:242:short min(short[]) -> min
    254:261:short max(short[]) -> max
    274:284:short[] concat(short[][]) -> concat
    301:301:byte[] toByteArray(short) -> toByteArray
    321:322:short fromByteArray(byte[]) -> fromByteArray
    334:334:short fromBytes(byte,byte) -> fromBytes
    371:371:com.google.common.base.Converter stringConverter() -> stringConverter
    391:393:short[] ensureCapacity(short[],int,int) -> ensureCapacity
    400:402:short[] copyOf(short[],int) -> copyOf
    415:426:java.lang.String join(java.lang.String,short[]) -> join
    446:446:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    481:492:short[] toArray(java.util.Collection) -> toArray
    510:513:java.util.List asList(short[]) -> asList
    53:53:int access$000(short[],short,int,int) -> access$000
    53:53:int access$100(short[],short,int,int) -> access$100
com.google.common.primitives.Shorts$LexicographicalComparator -> com.google.common.primitives.Shorts$LexicographicalComparator:
    com.google.common.primitives.Shorts$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Shorts$LexicographicalComparator[] $VALUES -> $VALUES
    449:449:com.google.common.primitives.Shorts$LexicographicalComparator[] values() -> values
    449:449:com.google.common.primitives.Shorts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    449:449:void <init>(java.lang.String,int) -> <init>
    454:461:int compare(short[],short[]) -> compare
    449:449:int compare(java.lang.Object,java.lang.Object) -> compare
    449:450:void <clinit>() -> <clinit>
com.google.common.primitives.Shorts$ShortArrayAsList -> com.google.common.primitives.Shorts$ShortArrayAsList:
    short[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    524:525:void <init>(short[]) -> <init>
    527:531:void <init>(short[],int,int) -> <init>
    535:535:int size() -> size
    540:540:boolean isEmpty() -> isEmpty
    545:546:java.lang.Short get(int) -> get
    552:552:boolean contains(java.lang.Object) -> contains
    558:564:int indexOf(java.lang.Object) -> indexOf
    570:576:int lastIndexOf(java.lang.Object) -> lastIndexOf
    581:585:java.lang.Short set(int,java.lang.Short) -> set
    590:595:java.util.List subList(int,int) -> subList
    600:616:boolean equals(java.lang.Object) -> equals
    621:625:int hashCode() -> hashCode
    630:635:java.lang.String toString() -> toString
    640:643:short[] toShortArray() -> toShortArray
    516:516:java.lang.Object set(int,java.lang.Object) -> set
    516:516:java.lang.Object get(int) -> get
com.google.common.primitives.Shorts$ShortConverter -> com.google.common.primitives.Shorts$ShortConverter:
    com.google.common.primitives.Shorts$ShortConverter INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    337:337:void <init>() -> <init>
    343:343:java.lang.Short doForward(java.lang.String) -> doForward
    348:348:java.lang.String doBackward(java.lang.Short) -> doBackward
    353:353:java.lang.String toString() -> toString
    357:357:java.lang.Object readResolve() -> readResolve
    337:337:java.lang.Object doBackward(java.lang.Object) -> doBackward
    337:337:java.lang.Object doForward(java.lang.Object) -> doForward
    339:339:void <clinit>() -> <clinit>
com.google.common.primitives.SignedBytes -> com.google.common.primitives.SignedBytes:
    byte MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    46:46:void <init>() -> <init>
    64:69:byte checkedCast(long) -> checkedCast
    81:87:byte saturatedCast(long) -> saturatedCast
    105:105:int compare(byte,byte) -> compare
    117:124:byte min(byte[]) -> min
    136:143:byte max(byte[]) -> max
    156:167:java.lang.String join(java.lang.String,byte[]) -> join
    187:187:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
com.google.common.primitives.SignedBytes$LexicographicalComparator -> com.google.common.primitives.SignedBytes$LexicographicalComparator:
    com.google.common.primitives.SignedBytes$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] $VALUES -> $VALUES
    190:190:com.google.common.primitives.SignedBytes$LexicographicalComparator[] values() -> values
    190:190:com.google.common.primitives.SignedBytes$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    190:190:void <init>(java.lang.String,int) -> <init>
    195:202:int compare(byte[],byte[]) -> compare
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    190:191:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    byte MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    byte MAX_VALUE -> MAX_VALUE
    int UNSIGNED_MASK -> UNSIGNED_MASK
    50:50:void <init>() -> <init>
    78:78:int toInt(byte) -> toInt
    92:96:byte checkedCast(long) -> checkedCast
    108:114:byte saturatedCast(long) -> saturatedCast
    130:130:int compare(byte,byte) -> compare
    143:151:byte min(byte[]) -> min
    164:172:byte max(byte[]) -> max
    183:183:java.lang.String toString(byte) -> toString
    199:204:java.lang.String toString(byte,int) -> toString
    218:218:byte parseUnsignedByte(java.lang.String) -> parseUnsignedByte
    235:240:byte parseUnsignedByte(java.lang.String,int) -> parseUnsignedByte
    255:266:java.lang.String join(java.lang.String,byte[]) -> join
    287:287:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    292:292:java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    java.lang.String UNSAFE_COMPARATOR_NAME -> UNSAFE_COMPARATOR_NAME
    java.util.Comparator BEST_COMPARATOR -> BEST_COMPARATOR
    303:424:void <init>() -> <init>
    446:453:java.util.Comparator getBestComparator() -> getBestComparator
    304:307:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator INSTANCE -> INSTANCE
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] $VALUES -> $VALUES
    424:424:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
    424:424:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    424:424:void <init>(java.lang.String,int) -> <init>
    429:436:int compare(byte[],byte[]) -> compare
    424:424:int compare(java.lang.Object,java.lang.Object) -> compare
    424:425:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator INSTANCE -> INSTANCE
    boolean BIG_ENDIAN -> BIG_ENDIAN
    sun.misc.Unsafe theUnsafe -> theUnsafe
    int BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $VALUES -> $VALUES
    309:309:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
    309:309:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    310:310:void <init>(java.lang.String,int) -> <init>
    359:379:sun.misc.Unsafe getUnsafe() -> getUnsafe
    385:420:int compare(byte[],byte[]) -> compare
    309:309:int compare(java.lang.Object,java.lang.Object) -> compare
    309:348:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    365:365:void <init>() -> <init>
    367:375:sun.misc.Unsafe run() -> run
    365:365:java.lang.Object run() -> run
com.google.common.primitives.UnsignedInteger -> com.google.common.primitives.UnsignedInteger:
    com.google.common.primitives.UnsignedInteger ZERO -> ZERO
    com.google.common.primitives.UnsignedInteger ONE -> ONE
    com.google.common.primitives.UnsignedInteger MAX_VALUE -> MAX_VALUE
    int value -> value
    53:56:void <init>(int) -> <init>
    71:71:com.google.common.primitives.UnsignedInteger fromIntBits(int) -> fromIntBits
    79:83:com.google.common.primitives.UnsignedInteger valueOf(long) -> valueOf
    93:98:com.google.common.primitives.UnsignedInteger valueOf(java.math.BigInteger) -> valueOf
    109:109:com.google.common.primitives.UnsignedInteger valueOf(java.lang.String) -> valueOf
    120:120:com.google.common.primitives.UnsignedInteger valueOf(java.lang.String,int) -> valueOf
    130:130:com.google.common.primitives.UnsignedInteger plus(com.google.common.primitives.UnsignedInteger) -> plus
    140:140:com.google.common.primitives.UnsignedInteger minus(com.google.common.primitives.UnsignedInteger) -> minus
    152:152:com.google.common.primitives.UnsignedInteger times(com.google.common.primitives.UnsignedInteger) -> times
    162:162:com.google.common.primitives.UnsignedInteger dividedBy(com.google.common.primitives.UnsignedInteger) -> dividedBy
    172:172:com.google.common.primitives.UnsignedInteger mod(com.google.common.primitives.UnsignedInteger) -> mod
    184:184:int intValue() -> intValue
    192:192:long longValue() -> longValue
    201:201:float floatValue() -> floatValue
    210:210:double doubleValue() -> doubleValue
    217:217:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    227:228:int compareTo(com.google.common.primitives.UnsignedInteger) -> compareTo
    233:233:int hashCode() -> hashCode
    238:242:boolean equals(java.lang.Object) -> equals
    250:250:java.lang.String toString() -> toString
    259:259:java.lang.String toString(int) -> toString
    44:44:int compareTo(java.lang.Object) -> compareTo
    47:49:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedInts -> com.google.common.primitives.UnsignedInts:
    long INT_MASK -> INT_MASK
    54:54:void <init>() -> <init>
    57:57:int flip(int) -> flip
    71:71:int compare(int,int) -> compare
    79:79:long toLong(int) -> toLong
    92:100:int min(int[]) -> min
    113:121:int max(int[]) -> max
    134:145:java.lang.String join(java.lang.String,int[]) -> join
    162:162:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    190:190:int divide(int,int) -> divide
    203:203:int remainder(int,int) -> remainder
    222:230:int decode(java.lang.String) -> decode
    242:242:int parseUnsignedInt(java.lang.String) -> parseUnsignedInt
    257:263:int parseUnsignedInt(java.lang.String,int) -> parseUnsignedInt
    271:271:java.lang.String toString(int) -> toString
    285:286:java.lang.String toString(int,int) -> toString
com.google.common.primitives.UnsignedInts$LexicographicalComparator -> com.google.common.primitives.UnsignedInts$LexicographicalComparator:
    com.google.common.primitives.UnsignedInts$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.UnsignedInts$LexicographicalComparator[] $VALUES -> $VALUES
    165:165:com.google.common.primitives.UnsignedInts$LexicographicalComparator[] values() -> values
    165:165:com.google.common.primitives.UnsignedInts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    165:165:void <init>(java.lang.String,int) -> <init>
    170:176:int compare(int[],int[]) -> compare
    165:165:int compare(java.lang.Object,java.lang.Object) -> compare
    165:166:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedLong -> com.google.common.primitives.UnsignedLong:
    long UNSIGNED_MASK -> UNSIGNED_MASK
    com.google.common.primitives.UnsignedLong ZERO -> ZERO
    com.google.common.primitives.UnsignedLong ONE -> ONE
    com.google.common.primitives.UnsignedLong MAX_VALUE -> MAX_VALUE
    long value -> value
    53:55:void <init>(long) -> <init>
    72:72:com.google.common.primitives.UnsignedLong fromLongBits(long) -> fromLongBits
    82:83:com.google.common.primitives.UnsignedLong valueOf(long) -> valueOf
    93:98:com.google.common.primitives.UnsignedLong valueOf(java.math.BigInteger) -> valueOf
    109:109:com.google.common.primitives.UnsignedLong valueOf(java.lang.String) -> valueOf
    121:121:com.google.common.primitives.UnsignedLong valueOf(java.lang.String,int) -> valueOf
    132:132:com.google.common.primitives.UnsignedLong plus(com.google.common.primitives.UnsignedLong) -> plus
    143:143:com.google.common.primitives.UnsignedLong minus(com.google.common.primitives.UnsignedLong) -> minus
    154:154:com.google.common.primitives.UnsignedLong times(com.google.common.primitives.UnsignedLong) -> times
    164:164:com.google.common.primitives.UnsignedLong dividedBy(com.google.common.primitives.UnsignedLong) -> dividedBy
    174:174:com.google.common.primitives.UnsignedLong mod(com.google.common.primitives.UnsignedLong) -> mod
    182:182:int intValue() -> intValue
    194:194:long longValue() -> longValue
    204:208:float floatValue() -> floatValue
    218:222:double doubleValue() -> doubleValue
    229:233:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    238:239:int compareTo(com.google.common.primitives.UnsignedLong) -> compareTo
    244:244:int hashCode() -> hashCode
    249:253:boolean equals(java.lang.Object) -> equals
    261:261:java.lang.String toString() -> toString
    270:270:java.lang.String toString(int) -> toString
    42:42:int compareTo(java.lang.Object) -> compareTo
    47:49:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    long MAX_VALUE -> MAX_VALUE
    long[] maxValueDivs -> maxValueDivs
    int[] maxValueMods -> maxValueMods
    int[] maxSafeDigits -> maxSafeDigits
    55:55:void <init>() -> <init>
    65:65:long flip(long) -> flip
    79:79:int compare(long,long) -> compare
    92:100:long min(long[]) -> min
    113:121:long max(long[]) -> max
    134:145:java.lang.String join(java.lang.String,long[]) -> join
    163:163:java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    191:212:long divide(long,long) -> divide
    226:247:long remainder(long,long) -> remainder
    259:259:long parseUnsignedLong(java.lang.String) -> parseUnsignedLong
    279:287:long decode(java.lang.String) -> decode
    303:324:long parseUnsignedLong(java.lang.String,int) -> parseUnsignedLong
    334:346:boolean overflowInParse(long,int,int) -> overflowInParse
    354:354:java.lang.String toString(long) -> toString
    368:392:java.lang.String toString(long,int) -> toString
    397:408:void <clinit>() -> <clinit>
com.google.common.primitives.UnsignedLongs$LexicographicalComparator -> com.google.common.primitives.UnsignedLongs$LexicographicalComparator:
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator[] $VALUES -> $VALUES
    166:166:com.google.common.primitives.UnsignedLongs$LexicographicalComparator[] values() -> values
    166:166:com.google.common.primitives.UnsignedLongs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    166:166:void <init>(java.lang.String,int) -> <init>
    171:177:int compare(long[],long[]) -> compare
    166:166:int compare(java.lang.Object,java.lang.Object) -> compare
    166:167:void <clinit>() -> <clinit>
com.google.common.primitives.package-info -> com.google.common.primitives.package-info:
com.google.common.reflect.AbstractInvocationHandler -> com.google.common.reflect.AbstractInvocationHandler:
    java.lang.Object[] NO_ARGS -> NO_ARGS
    45:45:void <init>() -> <init>
    65:87:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object handleInvocation(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> handleInvocation
    110:110:boolean equals(java.lang.Object) -> equals
    118:118:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    131:131:boolean isProxyOfSameInterfaces(java.lang.Object,java.lang.Class) -> isProxyOfSameInterfaces
    47:47:void <clinit>() -> <clinit>
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    java.util.logging.Logger logger -> logger
    com.google.common.base.Predicate IS_TOP_LEVEL -> IS_TOP_LEVEL
    com.google.common.base.Splitter CLASS_PATH_ATTRIBUTE_SEPARATOR -> CLASS_PATH_ATTRIBUTE_SEPARATOR
    java.lang.String CLASS_FILE_NAME_EXTENSION -> CLASS_FILE_NAME_EXTENSION
    com.google.common.collect.ImmutableSet resources -> resources
    76:78:void <init>(com.google.common.collect.ImmutableSet) -> <init>
    90:92:com.google.common.reflect.ClassPath from(java.lang.ClassLoader) -> from
    100:100:com.google.common.collect.ImmutableSet getResources() -> getResources
    109:109:com.google.common.collect.ImmutableSet getAllClasses() -> getAllClasses
    114:114:com.google.common.collect.ImmutableSet getTopLevelClasses() -> getTopLevelClasses
    119:126:com.google.common.collect.ImmutableSet getTopLevelClasses(java.lang.String) -> getTopLevelClasses
    134:142:com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String) -> getTopLevelClassesRecursive
    465:466:java.lang.String getClassName(java.lang.String) -> getClassName
    59:59:com.google.common.base.Splitter access$100() -> access$100
    59:59:java.util.logging.Logger access$200() -> access$200
    60:69:void <clinit>() -> <clinit>
com.google.common.reflect.ClassPath$1 -> com.google.common.reflect.ClassPath$1:
    62:62:void <init>() -> <init>
    64:64:boolean apply(com.google.common.reflect.ClassPath$ClassInfo) -> apply
    62:62:boolean apply(java.lang.Object) -> apply
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    java.lang.String className -> className
    219:221:void <init>(java.lang.String,java.lang.ClassLoader) -> <init>
    230:230:java.lang.String getPackageName() -> getPackageName
    240:253:java.lang.String getSimpleName() -> getSimpleName
    263:263:java.lang.String getName() -> getName
    274:277:java.lang.Class load() -> load
    282:282:java.lang.String toString() -> toString
    215:215:java.lang.String access$000(com.google.common.reflect.ClassPath$ClassInfo) -> access$000
com.google.common.reflect.ClassPath$DefaultScanner -> com.google.common.reflect.ClassPath$DefaultScanner:
    com.google.common.collect.SetMultimap resources -> resources
    414:415:void <init>() -> <init>
    419:423:com.google.common.collect.ImmutableSet getResources() -> getResources
    427:435:void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
    439:440:void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    444:461:void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String) -> scanDirectory
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    java.lang.String resourceName -> resourceName
    java.lang.ClassLoader loader -> loader
    158:161:com.google.common.reflect.ClassPath$ResourceInfo of(java.lang.String,java.lang.ClassLoader) -> of
    165:168:void <init>(java.lang.String,java.lang.ClassLoader) -> <init>
    178:182:java.net.URL url() -> url
    187:187:java.lang.String getResourceName() -> getResourceName
    191:191:int hashCode() -> hashCode
    195:200:boolean equals(java.lang.Object) -> equals
    205:205:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> com.google.common.reflect.ClassPath$Scanner:
    java.util.Set scannedUris -> scannedUris
    291:295:void <init>() -> <init>
    298:301:void scan(java.lang.ClassLoader) -> scan
    void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
    311:314:void scan(java.io.File,java.lang.ClassLoader) -> scan
    317:325:void scanFrom(java.io.File,java.lang.ClassLoader) -> scanFrom
    330:345:void scanJar(java.io.File,java.lang.ClassLoader) -> scanJar
    356:377:com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> getClassPathFromManifest
    382:399:com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> getClassPathEntries
    410:410:java.net.URL getClassPathEntry(java.io.File,java.lang.String) -> getClassPathEntry
com.google.common.reflect.Element -> com.google.common.reflect.Element:
    java.lang.reflect.AccessibleObject accessibleObject -> accessibleObject
    java.lang.reflect.Member member -> member
    42:46:void <init>(java.lang.reflect.AccessibleObject) -> <init>
    49:49:com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
    53:53:boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    57:57:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    61:61:java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    65:65:java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    69:70:void setAccessible(boolean) -> setAccessible
    73:73:boolean isAccessible() -> isAccessible
    77:77:java.lang.Class getDeclaringClass() -> getDeclaringClass
    81:81:java.lang.String getName() -> getName
    85:85:int getModifiers() -> getModifiers
    89:89:boolean isSynthetic() -> isSynthetic
    94:94:boolean isPublic() -> isPublic
    99:99:boolean isProtected() -> isProtected
    104:104:boolean isPackagePrivate() -> isPackagePrivate
    109:109:boolean isPrivate() -> isPrivate
    114:114:boolean isStatic() -> isStatic
    125:125:boolean isFinal() -> isFinal
    130:130:boolean isAbstract() -> isAbstract
    135:135:boolean isNative() -> isNative
    140:140:boolean isSynchronized() -> isSynchronized
    145:145:boolean isVolatile() -> isVolatile
    150:150:boolean isTransient() -> isTransient
    154:158:boolean equals(java.lang.Object) -> equals
    162:162:int hashCode() -> hashCode
    166:166:java.lang.String toString() -> toString
com.google.common.reflect.ImmutableTypeToInstanceMap -> com.google.common.reflect.ImmutableTypeToInstanceMap:
    com.google.common.collect.ImmutableMap delegate -> delegate
    38:38:com.google.common.reflect.ImmutableTypeToInstanceMap of() -> of
    43:43:com.google.common.reflect.ImmutableTypeToInstanceMap$Builder builder() -> builder
    100:102:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    105:105:java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    114:114:java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
    118:118:java.lang.Object getInstance(java.lang.Class) -> getInstance
    127:127:java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    131:131:java.util.Map delegate() -> delegate
    136:136:java.lang.Object trustedGet(com.google.common.reflect.TypeToken) -> trustedGet
    32:32:java.lang.Object delegate() -> delegate
    33:33:void <init>(com.google.common.collect.ImmutableMap,com.google.common.reflect.ImmutableTypeToInstanceMap$1) -> <init>
com.google.common.reflect.ImmutableTypeToInstanceMap$1 -> com.google.common.reflect.ImmutableTypeToInstanceMap$1:
com.google.common.reflect.ImmutableTypeToInstanceMap$Builder -> com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> mapBuilder
    64:67:void <init>() -> <init>
    74:75:com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    83:84:com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(com.google.common.reflect.TypeToken,java.lang.Object) -> put
    94:94:com.google.common.reflect.ImmutableTypeToInstanceMap build() -> build
    63:63:void <init>(com.google.common.reflect.ImmutableTypeToInstanceMap$1) -> <init>
com.google.common.reflect.Invokable -> com.google.common.reflect.Invokable:
    63:64:void <init>(java.lang.reflect.AccessibleObject) -> <init>
    68:68:com.google.common.reflect.Invokable from(java.lang.reflect.Method) -> from
    73:73:com.google.common.reflect.Invokable from(java.lang.reflect.Constructor) -> from
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
    102:102:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    109:109:com.google.common.reflect.TypeToken getReturnType() -> getReturnType
    118:125:com.google.common.collect.ImmutableList getParameters() -> getParameters
    130:138:com.google.common.collect.ImmutableList getExceptionTypes() -> getExceptionTypes
    148:148:com.google.common.reflect.Invokable returning(java.lang.Class) -> returning
    153:159:com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken) -> returning
    164:164:java.lang.Class getDeclaringClass() -> getDeclaringClass
    171:171:com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> invokeInternal
    java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    java.lang.reflect.Type[] getGenericExceptionTypes() -> getGenericExceptionTypes
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> getParameterAnnotations
    java.lang.reflect.Type getGenericReturnType() -> getGenericReturnType
    59:59:java.lang.String toString() -> toString
    59:59:int hashCode() -> hashCode
    59:59:boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Invokable$ConstructorInvokable -> com.google.common.reflect.Invokable$ConstructorInvokable:
    java.lang.reflect.Constructor constructor -> constructor
    235:237:void <init>(java.lang.reflect.Constructor) -> <init>
    242:244:java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> invokeInternal
    250:255:java.lang.reflect.Type getGenericReturnType() -> getGenericReturnType
    260:269:java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    273:273:java.lang.reflect.Type[] getGenericExceptionTypes() -> getGenericExceptionTypes
    277:277:java.lang.annotation.Annotation[][] getParameterAnnotations() -> getParameterAnnotations
    290:299:java.lang.reflect.TypeVariable[] getTypeParameters() -> getTypeParameters
    303:303:boolean isOverridable() -> isOverridable
    307:307:boolean isVarArgs() -> isVarArgs
    311:327:boolean mayNeedHiddenThis() -> mayNeedHiddenThis
com.google.common.reflect.Invokable$MethodInvokable -> com.google.common.reflect.Invokable$MethodInvokable:
    java.lang.reflect.Method method -> method
    191:193:void <init>(java.lang.reflect.Method) -> <init>
    197:197:java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> invokeInternal
    201:201:java.lang.reflect.Type getGenericReturnType() -> getGenericReturnType
    205:205:java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    209:209:java.lang.reflect.Type[] getGenericExceptionTypes() -> getGenericExceptionTypes
    213:213:java.lang.annotation.Annotation[][] getParameterAnnotations() -> getParameterAnnotations
    217:217:java.lang.reflect.TypeVariable[] getTypeParameters() -> getTypeParameters
    221:221:boolean isOverridable() -> isOverridable
    226:226:boolean isVarArgs() -> isVarArgs
com.google.common.reflect.MutableTypeToInstanceMap -> com.google.common.reflect.MutableTypeToInstanceMap:
    java.util.Map backingMap -> backingMap
    43:102:void <init>() -> <init>
    51:51:java.lang.Object getInstance(java.lang.Class) -> getInstance
    57:57:java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    63:63:java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    69:69:java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
    74:74:java.lang.Object put(com.google.common.reflect.TypeToken,java.lang.Object) -> put
    79:79:void putAll(java.util.Map) -> putAll
    83:83:java.util.Set entrySet() -> entrySet
    87:87:java.util.Map delegate() -> delegate
    93:93:java.lang.Object trustedPut(com.google.common.reflect.TypeToken,java.lang.Object) -> trustedPut
    99:99:java.lang.Object trustedGet(com.google.common.reflect.TypeToken) -> trustedGet
    42:42:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    42:42:java.lang.Object delegate() -> delegate
com.google.common.reflect.MutableTypeToInstanceMap$1 -> com.google.common.reflect.MutableTypeToInstanceMap$1:
com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry -> com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry:
    java.util.Map$Entry delegate -> delegate
    107:107:java.util.Set transformEntries(java.util.Set) -> transformEntries
    124:124:java.util.Iterator transformEntries(java.util.Iterator) -> transformEntries
    131:133:void <init>(java.util.Map$Entry) -> <init>
    136:136:java.util.Map$Entry delegate() -> delegate
    140:140:java.lang.Object setValue(java.lang.Object) -> setValue
    102:102:java.lang.Object delegate() -> delegate
    102:102:java.util.Iterator access$000(java.util.Iterator) -> access$000
    102:102:void <init>(java.util.Map$Entry,com.google.common.reflect.MutableTypeToInstanceMap$1) -> <init>
com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1 -> com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1:
    java.util.Set val$entries -> val$entries
    107:107:void <init>(java.util.Set) -> <init>
    109:109:java.util.Set delegate() -> delegate
    112:112:java.util.Iterator iterator() -> iterator
    115:115:java.lang.Object[] toArray() -> toArray
    118:118:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    107:107:java.util.Collection delegate() -> delegate
    107:107:java.lang.Object delegate() -> delegate
com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2 -> com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2:
    124:124:void <init>() -> <init>
    126:126:java.util.Map$Entry apply(java.util.Map$Entry) -> apply
    124:124:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.reflect.Parameter -> com.google.common.reflect.Parameter:
    com.google.common.reflect.Invokable declaration -> declaration
    int position -> position
    com.google.common.reflect.TypeToken type -> type
    com.google.common.collect.ImmutableList annotations -> annotations
    48:53:void <init>(com.google.common.reflect.Invokable,int,com.google.common.reflect.TypeToken,java.lang.annotation.Annotation[]) -> <init>
    57:57:com.google.common.reflect.TypeToken getType() -> getType
    62:62:com.google.common.reflect.Invokable getDeclaringInvokable() -> getDeclaringInvokable
    66:66:boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    72:78:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    82:82:java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    90:90:java.lang.annotation.Annotation[] getAnnotationsByType(java.lang.Class) -> getAnnotationsByType
    98:98:java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    107:108:java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Class) -> getDeclaredAnnotation
    120:120:java.lang.annotation.Annotation[] getDeclaredAnnotationsByType(java.lang.Class) -> getDeclaredAnnotationsByType
    126:130:boolean equals(java.lang.Object) -> equals
    134:134:int hashCode() -> hashCode
    138:138:java.lang.String toString() -> toString
com.google.common.reflect.Reflection -> com.google.common.reflect.Reflection:
    41:41:java.lang.String getPackageName(java.lang.Class) -> getPackageName
    50:51:java.lang.String getPackageName(java.lang.String) -> getPackageName
    67:74:void initialize(java.lang.Class[]) -> initialize
    88:94:java.lang.Object newProxy(java.lang.Class,java.lang.reflect.InvocationHandler) -> newProxy
    97:97:void <init>() -> <init>
com.google.common.reflect.TypeCapture -> com.google.common.reflect.TypeCapture:
    29:29:void <init>() -> <init>
    33:36:java.lang.reflect.Type capture() -> capture
com.google.common.reflect.TypeParameter -> com.google.common.reflect.TypeParameter:
    java.lang.reflect.TypeVariable typeVariable -> typeVariable
    46:50:void <init>() -> <init>
    53:53:int hashCode() -> hashCode
    57:61:boolean equals(java.lang.Object) -> equals
    65:65:java.lang.String toString() -> toString
com.google.common.reflect.TypeResolver -> com.google.common.reflect.TypeResolver:
    com.google.common.reflect.TypeResolver$TypeTable typeTable -> typeTable
    59:61:void <init>() -> <init>
    63:65:void <init>(com.google.common.reflect.TypeResolver$TypeTable) -> <init>
    68:68:com.google.common.reflect.TypeResolver accordingTo(java.lang.reflect.Type) -> accordingTo
    91:93:com.google.common.reflect.TypeResolver where(java.lang.reflect.Type,java.lang.reflect.Type) -> where
    98:98:com.google.common.reflect.TypeResolver where(java.util.Map) -> where
    103:156:void populateTypeMappings(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type) -> populateTypeMappings
    163:174:java.lang.reflect.Type resolveType(java.lang.reflect.Type) -> resolveType
    179:183:java.lang.reflect.Type[] resolveTypes(java.lang.reflect.Type[]) -> resolveTypes
    187:189:java.lang.reflect.WildcardType resolveWildcardType(java.lang.reflect.WildcardType) -> resolveWildcardType
    194:196:java.lang.reflect.Type resolveGenericArrayType(java.lang.reflect.GenericArrayType) -> resolveGenericArrayType
    200:206:java.lang.reflect.ParameterizedType resolveParameterizedType(java.lang.reflect.ParameterizedType) -> resolveParameterizedType
    212:214:java.lang.Object expectArgument(java.lang.Class,java.lang.Object) -> expectArgument
    55:55:java.lang.Object access$000(java.lang.Class,java.lang.Object) -> access$000
    55:55:void access$100(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type) -> access$100
    55:55:void <init>(com.google.common.reflect.TypeResolver$TypeTable,com.google.common.reflect.TypeResolver$1) -> <init>
    55:55:java.lang.reflect.Type[] access$300(com.google.common.reflect.TypeResolver,java.lang.reflect.Type[]) -> access$300
com.google.common.reflect.TypeResolver$1 -> com.google.common.reflect.TypeResolver$1:
    java.util.Map val$mappings -> val$mappings
    java.lang.reflect.Type val$to -> val$to
    111:111:void <init>(java.util.Map,java.lang.reflect.Type) -> <init>
    113:114:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    116:131:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
    133:143:void visitParameterizedType(java.lang.reflect.ParameterizedType) -> visitParameterizedType
    145:148:void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> visitGenericArrayType
    153:153:void visitClass(java.lang.Class) -> visitClass
com.google.common.reflect.TypeResolver$TypeMappingIntrospector -> com.google.common.reflect.TypeResolver$TypeMappingIntrospector:
    com.google.common.reflect.TypeResolver$WildcardCapturer wildcardCapturer -> wildcardCapturer
    java.util.Map mappings -> mappings
    313:317:void <init>() -> <init>
    325:327:com.google.common.collect.ImmutableMap getTypeMappings(java.lang.reflect.Type) -> getTypeMappings
    331:333:void visitClass(java.lang.Class) -> visitClass
    336:345:void visitParameterizedType(java.lang.reflect.ParameterizedType) -> visitParameterizedType
    348:349:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    352:353:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
    356:376:void map(com.google.common.reflect.TypeResolver$TypeVariableKey,java.lang.reflect.Type) -> map
    315:315:void <clinit>() -> <clinit>
com.google.common.reflect.TypeResolver$TypeTable -> com.google.common.reflect.TypeResolver$TypeTable:
    com.google.common.collect.ImmutableMap map -> map
    222:224:void <init>() -> <init>
    226:228:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    232:240:com.google.common.reflect.TypeResolver$TypeTable where(java.util.Map) -> where
    244:254:java.lang.reflect.Type resolve(java.lang.reflect.TypeVariable) -> resolve
    266:309:java.lang.reflect.Type resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable) -> resolveInternal
com.google.common.reflect.TypeResolver$TypeTable$1 -> com.google.common.reflect.TypeResolver$TypeTable$1:
    java.lang.reflect.TypeVariable val$var -> val$var
    com.google.common.reflect.TypeResolver$TypeTable val$unguarded -> val$unguarded
    com.google.common.reflect.TypeResolver$TypeTable this$0 -> this$0
    245:245:void <init>(com.google.common.reflect.TypeResolver$TypeTable,java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable) -> <init>
    248:251:java.lang.reflect.Type resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable) -> resolveInternal
com.google.common.reflect.TypeResolver$TypeVariableKey -> com.google.common.reflect.TypeResolver$TypeVariableKey:
    java.lang.reflect.TypeVariable var -> var
    459:461:void <init>(java.lang.reflect.TypeVariable) -> <init>
    464:464:int hashCode() -> hashCode
    468:472:boolean equals(java.lang.Object) -> equals
    477:477:java.lang.String toString() -> toString
    482:485:java.lang.Object forLookup(java.lang.reflect.Type) -> forLookup
    494:497:boolean equalsType(java.lang.reflect.Type) -> equalsType
    502:502:boolean equalsTypeVariable(java.lang.reflect.TypeVariable) -> equalsTypeVariable
com.google.common.reflect.TypeResolver$WildcardCapturer -> com.google.common.reflect.TypeResolver$WildcardCapturer:
    java.util.concurrent.atomic.AtomicInteger id -> id
    386:388:void <init>() -> <init>
    391:423:java.lang.reflect.Type capture(java.lang.reflect.Type) -> capture
    427:430:java.lang.reflect.Type captureNullable(java.lang.reflect.Type) -> captureNullable
    434:438:java.lang.reflect.Type[] capture(java.lang.reflect.Type[]) -> capture
    386:386:void <init>(com.google.common.reflect.TypeResolver$1) -> <init>
com.google.common.reflect.TypeToInstanceMap -> com.google.common.reflect.TypeToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
com.google.common.reflect.TypeToken -> com.google.common.reflect.TypeToken:
    java.lang.reflect.Type runtimeType -> runtimeType
    com.google.common.reflect.TypeResolver typeResolver -> typeResolver
    112:120:void <init>() -> <init>
    139:146:void <init>(java.lang.Class) -> <init>
    148:150:void <init>(java.lang.reflect.Type) -> <init>
    154:154:com.google.common.reflect.TypeToken of(java.lang.Class) -> of
    159:159:com.google.common.reflect.TypeToken of(java.lang.reflect.Type) -> of
    178:181:java.lang.Class getRawType() -> getRawType
    186:186:java.lang.reflect.Type getType() -> getType
    205:210:com.google.common.reflect.TypeToken where(com.google.common.reflect.TypeParameter,com.google.common.reflect.TypeToken) -> where
    229:229:com.google.common.reflect.TypeToken where(com.google.common.reflect.TypeParameter,java.lang.Class) -> where
    240:245:com.google.common.reflect.TypeToken resolveType(java.lang.reflect.Type) -> resolveType
    249:252:java.lang.reflect.Type[] resolveInPlace(java.lang.reflect.Type[]) -> resolveInPlace
    256:259:com.google.common.reflect.TypeToken resolveSupertype(java.lang.reflect.Type) -> resolveSupertype
    277:291:com.google.common.reflect.TypeToken getGenericSuperclass() -> getGenericSuperclass
    295:301:com.google.common.reflect.TypeToken boundAsSuperclass(java.lang.reflect.Type) -> boundAsSuperclass
    317:330:com.google.common.collect.ImmutableList getGenericInterfaces() -> getGenericInterfaces
    334:342:com.google.common.collect.ImmutableList boundsAsInterfaces(java.lang.reflect.Type[]) -> boundsAsInterfaces
    357:357:com.google.common.reflect.TypeToken$TypeSet getTypes() -> getTypes
    366:380:com.google.common.reflect.TypeToken getSupertype(java.lang.Class) -> getSupertype
    389:405:com.google.common.reflect.TypeToken getSubtype(java.lang.Class) -> getSubtype
    410:433:java.lang.reflect.Type replaceTypeVariablesWithWildcard(java.lang.reflect.Type,java.lang.Class) -> replaceTypeVariablesWithWildcard
    438:442:java.lang.reflect.Type[] replaceTypeVariablesWithWildcard(java.lang.reflect.Type[],java.lang.Class) -> replaceTypeVariablesWithWildcard
    455:455:boolean isAssignableFrom(com.google.common.reflect.TypeToken) -> isAssignableFrom
    468:468:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    479:479:boolean isSupertypeOf(com.google.common.reflect.TypeToken) -> isSupertypeOf
    490:490:boolean isSupertypeOf(java.lang.reflect.Type) -> isSupertypeOf
    501:501:boolean isSubtypeOf(com.google.common.reflect.TypeToken) -> isSubtypeOf
    512:542:boolean isSubtypeOf(java.lang.reflect.Type) -> isSubtypeOf
    551:551:boolean isArray() -> isArray
    560:560:boolean isPrimitive() -> isPrimitive
    570:575:com.google.common.reflect.TypeToken wrap() -> wrap
    579:579:boolean isWrapper() -> isWrapper
    589:594:com.google.common.reflect.TypeToken unwrap() -> unwrap
    602:606:com.google.common.reflect.TypeToken getComponentType() -> getComponentType
    615:617:com.google.common.reflect.Invokable method(java.lang.reflect.Method) -> method
    642:644:com.google.common.reflect.Invokable constructor(java.lang.reflect.Constructor) -> constructor
    819:823:boolean equals(java.lang.Object) -> equals
    827:827:int hashCode() -> hashCode
    831:831:java.lang.String toString() -> toString
    838:838:java.lang.Object writeReplace() -> writeReplace
    846:863:com.google.common.reflect.TypeToken rejectTypeVariables() -> rejectTypeVariables
    867:872:boolean someRawTypeIsSubclassOf(java.lang.Class) -> someRawTypeIsSubclassOf
    876:894:boolean isSubtypeOfParameterizedType(java.lang.reflect.ParameterizedType) -> isSubtypeOfParameterizedType
    898:909:boolean isSubTypeOfArrayType(java.lang.reflect.GenericArrayType) -> isSubTypeOfArrayType
    914:924:boolean isSuperTypeOfArray(java.lang.reflect.GenericArrayType) -> isSuperTypeOfArray
    936:948:boolean is(java.lang.reflect.Type) -> is
    953:953:com.google.common.reflect.TypeToken$Bounds every(java.lang.reflect.Type[]) -> every
    958:958:com.google.common.reflect.TypeToken$Bounds any(java.lang.reflect.Type[]) -> any
    991:1014:com.google.common.collect.ImmutableSet getRawTypes() -> getRawTypes
    1025:1043:com.google.common.reflect.TypeToken toGenericType(java.lang.Class) -> toGenericType
    1049:1058:com.google.common.reflect.TypeToken getSupertypeFromUpperBounds(java.lang.Class,java.lang.reflect.Type[]) -> getSupertypeFromUpperBounds
    1062:1068:com.google.common.reflect.TypeToken getSubtypeFromLowerBounds(java.lang.Class,java.lang.reflect.Type[]) -> getSubtypeFromLowerBounds
    1075:1084:com.google.common.reflect.TypeToken getArraySupertype(java.lang.Class) -> getArraySupertype
    1089:1095:com.google.common.reflect.TypeToken getArraySubtype(java.lang.Class) -> getArraySubtype
    1099:1115:java.lang.reflect.Type resolveTypeArgsForSubclass(java.lang.Class) -> resolveTypeArgsForSubclass
    1125:1125:java.lang.reflect.Type newArrayClassOrGenericArrayType(java.lang.reflect.Type) -> newArrayClassOrGenericArrayType
    95:95:java.lang.reflect.Type access$000(java.lang.reflect.Type,java.lang.Class) -> access$000
    95:95:java.lang.reflect.Type[] access$100(java.lang.reflect.Type[],java.lang.Class) -> access$100
    95:95:java.lang.reflect.Type[] access$200(com.google.common.reflect.TypeToken,java.lang.reflect.Type[]) -> access$200
    95:95:com.google.common.collect.ImmutableSet access$400(com.google.common.reflect.TypeToken) -> access$400
    95:95:java.lang.reflect.Type access$600(com.google.common.reflect.TypeToken) -> access$600
    95:95:void <init>(java.lang.reflect.Type,com.google.common.reflect.TypeToken$1) -> <init>
com.google.common.reflect.TypeToken$1 -> com.google.common.reflect.TypeToken$1:
    java.lang.Class val$declaringClass -> val$declaringClass
    java.util.concurrent.atomic.AtomicReference val$result -> val$result
    413:413:void <init>(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> <init>
    415:418:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    420:428:void visitParameterizedType(java.lang.reflect.ParameterizedType) -> visitParameterizedType
    429:429:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
    430:430:void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> visitGenericArrayType
    431:431:void visitClass(java.lang.Class) -> visitClass
com.google.common.reflect.TypeToken$2 -> com.google.common.reflect.TypeToken$2:
    com.google.common.reflect.TypeToken this$0 -> this$0
    617:617:void <init>(com.google.common.reflect.TypeToken,java.lang.reflect.Method) -> <init>
    619:619:java.lang.reflect.Type getGenericReturnType() -> getGenericReturnType
    622:622:java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    625:625:java.lang.reflect.Type[] getGenericExceptionTypes() -> getGenericExceptionTypes
    628:628:com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
    631:631:java.lang.String toString() -> toString
com.google.common.reflect.TypeToken$3 -> com.google.common.reflect.TypeToken$3:
    com.google.common.reflect.TypeToken this$0 -> this$0
    644:644:void <init>(com.google.common.reflect.TypeToken,java.lang.reflect.Constructor) -> <init>
    646:646:java.lang.reflect.Type getGenericReturnType() -> getGenericReturnType
    649:649:java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    652:652:java.lang.reflect.Type[] getGenericExceptionTypes() -> getGenericExceptionTypes
    655:655:com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
    658:658:java.lang.String toString() -> toString
com.google.common.reflect.TypeToken$4 -> com.google.common.reflect.TypeToken$4:
    com.google.common.reflect.TypeToken this$0 -> this$0
    846:846:void <init>(com.google.common.reflect.TypeToken) -> <init>
    848:848:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    852:854:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
    856:858:void visitParameterizedType(java.lang.reflect.ParameterizedType) -> visitParameterizedType
    860:861:void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> visitGenericArrayType
com.google.common.reflect.TypeToken$5 -> com.google.common.reflect.TypeToken$5:
    com.google.common.collect.ImmutableSet$Builder val$builder -> val$builder
    com.google.common.reflect.TypeToken this$0 -> this$0
    992:992:void <init>(com.google.common.reflect.TypeToken,com.google.common.collect.ImmutableSet$Builder) -> <init>
    994:995:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    997:998:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
    1000:1001:void visitParameterizedType(java.lang.reflect.ParameterizedType) -> visitParameterizedType
    1003:1004:void visitClass(java.lang.Class) -> visitClass
    1006:1008:void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> visitGenericArrayType
com.google.common.reflect.TypeToken$Bounds -> com.google.common.reflect.TypeToken$Bounds:
    java.lang.reflect.Type[] bounds -> bounds
    boolean target -> target
    965:968:void <init>(java.lang.reflect.Type[],boolean) -> <init>
    971:976:boolean isSubtypeOf(java.lang.reflect.Type) -> isSubtypeOf
    980:986:boolean isSupertypeOf(java.lang.reflect.Type) -> isSupertypeOf
com.google.common.reflect.TypeToken$ClassSet -> com.google.common.reflect.TypeToken$ClassSet:
    com.google.common.collect.ImmutableSet classes -> classes
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> this$0
    759:759:void <init>(com.google.common.reflect.TypeToken) -> <init>
    764:773:java.util.Set delegate() -> delegate
    778:778:com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    784:786:java.util.Set rawTypes() -> rawTypes
    790:790:com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    794:794:java.lang.Object readResolve() -> readResolve
    759:759:java.util.Collection delegate() -> delegate
    759:759:java.lang.Object delegate() -> delegate
    759:759:void <init>(com.google.common.reflect.TypeToken,com.google.common.reflect.TypeToken$1) -> <init>
com.google.common.reflect.TypeToken$InterfaceSet -> com.google.common.reflect.TypeToken$InterfaceSet:
    com.google.common.reflect.TypeToken$TypeSet allTypes -> allTypes
    com.google.common.collect.ImmutableSet interfaces -> interfaces
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> this$0
    715:717:void <init>(com.google.common.reflect.TypeToken,com.google.common.reflect.TypeToken$TypeSet) -> <init>
    720:726:java.util.Set delegate() -> delegate
    731:731:com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    737:739:java.util.Set rawTypes() -> rawTypes
    749:749:com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    753:753:java.lang.Object readResolve() -> readResolve
    710:710:java.util.Collection delegate() -> delegate
    710:710:java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeToken$InterfaceSet$1 -> com.google.common.reflect.TypeToken$InterfaceSet$1:
    com.google.common.reflect.TypeToken$InterfaceSet this$1 -> this$1
    740:740:void <init>(com.google.common.reflect.TypeToken$InterfaceSet) -> <init>
    742:742:boolean apply(java.lang.Class) -> apply
    740:740:boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$SimpleTypeToken -> com.google.common.reflect.TypeToken$SimpleTypeToken:
    long serialVersionUID -> serialVersionUID
    1131:1132:void <init>(java.lang.reflect.Type) -> <init>
com.google.common.reflect.TypeToken$TypeCollector -> com.google.common.reflect.TypeToken$TypeCollector:
    com.google.common.reflect.TypeToken$TypeCollector FOR_GENERIC_TYPE -> FOR_GENERIC_TYPE
    com.google.common.reflect.TypeToken$TypeCollector FOR_RAW_TYPE -> FOR_RAW_TYPE
    1142:1247:void <init>() -> <init>
    1178:1178:com.google.common.reflect.TypeToken$TypeCollector classesOnly() -> classesOnly
    1195:1195:com.google.common.collect.ImmutableList collectTypes(java.lang.Object) -> collectTypes
    1200:1204:com.google.common.collect.ImmutableList collectTypes(java.lang.Iterable) -> collectTypes
    1209:1230:int collectTypes(java.lang.Object,java.util.Map) -> collectTypes
    1235:1240:com.google.common.collect.ImmutableList sortKeysByValue(java.util.Map,java.util.Comparator) -> sortKeysByValue
    java.lang.Class getRawType(java.lang.Object) -> getRawType
    java.lang.Iterable getInterfaces(java.lang.Object) -> getInterfaces
    java.lang.Object getSuperclass(java.lang.Object) -> getSuperclass
    1142:1142:void <init>(com.google.common.reflect.TypeToken$1) -> <init>
    1144:1160:void <clinit>() -> <clinit>
com.google.common.reflect.TypeToken$TypeCollector$1 -> com.google.common.reflect.TypeToken$TypeCollector$1:
    1145:1145:void <init>() -> <init>
    1147:1147:java.lang.Class getRawType(com.google.common.reflect.TypeToken) -> getRawType
    1151:1151:java.lang.Iterable getInterfaces(com.google.common.reflect.TypeToken) -> getInterfaces
    1156:1156:com.google.common.reflect.TypeToken getSuperclass(com.google.common.reflect.TypeToken) -> getSuperclass
    1145:1145:java.lang.Object getSuperclass(java.lang.Object) -> getSuperclass
    1145:1145:java.lang.Iterable getInterfaces(java.lang.Object) -> getInterfaces
    1145:1145:java.lang.Class getRawType(java.lang.Object) -> getRawType
com.google.common.reflect.TypeToken$TypeCollector$2 -> com.google.common.reflect.TypeToken$TypeCollector$2:
    1161:1161:void <init>() -> <init>
    1163:1163:java.lang.Class getRawType(java.lang.Class) -> getRawType
    1167:1167:java.lang.Iterable getInterfaces(java.lang.Class) -> getInterfaces
    1172:1172:java.lang.Class getSuperclass(java.lang.Class) -> getSuperclass
    1161:1161:java.lang.Object getSuperclass(java.lang.Object) -> getSuperclass
    1161:1161:java.lang.Iterable getInterfaces(java.lang.Object) -> getInterfaces
    1161:1161:java.lang.Class getRawType(java.lang.Object) -> getRawType
com.google.common.reflect.TypeToken$TypeCollector$3 -> com.google.common.reflect.TypeToken$TypeCollector$3:
    com.google.common.reflect.TypeToken$TypeCollector this$0 -> this$0
    1178:1178:void <init>(com.google.common.reflect.TypeToken$TypeCollector,com.google.common.reflect.TypeToken$TypeCollector) -> <init>
    1180:1180:java.lang.Iterable getInterfaces(java.lang.Object) -> getInterfaces
    1183:1189:com.google.common.collect.ImmutableList collectTypes(java.lang.Iterable) -> collectTypes
com.google.common.reflect.TypeToken$TypeCollector$4 -> com.google.common.reflect.TypeToken$TypeCollector$4:
    java.util.Comparator val$valueComparator -> val$valueComparator
    java.util.Map val$map -> val$map
    1235:1235:void <init>(java.util.Comparator,java.util.Map) -> <init>
    1237:1237:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector -> com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector:
    com.google.common.reflect.TypeToken$TypeCollector delegate -> delegate
    1251:1253:void <init>(com.google.common.reflect.TypeToken$TypeCollector) -> <init>
    1256:1256:java.lang.Class getRawType(java.lang.Object) -> getRawType
    1260:1260:java.lang.Iterable getInterfaces(java.lang.Object) -> getInterfaces
    1264:1264:java.lang.Object getSuperclass(java.lang.Object) -> getSuperclass
com.google.common.reflect.TypeToken$TypeFilter -> com.google.common.reflect.TypeToken$TypeFilter:
    com.google.common.reflect.TypeToken$TypeFilter IGNORE_TYPE_VARIABLE_OR_WILDCARD -> IGNORE_TYPE_VARIABLE_OR_WILDCARD
    com.google.common.reflect.TypeToken$TypeFilter INTERFACE_ONLY -> INTERFACE_ONLY
    com.google.common.reflect.TypeToken$TypeFilter[] $VALUES -> $VALUES
    800:800:com.google.common.reflect.TypeToken$TypeFilter[] values() -> values
    800:800:com.google.common.reflect.TypeToken$TypeFilter valueOf(java.lang.String) -> valueOf
    800:800:void <init>(java.lang.String,int) -> <init>
    800:800:void <init>(java.lang.String,int,com.google.common.reflect.TypeToken$1) -> <init>
    800:808:void <clinit>() -> <clinit>
com.google.common.reflect.TypeToken$TypeFilter$1 -> com.google.common.reflect.TypeToken$TypeFilter$1:
    802:802:void <init>(java.lang.String,int) -> <init>
    804:804:boolean apply(com.google.common.reflect.TypeToken) -> apply
    802:802:boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$TypeFilter$2 -> com.google.common.reflect.TypeToken$TypeFilter$2:
    808:808:void <init>(java.lang.String,int) -> <init>
    810:810:boolean apply(com.google.common.reflect.TypeToken) -> apply
    808:808:boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$TypeSet -> com.google.common.reflect.TypeToken$TypeSet:
    com.google.common.collect.ImmutableSet types -> types
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> this$0
    671:671:void <init>(com.google.common.reflect.TypeToken) -> <init>
    675:675:com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    680:680:com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    684:694:java.util.Set delegate() -> delegate
    702:704:java.util.Set rawTypes() -> rawTypes
    667:667:java.util.Collection delegate() -> delegate
    667:667:java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeVisitor -> com.google.common.reflect.TypeVisitor:
    java.util.Set visited -> visited
    61:63:void <init>() -> <init>
    70:97:void visit(java.lang.reflect.Type[]) -> visit
    99:99:void visitClass(java.lang.Class) -> visitClass
    100:100:void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> visitGenericArrayType
    101:101:void visitParameterizedType(java.lang.reflect.ParameterizedType) -> visitParameterizedType
    102:102:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    103:103:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
com.google.common.reflect.Types -> com.google.common.reflect.Types:
    com.google.common.base.Function TYPE_NAME -> TYPE_NAME
    com.google.common.base.Joiner COMMA_JOINER -> COMMA_JOINER
    71:83:java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> newArrayType
    92:98:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    106:106:java.lang.reflect.ParameterizedType newParameterizedType(java.lang.Class,java.lang.reflect.Type[]) -> newParameterizedType
    156:156:java.lang.reflect.TypeVariable newArtificialTypeVariable(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[]) -> newArtificialTypeVariable
    166:166:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    171:171:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    184:184:java.lang.String toString(java.lang.reflect.Type) -> toString
    190:206:java.lang.reflect.Type getComponentType(java.lang.reflect.Type) -> getComponentType
    214:228:java.lang.reflect.Type subtypeOfComponentType(java.lang.reflect.Type[]) -> subtypeOfComponentType
    326:331:java.lang.reflect.TypeVariable newTypeVariableImpl(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[]) -> newTypeVariableImpl
    504:504:java.lang.reflect.Type[] toArray(java.util.Collection) -> toArray
    508:508:java.lang.Iterable filterUpperBounds(java.lang.Iterable) -> filterUpperBounds
    513:520:void disallowPrimitiveType(java.lang.reflect.Type[],java.lang.String) -> disallowPrimitiveType
    527:527:java.lang.Class getArrayClass(java.lang.Class) -> getArrayClass
    624:624:void <init>() -> <init>
    57:57:java.lang.reflect.Type access$100(java.lang.reflect.Type[]) -> access$100
    57:57:void access$200(java.lang.reflect.Type[],java.lang.String) -> access$200
    57:57:java.lang.reflect.Type[] access$300(java.util.Collection) -> access$300
    57:57:com.google.common.base.Function access$400() -> access$400
    57:57:com.google.common.base.Joiner access$500() -> access$500
    57:57:java.lang.Iterable access$700(java.lang.Iterable) -> access$700
    60:67:void <clinit>() -> <clinit>
com.google.common.reflect.Types$1 -> com.google.common.reflect.Types$1:
    61:61:void <init>() -> <init>
    63:63:java.lang.String apply(java.lang.reflect.Type) -> apply
    61:61:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.reflect.Types$2 -> com.google.common.reflect.Types$2:
    java.util.concurrent.atomic.AtomicReference val$result -> val$result
    192:192:void <init>(java.util.concurrent.atomic.AtomicReference) -> <init>
    194:195:void visitTypeVariable(java.lang.reflect.TypeVariable) -> visitTypeVariable
    197:198:void visitWildcardType(java.lang.reflect.WildcardType) -> visitWildcardType
    200:201:void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> visitGenericArrayType
    203:204:void visitClass(java.lang.Class) -> visitClass
com.google.common.reflect.Types$ClassOwnership -> com.google.common.reflect.Types$ClassOwnership:
    com.google.common.reflect.Types$ClassOwnership OWNED_BY_ENCLOSING_CLASS -> OWNED_BY_ENCLOSING_CLASS
    com.google.common.reflect.Types$ClassOwnership LOCAL_CLASS_HAS_NO_OWNER -> LOCAL_CLASS_HAS_NO_OWNER
    com.google.common.reflect.Types$ClassOwnership JVM_BEHAVIOR -> JVM_BEHAVIOR
    com.google.common.reflect.Types$ClassOwnership[] $VALUES -> $VALUES
    111:111:com.google.common.reflect.Types$ClassOwnership[] values() -> values
    111:111:com.google.common.reflect.Types$ClassOwnership valueOf(java.lang.String) -> valueOf
    111:111:void <init>(java.lang.String,int) -> <init>
    java.lang.Class getOwnerType(java.lang.Class) -> getOwnerType
    138:146:com.google.common.reflect.Types$ClassOwnership detectJvmBehavior() -> detectJvmBehavior
    111:111:void <init>(java.lang.String,int,com.google.common.reflect.Types$1) -> <init>
    111:134:void <clinit>() -> <clinit>
com.google.common.reflect.Types$ClassOwnership$1 -> com.google.common.reflect.Types$ClassOwnership$1:
    113:113:void <init>(java.lang.String,int) -> <init>
    117:117:java.lang.Class getOwnerType(java.lang.Class) -> getOwnerType
com.google.common.reflect.Types$ClassOwnership$1LocalClass -> com.google.common.reflect.Types$ClassOwnership$1LocalClass:
    137:137:void <init>() -> <init>
com.google.common.reflect.Types$ClassOwnership$2 -> com.google.common.reflect.Types$ClassOwnership$2:
    120:120:void <init>(java.lang.String,int) -> <init>
    124:127:java.lang.Class getOwnerType(java.lang.Class) -> getOwnerType
com.google.common.reflect.Types$ClassOwnership$3 -> com.google.common.reflect.Types$ClassOwnership$3:
    138:138:void <init>() -> <init>
com.google.common.reflect.Types$GenericArrayTypeImpl -> com.google.common.reflect.Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    236:238:void <init>(java.lang.reflect.Type) -> <init>
    241:241:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    245:245:java.lang.String toString() -> toString
    249:249:int hashCode() -> hashCode
    253:258:boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$JavaVersion -> com.google.common.reflect.Types$JavaVersion:
    com.google.common.reflect.Types$JavaVersion JAVA6 -> JAVA6
    com.google.common.reflect.Types$JavaVersion JAVA7 -> JAVA7
    com.google.common.reflect.Types$JavaVersion JAVA8 -> JAVA8
    com.google.common.reflect.Types$JavaVersion CURRENT -> CURRENT
    com.google.common.reflect.Types$JavaVersion[] $VALUES -> $VALUES
    531:531:com.google.common.reflect.Types$JavaVersion[] values() -> values
    531:531:com.google.common.reflect.Types$JavaVersion valueOf(java.lang.String) -> valueOf
    531:531:void <init>(java.lang.String,int) -> <init>
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> newArrayType
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> usedInGenericType
    596:596:java.lang.String typeName(java.lang.reflect.Type) -> typeName
    600:604:com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[]) -> usedInGenericType
    531:531:void <init>(java.lang.String,int,com.google.common.reflect.Types$1) -> <init>
    531:591:void <clinit>() -> <clinit>
com.google.common.reflect.Types$JavaVersion$1 -> com.google.common.reflect.Types$JavaVersion$1:
    533:533:void <init>(java.lang.String,int) -> <init>
    535:535:java.lang.reflect.GenericArrayType newArrayType(java.lang.reflect.Type) -> newArrayType
    538:545:java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> usedInGenericType
    533:533:java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> newArrayType
com.google.common.reflect.Types$JavaVersion$2 -> com.google.common.reflect.Types$JavaVersion$2:
    548:548:void <init>(java.lang.String,int) -> <init>
    550:553:java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> newArrayType
    557:557:java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> usedInGenericType
com.google.common.reflect.Types$JavaVersion$3 -> com.google.common.reflect.Types$JavaVersion$3:
    560:560:void <init>(java.lang.String,int) -> <init>
    562:562:java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> newArrayType
    565:565:java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> usedInGenericType
    569:576:java.lang.String typeName(java.lang.reflect.Type) -> typeName
com.google.common.reflect.Types$JavaVersion$4 -> com.google.common.reflect.Types$JavaVersion$4:
    586:586:void <init>() -> <init>
com.google.common.reflect.Types$NativeTypeVariableEquals -> com.google.common.reflect.Types$NativeTypeVariableEquals:
    boolean NATIVE_TYPE_VARIABLE_ONLY -> NATIVE_TYPE_VARIABLE_ONLY
    618:618:void <init>() -> <init>
    619:619:void <clinit>() -> <clinit>
com.google.common.reflect.Types$ParameterizedTypeImpl -> com.google.common.reflect.Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    com.google.common.collect.ImmutableList argumentsList -> argumentsList
    java.lang.Class rawType -> rawType
    long serialVersionUID -> serialVersionUID
    272:279:void <init>(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[]) -> <init>
    282:282:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    286:286:java.lang.reflect.Type getRawType() -> getRawType
    290:290:java.lang.reflect.Type getOwnerType() -> getOwnerType
    294:302:java.lang.String toString() -> toString
    306:306:int hashCode() -> hashCode
    311:315:boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$TypeVariableImpl -> com.google.common.reflect.Types$TypeVariableImpl:
    java.lang.reflect.GenericDeclaration genericDeclaration -> genericDeclaration
    java.lang.String name -> name
    com.google.common.collect.ImmutableList bounds -> bounds
    399:404:void <init>(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[]) -> <init>
    407:407:java.lang.reflect.Type[] getBounds() -> getBounds
    411:411:java.lang.reflect.GenericDeclaration getGenericDeclaration() -> getGenericDeclaration
    415:415:java.lang.String getName() -> getName
    419:419:java.lang.String getTypeName() -> getTypeName
    423:423:java.lang.String toString() -> toString
    427:427:int hashCode() -> hashCode
    431:451:boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$TypeVariableInvocationHandler -> com.google.common.reflect.Types$TypeVariableInvocationHandler:
    com.google.common.collect.ImmutableMap typeVariableMethods -> typeVariableMethods
    com.google.common.reflect.Types$TypeVariableImpl typeVariableImpl -> typeVariableImpl
    374:376:void <init>(com.google.common.reflect.Types$TypeVariableImpl) -> <init>
    379:387:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    354:354:com.google.common.reflect.Types$TypeVariableImpl access$600(com.google.common.reflect.Types$TypeVariableInvocationHandler) -> access$600
    357:370:void <clinit>() -> <clinit>
com.google.common.reflect.Types$WildcardTypeImpl -> com.google.common.reflect.Types$WildcardTypeImpl:
    com.google.common.collect.ImmutableList lowerBounds -> lowerBounds
    com.google.common.collect.ImmutableList upperBounds -> upperBounds
    long serialVersionUID -> serialVersionUID
    461:466:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    469:469:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    473:473:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    477:482:boolean equals(java.lang.Object) -> equals
    486:486:int hashCode() -> hashCode
    490:497:java.lang.String toString() -> toString
com.google.common.reflect.package-info -> com.google.common.reflect.package-info:
com.google.common.util.concurrent.AbstractCheckedFuture -> com.google.common.util.concurrent.AbstractCheckedFuture:
    41:42:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    java.lang.Exception mapException(java.lang.Exception) -> mapException
    78:85:java.lang.Object checkedGet() -> checkedGet
    107:114:java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.AbstractExecutionThreadService -> com.google.common.util.concurrent.AbstractExecutionThreadService:
    java.util.logging.Logger logger -> logger
    com.google.common.util.concurrent.Service delegate -> delegate
    43:97:void <init>() -> <init>
    104:104:void startUp() -> startUp
    void run() -> run
    128:128:void shutDown() -> shutDown
    135:135:void triggerShutdown() -> triggerShutdown
    149:149:java.util.concurrent.Executor executor() -> executor
    158:158:java.lang.String toString() -> toString
    162:162:boolean isRunning() -> isRunning
    166:166:com.google.common.util.concurrent.Service$State state() -> state
    173:174:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    180:180:java.lang.Throwable failureCause() -> failureCause
    187:188:com.google.common.util.concurrent.Service startAsync() -> startAsync
    195:196:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    203:204:void awaitRunning() -> awaitRunning
    210:211:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    217:218:void awaitTerminated() -> awaitTerminated
    224:225:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    236:236:java.lang.String serviceName() -> serviceName
    38:38:java.util.logging.Logger access$000() -> access$000
    39:39:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractExecutionThreadService$1 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> this$0
    43:43:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService) -> <init>
    45:83:void doStart() -> doStart
    86:87:void doStop() -> doStop
    90:90:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractExecutionThreadService$1$1 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1$1:
    com.google.common.util.concurrent.AbstractExecutionThreadService$1 this$1 -> this$1
    45:45:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService$1) -> <init>
    47:47:java.lang.String get() -> get
    45:45:java.lang.Object get() -> get
com.google.common.util.concurrent.AbstractExecutionThreadService$1$2 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1$2:
    com.google.common.util.concurrent.AbstractExecutionThreadService$1 this$1 -> this$1
    50:50:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService$1) -> <init>
    54:81:void run() -> run
com.google.common.util.concurrent.AbstractExecutionThreadService$2 -> com.google.common.util.concurrent.AbstractExecutionThreadService$2:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> this$0
    149:149:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService) -> <init>
    152:153:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractFuture -> com.google.common.util.concurrent.AbstractFuture:
    boolean GENERATE_CANCELLATION_CAUSES -> GENERATE_CANCELLATION_CAUSES
    java.util.logging.Logger log -> log
    long SPIN_THRESHOLD_NANOS -> SPIN_THRESHOLD_NANOS
    com.google.common.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER -> ATOMIC_HELPER
    java.lang.Object NULL -> NULL
    java.lang.Object value -> value
    com.google.common.util.concurrent.AbstractFuture$Listener listeners -> listeners
    com.google.common.util.concurrent.AbstractFuture$Waiter waiters -> waiters
    190:214:void removeWaiter(com.google.common.util.concurrent.AbstractFuture$Waiter) -> removeWaiter
    304:304:void <init>() -> <init>
    351:411:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    430:464:java.lang.Object get() -> get
    473:482:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    488:489:boolean isDone() -> isDone
    494:495:boolean isCancelled() -> isCancelled
    507:536:boolean cancel(boolean) -> cancel
    547:547:java.lang.Throwable newCancellationCause() -> newCancellationCause
    560:560:void interruptTask() -> interruptTask
    569:570:boolean wasInterrupted() -> wasInterrupted
    580:596:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    611:616:boolean set(java.lang.Object) -> set
    632:637:boolean setException(java.lang.Throwable) -> setException
    662:697:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    708:733:boolean completeWithFuture(com.google.common.util.concurrent.ListenableFuture,java.lang.Object) -> completeWithFuture
    738:761:void complete() -> complete
    768:768:void done() -> done
    777:777:java.lang.Throwable trustedGetException() -> trustedGetException
    788:791:void maybePropagateCancellation(java.util.concurrent.Future) -> maybePropagateCancellation
    797:799:com.google.common.util.concurrent.AbstractFuture$Waiter clearWaiters() -> clearWaiters
    806:808:com.google.common.util.concurrent.AbstractFuture$Listener clearListeners() -> clearListeners
    817:825:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    829:831:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    63:63:com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200() -> access$200
    63:63:java.lang.Object access$300(com.google.common.util.concurrent.AbstractFuture) -> access$300
    63:63:boolean access$400(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.ListenableFuture,java.lang.Object) -> access$400
    63:63:com.google.common.util.concurrent.AbstractFuture$Waiter access$600(com.google.common.util.concurrent.AbstractFuture) -> access$600
    63:63:com.google.common.util.concurrent.AbstractFuture$Waiter access$602(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter) -> access$602
    63:63:com.google.common.util.concurrent.AbstractFuture$Listener access$700(com.google.common.util.concurrent.AbstractFuture) -> access$700
    63:63:com.google.common.util.concurrent.AbstractFuture$Listener access$702(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener) -> access$702
    63:63:java.lang.Object access$302(com.google.common.util.concurrent.AbstractFuture,java.lang.Object) -> access$302
    64:232:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractFuture$1 -> com.google.common.util.concurrent.AbstractFuture$1:
com.google.common.util.concurrent.AbstractFuture$AtomicHelper -> com.google.common.util.concurrent.AbstractFuture$AtomicHelper:
    834:834:void <init>() -> <init>
    void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
    void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    834:834:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
com.google.common.util.concurrent.AbstractFuture$Cancellation -> com.google.common.util.concurrent.AbstractFuture$Cancellation:
    boolean wasInterrupted -> wasInterrupted
    java.lang.Throwable cause -> cause
    254:257:void <init>(boolean,java.lang.Throwable) -> <init>
com.google.common.util.concurrent.AbstractFuture$Failure -> com.google.common.util.concurrent.AbstractFuture$Failure:
    com.google.common.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE -> FALLBACK_INSTANCE
    java.lang.Throwable exception -> exception
    244:246:void <init>(java.lang.Throwable) -> <init>
    236:236:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractFuture$Failure$1 -> com.google.common.util.concurrent.AbstractFuture$Failure$1:
    237:237:void <init>(java.lang.String) -> <init>
    239:239:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.common.util.concurrent.AbstractFuture$Listener -> com.google.common.util.concurrent.AbstractFuture$Listener:
    com.google.common.util.concurrent.AbstractFuture$Listener TOMBSTONE -> TOMBSTONE
    java.lang.Runnable task -> task
    java.util.concurrent.Executor executor -> executor
    com.google.common.util.concurrent.AbstractFuture$Listener next -> next
    225:228:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
    218:218:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper -> com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> waiterThreadUpdater
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> waiterNextUpdater
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> waitersUpdater
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> listenersUpdater
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> valueUpdater
    944:950:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    954:955:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
    959:960:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    964:964:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    969:969:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    974:974:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
com.google.common.util.concurrent.AbstractFuture$SetFuture -> com.google.common.util.concurrent.AbstractFuture$SetFuture:
    com.google.common.util.concurrent.ListenableFuture future -> future
    com.google.common.util.concurrent.AbstractFuture this$0 -> this$0
    264:266:void <init>(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    269:274:void run() -> run
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper -> com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper:
    984:984:void <init>() -> <init>
    987:988:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
    992:993:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    997:1003:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1008:1014:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1019:1025:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    984:984:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
com.google.common.util.concurrent.AbstractFuture$TrustedFuture -> com.google.common.util.concurrent.AbstractFuture$TrustedFuture:
    72:72:void <init>() -> <init>
    79:79:java.lang.Object get() -> get
    84:84:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    88:88:boolean isDone() -> isDone
    92:92:boolean isCancelled() -> isCancelled
    96:97:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper -> com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper:
    sun.misc.Unsafe UNSAFE -> UNSAFE
    long LISTENERS_OFFSET -> LISTENERS_OFFSET
    long WAITERS_OFFSET -> WAITERS_OFFSET
    long VALUE_OFFSET -> VALUE_OFFSET
    long WAITER_THREAD_OFFSET -> WAITER_THREAD_OFFSET
    long WAITER_NEXT_OFFSET -> WAITER_NEXT_OFFSET
    857:857:void <init>() -> <init>
    904:905:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
    909:910:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    915:915:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    921:921:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    927:927:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    857:857:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
    866:900:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 -> com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1:
    872:872:void <init>() -> <init>
    874:882:sun.misc.Unsafe run() -> run
    872:872:java.lang.Object run() -> run
com.google.common.util.concurrent.AbstractFuture$Waiter -> com.google.common.util.concurrent.AbstractFuture$Waiter:
    com.google.common.util.concurrent.AbstractFuture$Waiter TOMBSTONE -> TOMBSTONE
    java.lang.Thread thread -> thread
    com.google.common.util.concurrent.AbstractFuture$Waiter next -> next
    154:154:void <init>(boolean) -> <init>
    156:159:void <init>() -> <init>
    164:165:void setNext(com.google.common.util.concurrent.AbstractFuture$Waiter) -> setNext
    171:176:void unpark() -> unpark
    147:147:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractIdleService -> com.google.common.util.concurrent.AbstractIdleService:
    com.google.common.base.Supplier threadNameSupplier -> threadNameSupplier
    com.google.common.util.concurrent.Service delegate -> delegate
    41:89:void <init>() -> <init>
    void startUp() -> startUp
    void shutDown() -> shutDown
    106:106:java.util.concurrent.Executor executor() -> executor
    114:114:java.lang.String toString() -> toString
    118:118:boolean isRunning() -> isRunning
    122:122:com.google.common.util.concurrent.Service$State state() -> state
    129:130:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    136:136:java.lang.Throwable failureCause() -> failureCause
    143:144:com.google.common.util.concurrent.Service startAsync() -> startAsync
    151:152:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    159:160:void awaitRunning() -> awaitRunning
    166:167:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    173:174:void awaitTerminated() -> awaitTerminated
    180:181:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    190:190:java.lang.String serviceName() -> serviceName
    38:38:com.google.common.base.Supplier access$200(com.google.common.util.concurrent.AbstractIdleService) -> access$200
com.google.common.util.concurrent.AbstractIdleService$1 -> com.google.common.util.concurrent.AbstractIdleService$1:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> this$0
    106:106:void <init>(com.google.common.util.concurrent.AbstractIdleService) -> <init>
    108:109:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractIdleService$DelegateService -> com.google.common.util.concurrent.AbstractIdleService$DelegateService:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> this$0
    54:54:void <init>(com.google.common.util.concurrent.AbstractIdleService) -> <init>
    56:67:void doStart() -> doStart
    70:81:void doStop() -> doStop
    84:84:java.lang.String toString() -> toString
    54:54:void <init>(com.google.common.util.concurrent.AbstractIdleService,com.google.common.util.concurrent.AbstractIdleService$1) -> <init>
com.google.common.util.concurrent.AbstractIdleService$DelegateService$1 -> com.google.common.util.concurrent.AbstractIdleService$DelegateService$1:
    com.google.common.util.concurrent.AbstractIdleService$DelegateService this$1 -> this$1
    57:57:void <init>(com.google.common.util.concurrent.AbstractIdleService$DelegateService) -> <init>
    60:65:void run() -> run
com.google.common.util.concurrent.AbstractIdleService$DelegateService$2 -> com.google.common.util.concurrent.AbstractIdleService$DelegateService$2:
    com.google.common.util.concurrent.AbstractIdleService$DelegateService this$1 -> this$1
    71:71:void <init>(com.google.common.util.concurrent.AbstractIdleService$DelegateService) -> <init>
    74:79:void run() -> run
com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier -> com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> this$0
    44:44:void <init>(com.google.common.util.concurrent.AbstractIdleService) -> <init>
    46:46:java.lang.String get() -> get
    43:43:java.lang.Object get() -> get
    44:44:void <init>(com.google.common.util.concurrent.AbstractIdleService,com.google.common.util.concurrent.AbstractIdleService$1) -> <init>
com.google.common.util.concurrent.AbstractListeningExecutorService -> com.google.common.util.concurrent.AbstractListeningExecutorService:
    39:39:void <init>() -> <init>
    44:44:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    49:49:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    53:53:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    57:57:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    61:61:com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    38:38:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    38:38:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    38:38:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
com.google.common.util.concurrent.AbstractScheduledService -> com.google.common.util.concurrent.AbstractScheduledService:
    java.util.logging.Logger logger -> logger
    com.google.common.util.concurrent.AbstractService delegate -> delegate
    164:265:void <init>() -> <init>
    void runOneIteration() -> runOneIteration
    279:279:void startUp() -> startUp
    286:286:void shutDown() -> shutDown
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler scheduler() -> scheduler
    315:330:java.util.concurrent.ScheduledExecutorService executor() -> executor
    340:340:java.lang.String serviceName() -> serviceName
    344:344:java.lang.String toString() -> toString
    348:348:boolean isRunning() -> isRunning
    352:352:com.google.common.util.concurrent.Service$State state() -> state
    359:360:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    366:366:java.lang.Throwable failureCause() -> failureCause
    373:374:com.google.common.util.concurrent.Service startAsync() -> startAsync
    381:382:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    389:390:void awaitRunning() -> awaitRunning
    396:397:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    403:404:void awaitTerminated() -> awaitTerminated
    410:411:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    97:97:java.util.logging.Logger access$400() -> access$400
    97:97:com.google.common.util.concurrent.AbstractService access$500(com.google.common.util.concurrent.AbstractScheduledService) -> access$500
    98:98:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractScheduledService$1 -> com.google.common.util.concurrent.AbstractScheduledService$1:
    java.util.concurrent.ScheduledExecutorService val$executor -> val$executor
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> this$0
    322:322:void <init>(com.google.common.util.concurrent.AbstractScheduledService,java.util.concurrent.ScheduledExecutorService) -> <init>
    324:325:void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    327:328:void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl -> com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl:
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> this$0
    310:310:void <init>(com.google.common.util.concurrent.AbstractScheduledService) -> <init>
    312:312:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler:
    422:551:void <init>() -> <init>
    540:542:java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
    com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule getNextSchedule() -> getNextSchedule
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:
    java.lang.Runnable wrappedRunnable -> wrappedRunnable
    java.util.concurrent.ScheduledExecutorService executor -> executor
    com.google.common.util.concurrent.AbstractService service -> service
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.Future currentFuture -> currentFuture
    com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler this$0 -> this$0
    446:457:void <init>(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler,com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> <init>
    461:463:java.lang.Void call() -> call
    473:505:void reschedule() -> reschedule
    512:516:boolean cancel(boolean) -> cancel
    522:526:boolean isCancelled() -> isCancelled
    532:532:java.util.concurrent.Future delegate() -> delegate
    427:427:java.lang.Object delegate() -> delegate
    427:427:java.lang.Object call() -> call
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:
    long delay -> delay
    java.util.concurrent.TimeUnit unit -> unit
    561:564:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    552:552:long access$800(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule) -> access$800
    552:552:java.util.concurrent.TimeUnit access$900(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule) -> access$900
com.google.common.util.concurrent.AbstractScheduledService$Scheduler -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler:
    124:126:com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedDelaySchedule
    145:147:com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedRateSchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedRateSchedule
    java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
    160:160:void <init>() -> <init>
    112:112:void <init>(com.google.common.util.concurrent.AbstractScheduledService$1) -> <init>
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1 -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1:
    long val$initialDelay -> val$initialDelay
    long val$delay -> val$delay
    java.util.concurrent.TimeUnit val$unit -> val$unit
    126:126:void <init>(long,long,java.util.concurrent.TimeUnit) -> <init>
    130:130:java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2 -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2:
    long val$initialDelay -> val$initialDelay
    long val$period -> val$period
    java.util.concurrent.TimeUnit val$unit -> val$unit
    147:147:void <init>(long,long,java.util.concurrent.TimeUnit) -> <init>
    151:151:java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate:
    java.util.concurrent.Future runningTask -> runningTask
    java.util.concurrent.ScheduledExecutorService executorService -> executorService
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.lang.Runnable task -> task
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> this$0
    167:205:void <init>(com.google.common.util.concurrent.AbstractScheduledService) -> <init>
    208:231:void doStart() -> doStart
    234:257:void doStop() -> doStop
    260:260:java.lang.String toString() -> toString
    167:167:void <init>(com.google.common.util.concurrent.AbstractScheduledService,com.google.common.util.concurrent.AbstractScheduledService$1) -> <init>
    167:167:java.util.concurrent.locks.ReentrantLock access$200(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$200
    167:167:java.util.concurrent.Future access$300(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$300
    167:167:java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate,java.util.concurrent.Future) -> access$302
    167:167:java.util.concurrent.ScheduledExecutorService access$600(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$600
    167:167:java.lang.Runnable access$700(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$700
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1 -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1:
    com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1 -> this$1
    208:208:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    210:210:java.lang.String get() -> get
    208:208:java.lang.Object get() -> get
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2 -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2:
    com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1 -> this$1
    213:213:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    215:229:void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3 -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3:
    com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1 -> this$1
    235:235:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    238:255:void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task:
    com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1 -> this$1
    181:181:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    183:202:void run() -> run
com.google.common.util.concurrent.AbstractService -> com.google.common.util.concurrent.AbstractService:
    com.google.common.util.concurrent.ListenerCallQueue$Callback STARTING_CALLBACK -> STARTING_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback RUNNING_CALLBACK -> RUNNING_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback STOPPING_FROM_STARTING_CALLBACK -> STOPPING_FROM_STARTING_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback STOPPING_FROM_RUNNING_CALLBACK -> STOPPING_FROM_RUNNING_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback TERMINATED_FROM_NEW_CALLBACK -> TERMINATED_FROM_NEW_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback TERMINATED_FROM_RUNNING_CALLBACK -> TERMINATED_FROM_RUNNING_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback TERMINATED_FROM_STOPPING_CALLBACK -> TERMINATED_FROM_STOPPING_CALLBACK
    com.google.common.util.concurrent.Monitor monitor -> monitor
    com.google.common.util.concurrent.Monitor$Guard isStartable -> isStartable
    com.google.common.util.concurrent.Monitor$Guard isStoppable -> isStoppable
    com.google.common.util.concurrent.Monitor$Guard hasReachedRunning -> hasReachedRunning
    com.google.common.util.concurrent.Monitor$Guard isStopped -> isStopped
    java.util.List listeners -> listeners
    com.google.common.util.concurrent.AbstractService$StateSnapshot snapshot -> snapshot
    83:83:com.google.common.util.concurrent.ListenerCallQueue$Callback terminatedCallback(com.google.common.util.concurrent.Service$State) -> terminatedCallback
    91:91:com.google.common.util.concurrent.ListenerCallQueue$Callback stoppingCallback(com.google.common.util.concurrent.Service$State) -> stoppingCallback
    98:172:void <init>() -> <init>
    void doStart() -> doStart
    void doStop() -> doStop
    199:213:com.google.common.util.concurrent.Service startAsync() -> startAsync
    217:249:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    253:259:void awaitRunning() -> awaitRunning
    262:275:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    278:284:void awaitTerminated() -> awaitTerminated
    287:301:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    306:316:void checkCurrentState(com.google.common.util.concurrent.Service$State) -> checkCurrentState
    325:349:void notifyStarted() -> notifyStarted
    359:376:void notifyStopped() -> notifyStopped
    384:409:void notifyFailed(java.lang.Throwable) -> notifyFailed
    413:413:boolean isRunning() -> isRunning
    418:418:com.google.common.util.concurrent.Service$State state() -> state
    426:426:java.lang.Throwable failureCause() -> failureCause
    434:444:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    447:447:java.lang.String toString() -> toString
    455:461:void executeListeners() -> executeListeners
    465:466:void starting() -> starting
    470:471:void running() -> running
    475:482:void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    486:502:void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    507:512:void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
    57:57:com.google.common.util.concurrent.Monitor access$000(com.google.common.util.concurrent.AbstractService) -> access$000
    58:79:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractService$1 -> com.google.common.util.concurrent.AbstractService$1:
    59:59:void <init>(java.lang.String) -> <init>
    61:62:void call(com.google.common.util.concurrent.Service$Listener) -> call
    59:59:void call(java.lang.Object) -> call
com.google.common.util.concurrent.AbstractService$2 -> com.google.common.util.concurrent.AbstractService$2:
    65:65:void <init>(java.lang.String) -> <init>
    67:68:void call(com.google.common.util.concurrent.Service$Listener) -> call
    65:65:void call(java.lang.Object) -> call
com.google.common.util.concurrent.AbstractService$3 -> com.google.common.util.concurrent.AbstractService$3:
    com.google.common.util.concurrent.Service$State val$from -> val$from
    83:83:void <init>(java.lang.String,com.google.common.util.concurrent.Service$State) -> <init>
    85:86:void call(com.google.common.util.concurrent.Service$Listener) -> call
    83:83:void call(java.lang.Object) -> call
com.google.common.util.concurrent.AbstractService$4 -> com.google.common.util.concurrent.AbstractService$4:
    com.google.common.util.concurrent.Service$State val$from -> val$from
    91:91:void <init>(java.lang.String,com.google.common.util.concurrent.Service$State) -> <init>
    93:94:void call(com.google.common.util.concurrent.Service$Listener) -> call
    91:91:void call(java.lang.Object) -> call
com.google.common.util.concurrent.AbstractService$5 -> com.google.common.util.concurrent.AbstractService$5:
    com.google.common.util.concurrent.Service$State val$from -> val$from
    java.lang.Throwable val$cause -> val$cause
    com.google.common.util.concurrent.AbstractService this$0 -> this$0
    507:507:void <init>(com.google.common.util.concurrent.AbstractService,java.lang.String,com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> <init>
    509:510:void call(com.google.common.util.concurrent.Service$Listener) -> call
    507:507:void call(java.lang.Object) -> call
com.google.common.util.concurrent.AbstractService$6 -> com.google.common.util.concurrent.AbstractService$6:
    int[] $SwitchMap$com$google$common$util$concurrent$Service$State -> $SwitchMap$com$google$common$util$concurrent$Service$State
    220:220:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard -> com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard:
    com.google.common.util.concurrent.AbstractService this$0 -> this$0
    130:132:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    135:135:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$IsStartableGuard -> com.google.common.util.concurrent.AbstractService$IsStartableGuard:
    com.google.common.util.concurrent.AbstractService this$0 -> this$0
    104:106:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    109:109:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$IsStoppableGuard -> com.google.common.util.concurrent.AbstractService$IsStoppableGuard:
    com.google.common.util.concurrent.AbstractService this$0 -> this$0
    117:119:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    122:122:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$IsStoppedGuard -> com.google.common.util.concurrent.AbstractService$IsStoppedGuard:
    com.google.common.util.concurrent.AbstractService this$0 -> this$0
    143:145:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    148:148:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$StateSnapshot -> com.google.common.util.concurrent.AbstractService$StateSnapshot:
    com.google.common.util.concurrent.Service$State state -> state
    boolean shutdownWhenStartupFinishes -> shutdownWhenStartupFinishes
    java.lang.Throwable failure -> failure
    541:542:void <init>(com.google.common.util.concurrent.Service$State) -> <init>
    545:555:void <init>(com.google.common.util.concurrent.Service$State,boolean,java.lang.Throwable) -> <init>
    559:562:com.google.common.util.concurrent.Service$State externalState() -> externalState
    568:570:java.lang.Throwable failureCause() -> failureCause
com.google.common.util.concurrent.AggregateFuture -> com.google.common.util.concurrent.AggregateFuture:
    java.util.logging.Logger logger -> logger
    com.google.common.util.concurrent.AggregateFuture$RunningState runningState -> runningState
    44:90:void <init>() -> <init>
    51:55:void done() -> done
    60:71:boolean cancel(boolean) -> cancel
    76:80:void interruptTask() -> interruptTask
    86:88:void init(com.google.common.util.concurrent.AggregateFuture$RunningState) -> init
    286:298:boolean addCausalChain(java.util.Set,java.lang.Throwable) -> addCausalChain
    44:44:boolean access$400(java.util.Set,java.lang.Throwable) -> access$400
    44:44:java.util.logging.Logger access$500() -> access$500
    44:44:boolean access$601(com.google.common.util.concurrent.AggregateFuture,boolean) -> access$601
    45:45:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AggregateFuture$RunningState -> com.google.common.util.concurrent.AggregateFuture$RunningState:
    com.google.common.collect.ImmutableCollection futures -> futures
    boolean allMustSucceed -> allMustSucceed
    boolean collectsValues -> collectsValues
    com.google.common.util.concurrent.AggregateFuture this$0 -> this$0
    97:102:void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection,boolean,boolean) -> <init>
    106:107:void run() -> run
    117:158:void init() -> init
    167:193:void handleException(java.lang.Throwable) -> handleException
    197:200:void addInitialException(java.util.Set) -> addInitialException
    209:236:void handleOneInputDone(int,java.util.concurrent.Future) -> handleOneInputDone
    239:244:void decrementCountAndMaybeComplete() -> decrementCountAndMaybeComplete
    249:256:void processCompleted() -> processCompleted
    268:269:void releaseResourcesAfterFailure() -> releaseResourcesAfterFailure
    void collectOneValue(boolean,int,java.lang.Object) -> collectOneValue
    void handleAllCompleted() -> handleAllCompleted
    281:281:void interruptTask() -> interruptTask
    91:91:com.google.common.collect.ImmutableCollection access$000(com.google.common.util.concurrent.AggregateFuture$RunningState) -> access$000
    91:91:void access$100(com.google.common.util.concurrent.AggregateFuture$RunningState) -> access$100
    91:91:void access$200(com.google.common.util.concurrent.AggregateFuture$RunningState,int,java.util.concurrent.Future) -> access$200
    91:91:void access$300(com.google.common.util.concurrent.AggregateFuture$RunningState) -> access$300
com.google.common.util.concurrent.AggregateFuture$RunningState$1 -> com.google.common.util.concurrent.AggregateFuture$RunningState$1:
    int val$index -> val$index
    com.google.common.util.concurrent.ListenableFuture val$listenable -> val$listenable
    com.google.common.util.concurrent.AggregateFuture$RunningState this$1 -> this$1
    140:140:void <init>(com.google.common.util.concurrent.AggregateFuture$RunningState,int,com.google.common.util.concurrent.ListenableFuture) -> <init>
    144:148:void run() -> run
com.google.common.util.concurrent.AggregateFutureState -> com.google.common.util.concurrent.AggregateFutureState:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater SEEN_EXCEPTIONS_UDPATER -> SEEN_EXCEPTIONS_UDPATER
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater REMAINING_COUNT_UPDATER -> REMAINING_COUNT_UPDATER
    java.util.Set seenExceptions -> seenExceptions
    int remaining -> remaining
    47:52:void <init>(int) -> <init>
    71:90:java.util.Set getOrInitSeenExceptions() -> getOrInitSeenExceptions
    void addInitialException(java.util.Set) -> addInitialException
    97:97:int decrementRemainingAndGet() -> decrementRemainingAndGet
    39:43:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AsyncFunction -> com.google.common.util.concurrent.AsyncFunction:
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.AtomicDouble -> com.google.common.util.concurrent.AtomicDouble:
    long serialVersionUID -> serialVersionUID
    long value -> value
    java.util.concurrent.atomic.AtomicLongFieldUpdater updater -> updater
    68:70:void <init>(double) -> <init>
    75:77:void <init>() -> <init>
    85:85:double get() -> get
    94:96:void set(double) -> set
    104:108:void lazySet(double) -> lazySet
    117:118:double getAndSet(double) -> getAndSet
    132:132:boolean compareAndSet(double,double) -> compareAndSet
    153:153:boolean weakCompareAndSet(double,double) -> weakCompareAndSet
    166:173:double getAndAdd(double) -> getAndAdd
    184:191:double addAndGet(double) -> addAndGet
    199:199:java.lang.String toString() -> toString
    207:207:int intValue() -> intValue
    215:215:long longValue() -> longValue
    223:223:float floatValue() -> floatValue
    230:230:double doubleValue() -> doubleValue
    240:243:void writeObject(java.io.ObjectOutputStream) -> writeObject
    250:253:void readObject(java.io.ObjectInputStream) -> readObject
    60:60:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AtomicDoubleArray -> com.google.common.util.concurrent.AtomicDoubleArray:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicLongArray longs -> longs
    55:57:void <init>(int) -> <init>
    66:73:void <init>(double[]) -> <init>
    81:81:int length() -> length
    91:91:double get(int) -> get
    101:103:void set(int,double) -> set
    112:116:void lazySet(int,double) -> lazySet
    127:128:double getAndSet(int,double) -> getAndSet
    144:144:boolean compareAndSet(int,double,double) -> compareAndSet
    167:167:boolean weakCompareAndSet(int,double,double) -> weakCompareAndSet
    181:188:double getAndAdd(int,double) -> getAndAdd
    200:207:double addAndGet(int,double) -> addAndGet
    215:228:java.lang.String toString() -> toString
    240:250:void writeObject(java.io.ObjectOutputStream) -> writeObject
    257:267:void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.util.concurrent.AtomicLongMap -> com.google.common.util.concurrent.AtomicLongMap:
    java.util.concurrent.ConcurrentHashMap map -> map
    java.util.Map asMap -> asMap
    58:60:void <init>(java.util.concurrent.ConcurrentHashMap) -> <init>
    66:66:com.google.common.util.concurrent.AtomicLongMap create() -> create
    73:75:com.google.common.util.concurrent.AtomicLongMap create(java.util.Map) -> create
    83:84:long get(java.lang.Object) -> get
    91:91:long incrementAndGet(java.lang.Object) -> incrementAndGet
    98:98:long decrementAndGet(java.lang.Object) -> decrementAndGet
    107:132:long addAndGet(java.lang.Object,long) -> addAndGet
    140:140:long getAndIncrement(java.lang.Object) -> getAndIncrement
    147:147:long getAndDecrement(java.lang.Object) -> getAndDecrement
    156:181:long getAndAdd(java.lang.Object,long) -> getAndAdd
    191:215:long put(java.lang.Object,long) -> put
    226:229:void putAll(java.util.Map) -> putAll
    236:249:long remove(java.lang.Object) -> remove
    259:267:void removeAllZeros() -> removeAllZeros
    275:279:long sum() -> sum
    288:289:java.util.Map asMap() -> asMap
    293:293:java.util.Map createAsMap() -> createAsMap
    306:306:boolean containsKey(java.lang.Object) -> containsKey
    314:314:int size() -> size
    321:321:boolean isEmpty() -> isEmpty
    331:332:void clear() -> clear
    336:336:java.lang.String toString() -> toString
    369:388:long putIfAbsent(java.lang.Object,long) -> putIfAbsent
    401:405:boolean replace(java.lang.Object,long,long) -> replace
    414:432:boolean remove(java.lang.Object,long) -> remove
com.google.common.util.concurrent.AtomicLongMap$1 -> com.google.common.util.concurrent.AtomicLongMap$1:
    com.google.common.util.concurrent.AtomicLongMap this$0 -> this$0
    294:294:void <init>(com.google.common.util.concurrent.AtomicLongMap) -> <init>
    297:297:java.lang.Long apply(java.util.concurrent.atomic.AtomicLong) -> apply
    294:294:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Atomics -> com.google.common.util.concurrent.Atomics:
    32:32:void <init>() -> <init>
    40:40:java.util.concurrent.atomic.AtomicReference newReference() -> newReference
    50:50:java.util.concurrent.atomic.AtomicReference newReference(java.lang.Object) -> newReference
    60:60:java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(int) -> newReferenceArray
    71:71:java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(java.lang.Object[]) -> newReferenceArray
com.google.common.util.concurrent.Callables -> com.google.common.util.concurrent.Callables:
    37:37:void <init>() -> <init>
    44:44:java.util.concurrent.Callable returning(java.lang.Object) -> returning
    63:65:java.util.concurrent.Callable threadRenaming(java.util.concurrent.Callable,com.google.common.base.Supplier) -> threadRenaming
    92:94:java.lang.Runnable threadRenaming(java.lang.Runnable,com.google.common.base.Supplier) -> threadRenaming
    117:120:boolean trySetName(java.lang.String,java.lang.Thread) -> trySetName
    36:36:boolean access$000(java.lang.String,java.lang.Thread) -> access$000
com.google.common.util.concurrent.Callables$1 -> com.google.common.util.concurrent.Callables$1:
    java.lang.Object val$value -> val$value
    44:44:void <init>(java.lang.Object) -> <init>
    46:46:java.lang.Object call() -> call
com.google.common.util.concurrent.Callables$2 -> com.google.common.util.concurrent.Callables$2:
    com.google.common.base.Supplier val$nameSupplier -> val$nameSupplier
    java.util.concurrent.Callable val$callable -> val$callable
    65:65:void <init>(com.google.common.base.Supplier,java.util.concurrent.Callable) -> <init>
    67:74:java.lang.Object call() -> call
com.google.common.util.concurrent.Callables$3 -> com.google.common.util.concurrent.Callables$3:
    com.google.common.base.Supplier val$nameSupplier -> val$nameSupplier
    java.lang.Runnable val$task -> val$task
    94:94:void <init>(com.google.common.base.Supplier,java.lang.Runnable) -> <init>
    96:106:void run() -> run
com.google.common.util.concurrent.CheckedFuture -> com.google.common.util.concurrent.CheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.CollectionFuture -> com.google.common.util.concurrent.CollectionFuture:
    36:38:void <init>() -> <init>
com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState -> com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState:
    java.util.List values -> values
    com.google.common.util.concurrent.CollectionFuture this$0 -> this$0
    44:54:void <init>(com.google.common.util.concurrent.CollectionFuture,com.google.common.collect.ImmutableCollection,boolean) -> <init>
    58:70:void collectOneValue(boolean,int,java.lang.Object) -> collectOneValue
    74:80:void handleAllCompleted() -> handleAllCompleted
    84:86:void releaseResourcesAfterFailure() -> releaseResourcesAfterFailure
    java.lang.Object combine(java.util.List) -> combine
com.google.common.util.concurrent.CycleDetectingLockFactory -> com.google.common.util.concurrent.CycleDetectingLockFactory:
    java.util.concurrent.ConcurrentMap lockGraphNodesPerType -> lockGraphNodesPerType
    java.util.logging.Logger logger -> logger
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policy policy -> policy
    java.lang.ThreadLocal acquiredLocks -> acquiredLocks
    247:247:com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstance
    254:254:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String) -> newReentrantLock
    263:263:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String,boolean) -> newReentrantLock
    272:272:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String) -> newReentrantReadWriteLock
    282:282:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String,boolean) -> newReentrantReadWriteLock
    299:304:com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering newInstanceWithExplicitOrdering(java.lang.Class,com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstanceWithExplicitOrdering
    309:316:java.util.Map getOrCreateNodes(java.lang.Class) -> getOrCreateNodes
    327:347:java.util.Map createNodes(java.lang.Class) -> createNodes
    356:356:java.lang.String getLockName(java.lang.Enum) -> getLockName
    485:487:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> <init>
    760:766:void aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> aboutToAcquire
    775:787:void lockStateChanged(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> lockStateChanged
    167:167:java.util.logging.Logger access$100() -> access$100
    167:167:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    167:167:void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> access$600
    167:167:void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> access$700
    289:497:void <clinit>() -> <clinit>
com.google.common.util.concurrent.CycleDetectingLockFactory$1 -> com.google.common.util.concurrent.CycleDetectingLockFactory$1:
    497:497:void <init>() -> <init>
    500:500:java.util.ArrayList initialValue() -> initialValue
    497:497:java.lang.Object initialValue() -> initialValue
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock:
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> getLockGraphNode
    boolean isAcquiredByCurrentThread() -> isAcquiredByCurrentThread
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock:
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode -> lockGraphNode
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> this$0
    795:798:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean) -> <init>
    804:804:com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> getLockGraphNode
    809:809:boolean isAcquiredByCurrentThread() -> isAcquiredByCurrentThread
    816:822:void lock() -> lock
    826:832:void lockInterruptibly() -> lockInterruptibly
    836:840:boolean tryLock() -> tryLock
    847:851:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    858:862:void unlock() -> unlock
    789:789:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock readWriteLock -> readWriteLock
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> this$0
    916:919:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock) -> <init>
    923:929:void lock() -> lock
    933:939:void lockInterruptibly() -> lockInterruptibly
    943:947:boolean tryLock() -> tryLock
    954:958:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    965:969:void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock readLock -> readLock
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock writeLock -> writeLock
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode -> lockGraphNode
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> this$0
    878:883:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean) -> <init>
    889:889:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock() -> readLock
    894:894:java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock() -> writeLock
    901:901:com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> getLockGraphNode
    906:906:boolean isAcquiredByCurrentThread() -> isAcquiredByCurrentThread
    865:865:java.util.concurrent.locks.Lock writeLock() -> writeLock
    865:865:java.util.concurrent.locks.Lock readLock() -> readLock
    865:865:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock readWriteLock -> readWriteLock
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> this$0
    978:981:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock) -> <init>
    985:991:void lock() -> lock
    995:1001:void lockInterruptibly() -> lockInterruptibly
    1005:1009:boolean tryLock() -> tryLock
    1016:1020:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    1027:1031:void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace -> com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace:
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> EMPTY_STACK_TRACE
    java.util.Set EXCLUDED_CLASS_NAMES -> EXCLUDED_CLASS_NAMES
    529:543:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode) -> <init>
    520:523:void <clinit>() -> <clinit>
com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode -> com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:
    java.util.Map allowedPriorLocks -> allowedPriorLocks
    java.util.Map disallowedPriorLocks -> disallowedPriorLocks
    java.lang.String lockName -> lockName
    626:640:void <init>(java.lang.String) -> <init>
    643:643:java.lang.String getLockName() -> getLockName
    648:651:void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List) -> checkAcquiredLocks
    669:714:void checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode) -> checkAcquiredLock
    728:751:com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set) -> findPathTo
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies:
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies THROW -> THROW
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies WARN -> WARN
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies DISABLED -> DISABLED
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] $VALUES -> $VALUES
    198:198:com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] values() -> values
    198:198:com.google.common.util.concurrent.CycleDetectingLockFactory$Policies valueOf(java.lang.String) -> valueOf
    199:199:void <init>(java.lang.String,int) -> <init>
    199:199:void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    198:236:void <clinit>() -> <clinit>
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1 -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1:
    206:206:void <init>(java.lang.String,int) -> <init>
    209:209:void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2:
    219:219:void <init>(java.lang.String,int) -> <init>
    222:223:void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3 -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3:
    236:236:void <init>(java.lang.String,int) -> <init>
    239:239:void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policy -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policy:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException -> com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException:
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace conflictingStackTrace -> conflictingStackTrace
    578:581:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace) -> <init>
    584:584:com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace getConflictingStackTrace() -> getConflictingStackTrace
    593:597:java.lang.String getMessage() -> getMessage
    569:569:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering -> com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering:
    java.util.Map lockGraphNodes -> lockGraphNodes
    429:431:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.Map) -> <init>
    437:437:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum) -> newReentrantLock
    450:450:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum,boolean) -> newReentrantLock
    458:458:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum) -> newReentrantReadWriteLock
    472:472:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum,boolean) -> newReentrantReadWriteLock
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    long serialVersionUID -> serialVersionUID
    40:40:void <init>() -> <init>
    46:47:void <init>(java.lang.String) -> <init>
    53:54:void <init>(java.lang.String,java.lang.Error) -> <init>
    60:61:void <init>(java.lang.Error) -> <init>
com.google.common.util.concurrent.ExecutionList -> com.google.common.util.concurrent.ExecutionList:
    java.util.logging.Logger log -> log
    com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables -> runnables
    boolean executed -> executed
    60:60:void <init>() -> <init>
    73:90:void add(java.lang.Runnable,java.util.concurrent.Executor) -> add
    107:135:void execute() -> execute
    143:151:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    48:48:void <clinit>() -> <clinit>
com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair -> com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair:
    java.lang.Runnable runnable -> runnable
    java.util.concurrent.Executor executor -> executor
    com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair next -> next
    158:162:void <init>(java.lang.Runnable,java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair) -> <init>
com.google.common.util.concurrent.FakeTimeLimiter -> com.google.common.util.concurrent.FakeTimeLimiter:
    37:37:void <init>() -> <init>
    41:44:java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    50:51:java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.ForwardingBlockingQueue -> com.google.common.util.concurrent.ForwardingBlockingQueue:
    40:40:void <init>() -> <init>
    java.util.concurrent.BlockingQueue delegate() -> delegate
    46:46:int drainTo(java.util.Collection,int) -> drainTo
    50:50:int drainTo(java.util.Collection) -> drainTo
    55:55:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    60:60:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    64:65:void put(java.lang.Object) -> put
    68:68:int remainingCapacity() -> remainingCapacity
    72:72:java.lang.Object take() -> take
    36:36:java.util.Queue delegate() -> delegate
    36:36:java.util.Collection delegate() -> delegate
    36:36:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture:
    41:64:void <init>() -> <init>
    46:46:java.lang.Object checkedGet() -> checkedGet
    51:51:java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    40:40:com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    40:40:java.util.concurrent.Future delegate() -> delegate
    40:40:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture:
    com.google.common.util.concurrent.CheckedFuture delegate -> delegate
    69:71:void <init>(com.google.common.util.concurrent.CheckedFuture) -> <init>
    75:75:com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    64:64:com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    64:64:java.util.concurrent.Future delegate() -> delegate
    64:64:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingExecutorService -> com.google.common.util.concurrent.ForwardingExecutorService:
    42:42:void <init>() -> <init>
    java.util.concurrent.ExecutorService delegate() -> delegate
    50:50:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    56:56:java.util.List invokeAll(java.util.Collection) -> invokeAll
    63:63:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    69:69:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    76:76:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    81:81:boolean isShutdown() -> isShutdown
    86:86:boolean isTerminated() -> isTerminated
    91:92:void shutdown() -> shutdown
    96:96:java.util.List shutdownNow() -> shutdownNow
    101:102:void execute(java.lang.Runnable) -> execute
    105:105:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    110:110:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    115:115:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    39:39:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture:
    42:42:void <init>() -> <init>
    java.util.concurrent.Future delegate() -> delegate
    48:48:boolean cancel(boolean) -> cancel
    53:53:boolean isCancelled() -> isCancelled
    58:58:boolean isDone() -> isDone
    63:63:java.lang.Object get() -> get
    69:69:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    38:38:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:
    java.util.concurrent.Future delegate -> delegate
    86:88:void <init>(java.util.concurrent.Future) -> <init>
    92:92:java.util.concurrent.Future delegate() -> delegate
    82:82:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture:
    40:40:void <init>() -> <init>
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    47:48:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    36:36:java.util.concurrent.Future delegate() -> delegate
    36:36:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate -> delegate
    65:67:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    71:71:com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    61:61:java.util.concurrent.Future delegate() -> delegate
    61:61:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListeningExecutorService -> com.google.common.util.concurrent.ForwardingListeningExecutorService:
    33:33:void <init>() -> <init>
    com.google.common.util.concurrent.ListeningExecutorService delegate() -> delegate
    40:40:com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    45:45:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    50:50:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    30:30:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    30:30:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    30:30:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    30:30:java.util.concurrent.ExecutorService delegate() -> delegate
    30:30:java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.FutureCallback -> com.google.common.util.concurrent.FutureCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.FutureFallback -> com.google.common.util.concurrent.FutureFallback:
    com.google.common.util.concurrent.ListenableFuture create(java.lang.Throwable) -> create
com.google.common.util.concurrent.Futures -> com.google.common.util.concurrent.Futures:
    com.google.common.util.concurrent.AsyncFunction DEREFERENCER -> DEREFERENCER
    115:115:void <init>() -> <init>
    139:139:com.google.common.util.concurrent.CheckedFuture makeChecked(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> makeChecked
    300:306:com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    321:321:com.google.common.util.concurrent.CheckedFuture immediateCheckedFuture(java.lang.Object) -> immediateCheckedFuture
    336:337:com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable) -> immediateFailedFuture
    349:349:com.google.common.util.concurrent.ListenableFuture immediateCancelledFuture() -> immediateCancelledFuture
    366:367:com.google.common.util.concurrent.CheckedFuture immediateFailedCheckedFuture(java.lang.Exception) -> immediateFailedCheckedFuture
    436:436:com.google.common.util.concurrent.ListenableFuture withFallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureFallback) -> withFallback
    507:507:com.google.common.util.concurrent.ListenableFuture withFallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureFallback,java.util.concurrent.Executor) -> withFallback
    552:554:com.google.common.util.concurrent.ListenableFuture catching(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function) -> catching
    599:601:com.google.common.util.concurrent.ListenableFuture catching(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor) -> catching
    665:668:com.google.common.util.concurrent.ListenableFuture catchingAsync(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction) -> catchingAsync
    733:736:com.google.common.util.concurrent.ListenableFuture catchingAsync(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> catchingAsync
    741:742:com.google.common.util.concurrent.AsyncFunction asAsyncFunction(com.google.common.util.concurrent.FutureFallback) -> asAsyncFunction
    865:869:com.google.common.util.concurrent.ListenableFuture withTimeout(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService) -> withTimeout
    1015:1015:com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> transform
    1066:1066:com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transform
    1107:1109:com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> transformAsync
    1151:1154:com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transformAsync
    1165:1170:java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture) -> rejectionPropagatingExecutor
    1232:1235:com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> transform
    1278:1281:com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> transform
    1311:1313:java.util.concurrent.Future lazyTransform(java.util.concurrent.Future,com.google.common.base.Function) -> lazyTransform
    1493:1493:com.google.common.util.concurrent.ListenableFuture dereference(com.google.common.util.concurrent.ListenableFuture) -> dereference
    1527:1527:com.google.common.util.concurrent.ListenableFuture allAsList(com.google.common.util.concurrent.ListenableFuture[]) -> allAsList
    1550:1550:com.google.common.util.concurrent.ListenableFuture allAsList(java.lang.Iterable) -> allAsList
    1565:1565:com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture) -> nonCancellationPropagating
    1605:1605:com.google.common.util.concurrent.ListenableFuture successfulAsList(com.google.common.util.concurrent.ListenableFuture[]) -> successfulAsList
    1627:1627:com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable) -> successfulAsList
    1650:1675:com.google.common.collect.ImmutableList inCompletionOrder(java.lang.Iterable) -> inCompletionOrder
    1713:1714:void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback) -> addCallback
    1754:1777:void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor) -> addCallback
    1832:1832:java.lang.Object get(java.util.concurrent.Future,java.lang.Class) -> get
    1891:1891:java.lang.Object get(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class) -> get
    1944:1944:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class) -> getChecked
    1999:1999:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit) -> getChecked
    2041:2046:java.lang.Object getUnchecked(java.util.concurrent.Future) -> getUnchecked
    2052:2060:void wrapAndThrowUnchecked(java.lang.Throwable) -> wrapAndThrowUnchecked
    1499:1499:void <clinit>() -> <clinit>
com.google.common.util.concurrent.Futures$1 -> com.google.common.util.concurrent.Futures$1:
    com.google.common.util.concurrent.FutureFallback val$fallback -> val$fallback
    742:742:void <init>(com.google.common.util.concurrent.FutureFallback) -> <init>
    745:745:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Throwable) -> apply
    742:742:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$2 -> com.google.common.util.concurrent.Futures$2:
    boolean thrownFromDelegate -> thrownFromDelegate
    java.util.concurrent.Executor val$delegate -> val$delegate
    com.google.common.util.concurrent.AbstractFuture val$future -> val$future
    1170:1171:void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture) -> <init>
    1174:1188:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.Futures$2$1 -> com.google.common.util.concurrent.Futures$2$1:
    java.lang.Runnable val$command -> val$command
    com.google.common.util.concurrent.Futures$2 this$0 -> this$0
    1174:1174:void <init>(com.google.common.util.concurrent.Futures$2,java.lang.Runnable) -> <init>
    1176:1178:void run() -> run
com.google.common.util.concurrent.Futures$3 -> com.google.common.util.concurrent.Futures$3:
    java.util.concurrent.Future val$input -> val$input
    com.google.common.base.Function val$function -> val$function
    1313:1313:void <init>(java.util.concurrent.Future,com.google.common.base.Function) -> <init>
    1317:1317:boolean cancel(boolean) -> cancel
    1322:1322:boolean isCancelled() -> isCancelled
    1327:1327:boolean isDone() -> isDone
    1332:1332:java.lang.Object get() -> get
    1338:1338:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    1343:1345:java.lang.Object applyTransformation(java.lang.Object) -> applyTransformation
com.google.common.util.concurrent.Futures$4 -> com.google.common.util.concurrent.Futures$4:
    1500:1500:void <init>() -> <init>
    1502:1502:com.google.common.util.concurrent.ListenableFuture apply(com.google.common.util.concurrent.ListenableFuture) -> apply
    1500:1500:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$5 -> com.google.common.util.concurrent.Futures$5:
    java.util.concurrent.ConcurrentLinkedQueue val$delegates -> val$delegates
    com.google.common.util.concurrent.ListenableFuture val$future -> val$future
    1668:1668:void <init>(java.util.concurrent.ConcurrentLinkedQueue,com.google.common.util.concurrent.ListenableFuture) -> <init>
    1670:1671:void run() -> run
com.google.common.util.concurrent.Futures$6 -> com.google.common.util.concurrent.Futures$6:
    com.google.common.util.concurrent.ListenableFuture val$future -> val$future
    com.google.common.util.concurrent.FutureCallback val$callback -> val$callback
    1755:1755:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback) -> <init>
    1762:1774:void run() -> run
com.google.common.util.concurrent.Futures$AbstractCatchingFuture -> com.google.common.util.concurrent.Futures$AbstractCatchingFuture:
    com.google.common.util.concurrent.ListenableFuture inputFuture -> inputFuture
    java.lang.Class exceptionType -> exceptionType
    java.lang.Object fallback -> fallback
    758:762:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,java.lang.Object) -> <init>
    765:796:void run() -> run
    void doFallback(java.lang.Object,java.lang.Throwable) -> doFallback
    802:806:void done() -> done
com.google.common.util.concurrent.Futures$AbstractChainingFuture -> com.google.common.util.concurrent.Futures$AbstractChainingFuture:
    com.google.common.util.concurrent.ListenableFuture inputFuture -> inputFuture
    java.lang.Object function -> function
    1378:1381:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object) -> <init>
    1386:1417:void run() -> run
    void doTransform(java.lang.Object,java.lang.Object) -> doTransform
    1423:1426:void done() -> done
com.google.common.util.concurrent.Futures$AsyncCatchingFuture -> com.google.common.util.concurrent.Futures$AsyncCatchingFuture:
    818:819:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction) -> <init>
    823:827:void doFallback(com.google.common.util.concurrent.AsyncFunction,java.lang.Throwable) -> doFallback
    813:813:void doFallback(java.lang.Object,java.lang.Throwable) -> doFallback
com.google.common.util.concurrent.Futures$AsyncChainingFuture -> com.google.common.util.concurrent.Futures$AsyncChainingFuture:
    1437:1438:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> <init>
    1442:1446:void doTransform(com.google.common.util.concurrent.AsyncFunction,java.lang.Object) -> doTransform
    1433:1433:void doTransform(java.lang.Object,java.lang.Object) -> doTransform
com.google.common.util.concurrent.Futures$CatchingFuture -> com.google.common.util.concurrent.Futures$CatchingFuture:
    838:839:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function) -> <init>
    842:844:void doFallback(com.google.common.base.Function,java.lang.Throwable) -> doFallback
    834:834:void doFallback(java.lang.Object,java.lang.Throwable) -> doFallback
com.google.common.util.concurrent.Futures$ChainingFuture -> com.google.common.util.concurrent.Futures$ChainingFuture:
    1458:1459:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> <init>
    1464:1465:void doTransform(com.google.common.base.Function,java.lang.Object) -> doTransform
    1453:1453:void doTransform(java.lang.Object,java.lang.Object) -> doTransform
com.google.common.util.concurrent.Futures$ImmediateCancelledFuture -> com.google.common.util.concurrent.Futures$ImmediateCancelledFuture:
    java.util.concurrent.CancellationException thrown -> thrown
    249:251:void <init>() -> <init>
    255:255:boolean isCancelled() -> isCancelled
    260:260:java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture -> com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture:
    java.lang.Exception thrown -> thrown
    271:273:void <init>(java.lang.Exception) -> <init>
    277:277:java.lang.Object get() -> get
    282:282:java.lang.Object checkedGet() -> checkedGet
    287:288:java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.Futures$ImmediateFailedFuture -> com.google.common.util.concurrent.Futures$ImmediateFailedFuture:
    java.lang.Throwable thrown -> thrown
    234:236:void <init>(java.lang.Throwable) -> <init>
    240:240:java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$ImmediateFuture -> com.google.common.util.concurrent.Futures$ImmediateFuture:
    java.util.logging.Logger log -> log
    142:142:void <init>() -> <init>
    150:160:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    164:164:boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    172:173:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    178:178:boolean isCancelled() -> isCancelled
    183:183:boolean isDone() -> isDone
    142:142:void <init>(com.google.common.util.concurrent.Futures$1) -> <init>
    145:145:void <clinit>() -> <clinit>
com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture -> com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture:
    java.lang.Object value -> value
    209:211:void <init>(java.lang.Object) -> <init>
    215:215:java.lang.Object get() -> get
    220:220:java.lang.Object checkedGet() -> checkedGet
    225:226:java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture -> com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture:
    com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture NULL -> NULL
    java.lang.Object value -> value
    193:195:void <init>(java.lang.Object) -> <init>
    199:199:java.lang.Object get() -> get
    188:188:void <clinit>() -> <clinit>
com.google.common.util.concurrent.Futures$ListFuture -> com.google.common.util.concurrent.Futures$ListFuture:
    2080:2082:void <init>(com.google.common.collect.ImmutableCollection,boolean) -> <init>
com.google.common.util.concurrent.Futures$ListFuture$ListFutureRunningState -> com.google.common.util.concurrent.Futures$ListFuture$ListFutureRunningState:
    com.google.common.util.concurrent.Futures$ListFuture this$0 -> this$0
    2086:2088:void <init>(com.google.common.util.concurrent.Futures$ListFuture,com.google.common.collect.ImmutableCollection,boolean) -> <init>
    2092:2096:java.util.List combine(java.util.List) -> combine
    2084:2084:java.lang.Object combine(java.util.List) -> combine
com.google.common.util.concurrent.Futures$MappingCheckedFuture -> com.google.common.util.concurrent.Futures$MappingCheckedFuture:
    com.google.common.base.Function mapper -> mapper
    2113:2116:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> <init>
    2120:2120:java.lang.Exception mapException(java.lang.Exception) -> mapException
com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture -> com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture:
    1574:1582:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1 -> com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1:
    com.google.common.util.concurrent.ListenableFuture val$delegate -> val$delegate
    com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture this$0 -> this$0
    1575:1575:void <init>(com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    1579:1580:void run() -> run
com.google.common.util.concurrent.Futures$TimeoutFuture -> com.google.common.util.concurrent.Futures$TimeoutFuture:
    com.google.common.util.concurrent.ListenableFuture delegateRef -> delegateRef
    java.util.concurrent.Future timer -> timer
    902:904:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    954:966:void done() -> done
com.google.common.util.concurrent.Futures$TimeoutFuture$Fire -> com.google.common.util.concurrent.Futures$TimeoutFuture$Fire:
    com.google.common.util.concurrent.Futures$TimeoutFuture timeoutFutureRef -> timeoutFutureRef
    910:912:void <init>(com.google.common.util.concurrent.Futures$TimeoutFuture) -> <init>
    917:950:void run() -> run
com.google.common.util.concurrent.FuturesGetChecked -> com.google.common.util.concurrent.FuturesGetChecked:
    com.google.common.collect.Ordering WITH_STRING_PARAM_FIRST -> WITH_STRING_PARAM_FIRST
    47:47:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class) -> getChecked
    56:64:java.lang.Object getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class) -> getChecked
    74:84:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit) -> getChecked
    94:94:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator bestGetCheckedTypeValidator() -> bestGetCheckedTypeValidator
    99:99:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator() -> weakSetValidator
    105:105:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator() -> classValueValidator
    203:209:void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> wrapAndThrowExceptionOrError
    220:223:boolean hasConstructorUsableByGetChecked(java.lang.Class) -> hasConstructorUsableByGetChecked
    230:240:java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> newWithCause
    249:249:java.util.List preferringStrings(java.util.List) -> preferringStrings
    265:286:java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> newFromConstructor
    292:292:boolean isCheckedException(java.lang.Class) -> isCheckedException
    297:306:void checkExceptionClassValidity(java.lang.Class) -> checkExceptionClassValidity
    308:308:void <init>() -> <init>
    252:252:void <clinit>() -> <clinit>
com.google.common.util.concurrent.FuturesGetChecked$1 -> com.google.common.util.concurrent.FuturesGetChecked$1:
    255:255:void <init>() -> <init>
    258:258:java.lang.Boolean apply(java.lang.reflect.Constructor) -> apply
    255:255:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator:
    void validateClass(java.lang.Class) -> validateClass
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:
    java.lang.String CLASS_VALUE_VALIDATOR_NAME -> CLASS_VALUE_VALIDATOR_NAME
    com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator BEST_VALIDATOR -> BEST_VALIDATOR
    115:145:void <init>() -> <init>
    192:195:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator getBestValidator() -> getBestValidator
    116:119:void <clinit>() -> <clinit>
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator:
    com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator INSTANCE -> INSTANCE
    java.lang.ClassValue isValidClass -> isValidClass
    com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] $VALUES -> $VALUES
    121:121:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] values() -> values
    121:121:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator valueOf(java.lang.String) -> valueOf
    123:123:void <init>(java.lang.String,int) -> <init>
    141:142:void validateClass(java.lang.Class) -> validateClass
    121:130:void <clinit>() -> <clinit>
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1 -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1:
    131:131:void <init>() -> <init>
    134:135:java.lang.Boolean computeValue(java.lang.Class) -> computeValue
    131:131:java.lang.Object computeValue(java.lang.Class) -> computeValue
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:
    com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator INSTANCE -> INSTANCE
    java.util.Set validClasses -> validClasses
    com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] $VALUES -> $VALUES
    145:145:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] values() -> values
    145:145:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator valueOf(java.lang.String) -> valueOf
    145:145:void <init>(java.lang.String,int) -> <init>
    161:183:void validateClass(java.lang.Class) -> validateClass
    145:156:void <clinit>() -> <clinit>
com.google.common.util.concurrent.GwtFuturesCatchingSpecialization -> com.google.common.util.concurrent.GwtFuturesCatchingSpecialization:
    27:27:void <init>() -> <init>
com.google.common.util.concurrent.InterruptibleTask -> com.google.common.util.concurrent.InterruptibleTask:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater RUNNER -> RUNNER
    java.lang.Thread runner -> runner
    boolean doneInterrupting -> doneInterrupting
    26:26:void <init>() -> <init>
    37:55:void run() -> run
    void runInterruptibly() -> runInterruptibly
    boolean wasInterrupted() -> wasInterrupted
    65:70:void interruptTask() -> interruptTask
    27:27:void <clinit>() -> <clinit>
com.google.common.util.concurrent.JdkFutureAdapters -> com.google.common.util.concurrent.JdkFutureAdapters:
    60:63:com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future) -> listenInPoolThread
    92:96:com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future,java.util.concurrent.Executor) -> listenInPoolThread
    183:183:void <init>() -> <init>
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter -> com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    java.util.concurrent.Executor defaultAdapterExecutor -> defaultAdapterExecutor
    java.util.concurrent.Executor adapterExecutor -> adapterExecutor
    com.google.common.util.concurrent.ExecutionList executionList -> executionList
    java.util.concurrent.atomic.AtomicBoolean hasListeners -> hasListeners
    java.util.concurrent.Future delegate -> delegate
    133:134:void <init>(java.util.concurrent.Future) -> <init>
    123:139:void <init>(java.util.concurrent.Future,java.util.concurrent.Executor) -> <init>
    143:143:java.util.concurrent.Future delegate() -> delegate
    148:180:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    109:109:java.lang.Object delegate() -> delegate
    109:109:java.util.concurrent.Future access$000(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> access$000
    109:109:com.google.common.util.concurrent.ExecutionList access$100(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> access$100
    112:117:void <clinit>() -> <clinit>
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1 -> com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1:
    com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter this$0 -> this$0
    161:161:void <init>(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> <init>
    171:177:void run() -> run
com.google.common.util.concurrent.ListenableFuture -> com.google.common.util.concurrent.ListenableFuture:
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.ListenableFutureTask -> com.google.common.util.concurrent.ListenableFutureTask:
    com.google.common.util.concurrent.ExecutionList executionList -> executionList
    53:53:com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable) -> create
    70:70:com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object) -> create
    43:75:void <init>(java.util.concurrent.Callable) -> <init>
    43:79:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    83:84:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    91:92:void done() -> done
com.google.common.util.concurrent.ListenableScheduledFuture -> com.google.common.util.concurrent.ListenableScheduledFuture:
com.google.common.util.concurrent.ListenerCallQueue -> com.google.common.util.concurrent.ListenerCallQueue:
    java.util.logging.Logger logger -> logger
    java.lang.Object listener -> listener
    java.util.concurrent.Executor executor -> executor
    java.util.Queue waitQueue -> waitQueue
    boolean isThreadScheduled -> isThreadScheduled
    62:68:void <init>(java.lang.Object,java.util.concurrent.Executor) -> <init>
    72:73:void add(com.google.common.util.concurrent.ListenerCallQueue$Callback) -> add
    77:99:void execute() -> execute
    102:136:void run() -> run
    40:40:void <clinit>() -> <clinit>
com.google.common.util.concurrent.ListenerCallQueue$Callback -> com.google.common.util.concurrent.ListenerCallQueue$Callback:
    java.lang.String methodCall -> methodCall
    45:47:void <init>(java.lang.String) -> <init>
    void call(java.lang.Object) -> call
    53:56:void enqueueOn(java.lang.Iterable) -> enqueueOn
    42:42:java.lang.String access$000(com.google.common.util.concurrent.ListenerCallQueue$Callback) -> access$000
com.google.common.util.concurrent.ListeningExecutorService -> com.google.common.util.concurrent.ListeningExecutorService:
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
com.google.common.util.concurrent.ListeningScheduledExecutorService -> com.google.common.util.concurrent.ListeningScheduledExecutorService:
    com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    com.google.common.util.concurrent.ListenableScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.util.concurrent.Monitor -> com.google.common.util.concurrent.Monitor:
    boolean fair -> fair
    java.util.concurrent.locks.ReentrantLock lock -> lock
    com.google.common.util.concurrent.Monitor$Guard activeGuards -> activeGuards
    353:354:void <init>() -> <init>
    345:365:void <init>(boolean) -> <init>
    371:372:void enter() -> enter
    380:381:void enterInterruptibly() -> enterInterruptibly
    389:407:boolean enter(long,java.util.concurrent.TimeUnit) -> enter
    419:419:boolean enterInterruptibly(long,java.util.concurrent.TimeUnit) -> enterInterruptibly
    430:430:boolean tryEnter() -> tryEnter
    439:457:void enterWhen(com.google.common.util.concurrent.Monitor$Guard) -> enterWhen
    463:481:void enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterWhenUninterruptibly
    492:536:boolean enterWhen(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhen
    548:602:boolean enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhenUninterruptibly
    614:625:boolean enterIf(com.google.common.util.concurrent.Monitor$Guard) -> enterIf
    638:649:boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterIfInterruptibly
    661:673:boolean enterIf(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIf
    686:699:boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIfInterruptibly
    713:726:boolean tryEnterIf(com.google.common.util.concurrent.Monitor$Guard) -> tryEnterIf
    738:744:void waitFor(com.google.common.util.concurrent.Monitor$Guard) -> waitFor
    751:757:void waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> waitForUninterruptibly
    767:777:boolean waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitFor
    787:812:boolean waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitForUninterruptibly
    821:830:void leave() -> leave
    836:836:boolean isFair() -> isFair
    844:844:boolean isOccupied() -> isOccupied
    852:852:boolean isOccupiedByCurrentThread() -> isOccupiedByCurrentThread
    860:860:int getOccupiedDepth() -> getOccupiedDepth
    870:870:int getQueueLength() -> getQueueLength
    880:880:boolean hasQueuedThreads() -> hasQueuedThreads
    890:890:boolean hasQueuedThread(java.lang.Thread) -> hasQueuedThread
    900:900:boolean hasWaiters(com.google.common.util.concurrent.Monitor$Guard) -> hasWaiters
    910:917:int getWaitQueueLength(com.google.common.util.concurrent.Monitor$Guard) -> getWaitQueueLength
    927:928:long toSafeNanos(long,java.util.concurrent.TimeUnit) -> toSafeNanos
    938:942:long initNanoTime(long) -> initNanoTime
    958:958:long remainingNanos(long,long) -> remainingNanos
    987:993:void signalNextWaiter() -> signalNextWaiter
    1020:1023:boolean isSatisfied(com.google.common.util.concurrent.Monitor$Guard) -> isSatisfied
    1032:1035:void signalAllWaiters() -> signalAllWaiters
    1042:1048:void beginWaitingFor(com.google.common.util.concurrent.Monitor$Guard) -> beginWaitingFor
    1055:1070:void endWaitingFor(com.google.common.util.concurrent.Monitor$Guard) -> endWaitingFor
    1081:1092:void await(com.google.common.util.concurrent.Monitor$Guard,boolean) -> await
    1096:1107:void awaitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean) -> awaitUninterruptibly
    1115:1133:boolean awaitNanos(com.google.common.util.concurrent.Monitor$Guard,long,boolean) -> awaitNanos
    203:203:java.util.concurrent.locks.ReentrantLock access$000(com.google.common.util.concurrent.Monitor) -> access$000
com.google.common.util.concurrent.Monitor$Guard -> com.google.common.util.concurrent.Monitor$Guard:
    com.google.common.util.concurrent.Monitor monitor -> monitor
    java.util.concurrent.locks.Condition condition -> condition
    int waiterCount -> waiterCount
    com.google.common.util.concurrent.Monitor$Guard next -> next
    310:320:void <init>(com.google.common.util.concurrent.Monitor) -> <init>
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    68:68:void <init>() -> <init>
    89:89:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    113:113:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    132:134:void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    154:154:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    176:176:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
    238:242:void useDaemonThreadFactory(java.util.concurrent.ThreadPoolExecutor) -> useDaemonThreadFactory
    283:283:com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor() -> sameThreadExecutor
    429:429:com.google.common.util.concurrent.ListeningExecutorService newDirectExecutorService() -> newDirectExecutorService
    449:449:java.util.concurrent.Executor directExecutor() -> directExecutor
    485:485:com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService) -> listeningDecorator
    514:514:com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService) -> listeningDecorator
    683:746:java.lang.Object invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long) -> invokeAnyImpl
    757:763:com.google.common.util.concurrent.ListenableFuture submitAndAddQueueListener(com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.Callable,java.util.concurrent.BlockingQueue) -> submitAndAddQueueListener
    777:791:java.util.concurrent.ThreadFactory platformThreadFactory() -> platformThreadFactory
    797:816:boolean isAppEngine() -> isAppEngine
    826:834:java.lang.Thread newThread(java.lang.String,java.lang.Runnable) -> newThread
    854:860:java.util.concurrent.Executor renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier) -> renamingDecorator
    882:888:java.util.concurrent.ExecutorService renamingDecorator(java.util.concurrent.ExecutorService,com.google.common.base.Supplier) -> renamingDecorator
    913:919:java.util.concurrent.ScheduledExecutorService renamingDecorator(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier) -> renamingDecorator
    956:974:boolean shutdownAndAwaitTermination(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> shutdownAndAwaitTermination
    67:67:void access$000(java.util.concurrent.ThreadPoolExecutor) -> access$000
com.google.common.util.concurrent.MoreExecutors$1 -> com.google.common.util.concurrent.MoreExecutors$1:
    java.util.concurrent.BlockingQueue val$queue -> val$queue
    com.google.common.util.concurrent.ListenableFuture val$future -> val$future
    758:758:void <init>(java.util.concurrent.BlockingQueue,com.google.common.util.concurrent.ListenableFuture) -> <init>
    760:761:void run() -> run
com.google.common.util.concurrent.MoreExecutors$2 -> com.google.common.util.concurrent.MoreExecutors$2:
    java.util.concurrent.Executor val$executor -> val$executor
    com.google.common.base.Supplier val$nameSupplier -> val$nameSupplier
    860:860:void <init>(java.util.concurrent.Executor,com.google.common.base.Supplier) -> <init>
    862:863:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$3 -> com.google.common.util.concurrent.MoreExecutors$3:
    com.google.common.base.Supplier val$nameSupplier -> val$nameSupplier
    888:888:void <init>(java.util.concurrent.ExecutorService,com.google.common.base.Supplier) -> <init>
    890:890:java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> wrapTask
    893:893:java.lang.Runnable wrapTask(java.lang.Runnable) -> wrapTask
com.google.common.util.concurrent.MoreExecutors$4 -> com.google.common.util.concurrent.MoreExecutors$4:
    com.google.common.base.Supplier val$nameSupplier -> val$nameSupplier
    919:919:void <init>(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier) -> <init>
    921:921:java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> wrapTask
    924:924:java.lang.Runnable wrapTask(java.lang.Runnable) -> wrapTask
com.google.common.util.concurrent.MoreExecutors$Application -> com.google.common.util.concurrent.MoreExecutors$Application:
    182:182:void <init>() -> <init>
    186:189:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    194:197:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    202:220:void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    223:223:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    228:228:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
    232:233:void addShutdownHook(java.lang.Thread) -> addShutdownHook
com.google.common.util.concurrent.MoreExecutors$Application$1 -> com.google.common.util.concurrent.MoreExecutors$Application$1:
    java.util.concurrent.ExecutorService val$service -> val$service
    long val$terminationTimeout -> val$terminationTimeout
    java.util.concurrent.TimeUnit val$timeUnit -> val$timeUnit
    com.google.common.util.concurrent.MoreExecutors$Application this$0 -> this$0
    204:204:void <init>(com.google.common.util.concurrent.MoreExecutors$Application,java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> <init>
    213:218:void run() -> run
com.google.common.util.concurrent.MoreExecutors$DirectExecutor -> com.google.common.util.concurrent.MoreExecutors$DirectExecutor:
    com.google.common.util.concurrent.MoreExecutors$DirectExecutor INSTANCE -> INSTANCE
    com.google.common.util.concurrent.MoreExecutors$DirectExecutor[] $VALUES -> $VALUES
    453:453:com.google.common.util.concurrent.MoreExecutors$DirectExecutor[] values() -> values
    453:453:com.google.common.util.concurrent.MoreExecutors$DirectExecutor valueOf(java.lang.String) -> valueOf
    453:453:void <init>(java.lang.String,int) -> <init>
    456:457:void execute(java.lang.Runnable) -> execute
    460:460:java.lang.String toString() -> toString
    453:454:void <clinit>() -> <clinit>
com.google.common.util.concurrent.MoreExecutors$DirectExecutorService -> com.google.common.util.concurrent.MoreExecutors$DirectExecutorService:
    java.lang.Object lock -> lock
    int runningTasks -> runningTasks
    boolean shutdown -> shutdown
    288:304:void <init>() -> <init>
    308:314:void execute(java.lang.Runnable) -> execute
    318:320:boolean isShutdown() -> isShutdown
    325:331:void shutdown() -> shutdown
    336:337:java.util.List shutdownNow() -> shutdownNow
    342:344:boolean isTerminated() -> isTerminated
    350:363:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    374:380:void startTask() -> startTask
    386:392:void endTask() -> endTask
    288:288:void <init>(com.google.common.util.concurrent.MoreExecutors$1) -> <init>
com.google.common.util.concurrent.MoreExecutors$ListeningDecorator -> com.google.common.util.concurrent.MoreExecutors$ListeningDecorator:
    java.util.concurrent.ExecutorService delegate -> delegate
    524:526:void <init>(java.util.concurrent.ExecutorService) -> <init>
    531:531:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    536:536:boolean isShutdown() -> isShutdown
    541:541:boolean isTerminated() -> isTerminated
    546:547:void shutdown() -> shutdown
    551:551:java.util.List shutdownNow() -> shutdownNow
    556:557:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator -> com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:
    java.util.concurrent.ScheduledExecutorService delegate -> delegate
    567:569:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    574:577:com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    583:585:com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    591:595:com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    601:605:com.google.common.util.concurrent.ListenableScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    560:560:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    560:560:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    560:560:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    560:560:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask -> com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask:
    java.util.concurrent.ScheduledFuture scheduledDelegate -> scheduledDelegate
    617:619:void <init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture) -> <init>
    623:630:boolean cancel(boolean) -> cancel
    635:635:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    640:640:int compareTo(java.util.concurrent.Delayed) -> compareTo
    608:608:int compareTo(java.lang.Object) -> compareTo
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask -> com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask:
    java.lang.Runnable delegate -> delegate
    650:652:void <init>(java.lang.Runnable) -> <init>
    656:661:void run() -> run
com.google.common.util.concurrent.Platform -> com.google.common.util.concurrent.Platform:
    30:30:boolean isInstanceOfThrowableClass(java.lang.Throwable,java.lang.Class) -> isInstanceOfThrowableClass
    33:33:void <init>() -> <init>
com.google.common.util.concurrent.RateLimiter -> com.google.common.util.concurrent.RateLimiter:
    com.google.common.util.concurrent.RateLimiter$SleepingStopwatch stopwatch -> stopwatch
    java.lang.Object mutexDoNotUseDirectly -> mutexDoNotUseDirectly
    130:130:com.google.common.util.concurrent.RateLimiter create(double) -> create
    139:141:com.google.common.util.concurrent.RateLimiter create(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,double) -> create
    169:170:com.google.common.util.concurrent.RateLimiter create(double,long,java.util.concurrent.TimeUnit) -> create
    178:180:com.google.common.util.concurrent.RateLimiter create(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,double,long,java.util.concurrent.TimeUnit,double) -> create
    193:202:java.lang.Object mutex() -> mutex
    205:207:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch) -> <init>
    229:234:void setRate(double) -> setRate
    void doSetRate(double,long) -> doSetRate
    246:248:double getRate() -> getRate
    double doGetRate() -> doGetRate
    263:263:double acquire() -> acquire
    276:278:double acquire(int) -> acquire
    288:291:long reserve(int) -> reserve
    308:308:boolean tryAcquire(long,java.util.concurrent.TimeUnit) -> tryAcquire
    323:323:boolean tryAcquire(int) -> tryAcquire
    337:337:boolean tryAcquire() -> tryAcquire
    353:365:boolean tryAcquire(int,long,java.util.concurrent.TimeUnit) -> tryAcquire
    369:369:boolean canAcquire(long,long) -> canAcquire
    378:379:long reserveAndGetWaitLength(int,long) -> reserveAndGetWaitLength
    long queryEarliestAvailable(long) -> queryEarliestAvailable
    long reserveEarliestAvailable(int,long) -> reserveEarliestAvailable
    401:401:java.lang.String toString() -> toString
    435:436:int checkPermits(int) -> checkPermits
com.google.common.util.concurrent.RateLimiter$SleepingStopwatch -> com.google.common.util.concurrent.RateLimiter$SleepingStopwatch:
    405:405:void <init>() -> <init>
    long readMicros() -> readMicros
    void sleepMicrosUninterruptibly(long) -> sleepMicrosUninterruptibly
    416:416:com.google.common.util.concurrent.RateLimiter$SleepingStopwatch createFromSystemTimer() -> createFromSystemTimer
com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1 -> com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:
    com.google.common.base.Stopwatch stopwatch -> stopwatch
    416:417:void <init>() -> <init>
    421:421:long readMicros() -> readMicros
    426:429:void sleepMicrosUninterruptibly(long) -> sleepMicrosUninterruptibly
com.google.common.util.concurrent.Runnables -> com.google.common.util.concurrent.Runnables:
    java.lang.Runnable EMPTY_RUNNABLE -> EMPTY_RUNNABLE
    41:41:java.lang.Runnable doNothing() -> doNothing
    44:45:void <init>() -> <init>
    31:31:void <clinit>() -> <clinit>
com.google.common.util.concurrent.Runnables$1 -> com.google.common.util.concurrent.Runnables$1:
    31:31:void <init>() -> <init>
    34:34:void run() -> run
com.google.common.util.concurrent.SerializingExecutor -> com.google.common.util.concurrent.SerializingExecutor:
    java.util.logging.Logger log -> log
    java.util.concurrent.Executor executor -> executor
    java.util.Deque queue -> queue
    boolean isWorkerRunning -> isWorkerRunning
    int suspensions -> suspensions
    java.lang.Object internalLock -> internalLock
    56:67:void <init>(java.util.concurrent.Executor) -> <init>
    78:82:void execute(java.lang.Runnable) -> execute
    89:93:void executeFirst(java.lang.Runnable) -> executeFirst
    104:107:void suspend() -> suspend
    121:126:void resume() -> resume
    129:155:void startQueueWorker() -> startQueueWorker
    49:49:java.lang.Object access$100(com.google.common.util.concurrent.SerializingExecutor) -> access$100
    49:49:boolean access$202(com.google.common.util.concurrent.SerializingExecutor,boolean) -> access$202
    49:49:int access$300(com.google.common.util.concurrent.SerializingExecutor) -> access$300
    49:49:java.util.Deque access$400(com.google.common.util.concurrent.SerializingExecutor) -> access$400
    49:49:java.util.logging.Logger access$500() -> access$500
    50:50:void <clinit>() -> <clinit>
com.google.common.util.concurrent.SerializingExecutor$1 -> com.google.common.util.concurrent.SerializingExecutor$1:
com.google.common.util.concurrent.SerializingExecutor$QueueWorker -> com.google.common.util.concurrent.SerializingExecutor$QueueWorker:
    com.google.common.util.concurrent.SerializingExecutor this$0 -> this$0
    160:160:void <init>(com.google.common.util.concurrent.SerializingExecutor) -> <init>
    164:174:void run() -> run
    178:194:void workOnQueue() -> workOnQueue
    160:160:void <init>(com.google.common.util.concurrent.SerializingExecutor,com.google.common.util.concurrent.SerializingExecutor$1) -> <init>
com.google.common.util.concurrent.Service -> com.google.common.util.concurrent.Service:
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    java.lang.Throwable failureCause() -> failureCause
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.Service$1 -> com.google.common.util.concurrent.Service$1:
com.google.common.util.concurrent.Service$Listener -> com.google.common.util.concurrent.Service$Listener:
    255:255:void <init>() -> <init>
    261:261:void starting() -> starting
    267:267:void running() -> running
    276:276:void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    288:288:void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    300:300:void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.Service$State -> com.google.common.util.concurrent.Service$State:
    com.google.common.util.concurrent.Service$State NEW -> NEW
    com.google.common.util.concurrent.Service$State STARTING -> STARTING
    com.google.common.util.concurrent.Service$State RUNNING -> RUNNING
    com.google.common.util.concurrent.Service$State STOPPING -> STOPPING
    com.google.common.util.concurrent.Service$State TERMINATED -> TERMINATED
    com.google.common.util.concurrent.Service$State FAILED -> FAILED
    com.google.common.util.concurrent.Service$State[] $VALUES -> $VALUES
    183:183:com.google.common.util.concurrent.Service$State[] values() -> values
    183:183:com.google.common.util.concurrent.Service$State valueOf(java.lang.String) -> valueOf
    184:184:void <init>(java.lang.String,int) -> <init>
    boolean isTerminal() -> isTerminal
    184:184:void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1) -> <init>
    183:236:void <clinit>() -> <clinit>
com.google.common.util.concurrent.Service$State$1 -> com.google.common.util.concurrent.Service$State$1:
    189:189:void <init>(java.lang.String,int) -> <init>
    191:191:boolean isTerminal() -> isTerminal
com.google.common.util.concurrent.Service$State$2 -> com.google.common.util.concurrent.Service$State$2:
    198:198:void <init>(java.lang.String,int) -> <init>
    200:200:boolean isTerminal() -> isTerminal
com.google.common.util.concurrent.Service$State$3 -> com.google.common.util.concurrent.Service$State$3:
    207:207:void <init>(java.lang.String,int) -> <init>
    209:209:boolean isTerminal() -> isTerminal
com.google.common.util.concurrent.Service$State$4 -> com.google.common.util.concurrent.Service$State$4:
    216:216:void <init>(java.lang.String,int) -> <init>
    218:218:boolean isTerminal() -> isTerminal
com.google.common.util.concurrent.Service$State$5 -> com.google.common.util.concurrent.Service$State$5:
    226:226:void <init>(java.lang.String,int) -> <init>
    228:228:boolean isTerminal() -> isTerminal
com.google.common.util.concurrent.Service$State$6 -> com.google.common.util.concurrent.Service$State$6:
    236:236:void <init>(java.lang.String,int) -> <init>
    238:238:boolean isTerminal() -> isTerminal
com.google.common.util.concurrent.ServiceManager -> com.google.common.util.concurrent.ServiceManager:
    java.util.logging.Logger logger -> logger
    com.google.common.util.concurrent.ListenerCallQueue$Callback HEALTHY_CALLBACK -> HEALTHY_CALLBACK
    com.google.common.util.concurrent.ListenerCallQueue$Callback STOPPED_CALLBACK -> STOPPED_CALLBACK
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState state -> state
    com.google.common.collect.ImmutableList services -> services
    190:213:void <init>(java.lang.Iterable) -> <init>
    239:240:void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> addListener
    259:260:void addListener(com.google.common.util.concurrent.ServiceManager$Listener) -> addListener
    271:287:com.google.common.util.concurrent.ServiceManager startAsync() -> startAsync
    299:300:void awaitHealthy() -> awaitHealthy
    314:315:void awaitHealthy(long,java.util.concurrent.TimeUnit) -> awaitHealthy
    324:327:com.google.common.util.concurrent.ServiceManager stopAsync() -> stopAsync
    336:337:void awaitStopped() -> awaitStopped
    349:350:void awaitStopped(long,java.util.concurrent.TimeUnit) -> awaitStopped
    359:364:boolean isHealthy() -> isHealthy
    374:374:com.google.common.collect.ImmutableMultimap servicesByState() -> servicesByState
    385:385:com.google.common.collect.ImmutableMap startupTimes() -> startupTimes
    389:389:java.lang.String toString() -> toString
    124:124:java.util.logging.Logger access$200() -> access$200
    124:124:com.google.common.util.concurrent.ListenerCallQueue$Callback access$300() -> access$300
    124:124:com.google.common.util.concurrent.ListenerCallQueue$Callback access$400() -> access$400
    125:131:void <clinit>() -> <clinit>
com.google.common.util.concurrent.ServiceManager$1 -> com.google.common.util.concurrent.ServiceManager$1:
    126:126:void <init>(java.lang.String) -> <init>
    128:129:void call(com.google.common.util.concurrent.ServiceManager$Listener) -> call
    126:126:void call(java.lang.Object) -> call
com.google.common.util.concurrent.ServiceManager$2 -> com.google.common.util.concurrent.ServiceManager$2:
    131:131:void <init>(java.lang.String) -> <init>
    133:134:void call(com.google.common.util.concurrent.ServiceManager$Listener) -> call
    131:131:void call(java.lang.Object) -> call
com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning -> com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning:
    800:800:void <init>() -> <init>
    800:800:void <init>(com.google.common.util.concurrent.ServiceManager$1) -> <init>
com.google.common.util.concurrent.ServiceManager$Listener -> com.google.common.util.concurrent.ServiceManager$Listener:
    147:147:void <init>() -> <init>
    156:156:void healthy() -> healthy
    162:162:void stopped() -> stopped
    169:169:void failure(com.google.common.util.concurrent.Service) -> failure
com.google.common.util.concurrent.ServiceManager$NoOpService -> com.google.common.util.concurrent.ServiceManager$NoOpService:
    794:794:void <init>() -> <init>
    795:795:void doStart() -> doStart
    796:796:void doStop() -> doStop
    794:794:void <init>(com.google.common.util.concurrent.ServiceManager$1) -> <init>
com.google.common.util.concurrent.ServiceManager$ServiceListener -> com.google.common.util.concurrent.ServiceManager$ServiceListener:
    com.google.common.util.concurrent.Service service -> service
    java.lang.ref.WeakReference state -> state
    732:735:void <init>(com.google.common.util.concurrent.Service,java.lang.ref.WeakReference) -> <init>
    738:745:void starting() -> starting
    748:752:void running() -> running
    755:759:void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    762:770:void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    773:783:void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.ServiceManager$ServiceManagerState -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState:
    com.google.common.util.concurrent.Monitor monitor -> monitor
    com.google.common.collect.SetMultimap servicesByState -> servicesByState
    com.google.common.collect.Multiset states -> states
    java.util.Map startupTimers -> startupTimers
    boolean ready -> ready
    boolean transitioned -> transitioned
    int numberOfServices -> numberOfServices
    com.google.common.util.concurrent.Monitor$Guard awaitHealthGuard -> awaitHealthGuard
    com.google.common.util.concurrent.Monitor$Guard stoppedGuard -> stoppedGuard
    java.util.List listeners -> listeners
    399:481:void <init>(com.google.common.collect.ImmutableCollection) -> <init>
    488:497:void tryStartTiming(com.google.common.util.concurrent.Service) -> tryStartTiming
    504:523:void markReady() -> markReady
    526:537:void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> addListener
    540:546:void awaitHealthy() -> awaitHealthy
    549:560:void awaitHealthy(long,java.util.concurrent.TimeUnit) -> awaitHealthy
    563:565:void awaitStopped() -> awaitStopped
    568:579:void awaitStopped(long,java.util.concurrent.TimeUnit) -> awaitStopped
    582:593:com.google.common.collect.ImmutableMultimap servicesByState() -> servicesByState
    598:618:com.google.common.collect.ImmutableMap startupTimes() -> startupTimes
    633:679:void transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State) -> transitionService
    683:684:void fireStoppedListeners() -> fireStoppedListeners
    688:689:void fireHealthyListeners() -> fireHealthyListeners
    693:698:void fireFailedListeners(com.google.common.util.concurrent.Service) -> fireFailedListeners
    702:708:void executeListeners() -> executeListeners
    712:718:void checkHealthy() -> checkHealthy
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> this$0
    613:613:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> <init>
    615:615:java.lang.Long apply(java.util.Map$Entry) -> apply
    613:613:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2 -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2:
    com.google.common.util.concurrent.Service val$service -> val$service
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> this$0
    693:693:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState,java.lang.String,com.google.common.util.concurrent.Service) -> <init>
    695:696:void call(com.google.common.util.concurrent.ServiceManager$Listener) -> call
    693:693:void call(java.lang.Object) -> call
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> this$0
    438:440:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> <init>
    444:444:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> this$0
    458:460:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> <init>
    463:463:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.SettableFuture -> com.google.common.util.concurrent.SettableFuture:
    39:39:com.google.common.util.concurrent.SettableFuture create() -> create
    46:46:void <init>() -> <init>
    49:49:boolean set(java.lang.Object) -> set
    53:53:boolean setException(java.lang.Throwable) -> setException
    59:59:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
com.google.common.util.concurrent.SimpleTimeLimiter -> com.google.common.util.concurrent.SimpleTimeLimiter:
    java.util.concurrent.ExecutorService executor -> executor
    66:68:void <init>(java.util.concurrent.ExecutorService) -> <init>
    80:81:void <init>() -> <init>
    86:115:java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    122:143:java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
    149:165:java.lang.Exception throwCause(java.lang.Exception,boolean) -> throwCause
    169:175:java.util.Set findInterruptibleMethods(java.lang.Class) -> findInterruptibleMethods
    179:185:boolean declaresInterruptedEx(java.lang.reflect.Method) -> declaresInterruptedEx
    191:193:java.lang.Object newProxy(java.lang.Class,java.lang.reflect.InvocationHandler) -> newProxy
    48:48:java.lang.Exception access$000(java.lang.Exception,boolean) -> access$000
com.google.common.util.concurrent.SimpleTimeLimiter$1 -> com.google.common.util.concurrent.SimpleTimeLimiter$1:
    java.lang.Object val$target -> val$target
    long val$timeoutDuration -> val$timeoutDuration
    java.util.concurrent.TimeUnit val$timeoutUnit -> val$timeoutUnit
    java.util.Set val$interruptibleMethods -> val$interruptibleMethods
    com.google.common.util.concurrent.SimpleTimeLimiter this$0 -> this$0
    96:96:void <init>(com.google.common.util.concurrent.SimpleTimeLimiter,java.lang.Object,long,java.util.concurrent.TimeUnit,java.util.Set) -> <init>
    100:111:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.google.common.util.concurrent.SimpleTimeLimiter$1$1 -> com.google.common.util.concurrent.SimpleTimeLimiter$1$1:
    java.lang.reflect.Method val$method -> val$method
    java.lang.Object[] val$args -> val$args
    com.google.common.util.concurrent.SimpleTimeLimiter$1 this$1 -> this$1
    100:100:void <init>(com.google.common.util.concurrent.SimpleTimeLimiter$1,java.lang.reflect.Method,java.lang.Object[]) -> <init>
    104:107:java.lang.Object call() -> call
com.google.common.util.concurrent.SmoothRateLimiter -> com.google.common.util.concurrent.SmoothRateLimiter:
    double storedPermits -> storedPermits
    double maxPermits -> maxPermits
    double stableIntervalMicros -> stableIntervalMicros
    long nextFreeTicketMicros -> nextFreeTicketMicros
    325:329:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch) -> <init>
    333:337:void doSetRate(double,long) -> doSetRate
    void doSetRate(double,double) -> doSetRate
    343:343:double doGetRate() -> doGetRate
    348:348:long queryEarliestAvailable(long) -> queryEarliestAvailable
    353:366:long reserveEarliestAvailable(int,long) -> reserveEarliestAvailable
    long storedPermitsToWaitTime(double,double) -> storedPermitsToWaitTime
    double coolDownIntervalMicros() -> coolDownIntervalMicros
    389:395:void resync(long) -> resync
    26:26:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,com.google.common.util.concurrent.SmoothRateLimiter$1) -> <init>
com.google.common.util.concurrent.SmoothRateLimiter$1 -> com.google.common.util.concurrent.SmoothRateLimiter$1:
com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty -> com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty:
    double maxBurstSeconds -> maxBurstSeconds
    275:277:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,double) -> <init>
    281:291:void doSetRate(double,double) -> doSetRate
    295:295:long storedPermitsToWaitTime(double,double) -> storedPermitsToWaitTime
    300:300:double coolDownIntervalMicros() -> coolDownIntervalMicros
com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp -> com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp:
    long warmupPeriodMicros -> warmupPeriodMicros
    double slope -> slope
    double thresholdPermits -> thresholdPermits
    double coldFactor -> coldFactor
    214:217:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,long,java.util.concurrent.TimeUnit,double) -> <init>
    221:235:void doSetRate(double,double) -> doSetRate
    239:251:long storedPermitsToWaitTime(double,double) -> storedPermitsToWaitTime
    255:255:double permitsToTime(double) -> permitsToTime
    260:260:double coolDownIntervalMicros() -> coolDownIntervalMicros
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    int LARGE_LAZY_CUTOFF -> LARGE_LAZY_CUTOFF
    com.google.common.base.Supplier READ_WRITE_LOCK_SUPPLIER -> READ_WRITE_LOCK_SUPPLIER
    int ALL_SET -> ALL_SET
    96:96:void <init>() -> <init>
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getAt(int) -> getAt
    int indexFor(java.lang.Object) -> indexFor
    int size() -> size
    146:186:java.lang.Iterable bulkGet(java.lang.Iterable) -> bulkGet
    199:199:com.google.common.util.concurrent.Striped lock(int) -> lock
    214:214:com.google.common.util.concurrent.Striped lazyWeakLock(int) -> lazyWeakLock
    222:222:com.google.common.util.concurrent.Striped lazy(int,com.google.common.base.Supplier) -> lazy
    236:236:com.google.common.util.concurrent.Striped semaphore(int,int) -> semaphore
    252:252:com.google.common.util.concurrent.Striped lazyWeakSemaphore(int,int) -> lazyWeakSemaphore
    267:267:com.google.common.util.concurrent.Striped readWriteLock(int) -> readWriteLock
    278:278:com.google.common.util.concurrent.Striped lazyWeakReadWriteLock(int) -> lazyWeakReadWriteLock
    446:446:int ceilToPowerOfTwo(int) -> ceilToPowerOfTwo
    459:460:int smear(int) -> smear
    88:88:void <init>(com.google.common.util.concurrent.Striped$1) -> <init>
    88:88:int access$200(int) -> access$200
    88:88:int access$300(int) -> access$300
    282:282:void <clinit>() -> <clinit>
com.google.common.util.concurrent.Striped$1 -> com.google.common.util.concurrent.Striped$1:
    199:199:void <init>() -> <init>
    201:201:java.util.concurrent.locks.Lock get() -> get
    199:199:java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$2 -> com.google.common.util.concurrent.Striped$2:
    214:214:void <init>() -> <init>
    216:216:java.util.concurrent.locks.Lock get() -> get
    214:214:java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$3 -> com.google.common.util.concurrent.Striped$3:
    int val$permits -> val$permits
    236:236:void <init>(int) -> <init>
    238:238:java.util.concurrent.Semaphore get() -> get
    236:236:java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$4 -> com.google.common.util.concurrent.Striped$4:
    int val$permits -> val$permits
    252:252:void <init>(int) -> <init>
    254:254:java.util.concurrent.Semaphore get() -> get
    252:252:java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$5 -> com.google.common.util.concurrent.Striped$5:
    283:283:void <init>() -> <init>
    285:285:java.util.concurrent.locks.ReadWriteLock get() -> get
    283:283:java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$CompactStriped -> com.google.common.util.concurrent.Striped$CompactStriped:
    java.lang.Object[] array -> array
    317:324:void <init>(int,com.google.common.base.Supplier) -> <init>
    328:328:java.lang.Object getAt(int) -> getAt
    332:332:int size() -> size
    312:312:void <init>(int,com.google.common.base.Supplier,com.google.common.util.concurrent.Striped$1) -> <init>
com.google.common.util.concurrent.Striped$LargeLazyStriped -> com.google.common.util.concurrent.Striped$LargeLazyStriped:
    java.util.concurrent.ConcurrentMap locks -> locks
    com.google.common.base.Supplier supplier -> supplier
    int size -> size
    416:420:void <init>(int,com.google.common.base.Supplier) -> <init>
    423:432:java.lang.Object getAt(int) -> getAt
    436:436:int size() -> size
com.google.common.util.concurrent.Striped$PaddedLock -> com.google.common.util.concurrent.Striped$PaddedLock:
    long unused1 -> unused1
    long unused2 -> unused2
    long unused3 -> unused3
    474:475:void <init>() -> <init>
com.google.common.util.concurrent.Striped$PaddedSemaphore -> com.google.common.util.concurrent.Striped$PaddedSemaphore:
    long unused1 -> unused1
    long unused2 -> unused2
    long unused3 -> unused3
    485:486:void <init>(int) -> <init>
com.google.common.util.concurrent.Striped$PowerOfTwoStriped -> com.google.common.util.concurrent.Striped$PowerOfTwoStriped:
    int mask -> mask
    293:296:void <init>(int) -> <init>
    299:300:int indexFor(java.lang.Object) -> indexFor
    304:304:java.lang.Object get(java.lang.Object) -> get
com.google.common.util.concurrent.Striped$SmallLazyStriped -> com.google.common.util.concurrent.Striped$SmallLazyStriped:
    java.util.concurrent.atomic.AtomicReferenceArray locks -> locks
    com.google.common.base.Supplier supplier -> supplier
    int size -> size
    java.lang.ref.ReferenceQueue queue -> queue
    345:352:void <init>(int,com.google.common.base.Supplier) -> <init>
    355:374:java.lang.Object getAt(int) -> getAt
    382:389:void drainQueue() -> drainQueue
    392:392:int size() -> size
com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference -> com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference:
    int index -> index
    399:401:void <init>(java.lang.Object,int,java.lang.ref.ReferenceQueue) -> <init>
com.google.common.util.concurrent.ThreadFactoryBuilder -> com.google.common.util.concurrent.ThreadFactoryBuilder:
    java.lang.String nameFormat -> nameFormat
    java.lang.Boolean daemon -> daemon
    java.lang.Integer priority -> priority
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> uncaughtExceptionHandler
    java.util.concurrent.ThreadFactory backingThreadFactory -> backingThreadFactory
    47:56:void <init>() -> <init>
    71:73:com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String) -> setNameFormat
    84:85:com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean) -> setDaemon
    98:103:com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int) -> setPriority
    116:117:com.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setUncaughtExceptionHandler
    133:134:com.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    146:146:java.util.concurrent.ThreadFactory build() -> build
    150:160:java.util.concurrent.ThreadFactory build(com.google.common.util.concurrent.ThreadFactoryBuilder) -> build
    181:181:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    46:46:java.lang.String access$000(java.lang.String,java.lang.Object[]) -> access$000
com.google.common.util.concurrent.ThreadFactoryBuilder$1 -> com.google.common.util.concurrent.ThreadFactoryBuilder$1:
    java.util.concurrent.ThreadFactory val$backingThreadFactory -> val$backingThreadFactory
    java.lang.String val$nameFormat -> val$nameFormat
    java.util.concurrent.atomic.AtomicLong val$count -> val$count
    java.lang.Boolean val$daemon -> val$daemon
    java.lang.Integer val$priority -> val$priority
    java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler -> val$uncaughtExceptionHandler
    160:160:void <init>(java.util.concurrent.ThreadFactory,java.lang.String,java.util.concurrent.atomic.AtomicLong,java.lang.Boolean,java.lang.Integer,java.lang.Thread$UncaughtExceptionHandler) -> <init>
    162:175:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.TimeLimiter -> com.google.common.util.concurrent.TimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.TrustedListenableFutureTask -> com.google.common.util.concurrent.TrustedListenableFutureTask:
    com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask task -> task
    49:49:com.google.common.util.concurrent.TrustedListenableFutureTask create(java.util.concurrent.Callable) -> create
    65:65:com.google.common.util.concurrent.TrustedListenableFutureTask create(java.lang.Runnable,java.lang.Object) -> create
    70:72:void <init>(java.util.concurrent.Callable) -> <init>
    75:79:void run() -> run
    82:86:void done() -> done
    90:94:void interruptTask() -> interruptTask
com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask -> com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask:
    java.util.concurrent.Callable callable -> callable
    com.google.common.util.concurrent.TrustedListenableFutureTask this$0 -> this$0
    100:102:void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,java.util.concurrent.Callable) -> <init>
    106:113:void runInterruptibly() -> runInterruptibly
    116:116:boolean wasInterrupted() -> wasInterrupted
com.google.common.util.concurrent.UncaughtExceptionHandlers -> com.google.common.util.concurrent.UncaughtExceptionHandlers:
    34:34:void <init>() -> <init>
    51:51:java.lang.Thread$UncaughtExceptionHandler systemExit() -> systemExit
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    java.util.logging.Logger logger -> logger
    java.lang.Runtime runtime -> runtime
    59:61:void <init>(java.lang.Runtime) -> <init>
    66:76:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    55:55:void <clinit>() -> <clinit>
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    long serialVersionUID -> serialVersionUID
    45:45:void <init>() -> <init>
    51:52:void <init>(java.lang.String) -> <init>
    58:59:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    65:66:void <init>(java.lang.Throwable) -> <init>
com.google.common.util.concurrent.UncheckedTimeoutException -> com.google.common.util.concurrent.UncheckedTimeoutException:
    long serialVersionUID -> serialVersionUID
    28:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    39:40:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.common.util.concurrent.Uninterruptibles -> com.google.common.util.concurrent.Uninterruptibles:
    57:69:void awaitUninterruptibly(java.util.concurrent.CountDownLatch) -> awaitUninterruptibly
    82:98:boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch,long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    108:120:void joinUninterruptibly(java.lang.Thread) -> joinUninterruptibly
    139:150:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    172:188:java.lang.Object getUninterruptibly(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> getUninterruptibly
    201:218:void joinUninterruptibly(java.lang.Thread,long,java.util.concurrent.TimeUnit) -> joinUninterruptibly
    228:239:java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue) -> takeUninterruptibly
    255:267:void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object) -> putUninterruptibly
    279:295:void sleepUninterruptibly(long,java.util.concurrent.TimeUnit) -> sleepUninterruptibly
    309:309:boolean tryAcquireUninterruptibly(java.util.concurrent.Semaphore,long,java.util.concurrent.TimeUnit) -> tryAcquireUninterruptibly
    321:337:boolean tryAcquireUninterruptibly(java.util.concurrent.Semaphore,int,long,java.util.concurrent.TimeUnit) -> tryAcquireUninterruptibly
    344:344:void <init>() -> <init>
com.google.common.util.concurrent.WrappingExecutorService -> com.google.common.util.concurrent.WrappingExecutorService:
    java.util.concurrent.ExecutorService delegate -> delegate
    49:51:void <init>(java.util.concurrent.ExecutorService) -> <init>
    java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> wrapTask
    65:67:java.lang.Runnable wrapTask(java.lang.Runnable) -> wrapTask
    85:89:com.google.common.collect.ImmutableList wrapTasks(java.util.Collection) -> wrapTasks
    95:96:void execute(java.lang.Runnable) -> execute
    100:100:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    105:105:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    110:110:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    116:116:java.util.List invokeAll(java.util.Collection) -> invokeAll
    123:123:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    129:129:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    136:136:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    143:144:void shutdown() -> shutdown
    148:148:java.util.List shutdownNow() -> shutdownNow
    153:153:boolean isShutdown() -> isShutdown
    158:158:boolean isTerminated() -> isTerminated
    164:164:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
com.google.common.util.concurrent.WrappingExecutorService$1 -> com.google.common.util.concurrent.WrappingExecutorService$1:
    java.util.concurrent.Callable val$wrapped -> val$wrapped
    com.google.common.util.concurrent.WrappingExecutorService this$0 -> this$0
    67:67:void <init>(com.google.common.util.concurrent.WrappingExecutorService,java.util.concurrent.Callable) -> <init>
    70:74:void run() -> run
com.google.common.util.concurrent.WrappingScheduledExecutorService -> com.google.common.util.concurrent.WrappingScheduledExecutorService:
    java.util.concurrent.ScheduledExecutorService delegate -> delegate
    36:38:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    42:42:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    47:47:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    53:53:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    59:59:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.util.concurrent.package-info -> com.google.common.util.concurrent.package-info:
com.google.common.xml.XmlEscapers -> com.google.common.xml.XmlEscapers:
    char MIN_ASCII_CONTROL_CHAR -> MIN_ASCII_CONTROL_CHAR
    char MAX_ASCII_CONTROL_CHAR -> MAX_ASCII_CONTROL_CHAR
    com.google.common.escape.Escaper XML_ESCAPER -> XML_ESCAPER
    com.google.common.escape.Escaper XML_CONTENT_ESCAPER -> XML_CONTENT_ESCAPER
    com.google.common.escape.Escaper XML_ATTRIBUTE_ESCAPER -> XML_ATTRIBUTE_ESCAPER
    50:50:void <init>() -> <init>
    86:86:com.google.common.escape.Escaper xmlContentEscaper() -> xmlContentEscaper
    113:113:com.google.common.escape.Escaper xmlAttributeEscaper() -> xmlAttributeEscaper
    120:157:void <clinit>() -> <clinit>
com.google.common.xml.package-info -> com.google.common.xml.package-info:
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    45:47:void <init>() -> <init>
    50:51:void <init>(java.lang.String) -> <init>
    54:55:void <init>(int) -> <init>
    58:60:void <init>(int,int) -> <init>
    62:65:void <init>(java.text.DateFormat,java.text.DateFormat) -> <init>
    71:74:com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    80:91:java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    96:108:java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    113:116:java.lang.String toString() -> toString
    37:37:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    37:37:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    44:47:void <init>(java.lang.reflect.Field) -> <init>
    53:53:java.lang.Class getDeclaringClass() -> getDeclaringClass
    60:60:java.lang.String getName() -> getName
    80:80:java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    100:100:java.lang.Class getDeclaredClass() -> getDeclaredClass
    111:111:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    121:121:java.util.Collection getAnnotations() -> getAnnotations
    135:135:boolean hasModifier(int) -> hasModifier
    146:146:java.lang.Object get(java.lang.Object) -> get
    155:155:boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    124:132:java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    139:160:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    165:167:java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    31:31:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    31:113:void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    90:90:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    113:113:void <init>(java.lang.String,int) -> <init>
    115:115:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    boolean DEFAULT_LENIENT -> DEFAULT_LENIENT
    boolean DEFAULT_PRETTY_PRINT -> DEFAULT_PRETTY_PRINT
    boolean DEFAULT_ESCAPE_HTML -> DEFAULT_ESCAPE_HTML
    boolean DEFAULT_SERIALIZE_NULLS -> DEFAULT_SERIALIZE_NULLS
    boolean DEFAULT_COMPLEX_MAP_KEYS -> DEFAULT_COMPLEX_MAP_KEYS
    boolean DEFAULT_SPECIALIZE_FLOAT_VALUES -> DEFAULT_SPECIALIZE_FLOAT_VALUES
    com.google.gson.reflect.TypeToken NULL_KEY_SURROGATE -> NULL_KEY_SURROGATE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.FieldNamingStrategy fieldNamingStrategy -> fieldNamingStrategy
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    boolean lenient -> lenient
    com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> jsonAdapterFactory
    174:179:void <init>() -> <init>
    122:256:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List) -> <init>
    259:259:com.google.gson.internal.Excluder excluder() -> excluder
    263:263:com.google.gson.FieldNamingStrategy fieldNamingStrategy() -> fieldNamingStrategy
    267:267:boolean serializeNulls() -> serializeNulls
    271:271:boolean htmlSafe() -> htmlSafe
    275:278:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    299:302:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    323:328:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    331:334:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    353:361:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> atomicLongAdapter
    365:388:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> atomicLongArrayAdapter
    399:435:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    493:511:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    521:521:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    538:541:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    561:563:com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    580:583:java.lang.String toJson(java.lang.Object) -> toJson
    602:604:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    622:627:void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    647:652:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    661:677:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    687:689:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    702:707:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    713:721:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    728:730:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    738:753:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    773:774:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    797:802:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    824:827:java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    851:854:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    859:867:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    879:904:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    925:926:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    949:952:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    982:987:java.lang.String toString() -> toString
    112:112:void <clinit>() -> <clinit>
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    112:112:void <init>() -> <init>
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    278:278:void <init>(com.google.gson.Gson) -> <init>
    280:284:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    287:294:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    278:278:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    278:278:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    302:302:void <init>(com.google.gson.Gson) -> <init>
    304:308:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    311:318:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    302:302:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    302:302:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    334:334:void <init>() -> <init>
    336:340:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    343:348:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    334:334:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    334:334:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.TypeAdapter val$longAdapter -> val$longAdapter
    353:353:void <init>(com.google.gson.TypeAdapter) -> <init>
    355:356:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
    358:359:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> read
    353:353:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    353:353:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$6 -> com.google.gson.Gson$6:
    com.google.gson.TypeAdapter val$longAdapter -> val$longAdapter
    365:365:void <init>(com.google.gson.TypeAdapter) -> <init>
    367:372:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
    374:386:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> read
    365:365:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    365:365:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    955:955:void <init>() -> <init>
    959:963:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    966:969:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    973:977:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean lenient -> lenient
    79:105:void <init>() -> <init>
    115:116:com.google.gson.GsonBuilder setVersion(double) -> setVersion
    131:132:com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    145:146:com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    156:157:com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    168:169:com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    249:250:com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    260:261:com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    273:274:com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    286:287:com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    299:300:com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    314:317:com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    333:334:com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    350:351:com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    361:362:com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    374:375:com.google.gson.GsonBuilder setLenient() -> setLenient
    386:387:com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    408:409:com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    427:429:com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    448:451:com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    472:486:com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    498:499:com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    518:528:com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    552:553:com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    563:569:com.google.gson.Gson create() -> create
    578:589:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    39:41:void <init>() -> <init>
    45:49:com.google.gson.JsonArray deepCopy() -> deepCopy
    58:59:void add(java.lang.Boolean) -> add
    67:68:void add(java.lang.Character) -> add
    76:77:void add(java.lang.Number) -> add
    85:86:void add(java.lang.String) -> add
    94:98:void add(com.google.gson.JsonElement) -> add
    106:107:void addAll(com.google.gson.JsonArray) -> addAll
    118:118:com.google.gson.JsonElement set(int,com.google.gson.JsonElement) -> set
    129:129:boolean remove(com.google.gson.JsonElement) -> remove
    142:142:com.google.gson.JsonElement remove(int) -> remove
    152:152:boolean contains(com.google.gson.JsonElement) -> contains
    161:161:int size() -> size
    171:171:java.util.Iterator iterator() -> iterator
    183:183:com.google.gson.JsonElement get(int) -> get
    196:199:java.lang.Number getAsNumber() -> getAsNumber
    212:215:java.lang.String getAsString() -> getAsString
    228:231:double getAsDouble() -> getAsDouble
    245:248:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    262:265:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    278:281:float getAsFloat() -> getAsFloat
    294:297:long getAsLong() -> getAsLong
    310:313:int getAsInt() -> getAsInt
    318:321:byte getAsByte() -> getAsByte
    326:329:char getAsCharacter() -> getAsCharacter
    342:345:short getAsShort() -> getAsShort
    358:361:boolean getAsBoolean() -> getAsBoolean
    366:366:boolean equals(java.lang.Object) -> equals
    371:371:int hashCode() -> hashCode
    33:33:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    33:33:void <init>() -> <init>
    com.google.gson.JsonElement deepCopy() -> deepCopy
    46:46:boolean isJsonArray() -> isJsonArray
    55:55:boolean isJsonObject() -> isJsonObject
    64:64:boolean isJsonPrimitive() -> isJsonPrimitive
    74:74:boolean isJsonNull() -> isJsonNull
    87:90:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    103:106:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    119:122:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    136:139:com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    152:152:boolean getAsBoolean() -> getAsBoolean
    165:165:java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    178:178:java.lang.Number getAsNumber() -> getAsNumber
    191:191:java.lang.String getAsString() -> getAsString
    204:204:double getAsDouble() -> getAsDouble
    217:217:float getAsFloat() -> getAsFloat
    230:230:long getAsLong() -> getAsLong
    243:243:int getAsInt() -> getAsInt
    257:257:byte getAsByte() -> getAsByte
    271:271:char getAsCharacter() -> getAsCharacter
    285:285:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    299:299:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    312:312:short getAsShort() -> getAsShort
    321:327:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    39:41:void <init>() -> <init>
    45:45:com.google.gson.JsonNull deepCopy() -> deepCopy
    53:53:int hashCode() -> hashCode
    61:61:boolean equals(java.lang.Object) -> equals
    26:26:com.google.gson.JsonElement deepCopy() -> deepCopy
    32:32:void <clinit>() -> <clinit>
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    32:33:void <init>() -> <init>
    38:42:com.google.gson.JsonObject deepCopy() -> deepCopy
    54:58:void add(java.lang.String,com.google.gson.JsonElement) -> add
    68:68:com.google.gson.JsonElement remove(java.lang.String) -> remove
    79:80:void addProperty(java.lang.String,java.lang.String) -> addProperty
    90:91:void addProperty(java.lang.String,java.lang.Number) -> addProperty
    101:102:void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    112:113:void addProperty(java.lang.String,java.lang.Character) -> addProperty
    122:122:com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    132:132:java.util.Set entrySet() -> entrySet
    141:141:int size() -> size
    151:151:boolean has(java.lang.String) -> has
    161:161:com.google.gson.JsonElement get(java.lang.String) -> get
    171:171:com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    181:181:com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    191:191:com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    196:197:boolean equals(java.lang.Object) -> equals
    202:202:int hashCode() -> hashCode
    32:32:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
    42:43:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    34:34:void <init>() -> <init>
    45:45:com.google.gson.JsonElement parse(java.lang.String) -> parse
    58:69:com.google.gson.JsonElement parse(java.io.Reader) -> parse
    81:90:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    46:48:void <init>(java.lang.Boolean) -> <init>
    55:57:void <init>(java.lang.Number) -> <init>
    64:66:void <init>(java.lang.String) -> <init>
    74:76:void <init>(java.lang.Character) -> <init>
    84:86:void <init>(java.lang.Object) -> <init>
    90:90:com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    94:104:void setValue(java.lang.Object) -> setValue
    112:112:boolean isBoolean() -> isBoolean
    122:122:java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    132:136:boolean getAsBoolean() -> getAsBoolean
    146:146:boolean isNumber() -> isNumber
    157:157:java.lang.Number getAsNumber() -> getAsNumber
    166:166:boolean isString() -> isString
    176:181:java.lang.String getAsString() -> getAsString
    193:193:double getAsDouble() -> getAsDouble
    204:204:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    215:216:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    227:227:float getAsFloat() -> getAsFloat
    238:238:long getAsLong() -> getAsLong
    249:249:short getAsShort() -> getAsShort
    260:260:int getAsInt() -> getAsInt
    265:265:byte getAsByte() -> getAsByte
    270:270:char getAsCharacter() -> getAsCharacter
    274:284:boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    289:301:int hashCode() -> hashCode
    306:326:boolean equals(java.lang.Object) -> equals
    334:339:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    33:33:com.google.gson.JsonElement deepCopy() -> deepCopy
    35:35:void <clinit>() -> <clinit>
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    61:62:void <init>(java.lang.String) -> <init>
    68:72:void <init>(java.io.Reader) -> <init>
    82:93:com.google.gson.JsonElement next() -> next
    103:111:boolean hasNext() -> hasNext
    120:120:void remove() -> remove
    52:52:java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:45:void <clinit>() -> <clinit>
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    34:34:void <init>(java.lang.String,int) -> <init>
    36:36:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    45:45:void <init>(java.lang.String,int) -> <init>
    47:47:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    119:119:void <init>() -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    141:143:void toJson(java.io.Writer,java.lang.Object) -> toJson
    186:186:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    215:221:java.lang.String toJson(java.lang.Object) -> toJson
    233:237:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    259:260:java.lang.Object fromJson(java.io.Reader) -> fromJson
    273:273:java.lang.Object fromJson(java.lang.String) -> fromJson
    284:287:java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    186:186:void <init>(com.google.gson.TypeAdapter) -> <init>
    188:193:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    195:199:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.JsonAdapter -> com.google.gson.annotations.JsonAdapter:
    java.lang.Class value() -> value
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
    java.lang.String[] alternate() -> alternate
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    33:34:void <init>() -> <init>
    38:41:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    45:48:void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    46:47:void <init>() -> <init>
    58:58:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    68:68:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    78:78:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    87:87:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    96:115:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    120:148:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    154:154:boolean equal(java.lang.Object,java.lang.Object) -> equal
    161:211:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    216:216:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    220:220:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    229:259:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    270:272:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    280:282:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    290:298:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    311:321:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    327:391:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    397:410:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    414:419:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    427:428:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    434:435:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    44:44:void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    505:507:void <init>(java.lang.reflect.Type) -> <init>
    510:510:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    514:515:boolean equals(java.lang.Object) -> equals
    519:519:int hashCode() -> hashCode
    523:523:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    442:459:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    462:462:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    466:466:java.lang.reflect.Type getRawType() -> getRawType
    470:470:java.lang.reflect.Type getOwnerType() -> getOwnerType
    474:475:boolean equals(java.lang.Object) -> equals
    479:481:int hashCode() -> hashCode
    485:496:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    538:555:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    558:558:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    562:562:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    566:567:boolean equals(java.lang.Object) -> equals
    572:573:int hashCode() -> hashCode
    577:582:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    51:53:void <init>(java.util.Map) -> <init>
    56:94:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    99:123:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    134:213:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    218:218:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    234:234:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    64:64:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    66:66:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    186:186:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    188:188:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    192:192:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    194:194:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    199:199:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    201:201:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$13:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    205:205:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    207:207:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$14:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    218:219:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type) -> <init>
    223:226:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    76:76:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    78:78:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    103:103:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor) -> <init>
    107:118:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    136:136:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    138:138:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    142:142:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type) -> <init>
    145:153:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    158:158:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    160:160:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    164:164:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    166:166:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    170:170:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    172:172:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    180:180:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    182:182:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    50:59:void <init>() -> <init>
    63:65:com.google.gson.internal.Excluder clone() -> clone
    70:72:com.google.gson.internal.Excluder withVersion(double) -> withVersion
    76:81:com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    85:87:com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    91:93:com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    98:108:com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    112:120:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    150:188:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    192:212:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    216:217:boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    221:221:boolean isInnerClass(java.lang.Class) -> isInnerClass
    225:225:boolean isStatic(java.lang.Class) -> isStatic
    229:229:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    233:239:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    243:249:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    50:50:java.lang.Object clone() -> clone
    52:52:void <clinit>() -> <clinit>
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    120:120:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    125:129:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    133:138:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    141:144:com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    25:25:void <init>() -> <init>
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    30:32:void <init>(java.lang.String) -> <init>
    37:42:int intValue() -> intValue
    50:52:long longValue() -> longValue
    58:58:float floatValue() -> floatValue
    63:63:double doubleValue() -> doubleValue
    68:68:java.lang.String toString() -> toString
    77:77:java.lang.Object writeReplace() -> writeReplace
    82:82:int hashCode() -> hashCode
    87:94:boolean equals(java.lang.Object) -> equals
com.google.gson.internal.LinkedHashTreeMap -> com.google.gson.internal.LinkedHashTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedHashTreeMap$Node[] table -> table
    com.google.gson.internal.LinkedHashTreeMap$Node header -> header
    int size -> size
    int modCount -> modCount
    int threshold -> threshold
    com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedHashTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    61:62:void <init>() -> <init>
    51:79:void <init>(java.util.Comparator) -> <init>
    82:82:int size() -> size
    86:87:java.lang.Object get(java.lang.Object) -> get
    91:91:boolean containsKey(java.lang.Object) -> containsKey
    95:101:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    105:118:void clear() -> clear
    121:122:java.lang.Object remove(java.lang.Object) -> remove
    132:196:com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean) -> find
    202:204:com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object) -> findByObject
    218:220:com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    224:224:boolean equal(java.lang.Object,java.lang.Object) -> equal
    235:236:int secondaryHash(int) -> secondaryHash
    246:301:void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> removeInternal
    304:308:com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    312:329:void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node) -> replaceInParent
    339:396:void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> rebalance
    402:424:void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateLeft
    430:452:void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateRight
    458:459:java.util.Set entrySet() -> entrySet
    463:464:java.util.Set keySet() -> keySet
    558:560:void doubleCapacity() -> doubleCapacity
    568:610:com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> doubleCapacity
    862:862:java.lang.Object writeReplace() -> writeReplace
    40:42:void <clinit>() -> <clinit>
com.google.gson.internal.LinkedHashTreeMap$1 -> com.google.gson.internal.LinkedHashTreeMap$1:
    42:42:void <init>() -> <init>
    44:44:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    42:42:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder:
    com.google.gson.internal.LinkedHashTreeMap$Node stack -> stack
    int leavesToSkip -> leavesToSkip
    int leavesSkipped -> leavesSkipped
    int size -> size
    670:670:void <init>() -> <init>
    679:684:void reset(int) -> reset
    687:749:void add(com.google.gson.internal.LinkedHashTreeMap$Node) -> add
    752:756:com.google.gson.internal.LinkedHashTreeMap$Node root() -> root
com.google.gson.internal.LinkedHashTreeMap$AvlIterator -> com.google.gson.internal.LinkedHashTreeMap$AvlIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node stackTop -> stackTop
    622:622:void <init>() -> <init>
    627:633:void reset(com.google.gson.internal.LinkedHashTreeMap$Node) -> reset
    636:648:com.google.gson.internal.LinkedHashTreeMap$Node next() -> next
com.google.gson.internal.LinkedHashTreeMap$EntrySet -> com.google.gson.internal.LinkedHashTreeMap$EntrySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    794:794:void <init>(com.google.gson.internal.LinkedHashTreeMap) -> <init>
    796:796:int size() -> size
    800:800:java.util.Iterator iterator() -> iterator
    808:808:boolean contains(java.lang.Object) -> contains
    812:821:boolean remove(java.lang.Object) -> remove
    825:826:void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedHashTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedHashTreeMap$EntrySet this$1 -> this$1
    800:800:void <init>(com.google.gson.internal.LinkedHashTreeMap$EntrySet) -> <init>
    802:802:java.util.Map$Entry next() -> next
    800:800:java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$KeySet -> com.google.gson.internal.LinkedHashTreeMap$KeySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    829:829:void <init>(com.google.gson.internal.LinkedHashTreeMap) -> <init>
    831:831:int size() -> size
    835:835:java.util.Iterator iterator() -> iterator
    843:843:boolean contains(java.lang.Object) -> contains
    847:847:boolean remove(java.lang.Object) -> remove
    851:852:void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$KeySet$1 -> com.google.gson.internal.LinkedHashTreeMap$KeySet$1:
    com.google.gson.internal.LinkedHashTreeMap$KeySet this$1 -> this$1
    835:835:void <init>(com.google.gson.internal.LinkedHashTreeMap$KeySet) -> <init>
    837:837:java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    761:766:void <init>(com.google.gson.internal.LinkedHashTreeMap) -> <init>
    769:769:boolean hasNext() -> hasNext
    773:781:com.google.gson.internal.LinkedHashTreeMap$Node nextNode() -> nextNode
    785:791:void remove() -> remove
com.google.gson.internal.LinkedHashTreeMap$Node -> com.google.gson.internal.LinkedHashTreeMap$Node:
    com.google.gson.internal.LinkedHashTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedHashTreeMap$Node left -> left
    com.google.gson.internal.LinkedHashTreeMap$Node right -> right
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node prev -> prev
    java.lang.Object key -> key
    int hash -> hash
    java.lang.Object value -> value
    int height -> height
    479:483:void <init>() -> <init>
    486:495:void <init>(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.Object,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node) -> <init>
    498:498:java.lang.Object getKey() -> getKey
    502:502:java.lang.Object getValue() -> getValue
    506:508:java.lang.Object setValue(java.lang.Object) -> setValue
    513:518:boolean equals(java.lang.Object) -> equals
    522:523:int hashCode() -> hashCode
    527:527:java.lang.String toString() -> toString
    534:540:com.google.gson.internal.LinkedHashTreeMap$Node first() -> first
    547:553:com.google.gson.internal.LinkedHashTreeMap$Node last() -> last
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    60:61:void <init>() -> <init>
    48:75:void <init>(java.util.Comparator) -> <init>
    78:78:int size() -> size
    82:83:java.lang.Object get(java.lang.Object) -> get
    87:87:boolean containsKey(java.lang.Object) -> containsKey
    91:97:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    101:108:void clear() -> clear
    111:112:java.lang.Object remove(java.lang.Object) -> remove
    122:180:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    186:188:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    202:204:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    208:208:boolean equal(java.lang.Object,java.lang.Object) -> equal
    218:274:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    277:281:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    285:301:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    311:368:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    374:396:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    402:424:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    430:431:java.util.Set entrySet() -> entrySet
    435:436:java.util.Set keySet() -> keySet
    628:628:java.lang.Object writeReplace() -> writeReplace
    38:40:void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    40:40:void <init>() -> <init>
    42:42:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    40:40:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    560:560:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    562:562:int size() -> size
    566:566:java.util.Iterator iterator() -> iterator
    574:574:boolean contains(java.lang.Object) -> contains
    578:587:boolean remove(java.lang.Object) -> remove
    591:592:void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    566:566:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    568:568:java.util.Map$Entry next() -> next
    566:566:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    595:595:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    597:597:int size() -> size
    601:601:java.util.Iterator iterator() -> iterator
    609:609:boolean contains(java.lang.Object) -> contains
    613:613:boolean remove(java.lang.Object) -> remove
    617:618:void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    601:601:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    603:603:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    527:532:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    535:535:boolean hasNext() -> hasNext
    539:547:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    551:557:void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    450:453:void <init>() -> <init>
    456:464:void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    467:467:java.lang.Object getKey() -> getKey
    471:471:java.lang.Object getValue() -> getValue
    475:477:java.lang.Object setValue(java.lang.Object) -> setValue
    482:487:boolean equals(java.lang.Object) -> equals
    491:492:int hashCode() -> hashCode
    496:496:java.lang.String toString() -> toString
    503:509:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    516:522:com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    32:33:void <init>() -> <init>
    64:66:void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    72:72:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    82:83:boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    98:100:java.lang.Class wrap(java.lang.Class) -> wrap
    115:117:java.lang.Class unwrap(java.lang.Class) -> unwrap
    45:60:void <clinit>() -> <clinit>
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    36:37:void <init>() -> <init>
    44:64:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    72:73:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    76:76:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    85:89:void <init>(java.lang.Appendable) -> <init>
    92:94:void write(char[],int,int) -> write
    97:98:void write(int) -> write
    100:100:void flush() -> flush
    101:101:void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    106:106:void <init>() -> <init>
    109:109:int length() -> length
    112:112:char charAt(int) -> charAt
    115:115:java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    31:31:void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    40:101:com.google.gson.internal.UnsafeAllocator create() -> create
    115:122:void assertInstantiable(java.lang.Class) -> assertInstantiable
    31:31:void access$000(java.lang.Class) -> access$000
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    45:45:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    49:50:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    69:69:void <init>(java.lang.reflect.Method,int) -> <init>
    73:74:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    89:89:void <init>(java.lang.reflect.Method) -> <init>
    93:94:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    101:101:void <init>() -> <init>
    104:104:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    57:61:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:80:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    85:96:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    39:41:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:58:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    67:71:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    74:86:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    90:100:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    41:52:void <init>() -> <init>
    55:59:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    64:74:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    79:85:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    41:41:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    41:41:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    42:42:void <clinit>() -> <clinit>
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    42:42:void <init>() -> <init>
    45:45:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    37:39:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    55:80:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.lang.Object[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    51:68:void <init>(com.google.gson.JsonElement) -> <init>
    71:75:void beginArray() -> beginArray
    78:84:void endArray() -> endArray
    87:90:void beginObject() -> beginObject
    93:99:void endObject() -> endObject
    102:103:boolean hasNext() -> hasNext
    107:145:com.google.gson.stream.JsonToken peek() -> peek
    150:150:java.lang.Object peekStack() -> peekStack
    154:156:java.lang.Object popStack() -> popStack
    160:164:void expect(com.google.gson.stream.JsonToken) -> expect
    167:173:java.lang.String nextName() -> nextName
    177:186:java.lang.String nextString() -> nextString
    190:195:boolean nextBoolean() -> nextBoolean
    199:204:void nextNull() -> nextNull
    207:220:double nextDouble() -> nextDouble
    224:234:long nextLong() -> nextLong
    238:248:int nextInt() -> nextInt
    252:254:void close() -> close
    257:265:void skipValue() -> skipValue
    268:268:java.lang.String toString() -> toString
    272:277:void promoteNameToValue() -> promoteNameToValue
    280:292:void push(java.lang.Object) -> push
    295:310:java.lang.String getPath() -> getPath
    314:314:java.lang.String locationString() -> locationString
    38:46:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    38:38:void <init>() -> <init>
    40:40:int read(char[],int,int) -> read
    43:43:void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    49:59:void <init>() -> <init>
    65:68:com.google.gson.JsonElement get() -> get
    72:72:com.google.gson.JsonElement peek() -> peek
    76:92:void put(com.google.gson.JsonElement) -> put
    95:98:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    102:110:com.google.gson.stream.JsonWriter endArray() -> endArray
    114:117:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    121:129:com.google.gson.stream.JsonWriter endObject() -> endObject
    133:141:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    145:149:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    153:154:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    158:159:com.google.gson.stream.JsonWriter value(boolean) -> value
    163:167:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    171:175:com.google.gson.stream.JsonWriter value(double) -> value
    179:180:com.google.gson.stream.JsonWriter value(long) -> value
    184:196:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    200:200:void flush() -> flush
    203:207:void close() -> close
    34:46:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    34:34:void <init>() -> <init>
    36:36:void write(char[],int,int) -> write
    39:39:void flush() -> flush
    42:42:void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    110:113:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:133:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    140:142:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    152:158:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    161:195:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    199:243:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    246:260:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    145:145:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    145:145:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    50:52:void <init>(com.google.gson.Gson) -> <init>
    55:89:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    95:108:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    38:38:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    38:38:void <init>() -> <init>
    41:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    56:56:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> jsonAdapterFactory
    55:60:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) -> <init>
    63:63:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    67:67:boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder) -> excludeField
    72:89:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
    93:100:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    106:118:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    143:177:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    java.lang.reflect.Field val$field -> val$field
    boolean val$jsonAdapterPresent -> val$jsonAdapterPresent
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    118:118:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean) -> <init>
    122:126:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    129:133:void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
    135:137:boolean writeField(java.lang.Object) -> writeField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    199:202:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    205:229:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    233:250:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    185:189:void <init>(java.lang.String,boolean,boolean) -> <init>
    boolean writeField(java.lang.Object) -> writeField
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    38:47:void <init>() -> <init>
    51:59:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    65:66:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    38:38:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    38:38:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:42:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    40:48:void <init>() -> <init>
    51:59:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    64:65:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    41:41:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    47:59:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    62:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    73:83:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    86:89:com.google.gson.TypeAdapter delegate() -> delegate
    96:96:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    106:107:com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    116:116:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
    41:41:com.google.gson.Gson access$100(com.google.gson.internal.bind.TreeTypeAdapter) -> access$100
com.google.gson.internal.bind.TreeTypeAdapter$1 -> com.google.gson.internal.bind.TreeTypeAdapter$1:
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    com.google.gson.internal.bind.TreeTypeAdapter this$0 -> this$0
    153:153:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    155:155:com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    158:158:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
    162:162:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    153:153:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1) -> <init>
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    127:138:void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    143:146:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    33:37:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    41:41:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    53:70:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    76:80:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter ATOMIC_INTEGER -> ATOMIC_INTEGER
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY -> ATOMIC_INTEGER_FACTORY
    com.google.gson.TypeAdapter ATOMIC_BOOLEAN -> ATOMIC_BOOLEAN
    com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY -> ATOMIC_BOOLEAN_FACTORY
    com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY -> ATOMIC_INTEGER_ARRAY
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY -> ATOMIC_INTEGER_ARRAY_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapter CURRENCY -> CURRENCY
    com.google.gson.TypeAdapterFactory CURRENCY_FACTORY -> CURRENCY_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    64:65:void <init>() -> <init>
    840:840:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    850:850:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    863:863:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    878:878:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    897:897:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
    69:824:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    69:69:void <init>() -> <init>
    72:78:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    81:85:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    69:69:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    282:282:void <init>() -> <init>
    284:300:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> read
    303:308:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
    282:282:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    282:282:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    313:313:void <init>() -> <init>
    316:323:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    328:329:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    313:313:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    313:313:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    332:332:void <init>() -> <init>
    335:339:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    343:344:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    332:332:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    332:332:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    347:347:void <init>() -> <init>
    350:354:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    358:359:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    347:347:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    347:347:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    362:362:void <init>() -> <init>
    365:373:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    378:379:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    362:362:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    362:362:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    384:384:void <init>() -> <init>
    387:395:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    399:400:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    384:384:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    384:384:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    406:406:void <init>() -> <init>
    409:418:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    422:423:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    406:406:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    406:406:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    426:426:void <init>() -> <init>
    428:435:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    440:441:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    426:426:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    426:426:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    444:444:void <init>() -> <init>
    446:453:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    458:459:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    444:444:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    444:444:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    464:464:void <init>() -> <init>
    467:471:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    475:476:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    464:464:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    464:464:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    92:92:void <init>() -> <init>
    94:131:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    135:146:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    92:92:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    92:92:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    482:482:void <init>() -> <init>
    485:489:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    493:494:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    482:482:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    482:482:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    500:500:void <init>() -> <init>
    503:508:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    512:513:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    500:500:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    500:500:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    518:518:void <init>() -> <init>
    521:529:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    534:535:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    518:518:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    518:518:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    540:540:void <init>() -> <init>
    543:548:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    552:553:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    540:540:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    540:540:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    559:559:void <init>() -> <init>
    562:566:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    570:571:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    559:559:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    559:559:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    576:576:void <init>() -> <init>
    579:579:java.util.Currency read(com.google.gson.stream.JsonReader) -> read
    583:584:void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> write
    576:576:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    576:576:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    588:588:void <init>() -> <init>
    591:596:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$26$1 -> com.google.gson.internal.bind.TypeAdapters$26$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$26 this$0 -> this$0
    596:596:void <init>(com.google.gson.internal.bind.TypeAdapters$26,com.google.gson.TypeAdapter) -> <init>
    598:599:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    603:604:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    596:596:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    596:596:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    609:609:void <init>() -> <init>
    619:648:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    653:671:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    609:609:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    609:609:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    677:677:void <init>() -> <init>
    680:703:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    708:709:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    677:677:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    677:677:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    714:714:void <init>() -> <init>
    716:748:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    753:783:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    714:714:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    714:714:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    151:151:void <init>() -> <init>
    154:161:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    165:166:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    151:151:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    151:151:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    824:824:void <init>() -> <init>
    827:834:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    840:840:void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> <init>
    843:843:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    850:850:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    853:853:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    856:856:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$33:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    863:863:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    866:867:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    870:871:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$34:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    878:878:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    881:882:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    885:886:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.bind.TypeAdapters$35:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    897:897:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    900:904:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    920:920:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$35$1 -> com.google.gson.internal.bind.TypeAdapters$35$1:
    java.lang.Class val$requestedType -> val$requestedType
    com.google.gson.internal.bind.TypeAdapters$35 this$0 -> this$0
    904:904:void <init>(com.google.gson.internal.bind.TypeAdapters$35,java.lang.Class) -> <init>
    906:907:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    910:915:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.internal.bind.TypeAdapters$36 -> com.google.gson.internal.bind.TypeAdapters$36:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    105:105:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    173:173:void <init>() -> <init>
    175:179:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    183:184:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    173:173:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    173:173:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    190:190:void <init>() -> <init>
    193:201:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    206:207:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    190:190:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    190:190:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    213:213:void <init>() -> <init>
    216:223:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    228:229:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    213:213:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    213:213:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    235:235:void <init>() -> <init>
    238:245:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    250:251:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    235:235:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    235:235:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    256:256:void <init>() -> <init>
    259:261:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> read
    265:266:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
    256:256:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    256:256:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    271:271:void <init>() -> <init>
    273:273:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> read
    276:277:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
    271:271:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    271:271:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    790:810:void <init>(java.lang.Class) -> <init>
    812:816:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    820:821:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    789:789:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    789:789:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
    java.lang.String UTC_ID -> UTC_ID
    java.util.TimeZone TIMEZONE_UTC -> TIMEZONE_UTC
    17:17:void <init>() -> <init>
    45:45:java.lang.String format(java.util.Date) -> format
    56:56:java.lang.String format(java.util.Date,boolean) -> format
    68:105:java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    124:276:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    288:288:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    301:323:int parseInt(java.lang.String,int,int) -> parseInt
    334:339:void padInt(java.lang.StringBuilder,int,int) -> padInt
    345:349:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    30:30:void <clinit>() -> <clinit>
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    61:65:void <init>() -> <init>
    71:75:void <init>(java.lang.reflect.Type) -> <init>
    82:87:java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    94:94:java.lang.Class getRawType() -> getRawType
    101:101:java.lang.reflect.Type getType() -> getType
    112:112:boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    123:140:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    153:153:boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    161:178:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    188:231:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    240:250:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    257:265:java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    273:275:boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    280:280:int hashCode() -> hashCode
    284:285:boolean equals(java.lang.Object) -> equals
    289:289:java.lang.String toString() -> toString
    296:296:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    303:303:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    230:294:void <init>(java.io.Reader) -> <init>
    326:327:void setLenient(boolean) -> setLenient
    333:333:boolean isLenient() -> isLenient
    341:352:void beginArray() -> beginArray
    359:370:void endArray() -> endArray
    377:387:void beginObject() -> beginObject
    394:406:void endObject() -> endObject
    412:416:boolean hasNext() -> hasNext
    423:457:com.google.gson.stream.JsonToken peek() -> peek
    462:594:int doPeek() -> doPeek
    599:638:int peekKeyword() -> peekKeyword
    643:740:int peekNumber() -> peekNumber
    745:765:boolean isLiteral(char) -> isLiteral
    777:793:java.lang.String nextName() -> nextName
    805:829:java.lang.String nextString() -> nextString
    840:853:boolean nextBoolean() -> nextBoolean
    864:874:void nextNull() -> nextNull
    886:917:double nextDouble() -> nextDouble
    931:972:long nextLong() -> nextLong
    987:1019:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    1027:1084:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    1089:1111:void skipQuotedValue(char) -> skipQuotedValue
    1116:1142:void skipUnquotedValue() -> skipUnquotedValue
    1155:1201:int nextInt() -> nextInt
    1208:1212:void close() -> close
    1220:1253:void skipValue() -> skipValue
    1256:1268:void push(int) -> push
    1276:1301:boolean fillBuffer(int) -> fillBuffer
    1319:1395:int nextNonWhitespace(boolean) -> nextNonWhitespace
    1400:1403:void checkLenient() -> checkLenient
    1411:1421:void skipToEndOfLine() -> skipToEndOfLine
    1428:1441:boolean skipTo(java.lang.String) -> skipTo
    1445:1445:java.lang.String toString() -> toString
    1449:1451:java.lang.String locationString() -> locationString
    1459:1482:java.lang.String getPath() -> getPath
    1495:1550:char readEscapeCharacter() -> readEscapeCharacter
    1559:1559:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1567:1582:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    190:190:java.lang.String access$000(com.google.gson.stream.JsonReader) -> access$000
    192:1607:void <clinit>() -> <clinit>
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1585:1585:void <init>() -> <init>
    1587:1605:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
    25:25:void <init>() -> <init>
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    25:25:com.google.gson.stream.JsonToken[] values() -> values
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:84:void <clinit>() -> <clinit>
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    167:202:void <init>(java.io.Writer) -> <init>
    213:220:void setIndent(java.lang.String) -> setIndent
    235:236:void setLenient(boolean) -> setLenient
    242:242:boolean isLenient() -> isLenient
    253:254:void setHtmlSafe(boolean) -> setHtmlSafe
    261:261:boolean isHtmlSafe() -> isHtmlSafe
    269:270:void setSerializeNulls(boolean) -> setSerializeNulls
    277:277:boolean getSerializeNulls() -> getSerializeNulls
    287:288:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    297:297:com.google.gson.stream.JsonWriter endArray() -> endArray
    307:308:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    317:317:com.google.gson.stream.JsonWriter endObject() -> endObject
    325:328:com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    337:350:com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    354:360:void push(int) -> push
    366:369:int peek() -> peek
    376:377:void replaceTop(int) -> replaceTop
    386:396:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    400:405:void writeDeferredName() -> writeDeferredName
    414:420:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    431:437:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    446:456:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    465:468:com.google.gson.stream.JsonWriter value(boolean) -> value
    477:483:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    494:500:com.google.gson.stream.JsonWriter value(double) -> value
    509:512:com.google.gson.stream.JsonWriter value(long) -> value
    523:535:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    543:547:void flush() -> flush
    555:562:void close() -> close
    565:594:void string(java.lang.String) -> string
    597:605:void newline() -> newline
    612:620:void beforeName() -> beforeName
    629:658:void beforeValue() -> beforeValue
    145:162:void <clinit>() -> <clinit>
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    39:43:void <init>(java.lang.Throwable) -> <init>
com.google.thirdparty.publicsuffix.PublicSuffixPatterns -> com.google.a.a.a:
    com.google.common.collect.ImmutableMap EXACT -> a
    com.google.common.collect.ImmutableMap UNDER -> b
    com.google.common.collect.ImmutableMap EXCLUDED -> c
    44:61:void <clinit>() -> <clinit>
com.google.thirdparty.publicsuffix.PublicSuffixType -> com.google.a.a.b:
    com.google.thirdparty.publicsuffix.PublicSuffixType PRIVATE -> a
    com.google.thirdparty.publicsuffix.PublicSuffixType ICANN -> b
    char innerNodeCode -> c
    char leafNodeCode -> d
    com.google.thirdparty.publicsuffix.PublicSuffixType[] $VALUES -> e
    24:24:com.google.thirdparty.publicsuffix.PublicSuffixType[] values() -> values
    24:24:com.google.thirdparty.publicsuffix.PublicSuffixType valueOf(java.lang.String) -> valueOf
    38:41:void <init>(java.lang.String,int,char,char) -> <init>
    44:44:char getLeafNodeCode() -> a
    48:48:char getInnerNodeCode() -> b
    53:58:com.google.thirdparty.publicsuffix.PublicSuffixType fromCode(char) -> a
    24:30:void <clinit>() -> <clinit>
com.google.thirdparty.publicsuffix.TrieParser -> com.google.a.a.c:
    com.google.common.base.Joiner PREFIX_JOINER -> a
    39:48:com.google.common.collect.ImmutableMap parseTrie(java.lang.CharSequence) -> a
    65:103:int doParseTrieToBuilder(java.util.List,java.lang.CharSequence,com.google.common.collect.ImmutableMap$Builder) -> a
    112:127:java.lang.CharSequence reverse(java.lang.CharSequence) -> b
    131:134:void swap(char[],int,int) -> a
    32:32:void <clinit>() -> <clinit>
com.martiansoftware.jsap.CommandLineTokenizer -> com.martiansoftware.jsap.CommandLineTokenizer:
    void <init>() -> <init>
    void appendToBuffer(java.util.List,java.lang.StringBuffer) -> appendToBuffer
    java.lang.String[] tokenize(java.lang.String) -> tokenize
com.martiansoftware.jsap.DefaultSource -> com.martiansoftware.jsap.DefaultSource:
    com.martiansoftware.jsap.Defaults getDefaults(com.martiansoftware.jsap.IDMap,com.martiansoftware.jsap.ExceptionMap) -> getDefaults
com.martiansoftware.jsap.Defaults -> com.martiansoftware.jsap.Defaults:
    java.util.HashMap defaults -> defaults
    void <init>() -> <init>
    void setDefault(java.lang.String,java.lang.String) -> setDefault
    void setDefault(java.lang.String,java.lang.String[]) -> setDefault
    void addDefault(java.lang.String,java.lang.String) -> addDefault
    void addDefault(java.lang.String,java.lang.String[]) -> addDefault
    void setDefaultIfNeeded(java.lang.String,java.lang.String) -> setDefaultIfNeeded
    void setDefaultIfNeeded(java.lang.String,java.lang.String[]) -> setDefaultIfNeeded
    java.lang.String[] getDefault(java.lang.String) -> getDefault
    java.util.Iterator idIterator() -> idIterator
com.martiansoftware.jsap.ExceptionMap -> com.martiansoftware.jsap.ExceptionMap:
    void addException(java.lang.String,java.lang.Exception) -> addException
    java.lang.Exception getException(java.lang.String) -> getException
    java.lang.Exception[] getExceptionArray(java.lang.String) -> getExceptionArray
com.martiansoftware.jsap.Flagged -> com.martiansoftware.jsap.Flagged:
    char getShortFlag() -> getShortFlag
    java.lang.Character getShortFlagCharacter() -> getShortFlagCharacter
    java.lang.String getLongFlag() -> getLongFlag
com.martiansoftware.jsap.FlaggedOption -> com.martiansoftware.jsap.FlaggedOption:
    char shortFlag -> shortFlag
    java.lang.String longFlag -> longFlag
    boolean allowMultipleDeclarations -> allowMultipleDeclarations
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String) -> <init>
    com.martiansoftware.jsap.FlaggedOption setShortFlag(char) -> setShortFlag
    char getShortFlag() -> getShortFlag
    java.lang.Character getShortFlagCharacter() -> getShortFlagCharacter
    com.martiansoftware.jsap.FlaggedOption setLongFlag(java.lang.String) -> setLongFlag
    com.martiansoftware.jsap.FlaggedOption setUsageName(java.lang.String) -> setUsageName
    java.lang.String getLongFlag() -> getLongFlag
    com.martiansoftware.jsap.FlaggedOption setAllowMultipleDeclarations(boolean) -> setAllowMultipleDeclarations
    boolean allowMultipleDeclarations() -> allowMultipleDeclarations
    java.lang.String getSyntax() -> getSyntax
    com.martiansoftware.jsap.FlaggedOption setList(boolean) -> setList
    com.martiansoftware.jsap.FlaggedOption setListSeparator(char) -> setListSeparator
    com.martiansoftware.jsap.FlaggedOption setRequired(boolean) -> setRequired
    com.martiansoftware.jsap.FlaggedOption setDefault(java.lang.String[]) -> setDefault
    com.martiansoftware.jsap.FlaggedOption setDefault(java.lang.String) -> setDefault
    com.martiansoftware.jsap.FlaggedOption setStringParser(com.martiansoftware.jsap.StringParser) -> setStringParser
com.martiansoftware.jsap.IDMap -> com.martiansoftware.jsap.IDMap:
    java.util.List ids -> ids
    java.util.Map byShortFlag -> byShortFlag
    java.util.Map byLongFlag -> byLongFlag
    void <init>(java.util.List,java.util.Map,java.util.Map) -> <init>
    java.util.Iterator idIterator() -> idIterator
    boolean idExists(java.lang.String) -> idExists
    java.lang.String getIDByShortFlag(java.lang.Character) -> getIDByShortFlag
    java.lang.String getIDByShortFlag(char) -> getIDByShortFlag
    java.lang.String getIDByLongFlag(java.lang.String) -> getIDByLongFlag
com.martiansoftware.jsap.IllegalMultipleDeclarationException -> com.martiansoftware.jsap.IllegalMultipleDeclarationException:
    java.lang.String id -> id
    void <init>(java.lang.String) -> <init>
    java.lang.String getID() -> getID
com.martiansoftware.jsap.JSAP -> com.martiansoftware.jsap.JSAP:
    java.util.Map paramsByID -> paramsByID
    java.util.Map paramsByShortFlag -> paramsByShortFlag
    java.util.Map paramsByLongFlag -> paramsByLongFlag
    java.util.List unflaggedOptions -> unflaggedOptions
    java.util.List paramsByDeclarationOrder -> paramsByDeclarationOrder
    java.util.List defaultSources -> defaultSources
    java.lang.String usage -> usage
    java.lang.String help -> help
    char NO_SHORTFLAG -> NO_SHORTFLAG
    java.lang.String NO_LONGFLAG -> NO_LONGFLAG
    char DEFAULT_LISTSEPARATOR -> DEFAULT_LISTSEPARATOR
    java.lang.String DEFAULT_PARAM_HELP_SEPARATOR -> DEFAULT_PARAM_HELP_SEPARATOR
    boolean REQUIRED -> REQUIRED
    boolean NOT_REQUIRED -> NOT_REQUIRED
    boolean LIST -> LIST
    boolean NOT_LIST -> NOT_LIST
    boolean MULTIPLEDECLARATIONS -> MULTIPLEDECLARATIONS
    boolean NO_MULTIPLEDECLARATIONS -> NO_MULTIPLEDECLARATIONS
    boolean GREEDY -> GREEDY
    boolean NOT_GREEDY -> NOT_GREEDY
    java.lang.String NO_DEFAULT -> NO_DEFAULT
    java.lang.String NO_HELP -> NO_HELP
    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser BIGDECIMAL_PARSER -> BIGDECIMAL_PARSER
    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser BIGINTEGER_PARSER -> BIGINTEGER_PARSER
    com.martiansoftware.jsap.stringparsers.BooleanStringParser BOOLEAN_PARSER -> BOOLEAN_PARSER
    com.martiansoftware.jsap.stringparsers.ByteStringParser BYTE_PARSER -> BYTE_PARSER
    com.martiansoftware.jsap.stringparsers.CharacterStringParser CHARACTER_PARSER -> CHARACTER_PARSER
    com.martiansoftware.jsap.stringparsers.ClassStringParser CLASS_PARSER -> CLASS_PARSER
    com.martiansoftware.jsap.stringparsers.ColorStringParser COLOR_PARSER -> COLOR_PARSER
    com.martiansoftware.jsap.stringparsers.DoubleStringParser DOUBLE_PARSER -> DOUBLE_PARSER
    com.martiansoftware.jsap.stringparsers.FloatStringParser FLOAT_PARSER -> FLOAT_PARSER
    com.martiansoftware.jsap.stringparsers.InetAddressStringParser INETADDRESS_PARSER -> INETADDRESS_PARSER
    com.martiansoftware.jsap.stringparsers.IntegerStringParser INTEGER_PARSER -> INTEGER_PARSER
    com.martiansoftware.jsap.stringparsers.IntSizeStringParser INTSIZE_PARSER -> INTSIZE_PARSER
    com.martiansoftware.jsap.stringparsers.LongSizeStringParser LONGSIZE_PARSER -> LONGSIZE_PARSER
    com.martiansoftware.jsap.stringparsers.LongStringParser LONG_PARSER -> LONG_PARSER
    com.martiansoftware.jsap.stringparsers.PackageStringParser PACKAGE_PARSER -> PACKAGE_PARSER
    com.martiansoftware.jsap.stringparsers.ShortStringParser SHORT_PARSER -> SHORT_PARSER
    com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER -> STRING_PARSER
    com.martiansoftware.jsap.stringparsers.URLStringParser URL_PARSER -> URL_PARSER
    int DEFAULT_SCREENWIDTH -> DEFAULT_SCREENWIDTH
    char SYNTAX_SPACECHAR -> SYNTAX_SPACECHAR
    java.lang.Class class$com$martiansoftware$jsap$JSAP -> class$com$martiansoftware$jsap$JSAP
    void <init>() -> <init>
    void <init>(java.net.URL) -> <init>
    void <init>(java.lang.String) -> <init>
    void init() -> init
    void setUsage(java.lang.String) -> setUsage
    void setHelp(java.lang.String) -> setHelp
    java.lang.String getHelp() -> getHelp
    java.lang.String getHelp(int) -> getHelp
    java.lang.String getHelp(int,java.lang.String) -> getHelp
    java.lang.String getUsage() -> getUsage
    java.lang.String toString() -> toString
    com.martiansoftware.jsap.IDMap getIDMap() -> getIDMap
    com.martiansoftware.jsap.Parameter getByID(java.lang.String) -> getByID
    com.martiansoftware.jsap.Flagged getByLongFlag(java.lang.String) -> getByLongFlag
    com.martiansoftware.jsap.Flagged getByShortFlag(java.lang.Character) -> getByShortFlag
    com.martiansoftware.jsap.Flagged getByShortFlag(char) -> getByShortFlag
    java.util.Iterator getUnflaggedOptionsIterator() -> getUnflaggedOptionsIterator
    void registerDefaultSource(com.martiansoftware.jsap.DefaultSource) -> registerDefaultSource
    void unregisterDefaultSource(com.martiansoftware.jsap.DefaultSource) -> unregisterDefaultSource
    com.martiansoftware.jsap.Defaults getSystemDefaults() -> getSystemDefaults
    void combineDefaults(com.martiansoftware.jsap.Defaults,com.martiansoftware.jsap.Defaults) -> combineDefaults
    com.martiansoftware.jsap.Defaults getDefaults(com.martiansoftware.jsap.ExceptionMap) -> getDefaults
    void registerParameter(com.martiansoftware.jsap.Parameter) -> registerParameter
    void unregisterParameter(com.martiansoftware.jsap.Parameter) -> unregisterParameter
    com.martiansoftware.jsap.JSAPResult parse(java.lang.String[]) -> parse
    com.martiansoftware.jsap.JSAPResult parse(java.lang.String) -> parse
    void finalize() -> finalize
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.JSAPException -> com.martiansoftware.jsap.JSAPException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.martiansoftware.jsap.JSAPResult -> com.martiansoftware.jsap.JSAPResult:
    java.util.Map allResults -> allResults
    java.util.Map qualifiedSwitches -> qualifiedSwitches
    java.util.Map allExceptions -> allExceptions
    java.util.List chronologicalErrorMessages -> chronologicalErrorMessages
    java.util.Set userSpecifiedIDs -> userSpecifiedIDs
    boolean valuesFromUser -> valuesFromUser
    void <init>() -> <init>
    void setValuesFromUser(boolean) -> setValuesFromUser
    boolean contains(java.lang.String) -> contains
    boolean userSpecified(java.lang.String) -> userSpecified
    void add(java.lang.String,java.util.List) -> add
    void addException(java.lang.String,java.lang.Exception) -> addException
    java.lang.Object getObject(java.lang.String) -> getObject
    java.lang.Object[] getObjectArray(java.lang.String) -> getObjectArray
    java.lang.Object[] getObjectArray(java.lang.String,java.lang.Object[]) -> getObjectArray
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean[] getBooleanArray(java.lang.String) -> getBooleanArray
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    java.lang.String getQualifiedSwitchValue(java.lang.String) -> getQualifiedSwitchValue
    int[] getIntArray(java.lang.String) -> getIntArray
    long getLong(java.lang.String) -> getLong
    long getLong(java.lang.String,long) -> getLong
    long[] getLongArray(java.lang.String) -> getLongArray
    byte getByte(java.lang.String) -> getByte
    byte getByte(java.lang.String,byte) -> getByte
    byte[] getByteArray(java.lang.String) -> getByteArray
    char getChar(java.lang.String) -> getChar
    char getChar(java.lang.String,char) -> getChar
    char[] getCharArray(java.lang.String) -> getCharArray
    short getShort(java.lang.String) -> getShort
    short getShort(java.lang.String,short) -> getShort
    short[] getShortArray(java.lang.String) -> getShortArray
    double getDouble(java.lang.String) -> getDouble
    double getDouble(java.lang.String,double) -> getDouble
    double[] getDoubleArray(java.lang.String) -> getDoubleArray
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    float[] getFloatArray(java.lang.String) -> getFloatArray
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.lang.String[] getStringArray(java.lang.String) -> getStringArray
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigDecimal getBigDecimal(java.lang.String,java.math.BigDecimal) -> getBigDecimal
    java.math.BigDecimal[] getBigDecimalArray(java.lang.String) -> getBigDecimalArray
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.math.BigInteger getBigInteger(java.lang.String,java.math.BigInteger) -> getBigInteger
    java.math.BigInteger[] getBigIntegerArray(java.lang.String) -> getBigIntegerArray
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String,java.lang.Class) -> getClass
    java.lang.Class[] getClassArray(java.lang.String) -> getClassArray
    java.net.InetAddress getInetAddress(java.lang.String) -> getInetAddress
    java.net.InetAddress getInetAddress(java.lang.String,java.net.InetAddress) -> getInetAddress
    java.net.InetAddress[] getInetAddressArray(java.lang.String) -> getInetAddressArray
    java.lang.Package getPackage(java.lang.String) -> getPackage
    java.lang.Package getPackage(java.lang.String,java.lang.Package) -> getPackage
    java.lang.Package[] getPackageArray(java.lang.String) -> getPackageArray
    java.net.URL getURL(java.lang.String) -> getURL
    java.net.URL getURL(java.lang.String,java.net.URL) -> getURL
    java.net.URL[] getURLArray(java.lang.String) -> getURLArray
    java.awt.Color getColor(java.lang.String) -> getColor
    java.io.File getFile(java.lang.String) -> getFile
    java.awt.Color getColor(java.lang.String,java.awt.Color) -> getColor
    java.io.File getFile(java.lang.String,java.io.File) -> getFile
    java.awt.Color[] getColorArray(java.lang.String) -> getColorArray
    java.io.File[] getFileArray(java.lang.String) -> getFileArray
    java.util.Date getDate(java.lang.String) -> getDate
    java.util.Date getDate(java.lang.String,java.util.Date) -> getDate
    java.util.Date[] getDateArray(java.lang.String) -> getDateArray
    java.lang.Exception getException(java.lang.String) -> getException
    java.lang.Exception[] getExceptionArray(java.lang.String) -> getExceptionArray
    java.util.Iterator getExceptionIterator(java.lang.String) -> getExceptionIterator
    java.util.Iterator getErrorMessageIterator() -> getErrorMessageIterator
    java.util.Iterator getBadParameterIDIterator() -> getBadParameterIDIterator
    boolean success() -> success
    void registerQualifiedSwitch(java.lang.String,boolean) -> registerQualifiedSwitch
com.martiansoftware.jsap.Option -> com.martiansoftware.jsap.Option:
    boolean isList -> isList
    boolean required -> required
    char listSeparator -> listSeparator
    com.martiansoftware.jsap.StringParser stringParser -> stringParser
    void <init>(java.lang.String) -> <init>
    void internalSetList(boolean) -> internalSetList
    boolean isList() -> isList
    void internalSetListSeparator(char) -> internalSetListSeparator
    char getListSeparator() -> getListSeparator
    void internalSetRequired(boolean) -> internalSetRequired
    boolean required() -> required
    void internalSetStringParser(com.martiansoftware.jsap.StringParser) -> internalSetStringParser
    com.martiansoftware.jsap.StringParser getStringParser() -> getStringParser
    void storeParseResult(java.util.List,java.lang.String) -> storeParseResult
    java.util.List parse(java.lang.String) -> parse
    void register() -> register
    void unregister() -> unregister
com.martiansoftware.jsap.Parameter -> com.martiansoftware.jsap.Parameter:
    java.lang.String id -> id
    java.lang.String usageName -> usageName
    boolean locked -> locked
    java.lang.String[] defaultValue -> defaultValue
    java.lang.String help -> help
    void <init>(java.lang.String) -> <init>
    java.lang.String getID() -> getID
    void setLocked(boolean) -> setLocked
    boolean locked() -> locked
    void enforceParameterLock() -> enforceParameterLock
    void _setDefault(java.lang.String) -> _setDefault
    void _setDefault(java.lang.String[]) -> _setDefault
    void addDefault(java.lang.String) -> addDefault
    void _setUsageName(java.lang.String) -> _setUsageName
    java.lang.String getUsageName() -> getUsageName
    java.lang.String[] getDefault() -> getDefault
    java.util.List parse(java.lang.String) -> parse
    java.lang.String getSyntax() -> getSyntax
    java.lang.String getUsage() -> getUsage
    java.lang.String getHelp() -> getHelp
    com.martiansoftware.jsap.Parameter setHelp(java.lang.String) -> setHelp
com.martiansoftware.jsap.ParseException -> com.martiansoftware.jsap.ParseException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.martiansoftware.jsap.Parser -> com.martiansoftware.jsap.Parser:
    com.martiansoftware.jsap.JSAP config -> config
    java.util.Iterator unflaggedOptions -> unflaggedOptions
    com.martiansoftware.jsap.UnflaggedOption curUnflaggedOption -> curUnflaggedOption
    java.lang.String[] args -> args
    boolean parsed -> parsed
    com.martiansoftware.jsap.JSAPResult result -> result
    void <init>(com.martiansoftware.jsap.JSAP,java.lang.String[]) -> <init>
    void advanceUnflaggedOption() -> advanceUnflaggedOption
    void processParameter(com.martiansoftware.jsap.Parameter,java.lang.String) -> processParameter
    int parseArg(java.lang.String[],int) -> parseArg
    void processDefaults() -> processDefaults
    void enforceRequirements() -> enforceRequirements
    com.martiansoftware.jsap.JSAPResult parse() -> parse
    void preregisterQualifiedSwitches() -> preregisterQualifiedSwitches
    int parseLongForm(java.lang.String[],int) -> parseLongForm
    int parseShortForm(java.lang.String[],int) -> parseShortForm
    int parseUnflaggedOption(java.lang.String[],int) -> parseUnflaggedOption
com.martiansoftware.jsap.PropertyStringParser -> com.martiansoftware.jsap.PropertyStringParser:
    java.util.Properties properties -> properties
    void <init>() -> <init>
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setProperty(java.lang.String,java.lang.String) -> setProperty
    java.lang.String getProperty(java.lang.String) -> getProperty
    java.lang.String getProperty(java.lang.String,java.lang.String) -> getProperty
com.martiansoftware.jsap.QualifiedSwitch -> com.martiansoftware.jsap.QualifiedSwitch:
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getSyntax() -> getSyntax
com.martiansoftware.jsap.RequiredParameterMissingException -> com.martiansoftware.jsap.RequiredParameterMissingException:
    java.lang.String id -> id
    void <init>(java.lang.String) -> <init>
    java.lang.String getID() -> getID
com.martiansoftware.jsap.SimpleJSAP -> com.martiansoftware.jsap.SimpleJSAP:
    int screenWidth -> screenWidth
    java.lang.String explanation -> explanation
    boolean messagePrinted -> messagePrinted
    java.lang.String name -> name
    void <init>(java.lang.String,java.lang.String,com.martiansoftware.jsap.Parameter[]) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String) -> <init>
    com.martiansoftware.jsap.JSAPResult parse(java.lang.String) -> parse
    com.martiansoftware.jsap.JSAPResult parse(java.lang.String[]) -> parse
    boolean printMessageIfUnsuccessfulOrHelpRequired(com.martiansoftware.jsap.JSAPResult) -> printMessageIfUnsuccessfulOrHelpRequired
    int getScreenWidth() -> getScreenWidth
    com.martiansoftware.jsap.SimpleJSAP setScreenWidth(int) -> setScreenWidth
    boolean messagePrinted() -> messagePrinted
com.martiansoftware.jsap.StringParser -> com.martiansoftware.jsap.StringParser:
    void <init>() -> <init>
    void setUp() -> setUp
    void tearDown() -> tearDown
    java.lang.Object parse(java.lang.String) -> parse
com.martiansoftware.jsap.Switch -> com.martiansoftware.jsap.Switch:
    char shortFlag -> shortFlag
    java.lang.String longFlag -> longFlag
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,char,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,char,java.lang.String) -> <init>
    com.martiansoftware.jsap.Switch setShortFlag(char) -> setShortFlag
    char getShortFlag() -> getShortFlag
    java.lang.Character getShortFlagCharacter() -> getShortFlagCharacter
    com.martiansoftware.jsap.Switch setLongFlag(java.lang.String) -> setLongFlag
    java.lang.String getLongFlag() -> getLongFlag
    java.util.List parse(java.lang.String) -> parse
    java.lang.String getSyntax() -> getSyntax
    com.martiansoftware.jsap.Switch setDefault(java.lang.String) -> setDefault
    com.martiansoftware.jsap.Switch setDefault(java.lang.String[]) -> setDefault
com.martiansoftware.jsap.SyntaxException -> com.martiansoftware.jsap.SyntaxException:
    void <init>(java.lang.String) -> <init>
com.martiansoftware.jsap.UnflaggedOption -> com.martiansoftware.jsap.UnflaggedOption:
    boolean greedy -> greedy
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,boolean,java.lang.String) -> <init>
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,boolean) -> <init>
    void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,boolean,java.lang.String) -> <init>
    com.martiansoftware.jsap.UnflaggedOption setGreedy(boolean) -> setGreedy
    com.martiansoftware.jsap.UnflaggedOption setUsageName(java.lang.String) -> setUsageName
    boolean isGreedy() -> isGreedy
    java.lang.String getSyntax() -> getSyntax
    com.martiansoftware.jsap.UnflaggedOption setList(boolean) -> setList
    com.martiansoftware.jsap.UnflaggedOption setListSeparator(char) -> setListSeparator
    com.martiansoftware.jsap.UnflaggedOption setRequired(boolean) -> setRequired
    com.martiansoftware.jsap.UnflaggedOption setStringParser(com.martiansoftware.jsap.StringParser) -> setStringParser
    com.martiansoftware.jsap.UnflaggedOption setDefault(java.lang.String) -> setDefault
    com.martiansoftware.jsap.UnflaggedOption setDefault(java.lang.String[]) -> setDefault
com.martiansoftware.jsap.UnknownFlagException -> com.martiansoftware.jsap.UnknownFlagException:
    java.lang.String flag -> flag
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Character) -> <init>
    java.lang.String getFlag() -> getFlag
com.martiansoftware.jsap.UnspecifiedParameterException -> com.martiansoftware.jsap.UnspecifiedParameterException:
    java.lang.String id -> id
    void <init>(java.lang.String) -> <init>
    java.lang.String getID() -> getID
com.martiansoftware.jsap.ant.DefaultValue -> com.martiansoftware.jsap.ant.DefaultValue:
    java.lang.String value -> value
    void <init>() -> <init>
    void addText(java.lang.String) -> addText
    java.lang.String getValue() -> getValue
com.martiansoftware.jsap.ant.FlaggedOptionConfiguration -> com.martiansoftware.jsap.ant.FlaggedOptionConfiguration:
    char shortFlag -> shortFlag
    java.lang.String longFlag -> longFlag
    boolean allowMultipleDeclarations -> allowMultipleDeclarations
    boolean declaredAllowMultipleDeclarations -> declaredAllowMultipleDeclarations
    void <init>() -> <init>
    void setShortflag(char) -> setShortflag
    char getShortflag() -> getShortflag
    void setLongflag(java.lang.String) -> setLongflag
    java.lang.String getLongflag() -> getLongflag
    void setAllowmultipledeclarations(boolean) -> setAllowmultipledeclarations
    com.martiansoftware.jsap.Parameter getParameter() -> getParameter
    void createMethod(java.lang.String,java.io.PrintStream) -> createMethod
com.martiansoftware.jsap.ant.JSAPAntTask -> com.martiansoftware.jsap.ant.JSAPAntTask:
    boolean isPublic -> isPublic
    java.io.File srcDir -> srcDir
    java.lang.String className -> className
    java.util.Vector parameterConfigs -> parameterConfigs
    com.martiansoftware.jsap.JSAP jsap -> jsap
    boolean containsFlaggedOptions -> containsFlaggedOptions
    boolean containsUnflaggedOptions -> containsUnflaggedOptions
    boolean containsSwitches -> containsSwitches
    boolean hasProperties -> hasProperties
    void <init>() -> <init>
    void setPublic(boolean) -> setPublic
    void setSrcdir(java.io.File) -> setSrcdir
    void setClassname(java.lang.String) -> setClassname
    void addConfiguredFlaggedoption(com.martiansoftware.jsap.ant.FlaggedOptionConfiguration) -> addConfiguredFlaggedoption
    void addConfiguredUnflaggedoption(com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration) -> addConfiguredUnflaggedoption
    void addConfiguredSwitch(com.martiansoftware.jsap.ant.SwitchConfiguration) -> addConfiguredSwitch
    void buildJSAP() -> buildJSAP
    void writeJSAP() -> writeJSAP
    java.lang.String properCase(java.lang.String) -> properCase
    void createJavaFile(java.lang.String,java.lang.String,java.io.PrintStream) -> createJavaFile
    void execute() -> execute
com.martiansoftware.jsap.ant.OptionConfiguration -> com.martiansoftware.jsap.ant.OptionConfiguration:
    boolean required -> required
    java.util.Vector parserProperties -> parserProperties
    boolean isList -> isList
    char listSeparator -> listSeparator
    boolean declaredListSeparator -> declaredListSeparator
    java.lang.String stringParser -> stringParser
    void <init>() -> <init>
    void setStringparser(java.lang.String) -> setStringparser
    java.lang.String getStringparser() -> getStringparser
    void setRequired(boolean) -> setRequired
    boolean getRequired() -> getRequired
    void setIslist(boolean) -> setIslist
    boolean getIslist() -> getIslist
    void setListseparator(char) -> setListseparator
    char getListseparator() -> getListseparator
    boolean declaredListSeparator() -> declaredListSeparator
    void addConfiguredProperty(com.martiansoftware.jsap.ant.ParserProperty) -> addConfiguredProperty
    com.martiansoftware.jsap.ant.ParserProperty[] getParserProperties() -> getParserProperties
    boolean hasProperties() -> hasProperties
    void setupStringParser(com.martiansoftware.jsap.Option) -> setupStringParser
    void createParentStatements(java.lang.String,java.io.PrintStream) -> createParentStatements
com.martiansoftware.jsap.ant.ParameterConfiguration -> com.martiansoftware.jsap.ant.ParameterConfiguration:
    java.lang.String id -> id
    java.util.Vector defaults -> defaults
    void <init>() -> <init>
    com.martiansoftware.jsap.Parameter getParameter() -> getParameter
    void setId(java.lang.String) -> setId
    java.lang.String getId() -> getId
    void setDefault(java.lang.String) -> setDefault
    void addConfiguredDefault(com.martiansoftware.jsap.ant.DefaultValue) -> addConfiguredDefault
    java.lang.String[] getDefaults() -> getDefaults
    void createParentStatements(java.lang.String,java.io.PrintStream) -> createParentStatements
    boolean hasProperties() -> hasProperties
    void createMethod(java.lang.String,java.io.PrintStream) -> createMethod
com.martiansoftware.jsap.ant.ParserProperty -> com.martiansoftware.jsap.ant.ParserProperty:
    java.lang.String name -> name
    java.lang.String value -> value
    void <init>() -> <init>
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
com.martiansoftware.jsap.ant.SwitchConfiguration -> com.martiansoftware.jsap.ant.SwitchConfiguration:
    char shortFlag -> shortFlag
    java.lang.String longFlag -> longFlag
    void <init>() -> <init>
    void setShortflag(char) -> setShortflag
    char getShortflag() -> getShortflag
    void setLongflag(java.lang.String) -> setLongflag
    java.lang.String getLongflag() -> getLongflag
    com.martiansoftware.jsap.Parameter getParameter() -> getParameter
    void createMethod(java.lang.String,java.io.PrintStream) -> createMethod
com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration -> com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration:
    boolean greedy -> greedy
    void <init>() -> <init>
    void setGreedy(boolean) -> setGreedy
    boolean getGreedy() -> getGreedy
    com.martiansoftware.jsap.Parameter getParameter() -> getParameter
    void createMethod(java.lang.String,java.io.PrintStream) -> createMethod
com.martiansoftware.jsap.defaultsources.PropertyDefaultSource -> com.martiansoftware.jsap.defaultsources.PropertyDefaultSource:
    boolean loadFromFile -> loadFromFile
    boolean loadFromProperties -> loadFromProperties
    boolean loadFromInputStream -> loadFromInputStream
    java.io.InputStream in -> in
    java.lang.String propertyFileName -> propertyFileName
    boolean throwIOExceptions -> throwIOExceptions
    java.util.Properties properties -> properties
    boolean loaded -> loaded
    void <init>(java.lang.String,boolean) -> <init>
    void <init>(java.util.Properties) -> <init>
    void <init>(java.io.InputStream,boolean) -> <init>
    java.util.Properties getProperties() -> getProperties
    com.martiansoftware.jsap.Defaults getDefaults(com.martiansoftware.jsap.IDMap,com.martiansoftware.jsap.ExceptionMap) -> getDefaults
com.martiansoftware.jsap.stringparsers.BigDecimalStringParser -> com.martiansoftware.jsap.stringparsers.BigDecimalStringParser:
    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.BigIntegerStringParser -> com.martiansoftware.jsap.stringparsers.BigIntegerStringParser:
    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.BooleanStringParser -> com.martiansoftware.jsap.stringparsers.BooleanStringParser:
    com.martiansoftware.jsap.stringparsers.BooleanStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.BooleanStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.ByteStringParser -> com.martiansoftware.jsap.stringparsers.ByteStringParser:
    com.martiansoftware.jsap.stringparsers.ByteStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.ByteStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.CharacterStringParser -> com.martiansoftware.jsap.stringparsers.CharacterStringParser:
    com.martiansoftware.jsap.stringparsers.CharacterStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.CharacterStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.ClassStringParser -> com.martiansoftware.jsap.stringparsers.ClassStringParser:
    com.martiansoftware.jsap.stringparsers.ClassStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.ClassStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.ColorStringParser -> com.martiansoftware.jsap.stringparsers.ColorStringParser:
    com.martiansoftware.jsap.stringparsers.ColorStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.ColorStringParser getParser() -> getParser
    void <init>() -> <init>
    com.martiansoftware.jsap.ParseException colorException(java.lang.String) -> colorException
    java.awt.Color parseHexColor(java.lang.String) -> parseHexColor
    java.awt.Color parseFloatTuple(java.lang.String) -> parseFloatTuple
    java.awt.Color parseIntTuple(java.lang.String) -> parseIntTuple
    java.awt.Color parseColorName(java.lang.String) -> parseColorName
    java.lang.String[] tupleToArray(java.lang.String) -> tupleToArray
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.DateStringParser -> com.martiansoftware.jsap.stringparsers.DateStringParser:
    java.text.SimpleDateFormat format -> format
    com.martiansoftware.jsap.stringparsers.DateStringParser getParser() -> getParser
    void <init>() -> <init>
    void setUp() -> setUp
    void tearDown() -> tearDown
    java.lang.Object parse(java.lang.String) -> parse
com.martiansoftware.jsap.stringparsers.DoubleStringParser -> com.martiansoftware.jsap.stringparsers.DoubleStringParser:
    com.martiansoftware.jsap.stringparsers.DoubleStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.DoubleStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.EnumeratedStringParser -> com.martiansoftware.jsap.stringparsers.EnumeratedStringParser:
    char CONSTRUCTOR_VALUE_SEPARATOR -> CONSTRUCTOR_VALUE_SEPARATOR
    java.lang.String[] validOptionValuesArray -> validOptionValuesArray
    boolean isCaseSensitive -> isCaseSensitive
    boolean checkOptionChars -> checkOptionChars
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser getParser(java.lang.String,boolean,boolean) -> getParser
    void <init>(java.lang.String,boolean,boolean) -> <init>
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser getParser(java.lang.String,boolean) -> getParser
    void <init>(java.lang.String,boolean) -> <init>
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser getParser(java.lang.String) -> getParser
    void <init>(java.lang.String) -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    boolean isValidOptionName(java.lang.String) -> isValidOptionName
com.martiansoftware.jsap.stringparsers.FileStringParser -> com.martiansoftware.jsap.stringparsers.FileStringParser:
    java.lang.String MUSTBEFILE -> MUSTBEFILE
    java.lang.String MUSTBEDIRECTORY -> MUSTBEDIRECTORY
    java.lang.String MUSTEXIST -> MUSTEXIST
    boolean mustExist -> mustExist
    boolean mustBeDirectory -> mustBeDirectory
    boolean mustBeFile -> mustBeFile
    void <init>() -> <init>
    com.martiansoftware.jsap.stringparsers.FileStringParser getParser() -> getParser
    void setUp() -> setUp
    com.martiansoftware.jsap.stringparsers.FileStringParser setMustBeDirectory(boolean) -> setMustBeDirectory
    com.martiansoftware.jsap.stringparsers.FileStringParser setMustBeFile(boolean) -> setMustBeFile
    com.martiansoftware.jsap.stringparsers.FileStringParser setMustExist(boolean) -> setMustExist
    boolean mustBeDirectory() -> mustBeDirectory
    boolean mustBeFile() -> mustBeFile
    boolean mustExist() -> mustExist
    void tearDown() -> tearDown
    java.lang.Object parse(java.lang.String) -> parse
com.martiansoftware.jsap.stringparsers.FloatStringParser -> com.martiansoftware.jsap.stringparsers.FloatStringParser:
    com.martiansoftware.jsap.stringparsers.FloatStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.FloatStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.ForNameStringParser -> com.martiansoftware.jsap.stringparsers.ForNameStringParser:
    java.lang.Class[] PARAMETERS -> PARAMETERS
    java.lang.Class klass -> klass
    java.lang.reflect.Method forName -> forName
    java.lang.Class class$java$lang$String -> class$java$lang$String
    void <init>(java.lang.Class) -> <init>
    com.martiansoftware.jsap.stringparsers.ForNameStringParser getParser(java.lang.Class) -> getParser
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.InetAddressStringParser -> com.martiansoftware.jsap.stringparsers.InetAddressStringParser:
    com.martiansoftware.jsap.stringparsers.InetAddressStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.InetAddressStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.IntSizeStringParser -> com.martiansoftware.jsap.stringparsers.IntSizeStringParser:
    com.martiansoftware.jsap.stringparsers.IntSizeStringParser INSTANCE -> INSTANCE
    void <init>() -> <init>
    com.martiansoftware.jsap.stringparsers.IntSizeStringParser getParser() -> getParser
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.IntegerStringParser -> com.martiansoftware.jsap.stringparsers.IntegerStringParser:
    com.martiansoftware.jsap.stringparsers.IntegerStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.IntegerStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.LongSizeStringParser -> com.martiansoftware.jsap.stringparsers.LongSizeStringParser:
    java.util.regex.Pattern PARSE_SIZE_REGEX -> PARSE_SIZE_REGEX
    java.math.BigInteger LONG_MAX_VALUE -> LONG_MAX_VALUE
    java.util.HashMap UNIT2SIZE -> UNIT2SIZE
    com.martiansoftware.jsap.stringparsers.LongSizeStringParser INSTANCE -> INSTANCE
    void <init>() -> <init>
    com.martiansoftware.jsap.stringparsers.LongSizeStringParser getParser() -> getParser
    java.lang.Object parse(java.lang.String) -> parse
    long parseSize(java.lang.CharSequence) -> parseSize
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.LongStringParser -> com.martiansoftware.jsap.stringparsers.LongStringParser:
    com.martiansoftware.jsap.stringparsers.LongStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.LongStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.PackageStringParser -> com.martiansoftware.jsap.stringparsers.PackageStringParser:
    com.martiansoftware.jsap.stringparsers.PackageStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.PackageStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.ShortStringParser -> com.martiansoftware.jsap.stringparsers.ShortStringParser:
    com.martiansoftware.jsap.stringparsers.ShortStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.ShortStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.StringStringParser -> com.martiansoftware.jsap.stringparsers.StringStringParser:
    com.martiansoftware.jsap.stringparsers.StringStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.StringStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.stringparsers.URLStringParser -> com.martiansoftware.jsap.stringparsers.URLStringParser:
    com.martiansoftware.jsap.stringparsers.URLStringParser INSTANCE -> INSTANCE
    com.martiansoftware.jsap.stringparsers.URLStringParser getParser() -> getParser
    void <init>() -> <init>
    java.lang.Object parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.martiansoftware.jsap.xml.FlaggedConfig -> com.martiansoftware.jsap.xml.FlaggedConfig:
    char shortFlag -> shortFlag
    java.lang.String longFlag -> longFlag
    void <init>() -> <init>
    java.lang.String getLongFlag() -> getLongFlag
    void setLongFlag(java.lang.String) -> setLongFlag
    char getShortFlag() -> getShortFlag
    void setShortFlag(char) -> setShortFlag
    void configure(com.martiansoftware.jsap.FlaggedOption) -> configure
com.martiansoftware.jsap.xml.FlaggedOptionConfig -> com.martiansoftware.jsap.xml.FlaggedOptionConfig:
    boolean allowMultipleDeclarations -> allowMultipleDeclarations
    boolean list -> list
    char listSeparator -> listSeparator
    com.martiansoftware.jsap.xml.StringParserConfig stringParser -> stringParser
    boolean required -> required
    void <init>() -> <init>
    boolean allowMultipleDeclarations() -> allowMultipleDeclarations
    void setAllowMultipleDeclarations(boolean) -> setAllowMultipleDeclarations
    boolean isList() -> isList
    void setList(boolean) -> setList
    char getListSeparator() -> getListSeparator
    void setListSeparator(char) -> setListSeparator
    boolean isRequired() -> isRequired
    void setRequired(boolean) -> setRequired
    com.martiansoftware.jsap.xml.StringParserConfig getStringParser() -> getStringParser
    void setStringParser(com.martiansoftware.jsap.xml.StringParserConfig) -> setStringParser
    void configure(com.martiansoftware.jsap.FlaggedOption) -> configure
    com.martiansoftware.jsap.Parameter getConfiguredParameter() -> getConfiguredParameter
com.martiansoftware.jsap.xml.JSAPConfig -> com.martiansoftware.jsap.xml.JSAPConfig:
    java.util.List parameters -> parameters
    java.lang.String help -> help
    java.lang.String usage -> usage
    void <init>() -> <init>
    void configure(com.martiansoftware.jsap.JSAP,java.net.URL) -> configure
    java.lang.String getHelp() -> getHelp
    void setHelp(java.lang.String) -> setHelp
    java.lang.String getUsage() -> getUsage
    void setUsage(java.lang.String) -> setUsage
    void addParameter(com.martiansoftware.jsap.xml.ParameterConfig) -> addParameter
    java.util.Iterator parameters() -> parameters
com.martiansoftware.jsap.xml.JSAPXStream -> com.martiansoftware.jsap.xml.JSAPXStream:
    java.lang.Class class$com$martiansoftware$jsap$xml$JSAPConfig -> class$com$martiansoftware$jsap$xml$JSAPConfig
    java.lang.Class class$com$martiansoftware$jsap$xml$FlaggedOptionConfig -> class$com$martiansoftware$jsap$xml$FlaggedOptionConfig
    java.lang.Class class$com$martiansoftware$jsap$xml$UnflaggedOptionConfig -> class$com$martiansoftware$jsap$xml$UnflaggedOptionConfig
    java.lang.Class class$com$martiansoftware$jsap$xml$Property -> class$com$martiansoftware$jsap$xml$Property
    java.lang.Class class$com$martiansoftware$jsap$xml$QualifiedSwitchConfig -> class$com$martiansoftware$jsap$xml$QualifiedSwitchConfig
    java.lang.Class class$com$martiansoftware$jsap$xml$SwitchConfig -> class$com$martiansoftware$jsap$xml$SwitchConfig
    void <init>() -> <init>
    java.lang.Class class$(java.lang.String) -> class$
com.martiansoftware.jsap.xml.ParameterConfig -> com.martiansoftware.jsap.xml.ParameterConfig:
    java.lang.String id -> id
    java.lang.String help -> help
    java.lang.String usageName -> usageName
    java.util.List defaults -> defaults
    void <init>() -> <init>
    void addDefault(java.lang.String) -> addDefault
    java.util.List getDefaults() -> getDefaults
    java.lang.String getHelp() -> getHelp
    void setHelp(java.lang.String) -> setHelp
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getUsageName() -> getUsageName
    void setUsageName(java.lang.String) -> setUsageName
    void configure(com.martiansoftware.jsap.Parameter) -> configure
    com.martiansoftware.jsap.Parameter getConfiguredParameter() -> getConfiguredParameter
com.martiansoftware.jsap.xml.Property -> com.martiansoftware.jsap.xml.Property:
    java.lang.String name -> name
    java.lang.String value -> value
    void <init>() -> <init>
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
com.martiansoftware.jsap.xml.QualifiedSwitchConfig -> com.martiansoftware.jsap.xml.QualifiedSwitchConfig:
    void <init>() -> <init>
    void configure(com.martiansoftware.jsap.QualifiedSwitch) -> configure
    com.martiansoftware.jsap.Parameter getConfiguredParameter() -> getConfiguredParameter
com.martiansoftware.jsap.xml.StringParserConfig -> com.martiansoftware.jsap.xml.StringParserConfig:
    java.lang.String classname -> classname
    java.util.List properties -> properties
    void <init>() -> <init>
    java.lang.String getClassname() -> getClassname
    void setClassname(java.lang.String) -> setClassname
    java.util.List getProperties() -> getProperties
    void setProperties(java.util.List) -> setProperties
    com.martiansoftware.jsap.StringParser getConfiguredStringParser() -> getConfiguredStringParser
com.martiansoftware.jsap.xml.SwitchConfig -> com.martiansoftware.jsap.xml.SwitchConfig:
    void <init>() -> <init>
    com.martiansoftware.jsap.Parameter getConfiguredParameter() -> getConfiguredParameter
com.martiansoftware.jsap.xml.TryDumpXML -> com.martiansoftware.jsap.xml.TryDumpXML:
    void <init>() -> <init>
    void main(java.lang.String[]) -> main
com.martiansoftware.jsap.xml.TryLoadXML -> com.martiansoftware.jsap.xml.TryLoadXML:
    void <init>() -> <init>
    void main(java.lang.String[]) -> main
com.martiansoftware.jsap.xml.UnflaggedOptionConfig -> com.martiansoftware.jsap.xml.UnflaggedOptionConfig:
    boolean greedy -> greedy
    boolean list -> list
    char listSeparator -> listSeparator
    com.martiansoftware.jsap.xml.StringParserConfig stringParser -> stringParser
    boolean required -> required
    java.lang.String usageName -> usageName
    void <init>() -> <init>
    boolean isGreedy() -> isGreedy
    void setGreedy(boolean) -> setGreedy
    boolean isList() -> isList
    void setList(boolean) -> setList
    char getListSeparator() -> getListSeparator
    void setListSeparator(char) -> setListSeparator
    boolean isRequired() -> isRequired
    void setRequired(boolean) -> setRequired
    com.martiansoftware.jsap.xml.StringParserConfig getStringParser() -> getStringParser
    void setStringParser(com.martiansoftware.jsap.xml.StringParserConfig) -> setStringParser
    java.lang.String getUsageName() -> getUsageName
    void setUsageName(java.lang.String) -> setUsageName
    com.martiansoftware.jsap.Parameter getConfiguredParameter() -> getConfiguredParameter
com.martiansoftware.util.StringUtils -> com.martiansoftware.a.a:
    java.util.List wrapToList(java.lang.String,int) -> a
com.trianguloy.llscript.repository.BootBroadcastReceiver -> com.trianguloy.llscript.repository.BootBroadcastReceiver:
    16:16:void <init>() -> <init>
    19:25:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.trianguloy.llscript.repository.BuildConfig -> com.trianguloy.llscript.repository.a:
com.trianguloy.llscript.repository.Constants -> com.trianguloy.llscript.repository.b:
    java.lang.String[] PACKAGES -> a
    20:20:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.IntentHandle -> com.trianguloy.llscript.repository.IntentHandle:
    14:14:void <init>() -> <init>
    18:43:void onCreate(android.os.Bundle) -> onCreate
    46:47:void openWebViewer() -> a
    50:57:void openWebViewer(java.lang.String,boolean) -> a
com.trianguloy.llscript.repository.IntentHandle$1 -> com.trianguloy.llscript.repository.IntentHandle$1:
    com.trianguloy.llscript.repository.IntentHandle this$0 -> a
    29:29:void <init>(com.trianguloy.llscript.repository.IntentHandle) -> <init>
    32:33:void onClose() -> a
com.trianguloy.llscript.repository.RepositoryImporter -> com.trianguloy.llscript.repository.RepositoryImporter:
    37:37:void <init>() -> <init>
    41:43:void attachBaseContext(android.content.Context) -> attachBaseContext
    47:50:void onCreate() -> onCreate
    53:55:void setTheme(android.app.Activity,com.trianguloy.llscript.repository.settings.Preferences) -> a
com.trianguloy.llscript.repository.ScriptImporter -> com.trianguloy.llscript.repository.ScriptImporter:
    java.util.Map callbackMap -> a
    int nextRequestId -> b
    com.trianguloy.llscript.repository.aidl.ILightningService lightningService -> c
    android.content.BroadcastReceiver receiver -> d
    32:308:void <init>() -> <init>
    42:43:void onCreate() -> onCreate
    50:51:void onDestroy() -> onDestroy
    63:64:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    72:128:void onStartCommand(android.content.Intent) -> a
    138:138:android.os.IBinder onBind(android.content.Intent) -> onBind
    150:163:void installScript(com.trianguloy.llscript.repository.aidl.Script,int,boolean) -> a
    173:174:void runScript(int,java.lang.String,boolean) -> a
    184:189:void sendAction(int,java.lang.String,boolean) -> b
    198:206:void sendActionBackground(int,java.lang.String) -> a
    215:221:void sendActionForeground(int,java.lang.String) -> b
    32:32:int access$008(com.trianguloy.llscript.repository.ScriptImporter) -> a
    32:32:java.util.Map access$100(com.trianguloy.llscript.repository.ScriptImporter) -> b
    32:32:void access$200(com.trianguloy.llscript.repository.ScriptImporter,com.trianguloy.llscript.repository.aidl.Script,int,boolean) -> a
    32:32:void access$300(com.trianguloy.llscript.repository.ScriptImporter,int,java.lang.String,boolean) -> a
    32:32:void access$400(com.trianguloy.llscript.repository.ScriptImporter,int,java.lang.String,boolean) -> b
com.trianguloy.llscript.repository.ScriptImporter$1 -> com.trianguloy.llscript.repository.ScriptImporter$1:
    android.content.ComponentName val$componentName -> a
    java.lang.String val$name -> b
    java.lang.String val$code -> c
    int val$flags -> d
    com.trianguloy.llscript.repository.ScriptImporter this$0 -> e
    80:80:void <init>(com.trianguloy.llscript.repository.ScriptImporter,android.content.ComponentName,java.lang.String,java.lang.String,int) -> <init>
    83:90:void onFinish(int) -> a
    94:105:void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.ScriptImporter$2 -> com.trianguloy.llscript.repository.ScriptImporter$2:
    com.trianguloy.llscript.repository.ScriptImporter this$0 -> a
    226:226:void <init>(com.trianguloy.llscript.repository.ScriptImporter) -> <init>
    236:247:void importScript(com.trianguloy.llscript.repository.aidl.Script,boolean,com.trianguloy.llscript.repository.aidl.IImportCallback) -> a
    258:261:void runScript(int,java.lang.String,boolean) -> a
    272:288:void runScriptForResult(java.lang.String,com.trianguloy.llscript.repository.aidl.IResultCallback) -> a
    299:302:void runAction(int,java.lang.String,boolean) -> b
com.trianguloy.llscript.repository.ScriptImporter$3 -> com.trianguloy.llscript.repository.ScriptImporter$3:
    com.trianguloy.llscript.repository.ScriptImporter this$0 -> a
    308:308:void <init>(com.trianguloy.llscript.repository.ScriptImporter) -> <init>
    311:350:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.trianguloy.llscript.repository.acra.Dialog -> com.trianguloy.llscript.repository.acra.Dialog:
    android.widget.CheckBox checkBox -> a
    18:18:void <init>() -> <init>
    25:29:android.view.View buildCustomView(android.os.Bundle) -> buildCustomView
    34:39:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.aidl.Failure -> com.trianguloy.llscript.repository.a.a:
    com.trianguloy.llscript.repository.aidl.Failure LAUNCHER_INVALID -> a
    com.trianguloy.llscript.repository.aidl.Failure INVALID_INPUT -> b
    com.trianguloy.llscript.repository.aidl.Failure SCRIPT_ALREADY_EXISTS -> c
    com.trianguloy.llscript.repository.aidl.Failure EVAL_FAILED -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.trianguloy.llscript.repository.aidl.Failure[] $VALUES -> e
    11:11:com.trianguloy.llscript.repository.aidl.Failure[] values() -> values
    11:11:com.trianguloy.llscript.repository.aidl.Failure valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    21:21:int describeContents() -> describeContents
    26:27:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    11:29:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.aidl.Failure$1 -> com.trianguloy.llscript.repository.a.a$1:
    29:29:void <init>() -> <init>
    32:32:com.trianguloy.llscript.repository.aidl.Failure createFromParcel(android.os.Parcel) -> a
    37:37:com.trianguloy.llscript.repository.aidl.Failure[] newArray(int) -> a
    29:29:java.lang.Object[] newArray(int) -> newArray
    29:29:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.trianguloy.llscript.repository.aidl.IImportCallback -> com.trianguloy.llscript.repository.a.b:
    void onFinish(int) -> a
    void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.aidl.IImportCallback$Stub -> com.trianguloy.llscript.repository.a.b$a:
    14:16:void <init>() -> <init>
    23:30:com.trianguloy.llscript.repository.aidl.IImportCallback asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:69:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.trianguloy.llscript.repository.aidl.IImportCallback$Stub$Proxy -> com.trianguloy.llscript.repository.a.b$a$a:
    android.os.IBinder mRemote -> a
    75:77:void <init>(android.os.IBinder) -> <init>
    80:80:android.os.IBinder asBinder() -> asBinder
    88:100:void onFinish(int) -> a
    103:121:void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.aidl.ILightningService -> com.trianguloy.llscript.repository.a.c:
    void importScript(com.trianguloy.llscript.repository.aidl.Script,boolean,com.trianguloy.llscript.repository.aidl.IImportCallback) -> a
    void runScript(int,java.lang.String,boolean) -> a
    void runScriptForResult(java.lang.String,com.trianguloy.llscript.repository.aidl.IResultCallback) -> a
    void runAction(int,java.lang.String,boolean) -> b
com.trianguloy.llscript.repository.aidl.ILightningService$Stub -> com.trianguloy.llscript.repository.a.c$a:
    14:16:void <init>() -> <init>
    23:30:com.trianguloy.llscript.repository.aidl.ILightningService asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:101:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.trianguloy.llscript.repository.aidl.ILightningService$Stub$Proxy -> com.trianguloy.llscript.repository.a.c$a$a:
    android.os.IBinder mRemote -> a
    107:109:void <init>(android.os.IBinder) -> <init>
    112:112:android.os.IBinder asBinder() -> asBinder
    120:140:void importScript(com.trianguloy.llscript.repository.aidl.Script,boolean,com.trianguloy.llscript.repository.aidl.IImportCallback) -> a
    143:157:void runScript(int,java.lang.String,boolean) -> a
    160:173:void runScriptForResult(java.lang.String,com.trianguloy.llscript.repository.aidl.IResultCallback) -> a
    176:190:void runAction(int,java.lang.String,boolean) -> b
com.trianguloy.llscript.repository.aidl.IResultCallback -> com.trianguloy.llscript.repository.a.d:
    void onResult(java.lang.String) -> a
    void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.aidl.IResultCallback$Stub -> com.trianguloy.llscript.repository.a.d$a:
    23:30:com.trianguloy.llscript.repository.aidl.IResultCallback asInterface(android.os.IBinder) -> a
    38:69:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.trianguloy.llscript.repository.aidl.IResultCallback$Stub$Proxy -> com.trianguloy.llscript.repository.a.d$a$a:
    android.os.IBinder mRemote -> a
    75:77:void <init>(android.os.IBinder) -> <init>
    80:80:android.os.IBinder asBinder() -> asBinder
    88:100:void onResult(java.lang.String) -> a
    103:121:void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.aidl.Script -> com.trianguloy.llscript.repository.a.e:
    java.lang.String code -> a
    java.lang.String name -> b
    int flags -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    40:44:void <init>(java.lang.String,java.lang.String,int) -> <init>
    51:51:java.lang.String getCode() -> a
    55:56:void setCode(java.lang.String) -> a
    60:60:int getFlags() -> b
    64:65:void setFlags(int) -> a
    68:68:java.lang.String getName() -> c
    72:73:void setName(java.lang.String) -> b
    76:81:boolean isValid() -> d
    88:88:int describeContents() -> describeContents
    93:96:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    133:137:int ensureFlags(int) -> c
    23:23:int access$000(int) -> b
    98:98:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.aidl.Script$1 -> com.trianguloy.llscript.repository.a.e$1:
    98:98:void <init>() -> <init>
    101:104:com.trianguloy.llscript.repository.aidl.Script createFromParcel(android.os.Parcel) -> a
    109:109:com.trianguloy.llscript.repository.aidl.Script[] newArray(int) -> a
    98:98:java.lang.Object[] newArray(int) -> newArray
    98:98:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.trianguloy.llscript.repository.auth.AccountAuthenticator -> com.trianguloy.llscript.repository.auth.a:
    android.content.Context context -> a
    23:25:void <init>(android.content.Context) -> <init>
    30:30:android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String) -> editProperties
    36:39:android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> addAccount
    45:45:android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle) -> confirmCredentials
    51:51:android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> getAuthToken
    57:57:java.lang.String getAuthTokenLabel(java.lang.String) -> getAuthTokenLabel
    63:67:android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> updateCredentials
    73:73:android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[]) -> hasFeatures
    78:80:android.os.Bundle bundleIntent(android.content.Intent) -> a
com.trianguloy.llscript.repository.auth.AuthenticationService -> com.trianguloy.llscript.repository.auth.AuthenticationService:
    12:12:void <init>() -> <init>
    15:15:android.os.IBinder onBind(android.content.Intent) -> onBind
com.trianguloy.llscript.repository.auth.AuthenticationUtils -> com.trianguloy.llscript.repository.auth.b:
    34:35:void login(android.app.Activity,com.trianguloy.llscript.repository.auth.AuthenticationUtils$Listener) -> a
    38:82:void login(android.app.Activity,com.trianguloy.llscript.repository.auth.AuthenticationUtils$Listener,boolean) -> b
    85:106:void findAccount(android.app.Activity,com.trianguloy.llscript.repository.auth.AuthenticationUtils$InternalListener,boolean) -> a
    109:112:void resetPassword(android.content.Context) -> a
    115:117:boolean hasPassword(android.content.Context) -> b
    121:138:void set(android.content.Context,android.accounts.Account,java.lang.String,java.lang.String,java.lang.String) -> a
    29:29:void access$000(android.app.Activity,com.trianguloy.llscript.repository.auth.AuthenticationUtils$Listener,boolean) -> a
com.trianguloy.llscript.repository.auth.AuthenticationUtils$1 -> com.trianguloy.llscript.repository.auth.b$1:
    android.app.Activity val$context -> a
    com.trianguloy.llscript.repository.auth.AuthenticationUtils$Listener val$listener -> b
    38:38:void <init>(android.app.Activity,com.trianguloy.llscript.repository.auth.AuthenticationUtils$Listener) -> <init>
    41:75:void onComplete(java.lang.String,java.lang.String) -> a
    79:80:void onError() -> a
com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1 -> com.trianguloy.llscript.repository.auth.b$1$1:
    com.trianguloy.llscript.repository.auth.AuthenticationUtils$1 this$0 -> a
    45:45:void <init>(com.trianguloy.llscript.repository.auth.AuthenticationUtils$1) -> <init>
    49:73:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1$1 -> com.trianguloy.llscript.repository.auth.b$1$1$1:
    com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1 this$1 -> a
    51:51:void <init>(com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1) -> <init>
    54:55:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1$2 -> com.trianguloy.llscript.repository.auth.b$1$1$2:
    com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1 this$1 -> a
    59:59:void <init>(com.trianguloy.llscript.repository.auth.AuthenticationUtils$1$1) -> <init>
    62:63:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.auth.AuthenticationUtils$2 -> com.trianguloy.llscript.repository.auth.b$2:
    android.accounts.AccountManager val$accountManager -> a
    android.app.Activity val$context -> b
    com.trianguloy.llscript.repository.auth.AuthenticationUtils$InternalListener val$listener -> c
    87:87:void <init>(android.accounts.AccountManager,android.app.Activity,com.trianguloy.llscript.repository.auth.AuthenticationUtils$InternalListener) -> <init>
    90:99:void run(android.accounts.AccountManagerFuture) -> run
com.trianguloy.llscript.repository.auth.AuthenticationUtils$InternalListener -> com.trianguloy.llscript.repository.auth.b$a:
    void onComplete(java.lang.String,java.lang.String) -> a
    void onError() -> a
com.trianguloy.llscript.repository.auth.AuthenticationUtils$Listener -> com.trianguloy.llscript.repository.auth.b$b:
    void onComplete() -> a
    void onError() -> b
com.trianguloy.llscript.repository.auth.AuthenticatorActivity -> com.trianguloy.llscript.repository.auth.AuthenticatorActivity:
    java.lang.String accountType -> a
    android.accounts.Account account -> b
    25:25:void <init>() -> <init>
    37:44:void onCreate(android.os.Bundle) -> onCreate
    47:55:void button(android.view.View) -> button
    58:85:void login() -> a
    88:94:void setAccount(java.lang.String,java.lang.String) -> a
    97:98:void register() -> b
    25:25:void access$000(com.trianguloy.llscript.repository.auth.AuthenticatorActivity,java.lang.String,java.lang.String) -> a
com.trianguloy.llscript.repository.auth.AuthenticatorActivity$1 -> com.trianguloy.llscript.repository.auth.AuthenticatorActivity$1:
    java.lang.String val$user -> a
    boolean val$savePw -> b
    java.lang.String val$password -> c
    com.trianguloy.llscript.repository.auth.AuthenticatorActivity this$0 -> d
    65:65:void <init>(com.trianguloy.llscript.repository.auth.AuthenticatorActivity,java.lang.String,boolean,java.lang.String) -> <init>
    68:83:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.CategoryAdapter -> com.trianguloy.llscript.repository.editor.a:
    22:23:void <init>(android.content.Context,java.util.List) -> <init>
    28:29:void bindView(int,android.view.View) -> a
    34:34:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
com.trianguloy.llscript.repository.editor.EditManager -> com.trianguloy.llscript.repository.editor.b:
    android.content.Context context -> a
    android.widget.EditText editText -> b
    int textHash -> c
    java.lang.String text -> d
    java.lang.String pageName -> e
    java.lang.String pageId -> f
    27:38:void <init>(android.content.Context) -> <init>
    41:60:void assign(android.widget.EditText) -> a
    63:66:void assign(android.widget.EditText,java.lang.String) -> a
    70:73:java.lang.String getText() -> a
    77:90:void surroundOrAdd(java.lang.String,java.lang.String,java.lang.String) -> a
    93:93:boolean isChanged() -> b
    97:98:void saved() -> c
    101:106:void toBundle(android.os.Bundle) -> a
    109:113:void fromBundle(android.os.Bundle) -> b
    118:118:java.lang.String getPageName() -> d
    122:123:void setPageName(java.lang.String) -> a
    127:127:java.lang.String getPageId() -> e
    131:132:void setPageId(java.lang.String) -> b
    135:135:boolean hasPageId() -> f
    139:163:void action(int) -> action
    21:21:java.lang.String access$002(com.trianguloy.llscript.repository.editor.EditManager,java.lang.String) -> a
    21:21:android.widget.EditText access$100(com.trianguloy.llscript.repository.editor.EditManager) -> a
    21:21:android.widget.EditText access$102(com.trianguloy.llscript.repository.editor.EditManager,android.widget.EditText) -> a
com.trianguloy.llscript.repository.editor.EditManager$1 -> com.trianguloy.llscript.repository.editor.b$1:
    boolean $assertionsDisabled -> a
    com.trianguloy.llscript.repository.editor.EditManager this$0 -> b
    44:44:void <init>(com.trianguloy.llscript.repository.editor.EditManager) -> <init>
    48:48:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    53:57:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    44:44:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.editor.EditorActivity -> com.trianguloy.llscript.repository.editor.EditorActivity:
    com.trianguloy.llscript.repository.settings.Preferences sharedPref -> b
    android.os.Bundle savedInstanceState -> c
    com.trianguloy.llscript.repository.editor.EditManager editManager -> d
    com.trianguloy.llscript.repository.editor.ViewManager viewManager -> e
    boolean $assertionsDisabled -> a
    27:27:void <init>() -> <init>
    36:44:void onCreate(android.os.Bundle) -> onCreate
    48:69:void onNewIntent(android.content.Intent) -> onNewIntent
    73:87:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    92:108:void onBackPressed() -> onBackPressed
    112:113:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    118:120:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    123:124:void restore(android.os.Bundle) -> a
    127:132:void load() -> a
    135:163:void button(android.view.View) -> button
    166:171:void action(android.view.View) -> action
    27:27:void access$000(com.trianguloy.llscript.repository.editor.EditorActivity) -> a
    27:27:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.editor.EditorActivity$1 -> com.trianguloy.llscript.repository.editor.EditorActivity$1:
    com.trianguloy.llscript.repository.editor.EditorActivity this$0 -> a
    57:57:void <init>(com.trianguloy.llscript.repository.editor.EditorActivity) -> <init>
    60:61:void onComplete() -> a
    65:66:void onError() -> b
com.trianguloy.llscript.repository.editor.EditorActivity$2 -> com.trianguloy.llscript.repository.editor.EditorActivity$2:
    com.trianguloy.llscript.repository.editor.EditorActivity this$0 -> a
    101:101:void <init>(com.trianguloy.llscript.repository.editor.EditorActivity) -> <init>
    104:105:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.editor.Lock -> com.trianguloy.llscript.repository.editor.c:
    com.trianguloy.llscript.repository.editor.EditorActivity activity -> b
    boolean state -> c
    boolean $assertionsDisabled -> a
    16:19:void <init>(com.trianguloy.llscript.repository.editor.EditorActivity) -> <init>
    22:26:void lock() -> a
    29:33:void unlock() -> b
    36:36:boolean isLocked() -> c
    12:12:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.editor.Repository -> com.trianguloy.llscript.repository.editor.d:
    int tableStartLine -> a
    int tableEndLine -> b
    java.util.List categories -> c
    java.util.List lines -> d
    26:32:void <init>(java.lang.String,java.lang.String) -> <init>
    35:52:void addCategories(java.lang.String) -> a
    55:55:java.lang.String getText() -> a
    59:80:void addScript(com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory,java.lang.String,java.lang.String) -> a
    83:83:java.util.List getCategories() -> b
com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory -> com.trianguloy.llscript.repository.editor.d$a:
    java.lang.String name -> a
    int line -> b
    int level -> c
    91:95:void <init>(java.lang.String,int,int) -> <init>
com.trianguloy.llscript.repository.editor.ThemedImageButton -> com.trianguloy.llscript.repository.editor.ThemedImageButton:
    26:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.trianguloy.llscript.repository.editor.ViewManager -> com.trianguloy.llscript.repository.editor.e:
    com.trianguloy.llscript.repository.editor.EditorActivity context -> c
    int state -> d
    com.trianguloy.llscript.repository.editor.EditManager editManager -> e
    com.trianguloy.llscript.repository.web.RPCManager rpcManager -> f
    boolean isTemplate -> g
    java.util.Random random -> h
    com.trianguloy.llscript.repository.settings.Preferences sharedPref -> i
    com.trianguloy.llscript.repository.editor.Repository repository -> j
    com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory addTo -> k
    boolean $assertionsDisabled -> b
    68:76:void <init>(com.trianguloy.llscript.repository.editor.EditorActivity,com.trianguloy.llscript.repository.editor.EditManager) -> <init>
    79:112:void setState(int) -> a
    116:116:int getState() -> d
    120:126:void toBundle(android.os.Bundle,com.trianguloy.llscript.repository.editor.EditManager) -> a
    129:146:void fromBundle(android.os.Bundle) -> a
    149:155:void showPageEditor(java.lang.String) -> b
    158:170:void loadPageToEdit(java.lang.String) -> a
    173:191:void showSelectPageToEdit(dw.xmlrpc.Page[]) -> a
    194:224:void preview() -> e
    227:273:void showPreview(java.lang.String) -> c
    276:314:void commitCreate() -> f
    317:386:void savePage() -> g
    389:400:void cancelEdit() -> h
    403:421:void editPage() -> i
    424:440:void createPage() -> j
    443:445:void editTemplate() -> k
    448:448:boolean changedCode() -> l
    43:43:void access$000(com.trianguloy.llscript.repository.editor.ViewManager,java.lang.String) -> a
    43:43:com.trianguloy.llscript.repository.editor.EditManager access$100(com.trianguloy.llscript.repository.editor.ViewManager) -> a
    43:43:com.trianguloy.llscript.repository.editor.EditorActivity access$200(com.trianguloy.llscript.repository.editor.ViewManager) -> b
    43:43:void access$300(com.trianguloy.llscript.repository.editor.ViewManager,java.lang.String) -> b
    43:43:com.trianguloy.llscript.repository.web.RPCManager access$400(com.trianguloy.llscript.repository.editor.ViewManager) -> c
    43:43:com.trianguloy.llscript.repository.settings.Preferences access$500(com.trianguloy.llscript.repository.editor.ViewManager) -> d
    43:43:com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory access$602(com.trianguloy.llscript.repository.editor.ViewManager,com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory) -> a
    43:43:com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory access$600(com.trianguloy.llscript.repository.editor.ViewManager) -> e
    43:43:com.trianguloy.llscript.repository.editor.Repository access$700(com.trianguloy.llscript.repository.editor.ViewManager) -> f
    43:43:void access$800(com.trianguloy.llscript.repository.editor.ViewManager,dw.xmlrpc.Page[]) -> a
    43:43:com.trianguloy.llscript.repository.editor.Repository access$702(com.trianguloy.llscript.repository.editor.ViewManager,com.trianguloy.llscript.repository.editor.Repository) -> a
    43:43:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.editor.ViewManager$1 -> com.trianguloy.llscript.repository.editor.e$1:
    java.lang.String val$id -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    158:158:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,java.lang.String) -> <init>
    161:168:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.ViewManager$10 -> com.trianguloy.llscript.repository.editor.e$2:
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> a
    391:391:void <init>(com.trianguloy.llscript.repository.editor.ViewManager) -> <init>
    394:395:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.editor.ViewManager$11 -> com.trianguloy.llscript.repository.editor.e$3:
    boolean $assertionsDisabled -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    403:403:void <init>(com.trianguloy.llscript.repository.editor.ViewManager) -> <init>
    406:419:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    403:403:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.editor.ViewManager$12 -> com.trianguloy.llscript.repository.editor.e$4:
    boolean $assertionsDisabled -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    424:424:void <init>(com.trianguloy.llscript.repository.editor.ViewManager) -> <init>
    427:438:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    424:424:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.editor.ViewManager$2 -> com.trianguloy.llscript.repository.editor.e$5:
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> a
    177:177:void <init>(com.trianguloy.llscript.repository.editor.ViewManager) -> <init>
    180:180:int compare(java.lang.String,java.lang.String) -> a
    177:177:int compare(java.lang.Object,java.lang.Object) -> compare
com.trianguloy.llscript.repository.editor.ViewManager$3 -> com.trianguloy.llscript.repository.editor.e$6:
    android.widget.ArrayAdapter val$adapter -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    183:183:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,android.widget.ArrayAdapter) -> <init>
    186:189:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.editor.ViewManager$4 -> com.trianguloy.llscript.repository.editor.e$7:
    java.lang.String val$tempId -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    195:195:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,java.lang.String) -> <init>
    198:222:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.ViewManager$4$1 -> com.trianguloy.llscript.repository.editor.e$7$1:
    com.trianguloy.llscript.repository.editor.ViewManager$4 this$1 -> a
    204:204:void <init>(com.trianguloy.llscript.repository.editor.ViewManager$4) -> <init>
    207:208:void onComplete() -> a
    212:212:void onError() -> b
com.trianguloy.llscript.repository.editor.ViewManager$5 -> com.trianguloy.llscript.repository.editor.e$8:
    java.lang.String val$tempId -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    232:232:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,java.lang.String) -> <init>
    235:237:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    241:242:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.trianguloy.llscript.repository.editor.ViewManager$6 -> com.trianguloy.llscript.repository.editor.e$9:
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> a
    245:245:void <init>(com.trianguloy.llscript.repository.editor.ViewManager) -> <init>
    248:248:boolean onLongClick(android.view.View) -> onLongClick
com.trianguloy.llscript.repository.editor.ViewManager$7 -> com.trianguloy.llscript.repository.editor.e$10:
    android.webkit.WebView val$webView -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    251:251:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,android.webkit.WebView) -> <init>
    254:260:void onFinish(com.trianguloy.llscript.repository.web.DownloadTask$Result) -> a
    265:266:void onError() -> a
com.trianguloy.llscript.repository.editor.ViewManager$8 -> com.trianguloy.llscript.repository.editor.e$11:
    com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory val$selected -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    279:279:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,com.trianguloy.llscript.repository.editor.Repository$RepositoryCategory) -> <init>
    282:312:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.ViewManager$8$1 -> com.trianguloy.llscript.repository.editor.e$11$1:
    com.trianguloy.llscript.repository.editor.ViewManager$8 this$1 -> a
    290:290:void <init>(com.trianguloy.llscript.repository.editor.ViewManager$8) -> <init>
    293:299:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.ViewManager$9 -> com.trianguloy.llscript.repository.editor.e$12:
    java.lang.String val$pageId -> a
    com.trianguloy.llscript.repository.editor.ViewManager this$0 -> b
    328:328:void <init>(com.trianguloy.llscript.repository.editor.ViewManager,java.lang.String) -> <init>
    331:381:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.ViewManager$9$1 -> com.trianguloy.llscript.repository.editor.e$12$1:
    com.trianguloy.llscript.repository.editor.ViewManager$9 this$1 -> a
    336:336:void <init>(com.trianguloy.llscript.repository.editor.ViewManager$9) -> <init>
    339:353:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.editor.ViewManager$9$2 -> com.trianguloy.llscript.repository.editor.e$12$2:
    com.trianguloy.llscript.repository.editor.ViewManager$9 this$1 -> a
    363:363:void <init>(com.trianguloy.llscript.repository.editor.ViewManager$9) -> <init>
    366:367:void onComplete() -> a
    371:371:void onError() -> b
com.trianguloy.llscript.repository.internal.AppAdapter -> com.trianguloy.llscript.repository.internal.a:
    android.content.Context context -> a
    int selected -> b
    26:31:void <init>(android.content.Context,java.util.List,int) -> <init>
    35:47:void bindView(int,android.view.View) -> a
    50:53:void select(int) -> a
    56:56:int getSelected() -> a
com.trianguloy.llscript.repository.internal.AppChooser -> com.trianguloy.llscript.repository.internal.b:
    android.content.Context context -> a
    android.net.Uri action -> b
    java.lang.String onFailureMessage -> c
    com.trianguloy.llscript.repository.internal.AppChooser$OnCloseListener listener -> d
    java.util.List activities -> e
    android.widget.CheckBox checkBox -> f
    com.trianguloy.llscript.repository.settings.Preferences sharedPref -> g
    37:67:void <init>(android.content.Context,android.net.Uri,java.lang.String,java.lang.String,com.trianguloy.llscript.repository.internal.AppChooser$OnCloseListener) -> <init>
    72:119:android.app.AlertDialog show() -> show
    124:130:void launch(android.content.ComponentName) -> a
    133:134:void callListener() -> a
    137:144:java.util.List getAppList(android.content.Context,android.content.Intent) -> a
    23:23:void access$000(com.trianguloy.llscript.repository.internal.AppChooser,android.content.ComponentName) -> a
    23:23:android.widget.CheckBox access$100(com.trianguloy.llscript.repository.internal.AppChooser) -> a
    23:23:com.trianguloy.llscript.repository.settings.Preferences access$200(com.trianguloy.llscript.repository.internal.AppChooser) -> b
    23:23:void access$300(com.trianguloy.llscript.repository.internal.AppChooser) -> c
com.trianguloy.llscript.repository.internal.AppChooser$1 -> com.trianguloy.llscript.repository.internal.b$1:
    com.trianguloy.llscript.repository.internal.AppAdapter val$adapter -> a
    com.trianguloy.llscript.repository.internal.AppChooser this$0 -> b
    48:48:void <init>(com.trianguloy.llscript.repository.internal.AppChooser,com.trianguloy.llscript.repository.internal.AppAdapter) -> <init>
    51:59:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.AppChooser$2 -> com.trianguloy.llscript.repository.internal.b$2:
    com.trianguloy.llscript.repository.internal.AppChooser this$0 -> a
    61:61:void <init>(com.trianguloy.llscript.repository.internal.AppChooser) -> <init>
    64:65:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.AppChooser$OnCloseListener -> com.trianguloy.llscript.repository.internal.b$a:
    void onClose() -> a
com.trianguloy.llscript.repository.internal.BaseArrayAdapter -> com.trianguloy.llscript.repository.internal.c:
    android.content.Context context -> a
    int resource -> b
    25:28:void <init>(android.content.Context,int,java.util.List) -> <init>
    35:42:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void bindView(int,android.view.View) -> a
com.trianguloy.llscript.repository.internal.Dialogs -> com.trianguloy.llscript.repository.internal.d:
    50:51:void badLogin(android.content.Context) -> a
    54:63:void error(android.content.Context,android.content.DialogInterface$OnClickListener,java.lang.String) -> a
    66:67:void badLogin(android.content.Context,android.content.DialogInterface$OnClickListener) -> a
    70:71:void connectionFailed(android.content.Context) -> b
    74:75:void connectionFailed(android.content.Context,android.content.DialogInterface$OnClickListener) -> b
    78:79:void pageAlreadyExists(android.content.Context) -> c
    82:90:void saved(android.app.Activity,java.lang.String) -> a
    94:94:android.content.DialogInterface$OnClickListener showPage(android.app.Activity,java.lang.String) -> b
    108:113:void cantSaveEmpty(android.content.Context) -> d
    116:122:void unsavedChanges(android.content.Context,android.content.DialogInterface$OnClickListener) -> c
    125:130:void selectPageToEdit(android.content.Context,android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    133:139:void removeSubscription(android.content.Context,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
    151:176:void baseLauncherProblem(android.content.Context,java.lang.String) -> a
    179:180:void launcherNotFound(android.content.Context) -> e
    183:184:void launcherOutdated(android.content.Context) -> f
    187:188:void changedSubscriptions(android.content.Context,com.trianguloy.llscript.repository.web.ManagedWebView,java.util.List) -> a
    191:205:void baseScriptList(android.content.Context,com.trianguloy.llscript.repository.web.ManagedWebView,java.util.List,java.lang.String) -> a
    208:209:void newScripts(android.content.Context,com.trianguloy.llscript.repository.web.ManagedWebView,java.util.List) -> b
    221:263:void importScript(android.app.Activity,com.trianguloy.llscript.repository.aidl.Script,com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener,com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener) -> a
    275:275:int checkBoxToFlag(android.widget.CheckBox[]) -> b
    281:296:void themeChanged(android.content.Context) -> g
    299:305:void moreThanOneScriptFound(android.content.Context,java.lang.String[],android.content.DialogInterface$OnClickListener) -> a
    308:322:void noPageLoaded(android.content.Context,android.content.DialogInterface$OnClickListener) -> d
    325:338:void noScriptFound(android.content.Context) -> h
    341:347:void subscribe(android.content.Context,android.content.DialogInterface$OnClickListener) -> e
    358:395:void confirmUpdate(android.content.Context,com.trianguloy.llscript.repository.aidl.Script,com.trianguloy.llscript.repository.aidl.ILightningService,java.lang.Runnable) -> a
    398:403:void explainScriptPermission(android.content.Context,android.content.DialogInterface$OnClickListener) -> f
    406:411:void explainSystemWindowPermission(android.content.Context,android.content.DialogInterface$OnClickListener) -> g
    44:44:int access$000(android.widget.CheckBox[]) -> a
com.trianguloy.llscript.repository.internal.Dialogs$1 -> com.trianguloy.llscript.repository.internal.d$1:
    java.lang.String val$url -> a
    android.app.Activity val$context -> b
    94:94:void <init>(java.lang.String,android.app.Activity) -> <init>
    97:103:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$10 -> com.trianguloy.llscript.repository.internal.d$2:
    java.lang.Runnable val$onFinish -> a
    361:361:void <init>(java.lang.Runnable) -> <init>
    364:365:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$2 -> com.trianguloy.llscript.repository.internal.d$3:
    android.content.Context val$context -> a
    158:158:void <init>(android.content.Context) -> <init>
    161:167:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$3 -> com.trianguloy.llscript.repository.internal.d$4:
    com.trianguloy.llscript.repository.web.ManagedWebView val$webView -> a
    android.content.Context val$context -> b
    java.util.List val$ids -> c
    197:197:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView,android.content.Context,java.util.List) -> <init>
    200:201:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$4 -> com.trianguloy.llscript.repository.internal.d$5:
    com.trianguloy.llscript.repository.aidl.Script val$script -> a
    android.widget.EditText val$contentText -> b
    android.widget.EditText val$nameText -> c
    android.widget.CheckBox[] val$flagsBoxes -> d
    com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener val$onShare -> e
    246:246:void <init>(com.trianguloy.llscript.repository.aidl.Script,android.widget.EditText,android.widget.EditText,android.widget.CheckBox[],com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener) -> <init>
    249:253:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$5 -> com.trianguloy.llscript.repository.internal.d$6:
    com.trianguloy.llscript.repository.aidl.Script val$script -> a
    android.widget.EditText val$contentText -> b
    android.widget.EditText val$nameText -> c
    android.widget.CheckBox[] val$flagsBoxes -> d
    com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener val$onImport -> e
    238:238:void <init>(com.trianguloy.llscript.repository.aidl.Script,android.widget.EditText,android.widget.EditText,android.widget.CheckBox[],com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener) -> <init>
    240:244:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$6 -> com.trianguloy.llscript.repository.internal.d$7:
    android.content.Context val$context -> a
    284:284:void <init>(android.content.Context) -> <init>
    287:292:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$7 -> com.trianguloy.llscript.repository.internal.d$8:
    android.content.Context val$context -> a
    312:312:void <init>(android.content.Context) -> <init>
    314:317:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$8 -> com.trianguloy.llscript.repository.internal.d$9:
    android.content.Context val$context -> a
    328:328:void <init>(android.content.Context) -> <init>
    330:333:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$9 -> com.trianguloy.llscript.repository.internal.d$10:
    android.content.Context val$context -> a
    com.trianguloy.llscript.repository.aidl.ILightningService val$lightningService -> b
    com.trianguloy.llscript.repository.aidl.Script val$script -> c
    java.lang.Runnable val$onFinish -> d
    367:367:void <init>(android.content.Context,com.trianguloy.llscript.repository.aidl.ILightningService,com.trianguloy.llscript.repository.aidl.Script,java.lang.Runnable) -> <init>
    370:392:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.Dialogs$9$1 -> com.trianguloy.llscript.repository.internal.d$10$1:
    com.trianguloy.llscript.repository.internal.Dialogs$9 this$0 -> a
    370:370:void <init>(com.trianguloy.llscript.repository.internal.Dialogs$9) -> <init>
    373:390:void handlePermissionResult(boolean) -> a
com.trianguloy.llscript.repository.internal.Dialogs$9$1$1 -> com.trianguloy.llscript.repository.internal.d$10$1$1:
    com.trianguloy.llscript.repository.internal.Dialogs$9$1 this$1 -> a
    375:375:void <init>(com.trianguloy.llscript.repository.internal.Dialogs$9$1) -> <init>
    378:379:void onFinish(int) -> a
    383:384:void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.internal.Dialogs$OnImportListener -> com.trianguloy.llscript.repository.internal.d$a:
    void onClick(com.trianguloy.llscript.repository.aidl.Script) -> a
com.trianguloy.llscript.repository.internal.ImportUtils -> com.trianguloy.llscript.repository.internal.e:
    boolean $assertionsDisabled -> a
    41:42:void <init>() -> <init>
    45:69:void startImport(android.app.Activity,com.trianguloy.llscript.repository.web.ManagedWebView,com.trianguloy.llscript.repository.internal.ImportUtils$Listener) -> startImport
    73:96:java.util.List findScripts(android.content.Context,org.jsoup.nodes.Document) -> a
    101:125:java.lang.String generateAboutComment(org.jsoup.nodes.Document) -> a
    129:144:java.lang.String getTextWithLineBreaks(org.jsoup.nodes.Element) -> a
    151:168:void oneScriptFound(android.app.Activity,com.trianguloy.llscript.repository.web.ManagedWebView,com.trianguloy.llscript.repository.internal.ImportUtils$Listener,com.trianguloy.llscript.repository.aidl.Script,java.lang.String) -> a
    181:201:void showImportScript(android.app.Activity,com.trianguloy.llscript.repository.internal.ImportUtils$Listener,com.trianguloy.llscript.repository.aidl.Script,java.lang.String) -> b
    212:257:void sendScriptToLauncher(android.content.Context,com.trianguloy.llscript.repository.aidl.Script) -> c
    262:290:void shareAsText(android.content.Context,com.trianguloy.llscript.repository.aidl.Script) -> d
    40:40:void access$000(android.app.Activity,com.trianguloy.llscript.repository.internal.ImportUtils$Listener,com.trianguloy.llscript.repository.aidl.Script,java.lang.String) -> a
    40:40:void access$100(android.content.Context,com.trianguloy.llscript.repository.aidl.Script) -> a
    40:40:void access$200(android.content.Context,com.trianguloy.llscript.repository.aidl.Script) -> b
    40:40:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.internal.ImportUtils$1 -> com.trianguloy.llscript.repository.internal.e$1:
    android.app.Activity val$context -> a
    com.trianguloy.llscript.repository.internal.ImportUtils$Listener val$listener -> b
    java.util.List val$scripts -> c
    java.lang.String val$about -> d
    57:57:void <init>(android.app.Activity,com.trianguloy.llscript.repository.internal.ImportUtils$Listener,java.util.List,java.lang.String) -> <init>
    60:62:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.ImportUtils$2 -> com.trianguloy.llscript.repository.internal.e$2:
    android.app.Activity val$context -> a
    com.trianguloy.llscript.repository.internal.ImportUtils$Listener val$listener -> b
    188:188:void <init>(android.app.Activity,com.trianguloy.llscript.repository.internal.ImportUtils$Listener) -> <init>
    191:193:void onClick(com.trianguloy.llscript.repository.aidl.Script) -> a
com.trianguloy.llscript.repository.internal.ImportUtils$3 -> com.trianguloy.llscript.repository.internal.e$3:
    android.app.Activity val$context -> a
    194:194:void <init>(android.app.Activity) -> <init>
    197:198:void onClick(com.trianguloy.llscript.repository.aidl.Script) -> a
com.trianguloy.llscript.repository.internal.ImportUtils$4 -> com.trianguloy.llscript.repository.internal.e$4:
    android.content.Context val$context -> a
    com.trianguloy.llscript.repository.aidl.Script val$script -> b
    212:212:void <init>(android.content.Context,com.trianguloy.llscript.repository.aidl.Script) -> <init>
    215:255:void handlePermissionResult(boolean) -> a
com.trianguloy.llscript.repository.internal.ImportUtils$4$1 -> com.trianguloy.llscript.repository.internal.e$4$1:
    android.content.ServiceConnection connection -> a
    com.trianguloy.llscript.repository.internal.ImportUtils$4 this$0 -> b
    217:218:void <init>(com.trianguloy.llscript.repository.internal.ImportUtils$4) -> <init>
    222:247:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    252:252:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.trianguloy.llscript.repository.internal.ImportUtils$4$1$1 -> com.trianguloy.llscript.repository.internal.e$4$1$1:
    com.trianguloy.llscript.repository.aidl.ILightningService val$lightningService -> a
    com.trianguloy.llscript.repository.internal.ImportUtils$4$1 this$1 -> b
    224:224:void <init>(com.trianguloy.llscript.repository.internal.ImportUtils$4$1,com.trianguloy.llscript.repository.aidl.ILightningService) -> <init>
    227:228:void onFinish(int) -> a
    232:242:void onFailure(com.trianguloy.llscript.repository.aidl.Failure) -> a
com.trianguloy.llscript.repository.internal.ImportUtils$4$1$1$1 -> com.trianguloy.llscript.repository.internal.e$4$1$1$1:
    com.trianguloy.llscript.repository.internal.ImportUtils$4$1$1 this$2 -> a
    233:233:void <init>(com.trianguloy.llscript.repository.internal.ImportUtils$4$1$1) -> <init>
    236:237:void run() -> run
com.trianguloy.llscript.repository.internal.ImportUtils$Listener -> com.trianguloy.llscript.repository.internal.e$a:
    void importFinished() -> a
com.trianguloy.llscript.repository.internal.PageCacheManager -> com.trianguloy.llscript.repository.internal.PageCacheManager:
    java.io.File directory -> a
    com.google.gson.Gson gson -> b
    23:26:void <init>(android.content.Context) -> <init>
    29:36:void savePage(java.lang.String,com.trianguloy.llscript.repository.internal.PageCacheManager$Page) -> a
    40:49:com.trianguloy.llscript.repository.internal.PageCacheManager$Page getPage(java.lang.String) -> a
    53:54:boolean hasPage(java.lang.String) -> b
com.trianguloy.llscript.repository.internal.PageCacheManager$FatalFileException -> com.trianguloy.llscript.repository.internal.PageCacheManager$a:
    59:60:void <init>(java.lang.Exception) -> <init>
com.trianguloy.llscript.repository.internal.PageCacheManager$Page -> com.trianguloy.llscript.repository.internal.PageCacheManager$Page:
    int timestamp -> timestamp
    java.lang.String html -> html
    67:70:void <init>(int,java.lang.String) -> <init>
com.trianguloy.llscript.repository.internal.PermissionActivity -> com.trianguloy.llscript.repository.internal.PermissionActivity:
    java.util.HashMap callbacks -> a
    int nextId -> b
    int id -> c
    java.lang.String permission -> d
    22:86:void <init>() -> <init>
    30:41:void checkForPermission(android.content.Context,java.lang.String,com.trianguloy.llscript.repository.internal.PermissionActivity$PermissionCallback) -> a
    48:56:void onCreate(android.os.Bundle) -> onCreate
    60:71:void checkForPermission() -> a
    75:76:void requestPermission() -> b
    80:84:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    22:22:void access$000(com.trianguloy.llscript.repository.internal.PermissionActivity) -> a
    26:27:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.internal.PermissionActivity$1 -> com.trianguloy.llscript.repository.internal.PermissionActivity$1:
    com.trianguloy.llscript.repository.internal.PermissionActivity this$0 -> a
    61:61:void <init>(com.trianguloy.llscript.repository.internal.PermissionActivity) -> <init>
    65:66:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.internal.PermissionActivity$PermissionCallback -> com.trianguloy.llscript.repository.internal.PermissionActivity$a:
    void handlePermissionResult(boolean) -> a
com.trianguloy.llscript.repository.internal.SubTextView -> com.trianguloy.llscript.repository.internal.SubTextView:
    java.lang.String key -> a
    java.lang.String text -> b
    android.content.Context context -> c
    17:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:39:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    43:43:java.lang.CharSequence getText() -> getText
    49:49:android.text.Editable getEditableText() -> getEditableText
com.trianguloy.llscript.repository.internal.Utils -> com.trianguloy.llscript.repository.internal.f:
    java.lang.String pkg -> a
    37:38:void <init>() -> <init>
    48:55:java.lang.String findBetween(java.lang.String,java.lang.String,java.lang.String) -> a
    64:76:java.util.Map getAllScriptPagesAndNames(android.content.Context,org.jsoup.nodes.Document) -> a
    86:93:java.lang.String getNameForPage(android.content.Context,java.lang.String) -> a
    102:105:java.lang.String getIdFromUrl(java.lang.String) -> a
    114:125:android.content.pm.PackageInfo getInstalledLauncher(android.content.Context) -> d
    139:143:java.lang.String getLauncherPackage(android.content.Context) -> a
    151:152:boolean hasValidLauncher(android.content.Context) -> b
    161:171:void alertLauncherProblemsIfAny(android.content.Context) -> c
    185:213:void showChangedSubscriptionsIfAny(android.content.Context,com.trianguloy.llscript.repository.web.ManagedWebView) -> a
    223:265:void showNewScriptsIfAny(android.content.Context,org.jsoup.nodes.Document,com.trianguloy.llscript.repository.web.ManagedWebView) -> a
    131:131:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.internal.Utils$1 -> com.trianguloy.llscript.repository.internal.f$1:
    boolean $assertionsDisabled -> a
    android.content.Context val$context -> b
    com.trianguloy.llscript.repository.settings.Preferences val$sharedPref -> c
    com.trianguloy.llscript.repository.web.ManagedWebView val$webView -> d
    186:186:void <init>(android.content.Context,com.trianguloy.llscript.repository.settings.Preferences,com.trianguloy.llscript.repository.web.ManagedWebView) -> <init>
    189:211:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    186:186:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.settings.BrowserPreference -> com.trianguloy.llscript.repository.settings.BrowserPreference:
    android.content.Context context -> a
    android.content.ComponentName value -> b
    java.util.List activities -> c
    com.trianguloy.llscript.repository.internal.AppAdapter adapter -> d
    40:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:53:void init(android.content.Context) -> a
    58:79:android.view.View onCreateDialogView() -> onCreateDialogView
    84:95:void onDialogClosed(boolean) -> onDialogClosed
    99:104:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    30:30:com.trianguloy.llscript.repository.internal.AppAdapter access$000(com.trianguloy.llscript.repository.settings.BrowserPreference) -> a
com.trianguloy.llscript.repository.settings.BrowserPreference$1 -> com.trianguloy.llscript.repository.settings.BrowserPreference$1:
    com.trianguloy.llscript.repository.settings.BrowserPreference this$0 -> a
    64:64:void <init>(com.trianguloy.llscript.repository.settings.BrowserPreference) -> <init>
    67:68:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.trianguloy.llscript.repository.settings.PreferenceListener -> com.trianguloy.llscript.repository.settings.a:
    java.util.Map map -> a
    android.preference.PreferenceScreen screen -> b
    22:25:void <init>(android.preference.PreferenceScreen) -> <init>
    29:36:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    39:45:void setSummary(java.lang.String) -> b
    62:63:void addPreferenceForSummary(java.lang.String) -> a
    73:74:void addPreference(android.preference.Preference,java.lang.Runnable,boolean) -> a
    84:85:void addPreference(java.lang.String,java.lang.Runnable,boolean) -> a
    95:96:void addPreferenceForSummary(android.preference.Preference,java.lang.Runnable,boolean) -> b
    118:123:void addPreference(java.lang.String,boolean,java.lang.Runnable,boolean) -> a
com.trianguloy.llscript.repository.settings.PreferenceListener$Wrapper -> com.trianguloy.llscript.repository.settings.a$a:
    boolean setSummaryToValue -> a
    java.lang.Runnable action -> b
    129:132:void <init>(java.lang.Runnable,boolean) -> <init>
com.trianguloy.llscript.repository.settings.Preferences -> com.trianguloy.llscript.repository.settings.b:
    android.content.SharedPreferences base -> a
    android.content.Context context -> b
    33:33:com.trianguloy.llscript.repository.settings.Preferences getDefault(android.content.Context) -> a
    38:38:com.trianguloy.llscript.repository.settings.Preferences$Editor editDefault(android.content.Context) -> b
    41:44:void <init>(android.content.SharedPreferences,android.content.Context) -> <init>
    48:48:java.util.Map getAll() -> getAll
    55:55:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    60:60:java.lang.String getString(int,java.lang.String) -> a
    66:82:java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    86:86:java.util.Set getStringSet(int,java.util.Set) -> a
    90:104:java.util.Map getStringMap(java.lang.String,java.util.Map) -> a
    108:108:java.util.Map getStringMap(int,java.util.Map) -> a
    113:113:int getInt(java.lang.String,int) -> getInt
    117:117:int getInt(int,int) -> a
    122:122:long getLong(java.lang.String,long) -> getLong
    127:127:float getFloat(java.lang.String,float) -> getFloat
    132:132:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    136:136:boolean getBoolean(int,boolean) -> a
    141:141:boolean contains(java.lang.String) -> contains
    145:145:boolean contains(int) -> a
    152:152:com.trianguloy.llscript.repository.settings.Preferences$Editor edit() -> a
    157:158:void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    162:163:void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    26:26:android.content.SharedPreferences$Editor edit() -> edit
com.trianguloy.llscript.repository.settings.Preferences$Editor -> com.trianguloy.llscript.repository.settings.b$a:
    android.content.SharedPreferences$Editor base -> a
    android.content.Context context -> b
    170:173:void <init>(android.content.SharedPreferences$Editor,android.content.Context) -> <init>
    178:179:com.trianguloy.llscript.repository.settings.Preferences$Editor putString(java.lang.String,java.lang.String) -> a
    184:184:com.trianguloy.llscript.repository.settings.Preferences$Editor putString(int,java.lang.String) -> a
    190:195:com.trianguloy.llscript.repository.settings.Preferences$Editor putStringSet(java.lang.String,java.util.Set) -> a
    200:200:com.trianguloy.llscript.repository.settings.Preferences$Editor putStringSet(int,java.util.Set) -> a
    205:205:com.trianguloy.llscript.repository.settings.Preferences$Editor putStringMap(java.lang.String,java.util.Map) -> a
    210:210:com.trianguloy.llscript.repository.settings.Preferences$Editor putStringMap(int,java.util.Map) -> a
    216:217:com.trianguloy.llscript.repository.settings.Preferences$Editor putInt(java.lang.String,int) -> a
    222:222:com.trianguloy.llscript.repository.settings.Preferences$Editor putInt(int,int) -> a
    228:229:com.trianguloy.llscript.repository.settings.Preferences$Editor putLong(java.lang.String,long) -> a
    235:236:com.trianguloy.llscript.repository.settings.Preferences$Editor putFloat(java.lang.String,float) -> a
    242:243:com.trianguloy.llscript.repository.settings.Preferences$Editor putBoolean(java.lang.String,boolean) -> a
    248:248:com.trianguloy.llscript.repository.settings.Preferences$Editor putBoolean(int,boolean) -> a
    254:255:com.trianguloy.llscript.repository.settings.Preferences$Editor remove(java.lang.String) -> a
    260:260:com.trianguloy.llscript.repository.settings.Preferences$Editor remove(int) -> a
    266:267:com.trianguloy.llscript.repository.settings.Preferences$Editor clear() -> a
    273:273:boolean commit() -> commit
    278:283:void apply() -> apply
    165:165:android.content.SharedPreferences$Editor clear() -> clear
    165:165:android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    165:165:android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    165:165:android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    165:165:android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    165:165:android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    165:165:android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
    165:165:android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
com.trianguloy.llscript.repository.settings.SettingsActivity -> com.trianguloy.llscript.repository.settings.SettingsActivity:
    com.trianguloy.llscript.repository.settings.PreferenceListener listener -> b
    boolean $assertionsDisabled -> a
    44:44:void <init>() -> <init>
    50:106:void onCreate(android.os.Bundle) -> onCreate
    110:112:void onResume() -> onResume
    116:118:void onPause() -> onPause
    125:131:void setupActionBar() -> a
    135:149:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    158:158:boolean onIsMultiPane() -> onIsMultiPane
    166:166:boolean isXLargeTablet(android.content.Context) -> a
    180:180:boolean isSimplePreferences(android.content.Context) -> b
    186:190:void stopService() -> b
    193:199:void startService(com.trianguloy.llscript.repository.settings.Preferences) -> a
    205:213:void removeDebugOptions() -> c
    44:44:void access$000(com.trianguloy.llscript.repository.settings.SettingsActivity,com.trianguloy.llscript.repository.settings.Preferences) -> a
    44:44:void access$100(com.trianguloy.llscript.repository.settings.SettingsActivity) -> a
    43:43:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.settings.SettingsActivity$1 -> com.trianguloy.llscript.repository.settings.SettingsActivity$1:
    com.trianguloy.llscript.repository.settings.Preferences val$pref -> a
    com.trianguloy.llscript.repository.settings.SettingsActivity this$0 -> b
    59:59:void <init>(com.trianguloy.llscript.repository.settings.SettingsActivity,com.trianguloy.llscript.repository.settings.Preferences) -> <init>
    62:63:void run() -> run
com.trianguloy.llscript.repository.settings.SettingsActivity$2 -> com.trianguloy.llscript.repository.settings.SettingsActivity$2:
    android.preference.CheckBoxPreference val$checkBoxPreference -> a
    com.trianguloy.llscript.repository.settings.Preferences val$pref -> b
    android.preference.ListPreference val$intervalPreference -> c
    com.trianguloy.llscript.repository.settings.SettingsActivity this$0 -> d
    66:66:void <init>(com.trianguloy.llscript.repository.settings.SettingsActivity,android.preference.CheckBoxPreference,com.trianguloy.llscript.repository.settings.Preferences,android.preference.ListPreference) -> <init>
    69:72:void run() -> run
com.trianguloy.llscript.repository.settings.SettingsActivity$3 -> com.trianguloy.llscript.repository.settings.SettingsActivity$3:
    com.trianguloy.llscript.repository.settings.SettingsActivity this$0 -> a
    76:76:void <init>(com.trianguloy.llscript.repository.settings.SettingsActivity) -> <init>
    79:81:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.trianguloy.llscript.repository.settings.SettingsActivity$4 -> com.trianguloy.llscript.repository.settings.SettingsActivity$4:
    com.trianguloy.llscript.repository.settings.SettingsActivity this$0 -> a
    84:84:void <init>(com.trianguloy.llscript.repository.settings.SettingsActivity) -> <init>
    87:88:void run() -> run
com.trianguloy.llscript.repository.settings.SettingsActivity$5 -> com.trianguloy.llscript.repository.settings.SettingsActivity$5:
    android.preference.CheckBoxPreference val$enableAcra -> a
    android.preference.CheckBoxPreference val$silentReports -> b
    com.trianguloy.llscript.repository.settings.SettingsActivity this$0 -> c
    94:94:void <init>(com.trianguloy.llscript.repository.settings.SettingsActivity,android.preference.CheckBoxPreference,android.preference.CheckBoxPreference) -> <init>
    97:101:void run() -> run
com.trianguloy.llscript.repository.settings.SubscriptionManager -> com.trianguloy.llscript.repository.settings.c:
    android.content.Context context -> a
    android.view.Menu menu -> b
    com.trianguloy.llscript.repository.settings.Preferences sharedPref -> c
    23:58:void <init>() -> <init>
    30:35:void subscribe(java.lang.String) -> a
    38:43:void unsubscribe(java.lang.String) -> b
    46:51:void toast(java.lang.String) -> e
    54:54:boolean isSubscribed(java.lang.String) -> c
    67:89:void setSubscriptionState(int) -> a
    92:93:void setMenu(android.view.Menu) -> a
    96:98:void setContext(android.content.Context) -> a
    101:106:void updateState(java.lang.String) -> d
com.trianguloy.llscript.repository.settings.SubscriptionsActivity -> com.trianguloy.llscript.repository.settings.SubscriptionsActivity:
    com.trianguloy.llscript.repository.settings.Preferences sharedPref -> a
    java.util.Set subsSet -> b
    android.widget.ArrayAdapter adapter -> c
    20:20:void <init>() -> <init>
    29:42:void onCreate(android.os.Bundle) -> onCreate
    47:62:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    20:20:android.widget.ArrayAdapter access$000(com.trianguloy.llscript.repository.settings.SubscriptionsActivity) -> a
    20:20:java.util.Set access$100(com.trianguloy.llscript.repository.settings.SubscriptionsActivity) -> b
    20:20:com.trianguloy.llscript.repository.settings.Preferences access$200(com.trianguloy.llscript.repository.settings.SubscriptionsActivity) -> c
com.trianguloy.llscript.repository.settings.SubscriptionsActivity$1 -> com.trianguloy.llscript.repository.settings.SubscriptionsActivity$1:
    boolean $assertionsDisabled -> a
    int val$position -> b
    com.trianguloy.llscript.repository.settings.SubscriptionsActivity this$0 -> c
    47:47:void <init>(com.trianguloy.llscript.repository.settings.SubscriptionsActivity,int) -> <init>
    50:60:void onClick(android.content.DialogInterface,int) -> onClick
    47:47:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.web.DownloadTask -> com.trianguloy.llscript.repository.web.a:
    com.trianguloy.llscript.repository.web.DownloadTask$Listener listener -> a
    java.lang.String server -> b
    27:30:void <init>(android.content.Context,com.trianguloy.llscript.repository.web.DownloadTask$Listener) -> <init>
    39:53:com.trianguloy.llscript.repository.web.DownloadTask$Result doInBackground(java.lang.String[]) -> a
    58:64:void onPostExecute(com.trianguloy.llscript.repository.web.DownloadTask$Result) -> a
    22:22:void onPostExecute(java.lang.Object) -> onPostExecute
    22:22:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.DownloadTask$Listener -> com.trianguloy.llscript.repository.web.a$a:
    void onFinish(com.trianguloy.llscript.repository.web.DownloadTask$Result) -> a
    void onError() -> a
com.trianguloy.llscript.repository.web.DownloadTask$Result -> com.trianguloy.llscript.repository.web.a$b:
    java.lang.String url -> a
    org.jsoup.nodes.Document document -> b
    76:79:void <init>(java.lang.String,org.jsoup.nodes.Document) -> <init>
com.trianguloy.llscript.repository.web.ManagedWebView -> com.trianguloy.llscript.repository.web.ManagedWebView:
    android.content.Context context -> b
    java.util.Stack backStack -> c
    int posY -> d
    org.jsoup.nodes.Document repoDocument -> e
    org.jsoup.nodes.Document currentDocument -> f
    com.trianguloy.llscript.repository.web.ManagedWebView$Listener listener -> g
    com.trianguloy.llscript.repository.web.DownloadTask$Listener downloadTaskListener -> h
    boolean showTools -> i
    java.lang.String loadingId -> j
    android.os.AsyncTask ongoingTask -> k
    com.trianguloy.llscript.repository.internal.PageCacheManager cacheManager -> l
    boolean $assertionsDisabled -> a
    50:52:void <init>(android.content.Context) -> <init>
    55:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:62:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:127:void init(android.content.Context) -> a
    130:131:void setListener(com.trianguloy.llscript.repository.web.ManagedWebView$Listener) -> setListener
    134:134:com.trianguloy.llscript.repository.web.ManagedWebView$Listener getListener() -> getListener
    143:168:void show(java.lang.String) -> a
    177:198:void showPage(java.lang.String,org.jsoup.nodes.Document) -> a
    206:208:void downloadPage(java.lang.String) -> c
    214:216:void cancel() -> d
    222:222:boolean backPossible() -> a
    229:234:void performBack() -> b
    239:240:java.lang.String getUrl() -> getUrl
    245:246:java.lang.String getPageId() -> getPageId
    250:250:boolean hasPage() -> c
    259:260:void dropOnStackWithoutShowing(java.lang.String) -> b
    263:263:org.jsoup.nodes.Document getRepoDocument() -> getRepoDocument
    267:267:org.jsoup.nodes.Document getCurrentDocument() -> getCurrentDocument
    276:279:void loading(boolean) -> a
    287:288:void setShowTools(boolean) -> setShowTools
    296:300:void saveToInstanceState(android.os.Bundle) -> a
    310:326:boolean restoreFromInstanceState(android.os.Bundle) -> b
    32:32:java.util.Stack access$000(com.trianguloy.llscript.repository.web.ManagedWebView) -> a
    32:32:int access$100(com.trianguloy.llscript.repository.web.ManagedWebView) -> b
    32:32:void access$200(com.trianguloy.llscript.repository.web.ManagedWebView,boolean) -> a
    32:32:com.trianguloy.llscript.repository.web.ManagedWebView$Listener access$300(com.trianguloy.llscript.repository.web.ManagedWebView) -> c
    32:32:void access$400(com.trianguloy.llscript.repository.web.ManagedWebView,java.lang.String,org.jsoup.nodes.Document) -> a
    32:32:android.content.Context access$500(com.trianguloy.llscript.repository.web.ManagedWebView) -> d
    32:32:com.trianguloy.llscript.repository.internal.PageCacheManager access$600(com.trianguloy.llscript.repository.web.ManagedWebView) -> e
    32:32:com.trianguloy.llscript.repository.web.DownloadTask$Listener access$700(com.trianguloy.llscript.repository.web.ManagedWebView) -> f
    32:32:void access$800(com.trianguloy.llscript.repository.web.ManagedWebView) -> g
    32:32:void access$900(com.trianguloy.llscript.repository.web.ManagedWebView,java.lang.String) -> a
    32:32:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.web.ManagedWebView$1 -> com.trianguloy.llscript.repository.web.ManagedWebView$1:
    com.trianguloy.llscript.repository.web.ManagedWebView this$0 -> a
    74:74:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView) -> <init>
    78:80:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    85:89:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.trianguloy.llscript.repository.web.ManagedWebView$2 -> com.trianguloy.llscript.repository.web.ManagedWebView$2:
    android.content.Context val$context -> a
    com.trianguloy.llscript.repository.web.ManagedWebView this$0 -> b
    91:91:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView,android.content.Context) -> <init>
    96:112:void onFinish(com.trianguloy.llscript.repository.web.DownloadTask$Result) -> a
    116:124:void onError() -> a
com.trianguloy.llscript.repository.web.ManagedWebView$2$1 -> com.trianguloy.llscript.repository.web.ManagedWebView$2$1:
    boolean $assertionsDisabled -> a
    java.lang.String val$id -> b
    java.lang.String val$html -> c
    com.trianguloy.llscript.repository.web.ManagedWebView$2 this$1 -> d
    102:102:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView$2,java.lang.String,java.lang.String) -> <init>
    105:110:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    102:102:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.web.ManagedWebView$2$2 -> com.trianguloy.llscript.repository.web.ManagedWebView$2$2:
    com.trianguloy.llscript.repository.web.ManagedWebView$2 this$1 -> a
    117:117:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView$2) -> <init>
    119:122:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.web.ManagedWebView$3 -> com.trianguloy.llscript.repository.web.ManagedWebView$3:
    boolean $assertionsDisabled -> a
    com.trianguloy.llscript.repository.internal.PageCacheManager$Page val$page -> b
    java.lang.String val$url -> c
    com.trianguloy.llscript.repository.web.ManagedWebView this$0 -> d
    151:151:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView,com.trianguloy.llscript.repository.internal.PageCacheManager$Page,java.lang.String) -> <init>
    154:162:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    151:151:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.web.ManagedWebView$4 -> com.trianguloy.llscript.repository.web.ManagedWebView$4:
    com.trianguloy.llscript.repository.web.ManagedWebView this$0 -> a
    311:311:void <init>(com.trianguloy.llscript.repository.web.ManagedWebView) -> <init>
com.trianguloy.llscript.repository.web.ManagedWebView$HistoryElement -> com.trianguloy.llscript.repository.web.ManagedWebView$a:
    java.lang.String url -> a
    int posY -> b
    333:336:void <init>(java.lang.String) -> <init>
com.trianguloy.llscript.repository.web.ManagedWebView$Listener -> com.trianguloy.llscript.repository.web.ManagedWebView$b:
    void loading(boolean) -> a
    void pageChanged(java.lang.String) -> a
    void repoDocumentUpdated(org.jsoup.nodes.Document) -> a
com.trianguloy.llscript.repository.web.RPCManager -> com.trianguloy.llscript.repository.web.b:
    com.trianguloy.llscript.repository.web.RPCManager instance -> a
    android.content.Context context -> b
    dw.xmlrpc.DokuJClient client -> c
    int login -> d
    java.lang.String username -> e
    56:62:void <init>(android.content.Context) -> <init>
    65:67:com.trianguloy.llscript.repository.web.RPCManager getInstance(android.content.Context) -> a
    71:86:boolean init() -> d
    91:91:int isLoggedIn() -> a
    95:120:void login(java.lang.String,java.lang.String,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> a
    123:139:void logout() -> b
    142:156:void getPage(java.lang.String,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> a
    159:173:void getAllPages(com.trianguloy.llscript.repository.web.RPCManager$Listener) -> a
    177:177:java.lang.String getUser() -> c
    181:199:void putPage(java.lang.String,java.lang.String,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> b
    202:230:void getChangedSubscriptions(android.content.Context,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> a
    233:250:void setTimestampToCurrent(com.trianguloy.llscript.repository.settings.Preferences,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> a
    253:253:android.os.AsyncTask getPageTimestamp(java.lang.String,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> b
    29:29:boolean access$000(com.trianguloy.llscript.repository.web.RPCManager) -> a
    29:29:int access$102(com.trianguloy.llscript.repository.web.RPCManager,int) -> a
    29:29:dw.xmlrpc.DokuJClient access$200(com.trianguloy.llscript.repository.web.RPCManager) -> b
    29:29:int access$100(com.trianguloy.llscript.repository.web.RPCManager) -> c
    29:29:java.lang.String access$302(com.trianguloy.llscript.repository.web.RPCManager,java.lang.String) -> a
com.trianguloy.llscript.repository.web.RPCManager$1 -> com.trianguloy.llscript.repository.web.b$1:
    java.lang.String val$user -> a
    java.lang.String val$password -> b
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> c
    101:101:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener,java.lang.String,java.lang.String) -> <init>
    105:117:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    101:101:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$2 -> com.trianguloy.llscript.repository.web.b$2:
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> a
    123:123:void <init>(com.trianguloy.llscript.repository.web.RPCManager) -> <init>
    128:136:java.lang.Void doInBackground(java.lang.Void[]) -> a
    123:123:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$3 -> com.trianguloy.llscript.repository.web.b$3:
    java.lang.String val$id -> a
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> b
    142:142:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener,java.lang.String) -> <init>
    147:153:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    142:142:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$4 -> com.trianguloy.llscript.repository.web.b$4:
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> a
    159:159:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener) -> <init>
    164:170:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    159:159:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$5 -> com.trianguloy.llscript.repository.web.b$5:
    java.lang.String val$id -> a
    java.lang.String val$text -> b
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> c
    181:181:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener,java.lang.String,java.lang.String) -> <init>
    185:196:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    181:181:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$6 -> com.trianguloy.llscript.repository.web.b$6:
    int val$timestamp -> a
    android.content.Context val$context -> b
    java.util.Set val$subscriptions -> c
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> d
    205:205:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener,int,android.content.Context,java.util.Set) -> <init>
    210:227:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    205:205:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$7 -> com.trianguloy.llscript.repository.web.b$7:
    com.trianguloy.llscript.repository.settings.Preferences val$sharedPref -> a
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> b
    233:233:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener,com.trianguloy.llscript.repository.settings.Preferences) -> <init>
    239:247:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    233:233:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$8 -> com.trianguloy.llscript.repository.web.b$8:
    java.lang.String val$id -> a
    com.trianguloy.llscript.repository.web.RPCManager this$0 -> b
    253:253:void <init>(com.trianguloy.llscript.repository.web.RPCManager,com.trianguloy.llscript.repository.web.RPCManager$Listener,java.lang.String) -> <init>
    259:265:com.trianguloy.llscript.repository.web.RPCManager$Result doInBackground(java.lang.Void[]) -> a
    253:253:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.trianguloy.llscript.repository.web.RPCManager$ListenedTask -> com.trianguloy.llscript.repository.web.b$a:
    com.trianguloy.llscript.repository.web.RPCManager$Listener listener -> a
    306:308:void <init>(com.trianguloy.llscript.repository.web.RPCManager$Listener) -> <init>
    312:314:void onPostExecute(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    301:301:void onPostExecute(java.lang.Object) -> onPostExecute
com.trianguloy.llscript.repository.web.RPCManager$Listener -> com.trianguloy.llscript.repository.web.b$b:
    void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.web.RPCManager$Result -> com.trianguloy.llscript.repository.web.b$c:
    int status -> a
    java.lang.Object result -> b
    282:283:void <init>(int) -> <init>
    285:288:void <init>(int,java.lang.Object) -> <init>
    292:292:int getStatus() -> a
    297:297:java.lang.Object getResult() -> b
com.trianguloy.llscript.repository.web.WebClient -> com.trianguloy.llscript.repository.web.c:
    23:23:void <init>() -> <init>
    31:47:android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    55:55:android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest) -> shouldInterceptRequest
com.trianguloy.llscript.repository.web.WebService -> com.trianguloy.llscript.repository.web.WebService:
    26:26:void <init>() -> <init>
    31:32:void onCreate() -> onCreate
    36:37:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    42:42:android.os.IBinder onBind(android.content.Intent) -> onBind
    46:57:void check() -> a
    60:87:void pushNotification(java.util.List) -> a
    91:91:java.lang.String getStringUpdated(java.util.List) -> b
    26:26:void access$000(com.trianguloy.llscript.repository.web.WebService,java.util.List) -> a
com.trianguloy.llscript.repository.web.WebService$1 -> com.trianguloy.llscript.repository.web.WebService$1:
    boolean $assertionsDisabled -> a
    com.trianguloy.llscript.repository.web.WebService this$0 -> b
    46:46:void <init>(com.trianguloy.llscript.repository.web.WebService) -> <init>
    49:55:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
    46:46:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.web.WebServiceManager -> com.trianguloy.llscript.repository.web.d:
    21:22:void startService(android.content.Context,int) -> a
    25:26:void stopService(android.content.Context) -> a
    29:30:android.app.PendingIntent getIntent(android.content.Context) -> b
    35:35:android.app.AlarmManager getManager(android.content.Context) -> c
com.trianguloy.llscript.repository.web.WebViewer -> com.trianguloy.llscript.repository.web.WebViewer:
    com.trianguloy.llscript.repository.web.ManagedWebView webView -> b
    android.widget.Button button -> c
    java.lang.String sentUrl -> d
    com.trianguloy.llscript.repository.settings.Preferences sharedPref -> e
    java.lang.Boolean close -> f
    com.trianguloy.llscript.repository.settings.SubscriptionManager subscriptionManager -> g
    android.os.Bundle savedInstanceState -> h
    boolean $assertionsDisabled -> a
    62:72:void <init>() -> <init>
    78:94:void onCreate(android.os.Bundle) -> onCreate
    98:110:void onNewIntent(android.content.Intent) -> onNewIntent
    113:118:void loadSentUrl() -> a
    122:131:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    147:226:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    231:245:void onBackPressed() -> onBackPressed
    249:253:boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    258:265:void onStop() -> onStop
    269:273:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    276:276:boolean restore(android.os.Bundle) -> a
    281:285:void init() -> b
    289:323:void initializeWeb() -> c
    326:344:void pageChanged(java.lang.String) -> a
    349:363:void startImport(android.view.View) -> startImport
    367:420:boolean upgradeFromOldVersion() -> d
    51:51:java.lang.Boolean access$002(com.trianguloy.llscript.repository.web.WebViewer,java.lang.Boolean) -> a
    51:51:void access$100(com.trianguloy.llscript.repository.web.WebViewer,java.lang.String) -> a
    51:51:com.trianguloy.llscript.repository.web.ManagedWebView access$200(com.trianguloy.llscript.repository.web.WebViewer) -> a
    51:51:com.trianguloy.llscript.repository.settings.SubscriptionManager access$300(com.trianguloy.llscript.repository.web.WebViewer) -> b
    51:51:void access$400(com.trianguloy.llscript.repository.web.WebViewer) -> c
    51:51:void <clinit>() -> <clinit>
com.trianguloy.llscript.repository.web.WebViewer$1 -> com.trianguloy.llscript.repository.web.WebViewer$1:
    com.trianguloy.llscript.repository.web.WebViewer this$0 -> a
    236:236:void <init>(com.trianguloy.llscript.repository.web.WebViewer) -> <init>
    240:241:void run() -> run
com.trianguloy.llscript.repository.web.WebViewer$2 -> com.trianguloy.llscript.repository.web.WebViewer$2:
    android.widget.ProgressBar val$progressBar -> a
    com.trianguloy.llscript.repository.web.WebViewer this$0 -> b
    295:295:void <init>(com.trianguloy.llscript.repository.web.WebViewer,android.widget.ProgressBar) -> <init>
    298:299:void loading(boolean) -> a
    303:304:void pageChanged(java.lang.String) -> a
    308:309:void repoDocumentUpdated(org.jsoup.nodes.Document) -> a
com.trianguloy.llscript.repository.web.WebViewer$3 -> com.trianguloy.llscript.repository.web.WebViewer$3:
    com.trianguloy.llscript.repository.web.WebViewer this$0 -> a
    349:349:void <init>(com.trianguloy.llscript.repository.web.WebViewer) -> <init>
    352:361:void importFinished() -> a
com.trianguloy.llscript.repository.web.WebViewer$3$1 -> com.trianguloy.llscript.repository.web.WebViewer$3$1:
    com.trianguloy.llscript.repository.web.WebViewer$3 this$1 -> a
    354:354:void <init>(com.trianguloy.llscript.repository.web.WebViewer$3) -> <init>
    357:358:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.web.WebViewer$4 -> com.trianguloy.llscript.repository.web.WebViewer$4:
    com.trianguloy.llscript.repository.web.WebViewer this$0 -> a
    391:391:void <init>(com.trianguloy.llscript.repository.web.WebViewer) -> <init>
    394:404:void onResult(com.trianguloy.llscript.repository.web.RPCManager$Result) -> a
com.trianguloy.llscript.repository.web.WebViewer$4$1 -> com.trianguloy.llscript.repository.web.WebViewer$4$1:
    com.trianguloy.llscript.repository.web.WebViewer$4 this$1 -> a
    397:397:void <init>(com.trianguloy.llscript.repository.web.WebViewer$4) -> <init>
    400:401:void onClick(android.content.DialogInterface,int) -> onClick
com.trianguloy.llscript.repository.web.WebViewer$5 -> com.trianguloy.llscript.repository.web.WebViewer$5:
    com.trianguloy.llscript.repository.web.WebViewer this$0 -> a
    409:409:void <init>(com.trianguloy.llscript.repository.web.WebViewer) -> <init>
    413:415:void onClick(android.content.DialogInterface,int) -> onClick
de.timroes.axmlrpc.AuthenticationManager -> a.a.a.a:
    java.lang.String user -> a
    java.lang.String pass -> b
    11:11:void <init>() -> <init>
    44:53:void setAuthentication(java.net.HttpURLConnection) -> a
de.timroes.axmlrpc.Call -> a.a.a.b:
    java.lang.String method -> a
    java.lang.Object[] params -> b
    33:36:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    50:74:java.lang.String getXML(boolean) -> a
    85:89:de.timroes.axmlrpc.xmlcreator.XmlElement getXMLParam(java.lang.Object) -> a
de.timroes.axmlrpc.CookieManager -> a.a.a.c:
    int flags -> a
    java.util.Map cookies -> b
    20:29:void <init>(int) -> <init>
    35:36:void clearCookies() -> a
    44:44:java.util.Map getCookies() -> b
    56:73:void readCookies(java.net.HttpURLConnection) -> a
    84:93:void setCookies(java.net.HttpURLConnection) -> b
de.timroes.axmlrpc.ResponseParser -> a.a.a.d:
    28:28:void <init>() -> <init>
    46:89:java.lang.Object parse(java.io.InputStream,boolean) -> a
    96:106:void printDocument(org.w3c.dom.Document,java.io.OutputStream) -> a
    119:121:java.lang.Object getReturnValueFromElement(org.w3c.dom.Element) -> a
de.timroes.axmlrpc.XMLRPCCallback -> a.a.a.e:
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
de.timroes.axmlrpc.XMLRPCClient -> a.a.a.f:
    int flags -> a
    java.net.URL url -> b
    java.util.Map httpParameters -> c
    java.util.Map backgroundCalls -> d
    de.timroes.axmlrpc.ResponseParser responseParser -> e
    de.timroes.axmlrpc.CookieManager cookieManager -> f
    de.timroes.axmlrpc.AuthenticationManager authManager -> g
    javax.net.ssl.TrustManager[] trustManagers -> h
    javax.net.ssl.KeyManager[] keyManagers -> i
    java.net.Proxy proxy -> j
    int timeout -> k
    181:246:void <init>(java.net.URL,java.lang.String,int) -> <init>
    289:289:java.net.URL getURL() -> a
    304:305:void setTimeout(int) -> a
    374:374:java.util.Map getCookies() -> b
    383:384:void clearCookies() -> c
    461:461:java.lang.Object call(java.lang.String,java.lang.Object[]) -> a
    519:523:de.timroes.axmlrpc.Call createCall(java.lang.String,java.lang.Object[]) -> b
    534:534:boolean isFlagSet(int) -> b
    27:27:java.util.Map access$000(de.timroes.axmlrpc.XMLRPCClient) -> a
    27:27:de.timroes.axmlrpc.Call access$100(de.timroes.axmlrpc.XMLRPCClient,java.lang.String,java.lang.Object[]) -> a
    27:27:java.net.Proxy access$200(de.timroes.axmlrpc.XMLRPCClient) -> b
    27:27:java.net.URL access$300(de.timroes.axmlrpc.XMLRPCClient) -> c
    27:27:int access$400(de.timroes.axmlrpc.XMLRPCClient) -> d
    27:27:java.util.Map access$500(de.timroes.axmlrpc.XMLRPCClient) -> e
    27:27:de.timroes.axmlrpc.AuthenticationManager access$600(de.timroes.axmlrpc.XMLRPCClient) -> f
    27:27:de.timroes.axmlrpc.CookieManager access$700(de.timroes.axmlrpc.XMLRPCClient) -> g
    27:27:boolean access$800(de.timroes.axmlrpc.XMLRPCClient,int) -> a
    27:27:java.net.URL access$302(de.timroes.axmlrpc.XMLRPCClient,java.net.URL) -> a
    27:27:de.timroes.axmlrpc.ResponseParser access$900(de.timroes.axmlrpc.XMLRPCClient) -> h
    27:27:javax.net.ssl.TrustManager[] access$1100(de.timroes.axmlrpc.XMLRPCClient) -> i
    27:27:javax.net.ssl.KeyManager[] access$1200(de.timroes.axmlrpc.XMLRPCClient) -> j
de.timroes.axmlrpc.XMLRPCClient$1 -> a.a.a.f$1:
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
    222:222:void <init>(de.timroes.axmlrpc.XMLRPCClient) -> <init>
    224:224:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    227:227:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    230:230:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
de.timroes.axmlrpc.XMLRPCClient$Caller -> a.a.a.f$a:
    de.timroes.axmlrpc.XMLRPCCallback listener -> b
    long threadId -> c
    java.lang.String methodName -> d
    java.lang.Object[] params -> e
    boolean canceled -> f
    java.net.HttpURLConnection http -> g
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
    572:572:void <init>(de.timroes.axmlrpc.XMLRPCClient) -> <init>
    582:599:void run() -> run
    629:755:java.lang.Object call(java.lang.String,java.lang.Object[]) -> a
    771:810:java.net.HttpURLConnection verifyConnection(java.net.URLConnection) -> a
de.timroes.axmlrpc.XMLRPCClient$Caller$1 -> a.a.a.f$a$1:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    782:782:void <init>(de.timroes.axmlrpc.XMLRPCClient$Caller) -> <init>
    784:784:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
de.timroes.axmlrpc.XMLRPCClient$CancelException -> a.a.a.f$b:
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
    816:816:void <init>(de.timroes.axmlrpc.XMLRPCClient) -> <init>
    816:816:void <init>(de.timroes.axmlrpc.XMLRPCClient,de.timroes.axmlrpc.XMLRPCClient$1) -> <init>
de.timroes.axmlrpc.XMLRPCException -> a.a.a.g:
    11:12:void <init>() -> <init>
    15:16:void <init>(java.lang.Exception) -> <init>
    19:20:void <init>(java.lang.String) -> <init>
    23:24:void <init>(java.lang.String,java.lang.Exception) -> <init>
de.timroes.axmlrpc.XMLRPCRuntimeException -> a.a.a.h:
    10:11:void <init>(java.lang.String) -> <init>
    14:15:void <init>(java.lang.Exception) -> <init>
de.timroes.axmlrpc.XMLRPCServerException -> a.a.a.i:
    int errornr -> a
    14:16:void <init>(java.lang.String,int) -> <init>
    26:26:java.lang.String getMessage() -> getMessage
de.timroes.axmlrpc.XMLRPCTimeoutException -> a.a.a.j:
    12:13:void <init>(java.lang.String) -> <init>
de.timroes.axmlrpc.XMLUtil -> a.a.a.k:
    27:51:org.w3c.dom.Element getOnlyChildElement(org.w3c.dom.NodeList) -> a
    66:85:java.lang.String getOnlyTextContent(org.w3c.dom.NodeList) -> b
    99:107:boolean hasChildElement(org.w3c.dom.NodeList) -> c
    119:121:de.timroes.axmlrpc.xmlcreator.XmlElement makeXmlTag(java.lang.String,java.lang.String) -> a
de.timroes.axmlrpc.serializer.ArraySerializer -> a.a.a.a.a:
    17:17:void <init>() -> <init>
    24:52:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    58:80:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.Base64Serializer -> a.a.a.a.b:
    13:13:void <init>() -> <init>
    16:16:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    20:20:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.BooleanSerializer -> a.a.a.a.c:
    12:12:void <init>() -> <init>
    15:15:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    20:20:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.DateTimeSerializer -> a.a.a.a.d:
    java.text.SimpleDateFormat DATE_FORMATER -> a
    16:16:void <init>() -> <init>
    23:23:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    28:30:java.lang.Object deserialize(java.lang.String) -> a
    36:36:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
    19:19:void <clinit>() -> <clinit>
de.timroes.axmlrpc.serializer.DoubleSerializer -> a.a.a.a.e:
    14:14:void <init>() -> <init>
    17:17:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    23:24:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.IntSerializer -> a.a.a.a.f:
    12:12:void <init>() -> <init>
    15:15:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    19:19:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.LongSerializer -> a.a.a.a.g:
    12:12:void <init>() -> <init>
    15:15:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    19:19:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.NullSerializer -> a.a.a.a.h:
    11:11:void <init>() -> <init>
    14:14:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    18:18:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.Serializer -> a.a.a.a.i:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.SerializerHandler -> a.a.a.a.j:
    de.timroes.axmlrpc.serializer.SerializerHandler instance -> a
    de.timroes.axmlrpc.serializer.StringSerializer string -> b
    de.timroes.axmlrpc.serializer.BooleanSerializer bool -> c
    de.timroes.axmlrpc.serializer.IntSerializer integer -> d
    de.timroes.axmlrpc.serializer.LongSerializer long8 -> e
    de.timroes.axmlrpc.serializer.StructSerializer struct -> f
    de.timroes.axmlrpc.serializer.DoubleSerializer floating -> g
    de.timroes.axmlrpc.serializer.DateTimeSerializer datetime -> h
    de.timroes.axmlrpc.serializer.ArraySerializer array -> i
    de.timroes.axmlrpc.serializer.Base64Serializer base64 -> j
    de.timroes.axmlrpc.serializer.NullSerializer nil -> k
    int flags -> l
    47:48:void initialize(int) -> a
    57:60:de.timroes.axmlrpc.serializer.SerializerHandler getDefault() -> a
    64:88:void <init>(int) -> <init>
    101:157:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    172:224:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.StringSerializer -> a.a.a.a.k:
    boolean decodeStrings -> a
    boolean encodeStrings -> b
    17:20:void <init>(boolean,boolean) -> <init>
    23:27:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    31:35:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.StructSerializer -> a.a.a.a.l:
    16:16:void <init>() -> <init>
    24:77:java.lang.Object deserialize(org.w3c.dom.Element) -> a
    83:109:de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.xmlcreator.SimpleXMLCreator -> a.a.a.b.a:
    de.timroes.axmlrpc.xmlcreator.XmlElement root -> a
    9:9:void <init>() -> <init>
    19:20:void setRootElement(de.timroes.axmlrpc.xmlcreator.XmlElement) -> a
    28:28:java.lang.String toString() -> toString
de.timroes.axmlrpc.xmlcreator.XmlElement -> a.a.a.b.b:
    java.util.List children -> a
    java.lang.String name -> b
    java.lang.String content -> c
    15:26:void <init>(java.lang.String) -> <init>
    34:35:void addChildren(de.timroes.axmlrpc.xmlcreator.XmlElement) -> a
    44:45:void setContent(java.lang.String) -> a
    54:69:java.lang.String toString() -> toString
de.timroes.base64.Base64 -> a.a.b.a:
    char[] code -> a
    java.util.HashMap map -> b
    31:62:byte[] decode(java.lang.String) -> a
    83:83:java.lang.String encode(java.lang.String) -> b
    93:97:java.lang.String encode(java.lang.Byte[]) -> a
    107:114:java.lang.String encode(byte[]) -> a
    138:158:byte[] encodeAsBytes(byte[]) -> b
    12:21:void <clinit>() -> <clinit>
dw.xmlrpc.Attacher -> dw.xmlrpc.Attacher:
    dw.xmlrpc.CoreClient _client -> _client
    23:25:void <init>(dw.xmlrpc.CoreClient) -> <init>
    28:32:byte[] serializeFile(java.io.File) -> serializeFile
    36:39:void deserializeFile(byte[],java.io.File) -> deserializeFile
    42:52:void putAttachment(java.lang.String,byte[],boolean) -> putAttachment
    55:76:java.util.List getRecentMediaChanges(java.lang.Integer) -> getRecentMediaChanges
    80:90:java.util.List getAttachments(java.lang.String,java.util.Map) -> getAttachments
    95:95:dw.xmlrpc.AttachmentDetails buildAttachmentDetailsFromResult(java.lang.Object) -> buildAttachmentDetailsFromResult
    99:111:dw.xmlrpc.AttachmentDetails buildAttachmentDetailsFromResult(java.util.Map) -> buildAttachmentDetailsFromResult
    115:116:dw.xmlrpc.AttachmentInfo getAttachmentInfo(java.lang.String) -> getAttachmentInfo
    121:121:dw.xmlrpc.AttachmentInfo buildAttachmentInfoFromResult(java.lang.Object,java.lang.String) -> buildAttachmentInfoFromResult
    125:134:dw.xmlrpc.AttachmentInfo buildAttachmentInfoFromResult(java.util.Map,java.lang.String) -> buildAttachmentInfoFromResult
    138:140:java.util.Date defaultDate() -> defaultDate
    144:145:void deleteAttachment(java.lang.String) -> deleteAttachment
    148:154:byte[] getAttachment(java.lang.String) -> getAttachment
dw.xmlrpc.AttachmentDetails -> dw.xmlrpc.AttachmentDetails:
    java.lang.String _id -> _id
    java.lang.Boolean _isImg -> _isImg
    java.lang.Boolean _writable -> _writable
    java.lang.Integer _perms -> _perms
    java.lang.Integer _size -> _size
    java.util.Date _lastModified -> _lastModified
    java.lang.String _file -> _file
    java.lang.Integer _mtime -> _mtime
    15:15:java.lang.String id() -> id
    24:24:java.lang.Boolean isImg() -> isImg
    33:33:java.lang.Boolean writable() -> writable
    42:42:java.lang.Integer perms() -> perms
    51:51:java.lang.Integer size() -> size
    60:60:java.util.Date lastModified() -> lastModified
    69:69:java.lang.String file() -> file
    78:78:java.lang.Integer mtime() -> mtime
    82:91:void <init>(java.lang.String,java.lang.Integer,java.util.Date,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.Integer) -> <init>
    95:95:java.lang.String toString() -> toString
dw.xmlrpc.AttachmentInfo -> dw.xmlrpc.AttachmentInfo:
    java.lang.String _id -> _id
    java.lang.Integer _size -> _size
    java.util.Date _lastModified -> _lastModified
    15:15:java.lang.String id() -> id
    24:24:java.lang.Integer size() -> size
    33:33:java.util.Date lastModified() -> lastModified
    36:40:void <init>(java.lang.String,java.lang.Integer,java.util.Date) -> <init>
    44:44:java.lang.String toString() -> toString
dw.xmlrpc.CoreClient -> dw.xmlrpc.CoreClient:
    de.timroes.axmlrpc.XMLRPCClient _client -> _client
    java.util.logging.Logger _logger -> _logger
    17:18:void setLogger(java.util.logging.Logger) -> setLogger
    14:22:void <init>(de.timroes.axmlrpc.XMLRPCClient) -> <init>
    25:25:java.util.Map cookies() -> cookies
    29:30:void clearCookies() -> clearCookies
    33:34:java.lang.Object genericQuery(java.lang.String) -> genericQuery
    38:38:java.lang.Object genericQuery(java.lang.String,java.lang.Object) -> genericQuery
    43:49:java.lang.Object genericQuery(java.lang.String,java.lang.Object[]) -> genericQuery
dw.xmlrpc.CoreClientFactory -> dw.xmlrpc.CoreClientFactory:
    8:8:void <init>() -> <init>
    10:10:dw.xmlrpc.CoreClient Build(java.lang.String) -> Build
    14:14:dw.xmlrpc.CoreClient Build(java.lang.String,java.lang.String) -> Build
    18:21:dw.xmlrpc.CoreClient Build(dw.xmlrpc.DokuJClientConfig) -> Build
    25:25:dw.xmlrpc.CoreClient Build(java.net.URL,java.lang.String) -> Build
    29:31:dw.xmlrpc.CoreClient Build(java.net.URL,java.lang.String,int,int) -> Build
    35:35:dw.xmlrpc.CoreClient Build(de.timroes.axmlrpc.XMLRPCClient) -> Build
dw.xmlrpc.DokuJClient -> dw.xmlrpc.DokuJClient:
    dw.xmlrpc.CoreClient _client -> _client
    dw.xmlrpc.Locker _locker -> _locker
    dw.xmlrpc.Attacher _attacher -> _attacher
    java.util.logging.Logger _logger -> _logger
    java.lang.String COOKIE_PREFIX -> COOKIE_PREFIX
    43:45:void setLogger(java.util.logging.Logger) -> setLogger
    60:62:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    74:75:void <init>(java.lang.String) -> <init>
    78:82:void <init>(dw.xmlrpc.DokuJClientConfig) -> <init>
    37:90:void <init>(dw.xmlrpc.CoreClient) -> <init>
    93:98:boolean hasDokuwikiCookies() -> hasDokuwikiCookies
    102:102:java.util.Map cookies() -> cookies
    107:111:void loginWithRetry(java.lang.String,java.lang.String,int) -> loginWithRetry
    114:115:java.lang.Boolean login(java.lang.String,java.lang.String) -> login
    128:129:void putAttachment(java.lang.String,java.lang.String,boolean) -> putAttachment
    141:142:void putAttachment(java.lang.String,java.io.File,boolean) -> putAttachment
    154:155:void putAttachment(java.lang.String,byte[],boolean) -> putAttachment
    164:164:dw.xmlrpc.AttachmentInfo getAttachmentInfo(java.lang.String) -> getAttachmentInfo
    174:175:void deleteAttachment(java.lang.String) -> deleteAttachment
    186:189:java.io.File getAttachment(java.lang.String,java.lang.String) -> getAttachment
    201:201:byte[] getAttachment(java.lang.String) -> getAttachment
    211:211:java.util.List getAttachments(java.lang.String) -> getAttachments
    225:225:java.util.List getAttachments(java.lang.String,java.util.Map) -> getAttachments
    234:234:java.util.List getRecentMediaChanges(java.lang.Integer) -> getRecentMediaChanges
    242:242:java.util.List getRecentMediaChanges(java.util.Date) -> getRecentMediaChanges
    250:250:java.lang.Integer getTime() -> getTime
    260:260:java.lang.Integer getXMLRPCAPIVersion() -> getXMLRPCAPIVersion
    268:268:java.lang.String getVersion() -> getVersion
    280:280:java.util.List getPageVersions(java.lang.String) -> getPageVersions
    293:295:java.util.List getPageVersions(java.lang.String,java.lang.Integer) -> getPageVersions
    305:306:java.lang.String getPageVersion(java.lang.String,java.lang.Integer) -> getPageVersion
    315:315:java.util.List getPagelist(java.lang.String) -> getPagelist
    325:330:java.util.List getPagelist(java.lang.String,java.util.Map) -> getPagelist
    335:343:java.util.Map ensureWeComputeThePageHash(java.util.Map) -> ensureWeComputeThePageHash
    352:353:java.lang.Integer aclCheck(java.lang.String) -> aclCheck
    363:363:java.lang.Integer getRPCVersionSupported() -> getRPCVersionSupported
    374:374:dw.xmlrpc.LockResult setLocks(java.util.List,java.util.List) -> setLocks
    384:384:boolean lock(java.lang.String) -> lock
    394:394:boolean unlock(java.lang.String) -> unlock
    402:402:java.lang.String getTitle() -> getTitle
    412:413:void appendPage(java.lang.String,java.lang.String) -> appendPage
    424:429:void appendPage(java.lang.String,java.lang.String,java.lang.String,boolean) -> appendPage
    439:443:void appendPage(java.lang.String,java.lang.String,java.util.Map) -> appendPage
    451:451:java.lang.String getPage(java.lang.String) -> getPage
    461:462:void putPage(java.lang.String,java.lang.String) -> putPage
    473:477:void putPage(java.lang.String,java.lang.String,java.lang.String,boolean) -> putPage
    486:490:void putPage(java.lang.String,java.lang.String,java.util.Map) -> putPage
    499:500:java.util.List search(java.lang.String) -> search
    510:517:dw.xmlrpc.PageInfo getPageInfo(java.lang.String) -> getPageInfo
    528:530:dw.xmlrpc.PageInfo getPageInfoVersion(java.lang.String,java.lang.Integer) -> getPageInfoVersion
    538:539:java.util.List getAllPages() -> getAllPages
    548:549:java.util.List getBackLinks(java.lang.String) -> getBackLinks
    558:558:java.lang.String getPageHTML(java.lang.String) -> getPageHTML
    568:569:java.lang.String getPageHTMLVersion(java.lang.String,java.lang.Integer) -> getPageHTMLVersion
    578:579:java.util.List listLinks(java.lang.String) -> listLinks
    597:613:java.util.List getRecentChanges(java.lang.Integer) -> getRecentChanges
    621:621:java.util.List getRecentChanges(java.util.Date) -> getRecentChanges
    629:638:void logoff() -> logoff
    645:647:boolean addAcl(java.lang.String,java.lang.String,int) -> addAcl
    656:658:boolean delAcl(java.lang.String,java.lang.String) -> delAcl
    669:669:java.lang.Object genericQuery(java.lang.String) -> genericQuery
    680:680:java.lang.Object genericQuery(java.lang.String,java.lang.Object) -> genericQuery
    691:691:java.lang.Object genericQuery(java.lang.String,java.lang.Object[]) -> genericQuery
    696:700:boolean isConfiguredToAcceptXmlRpcQueries() -> isConfiguredToAcceptXmlRpcQueries
dw.xmlrpc.DokuJClientConfig -> dw.xmlrpc.DokuJClientConfig:
    java.lang.String defaultUserAgent -> defaultUserAgent
    int defaultTimeoutInSeconds -> defaultTimeoutInSeconds
    int defaultXMLRPCClientFlags -> defaultXMLRPCClientFlags
    java.net.URL _url -> _url
    java.lang.String _user -> _user
    java.lang.String _password -> _password
    java.lang.String _userAgent -> _userAgent
    int _timeoutInSeconds -> _timeoutInSeconds
    int _xmlRpcClientFlags -> _xmlRpcClientFlags
    boolean _debug -> _debug
    15:15:java.net.URL url() -> url
    20:20:java.lang.String user() -> user
    25:25:java.lang.String password() -> password
    30:30:java.lang.String userAgent() -> userAgent
    34:35:void <init>(java.lang.String) -> <init>
    18:68:void <init>(java.net.URL) -> <init>
    42:43:void setUserAgent(java.lang.String) -> setUserAgent
    46:48:void setUser(java.lang.String,java.lang.String) -> setUser
    52:53:void setTimeOutInSeconds(int) -> setTimeOutInSeconds
    56:56:int timeoutInSeconds() -> timeoutInSeconds
    61:62:void setXMLRPCClientFlags(int) -> setXMLRPCClientFlags
    65:65:int xmlRpcClientFlags() -> xmlRpcClientFlags
    70:71:void setDebug(boolean) -> setDebug
    74:74:boolean getDebug() -> getDebug
dw.xmlrpc.ExceptionConverter -> dw.xmlrpc.ExceptionConverter:
    29:29:void <init>() -> <init>
    31:105:dw.xmlrpc.exception.DokuException Convert(de.timroes.axmlrpc.XMLRPCException,java.lang.String,java.lang.String) -> Convert
    109:110:dw.xmlrpc.exception.DokuBadUrlException buildGenericBadUrlException(java.lang.Throwable) -> buildGenericBadUrlException
dw.xmlrpc.LinkInfo -> dw.xmlrpc.LinkInfo:
    dw.xmlrpc.LinkInfo$Type _type -> _type
    java.lang.String _page -> _page
    java.lang.String _href -> _href
    18:18:dw.xmlrpc.LinkInfo$Type type() -> type
    27:27:java.lang.String page() -> page
    36:36:java.lang.String href() -> href
    40:41:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    43:47:void <init>(dw.xmlrpc.LinkInfo$Type,java.lang.String,java.lang.String) -> <init>
    51:65:boolean equals(java.lang.Object) -> equals
    73:73:int hashCode() -> hashCode
    78:78:java.lang.String toString() -> toString
dw.xmlrpc.LinkInfo$Type -> dw.xmlrpc.LinkInfo$Type:
    dw.xmlrpc.LinkInfo$Type local -> local
    dw.xmlrpc.LinkInfo$Type extern -> extern
    dw.xmlrpc.LinkInfo$Type[] $VALUES -> $VALUES
    7:7:dw.xmlrpc.LinkInfo$Type[] values() -> values
    7:7:dw.xmlrpc.LinkInfo$Type valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
dw.xmlrpc.LockResult -> dw.xmlrpc.LockResult:
    java.util.Set _locked -> _locked
    java.util.Set _lockfail -> _lockfail
    java.util.Set _unlocked -> _unlocked
    java.util.Set _unlockfail -> _unlockfail
    15:15:java.util.Set locked() -> locked
    24:24:java.util.Set lockfail() -> lockfail
    33:33:java.util.Set unlocked() -> unlocked
    42:42:java.util.Set unlockfail() -> unlockfail
    46:46:boolean hasFailure() -> hasFailure
    52:57:void <init>(java.util.Set,java.util.Set,java.util.Set,java.util.Set) -> <init>
    61:61:java.lang.String toString() -> toString
    69:82:boolean equals(java.lang.Object) -> equals
    91:91:int hashCode() -> hashCode
dw.xmlrpc.Locker -> dw.xmlrpc.Locker:
    dw.xmlrpc.CoreClient _client -> _client
    16:18:void <init>(dw.xmlrpc.CoreClient) -> <init>
    21:23:dw.xmlrpc.LockResult lock(java.lang.String) -> lock
    27:29:dw.xmlrpc.LockResult unlock(java.lang.String) -> unlock
    34:36:dw.xmlrpc.LockResult setLocks(java.util.List,java.util.List) -> setLocks
    40:43:java.util.Map BuildParams(java.util.List,java.util.List) -> BuildParams
    47:52:dw.xmlrpc.LockResult BuildLockResult(java.util.Map) -> BuildLockResult
    59:59:java.util.Set objToStr(java.lang.Object) -> objToStr
    63:72:java.util.Set objToStr(java.lang.Object[]) -> objToStr
dw.xmlrpc.MediaChange -> dw.xmlrpc.MediaChange:
    java.lang.String _id -> _id
    java.util.Date _lastModified -> _lastModified
    java.lang.String _author -> _author
    java.lang.Integer _version -> _version
    java.lang.Integer _perms -> _perms
    java.lang.Integer _size -> _size
    15:15:java.lang.String id() -> id
    24:24:java.util.Date lastModified() -> lastModified
    33:33:java.lang.String author() -> author
    44:44:java.lang.Integer version() -> version
    53:53:java.lang.Integer perms() -> perms
    62:62:java.lang.Integer size() -> size
    65:72:void <init>(java.lang.String,java.util.Date,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    76:76:java.lang.String toString() -> toString
dw.xmlrpc.ObjectConverter -> dw.xmlrpc.ObjectConverter:
    9:9:void <init>() -> <init>
    12:16:java.util.List toPageDW(java.lang.Object[]) -> toPageDW
    21:27:dw.xmlrpc.PageDW toPageDW(java.lang.Object) -> toPageDW
    31:35:java.util.List toSearchResult(java.lang.Object[]) -> toSearchResult
    40:54:dw.xmlrpc.SearchResult toSearchResult(java.lang.Object) -> toSearchResult
    59:64:dw.xmlrpc.PageInfo toPageInfo(java.lang.Object) -> toPageInfo
    68:72:java.util.List toPage(java.lang.Object[]) -> toPage
    77:82:dw.xmlrpc.Page toPage(java.lang.Object) -> toPage
    86:90:java.util.List toString(java.lang.Object[]) -> toString
    94:98:java.util.List toLinkInfo(java.lang.Object[]) -> toLinkInfo
    103:107:dw.xmlrpc.LinkInfo toLinkInfo(java.lang.Object) -> toLinkInfo
    111:115:java.util.List toPageChange(java.lang.Object[]) -> toPageChange
    120:135:dw.xmlrpc.PageChange toPageChange(java.lang.Object) -> toPageChange
    140:144:java.util.List toPageVersion(java.lang.Object[],java.lang.String) -> toPageVersion
    149:159:dw.xmlrpc.PageVersion toPageVersion(java.lang.Object,java.lang.String) -> toPageVersion
    165:168:java.lang.Integer toPerms(java.lang.Object) -> toPerms
dw.xmlrpc.Page -> dw.xmlrpc.Page:
    java.lang.String _id -> _id
    java.lang.Integer _perms -> _perms
    java.util.Date _lastModified -> _lastModified
    java.lang.Integer _size -> _size
    15:15:java.lang.String id() -> id
    24:24:java.lang.Integer perms() -> perms
    33:33:java.util.Date lastModified() -> lastModified
    42:42:java.lang.Integer size() -> size
    45:54:void <init>(java.lang.String,java.lang.Integer,java.util.Date,java.lang.Integer) -> <init>
    58:58:java.lang.String toString() -> toString
dw.xmlrpc.PageChange -> dw.xmlrpc.PageChange:
    java.lang.String _pageId -> _pageId
    java.lang.Integer _perms -> _perms
    java.util.Date _lastModified -> _lastModified
    java.lang.Integer _size -> _size
    java.lang.String _author -> _author
    java.lang.Integer _version -> _version
    16:16:java.lang.String pageId() -> pageId
    25:25:java.lang.String name() -> name
    34:34:java.lang.Integer perms() -> perms
    43:43:java.util.Date lastModified() -> lastModified
    48:48:java.lang.Integer size() -> size
    57:57:java.lang.String author() -> author
    66:66:java.lang.Integer version() -> version
    69:80:void <init>(java.lang.String,java.lang.Integer,java.util.Date,java.lang.Integer,java.lang.String,java.lang.Integer) -> <init>
    84:84:java.lang.String toString() -> toString
dw.xmlrpc.PageDW -> dw.xmlrpc.PageDW:
    java.lang.String _id -> _id
    java.lang.Integer _size -> _size
    java.lang.Integer _version -> _version
    java.lang.Integer _mtime -> _mtime
    java.lang.String _hash -> _hash
    9:9:java.lang.String id() -> id
    14:14:java.lang.Integer size() -> size
    19:19:java.lang.Integer version() -> version
    24:24:java.lang.Integer mtime() -> mtime
    29:29:java.lang.String hash() -> hash
    32:42:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) -> <init>
    46:46:java.lang.String toString() -> toString
dw.xmlrpc.PageInfo -> dw.xmlrpc.PageInfo:
    java.lang.String _id -> _id
    java.util.Date _modified -> _modified
    java.lang.String _author -> _author
    java.lang.Integer _version -> _version
    15:15:java.lang.String id() -> id
    24:24:java.util.Date modified() -> modified
    33:33:java.lang.String author() -> author
    44:44:java.lang.Integer version() -> version
    47:56:void <init>(java.lang.String,java.util.Date,java.lang.String,java.lang.Integer) -> <init>
    60:60:java.lang.String toString() -> toString
dw.xmlrpc.PageVersion -> dw.xmlrpc.PageVersion:
    java.lang.String _pageId -> _pageId
    java.lang.String _author -> _author
    java.lang.String _ip -> _ip
    java.lang.String _type -> _type
    java.lang.String _summary -> _summary
    java.util.Date _modified -> _modified
    java.lang.Integer _version -> _version
    20:20:java.lang.String pageId() -> pageId
    29:29:java.lang.String author() -> author
    38:38:java.lang.String user() -> user
    47:47:java.lang.String ip() -> ip
    56:56:java.lang.String type() -> type
    65:65:java.lang.String summary() -> summary
    74:74:java.util.Date lastModified() -> lastModified
    83:83:java.util.Date modified() -> modified
    94:94:java.lang.Integer version() -> version
    97:109:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.lang.Integer) -> <init>
    113:113:java.lang.String toString() -> toString
dw.xmlrpc.SearchResult -> dw.xmlrpc.SearchResult:
    java.lang.String _id -> _id
    java.lang.String _title -> _title
    java.lang.Integer _size -> _size
    java.lang.Integer _rev -> _rev
    java.lang.Integer _mtime -> _mtime
    java.lang.Integer _score -> _score
    java.lang.String _snippet -> _snippet
    9:9:java.lang.String id() -> id
    14:14:java.lang.String title() -> title
    19:19:java.lang.Integer size() -> size
    24:24:java.lang.Integer rev() -> rev
    29:29:java.lang.Integer mtime() -> mtime
    40:40:java.lang.Integer score() -> score
    49:49:java.lang.String snippet() -> snippet
    52:64:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer) -> <init>
    68:68:java.lang.String toString() -> toString
dw.xmlrpc.exception.DokuAttachmentStillReferenced -> dw.xmlrpc.exception.DokuAttachmentStillReferenced:
    long serialVersionUID -> serialVersionUID
    15:16:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuAttachmentUploadException -> dw.xmlrpc.exception.DokuAttachmentUploadException:
    long serialVersionUID -> serialVersionUID
    8:9:void <init>(java.lang.String,java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuBadUrlException -> dw.xmlrpc.exception.DokuBadUrlException:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.String,java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuDeleteAttachmentException -> dw.xmlrpc.exception.DokuDeleteAttachmentException:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuDistantFileDoesntExistException -> dw.xmlrpc.exception.DokuDistantFileDoesntExistException:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuEmptyNewPageException -> dw.xmlrpc.exception.DokuEmptyNewPageException:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuException -> dw.xmlrpc.exception.DokuException:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.Throwable) -> <init>
    15:16:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    19:20:void <init>(java.lang.String) -> <init>
dw.xmlrpc.exception.DokuIncompatibleVersionException -> dw.xmlrpc.exception.DokuIncompatibleVersionException:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
    11:11:java.lang.String getMessage(java.lang.String) -> getMessage
dw.xmlrpc.exception.DokuInvalidTimeStampException -> dw.xmlrpc.exception.DokuInvalidTimeStampException:
    long serialVersionUID -> serialVersionUID
    13:14:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuMethodDoesNotExistsException -> dw.xmlrpc.exception.DokuMethodDoesNotExistsException:
    long serialVersionUID -> serialVersionUID
    8:9:void <init>(java.lang.String,java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuMisConfiguredWikiException -> dw.xmlrpc.exception.DokuMisConfiguredWikiException:
    long serialVersionUID -> serialVersionUID
    8:9:void <init>(java.lang.String,java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuNoChangesException -> dw.xmlrpc.exception.DokuNoChangesException:
    long serialVersionUID -> serialVersionUID
    10:11:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuPageDoesNotExistException -> dw.xmlrpc.exception.DokuPageDoesNotExistException:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuPageLockedException -> dw.xmlrpc.exception.DokuPageLockedException:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuTimeoutException -> dw.xmlrpc.exception.DokuTimeoutException:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuUnauthorizedException -> dw.xmlrpc.exception.DokuUnauthorizedException:
    long serialVersionUID -> serialVersionUID
    15:16:void <init>(java.lang.Throwable) -> <init>
    19:20:void <init>(java.lang.String,java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuUnknownException -> dw.xmlrpc.exception.DokuUnknownException:
    long serialVersionUID -> serialVersionUID
    14:15:void <init>(java.lang.Throwable) -> <init>
    18:19:void <init>(java.lang.String,java.lang.Throwable) -> <init>
dw.xmlrpc.exception.DokuWordblockException -> dw.xmlrpc.exception.DokuWordblockException:
    long serialVersionUID -> serialVersionUID
    15:16:void <init>(java.lang.Throwable) -> <init>
fr.turri.jiso8601.Iso8601Deserializer -> b.a.a.a:
    12:12:java.util.Date toDate(java.lang.String) -> a
    16:21:java.util.Calendar toCalendar(java.lang.String) -> b
    25:40:java.util.Calendar parseHour(java.util.Calendar,java.lang.String) -> a
    44:45:int getIndexOfSign(java.lang.String) -> c
    49:74:void parseHourWithoutHandlingTimeZone(java.util.Calendar,java.lang.String) -> b
    77:91:java.util.Calendar buildCalendarWithDateOnly(java.lang.String,java.lang.String) -> a
    96:101:java.util.Calendar parseCalendarDate(java.util.Calendar,java.lang.String,java.lang.String) -> a
    106:107:java.util.Calendar parseCalendarDateWithCenturyOnly(java.util.Calendar,java.lang.String) -> c
    111:112:java.util.Calendar parseCalendarDateWithYearOnly(java.util.Calendar,java.lang.String) -> d
    116:127:java.util.Calendar parseCalendarDateWithPrecisionGreaterThanYear(java.util.Calendar,java.lang.String,java.lang.String) -> b
    131:136:java.util.Calendar parseWeekDate(java.util.Calendar,java.lang.String) -> e
    140:142:java.util.Calendar parseOrdinalDate(java.util.Calendar,java.lang.String) -> f
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    org.acra.log.ACRALog log -> log
    java.lang.String ACRA_PRIVATE_PROCESS_NAME -> ACRA_PRIVATE_PROCESS_NAME
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    java.lang.String PREF_LAST_VERSION_NR -> PREF_LAST_VERSION_NR
    java.lang.String PREF__LEGACY_ALREADY_CONVERTED_TO_4_8_0 -> PREF__LEGACY_ALREADY_CONVERTED_TO_4_8_0
    android.app.Application mApplication -> mApplication
    org.acra.config.ACRAConfiguration configProxy -> configProxy
    org.acra.ErrorReporter errorReporterSingleton -> errorReporterSingleton
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    53:53:void <init>() -> <init>
    138:148:void init(android.app.Application) -> init
    164:165:void init(android.app.Application,org.acra.config.ConfigurationBuilder) -> init
    180:184:void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean) -> init
    200:201:void init(android.app.Application,org.acra.config.ACRAConfiguration) -> init
    217:294:void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean) -> init
    301:301:boolean isInitialised() -> isInitialised
    309:312:boolean isACRASenderServiceProcess() -> isACRASenderServiceProcess
    318:320:java.lang.String getCurrentProcessName() -> getCurrentProcessName
    330:333:org.acra.ErrorReporter getErrorReporter() -> getErrorReporter
    349:356:boolean shouldDisableACRA(android.content.SharedPreferences) -> shouldDisableACRA
    366:369:android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    380:383:org.acra.config.ACRAConfiguration getConfig() -> getConfig
    388:392:void setLog(org.acra.log.ACRALog) -> setLog
    52:52:boolean access$000(android.content.SharedPreferences) -> access$000
    55:60:void <clinit>() -> <clinit>
org.acra.ACRA$1 -> org.acra.ACRA$1:
    279:279:void <init>() -> <init>
    283:287:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRAConstants -> org.acra.ACRAConstants:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    java.lang.String APPROVED_SUFFIX -> APPROVED_SUFFIX
    java.lang.String SILENT_SUFFIX -> SILENT_SUFFIX
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    java.lang.String EXTRA_REPORT_FILE -> EXTRA_REPORT_FILE
    java.lang.String EXTRA_REPORT_FILE_NAME -> EXTRA_REPORT_FILE_NAME
    java.lang.String EXTRA_REPORT_EXCEPTION -> EXTRA_REPORT_EXCEPTION
    java.lang.String EXTRA_REPORT_CONFIG -> EXTRA_REPORT_CONFIG
    java.lang.String EXTRA_FORCE_CANCEL -> EXTRA_FORCE_CANCEL
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    int TOAST_WAIT_DURATION -> TOAST_WAIT_DURATION
    java.lang.String NULL_VALUE -> NULL_VALUE
    boolean DEFAULT_REPORT_TO_ANDROID_FRAMEWORK -> DEFAULT_REPORT_TO_ANDROID_FRAMEWORK
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_CONNECTION_TIMEOUT -> DEFAULT_CONNECTION_TIMEOUT
    boolean DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START
    boolean DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START
    int DEFAULT_DROPBOX_COLLECTION_MINUTES -> DEFAULT_DROPBOX_COLLECTION_MINUTES
    boolean DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS -> DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS
    int DEFAULT_SHARED_PREFERENCES_MODE -> DEFAULT_SHARED_PREFERENCES_MODE
    int DEFAULT_NOTIFICATION_ICON -> DEFAULT_NOTIFICATION_ICON
    int DEFAULT_DIALOG_ICON -> DEFAULT_DIALOG_ICON
    int DEFAULT_DIALOG_POSITIVE_BUTTON_TEXT -> DEFAULT_DIALOG_POSITIVE_BUTTON_TEXT
    int DEFAULT_DIALOG_NEGATIVE_BUTTON_TEXT -> DEFAULT_DIALOG_NEGATIVE_BUTTON_TEXT
    int DEFAULT_RES_VALUE -> DEFAULT_RES_VALUE
    java.lang.String DEFAULT_STRING_VALUE -> DEFAULT_STRING_VALUE
    int DEFAULT_LOGCAT_LINES -> DEFAULT_LOGCAT_LINES
    int DEFAULT_BUFFER_SIZE_IN_BYTES -> DEFAULT_BUFFER_SIZE_IN_BYTES
    boolean DEFAULT_LOGCAT_FILTER_BY_PID -> DEFAULT_LOGCAT_FILTER_BY_PID
    boolean DEFAULT_SEND_REPORTS_IN_DEV_MODE -> DEFAULT_SEND_REPORTS_IN_DEV_MODE
    java.lang.String DEFAULT_APPLICATION_LOGFILE -> DEFAULT_APPLICATION_LOGFILE
    int DEFAULT_APPLICATION_LOGFILE_LINES -> DEFAULT_APPLICATION_LOGFILE_LINES
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    java.lang.String DATE_TIME_FORMAT_STRING -> DATE_TIME_FORMAT_STRING
    java.lang.String DEFAULT_CERTIFICATE_TYPE -> DEFAULT_CERTIFICATE_TYPE
    33:33:void <init>() -> <init>
    46:153:void <clinit>() -> <clinit>
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    13:13:void <init>() -> <init>
    17:19:void buildAndShowDialog(android.os.Bundle) -> buildAndShowDialog
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    boolean supportedAndroidVersion -> supportedAndroidVersion
    android.app.Application context -> context
    org.acra.config.ACRAConfiguration config -> config
    org.acra.collector.CrashReportDataFactory crashReportDataFactory -> crashReportDataFactory
    org.acra.builder.ReportExecutor reportExecutor -> reportExecutor
    org.acra.ExceptionHandlerInitializer exceptionHandlerInitializer -> exceptionHandlerInitializer
    73:125:void <init>(android.app.Application,org.acra.config.ACRAConfiguration,android.content.SharedPreferences,boolean,boolean,boolean) -> <init>
    136:137:void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    160:160:java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    193:200:void setExceptionHandlerInitializer(org.acra.ExceptionHandlerInitializer) -> setExceptionHandlerInitializer
    212:212:java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    220:221:void clearCustomData() -> clearCustomData
    234:234:java.lang.String getCustomData(java.lang.String) -> getCustomData
    248:271:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    281:286:void handleSilentException(java.lang.Throwable) -> handleSilentException
    296:302:void setEnabled(boolean) -> setEnabled
    311:321:void checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    336:343:void handleException(java.lang.Throwable,boolean) -> handleException
    356:357:void handleException(java.lang.Throwable) -> handleException
    365:369:void performDeprecatedReportPriming() -> performDeprecatedReportPriming
    374:381:org.acra.builder.ReportPrimer getReportPrimer(org.acra.config.ACRAConfiguration) -> getReportPrimer
org.acra.ErrorReporter$1 -> org.acra.ErrorReporter$1:
    org.acra.ErrorReporter this$0 -> this$0
    74:74:void <init>(org.acra.ErrorReporter) -> <init>
    77:77:void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ErrorReporter$2 -> org.acra.ErrorReporter$2:
    org.acra.ErrorReporter this$0 -> this$0
    195:195:void <init>(org.acra.ErrorReporter) -> <init>
    198:198:void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ExceptionHandlerInitializer -> org.acra.ExceptionHandlerInitializer:
    void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ReportField -> org.acra.ReportField:
    org.acra.ReportField REPORT_ID -> REPORT_ID
    org.acra.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    org.acra.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    org.acra.ReportField PACKAGE_NAME -> PACKAGE_NAME
    org.acra.ReportField FILE_PATH -> FILE_PATH
    org.acra.ReportField PHONE_MODEL -> PHONE_MODEL
    org.acra.ReportField ANDROID_VERSION -> ANDROID_VERSION
    org.acra.ReportField BUILD -> BUILD
    org.acra.ReportField BRAND -> BRAND
    org.acra.ReportField PRODUCT -> PRODUCT
    org.acra.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    org.acra.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    org.acra.ReportField BUILD_CONFIG -> BUILD_CONFIG
    org.acra.ReportField CUSTOM_DATA -> CUSTOM_DATA
    org.acra.ReportField STACK_TRACE -> STACK_TRACE
    org.acra.ReportField STACK_TRACE_HASH -> STACK_TRACE_HASH
    org.acra.ReportField INITIAL_CONFIGURATION -> INITIAL_CONFIGURATION
    org.acra.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    org.acra.ReportField DISPLAY -> DISPLAY
    org.acra.ReportField USER_COMMENT -> USER_COMMENT
    org.acra.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    org.acra.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    org.acra.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    org.acra.ReportField DROPBOX -> DROPBOX
    org.acra.ReportField LOGCAT -> LOGCAT
    org.acra.ReportField EVENTSLOG -> EVENTSLOG
    org.acra.ReportField RADIOLOG -> RADIOLOG
    org.acra.ReportField IS_SILENT -> IS_SILENT
    org.acra.ReportField DEVICE_ID -> DEVICE_ID
    org.acra.ReportField INSTALLATION_ID -> INSTALLATION_ID
    org.acra.ReportField USER_EMAIL -> USER_EMAIL
    org.acra.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    org.acra.ReportField ENVIRONMENT -> ENVIRONMENT
    org.acra.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    org.acra.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    org.acra.ReportField SETTINGS_GLOBAL -> SETTINGS_GLOBAL
    org.acra.ReportField SHARED_PREFERENCES -> SHARED_PREFERENCES
    org.acra.ReportField APPLICATION_LOG -> APPLICATION_LOG
    org.acra.ReportField MEDIA_CODEC_LIST -> MEDIA_CODEC_LIST
    org.acra.ReportField THREAD_DETAILS -> THREAD_DETAILS
    org.acra.ReportField USER_IP -> USER_IP
    org.acra.ReportField[] $VALUES -> $VALUES
    28:28:org.acra.ReportField[] values() -> values
    28:28:org.acra.ReportField valueOf(java.lang.String) -> valueOf
    28:28:void <init>(java.lang.String,int) -> <init>
    300:300:boolean containsKeyValuePairs() -> containsKeyValuePairs
    28:28:void <init>(java.lang.String,int,org.acra.ReportField$1) -> <init>
    28:290:void <clinit>() -> <clinit>
org.acra.ReportField$1 -> org.acra.ReportField$1:
    75:75:void <init>(java.lang.String,int) -> <init>
    78:78:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$10 -> org.acra.ReportField$10:
    246:246:void <init>(java.lang.String,int) -> <init>
    249:249:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$11 -> org.acra.ReportField$11:
    255:255:void <init>(java.lang.String,int) -> <init>
    258:258:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$12 -> org.acra.ReportField$12:
    264:264:void <init>(java.lang.String,int) -> <init>
    267:267:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$2 -> org.acra.ReportField$2:
    105:105:void <init>(java.lang.String,int) -> <init>
    108:108:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$3 -> org.acra.ReportField$3:
    115:115:void <init>(java.lang.String,int) -> <init>
    118:118:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$4 -> org.acra.ReportField$4:
    136:136:void <init>(java.lang.String,int) -> <init>
    139:139:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$5 -> org.acra.ReportField$5:
    147:147:void <init>(java.lang.String,int) -> <init>
    150:150:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$6 -> org.acra.ReportField$6:
    158:158:void <init>(java.lang.String,int) -> <init>
    161:161:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$7 -> org.acra.ReportField$7:
    219:219:void <init>(java.lang.String,int) -> <init>
    222:222:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$8 -> org.acra.ReportField$8:
    228:228:void <init>(java.lang.String,int) -> <init>
    231:231:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$9 -> org.acra.ReportField$9:
    237:237:void <init>(java.lang.String,int) -> <init>
    240:240:boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode DIALOG -> DIALOG
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    30:30:org.acra.ReportingInteractionMode[] values() -> values
    30:30:org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
    30:30:void <init>(java.lang.String,int) -> <init>
    30:52:void <clinit>() -> <clinit>
org.acra.annotation.ReportsCrashes -> org.acra.annotation.ReportsCrashes:
    java.lang.String formUri() -> formUri
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resDialogTheme() -> resDialogTheme
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int sharedPreferencesMode() -> sharedPreferencesMode
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    org.acra.ReportField[] customReportContent() -> customReportContent
    java.lang.String mailTo() -> mailTo
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int connectionTimeout() -> connectionTimeout
    int socketTimeout() -> socketTimeout
    boolean alsoReportToAndroidFramework() -> alsoReportToAndroidFramework
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    boolean sendReportsAtShutdown() -> sendReportsAtShutdown
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String[] excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass() -> buildConfigClass
    java.lang.Class[] reportSenderFactoryClasses() -> reportSenderFactoryClasses
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    java.lang.Class reportDialogClass() -> reportDialogClass
    java.lang.Class reportPrimerClass() -> reportPrimerClass
    org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    org.acra.sender.HttpSender$Type reportType() -> reportType
    java.lang.Class keyStoreFactoryClass() -> keyStoreFactoryClass
    java.lang.String certificatePath() -> certificatePath
    int resCertificate() -> resCertificate
    java.lang.String certificateType() -> certificateType
org.acra.builder.LastActivityManager -> org.acra.builder.LastActivityManager:
    java.lang.ref.WeakReference lastActivityCreated -> lastActivityCreated
    24:73:void <init>(android.app.Application) -> <init>
    77:77:android.app.Activity getLastActivity() -> getLastActivity
    81:82:void clearLastActivity() -> clearLastActivity
    22:22:java.lang.ref.WeakReference access$002(org.acra.builder.LastActivityManager,java.lang.ref.WeakReference) -> access$002
org.acra.builder.LastActivityManager$1 -> org.acra.builder.LastActivityManager$1:
    org.acra.builder.LastActivityManager this$0 -> this$0
    31:31:void <init>(org.acra.builder.LastActivityManager) -> <init>
    34:40:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    44:45:void onActivityStarted(android.app.Activity) -> onActivityStarted
    49:50:void onActivityResumed(android.app.Activity) -> onActivityResumed
    54:55:void onActivityPaused(android.app.Activity) -> onActivityPaused
    59:60:void onActivityStopped(android.app.Activity) -> onActivityStopped
    64:65:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    69:70:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.builder.NoOpReportPrimer -> org.acra.builder.NoOpReportPrimer:
    10:10:void <init>() -> <init>
    15:15:void primeReport(android.content.Context,org.acra.builder.ReportBuilder) -> primeReport
org.acra.builder.ReportBuilder -> org.acra.builder.ReportBuilder:
    java.lang.String message -> message
    java.lang.Thread uncaughtExceptionThread -> uncaughtExceptionThread
    java.lang.Throwable exception -> exception
    java.util.Map customData -> customData
    boolean sendSilently -> sendSilently
    boolean endApplication -> endApplication
    14:22:void <init>() -> <init>
    33:34:org.acra.builder.ReportBuilder message(java.lang.String) -> message
    39:39:java.lang.String getMessage() -> getMessage
    50:51:org.acra.builder.ReportBuilder uncaughtExceptionThread(java.lang.Thread) -> uncaughtExceptionThread
    56:56:java.lang.Thread getUncaughtExceptionThread() -> getUncaughtExceptionThread
    67:68:org.acra.builder.ReportBuilder exception(java.lang.Throwable) -> exception
    73:73:java.lang.Throwable getException() -> getException
    86:87:org.acra.builder.ReportBuilder customData(java.util.Map) -> customData
    101:102:org.acra.builder.ReportBuilder customData(java.lang.String,java.lang.String) -> customData
    107:107:java.util.Map getCustomData() -> getCustomData
    117:118:org.acra.builder.ReportBuilder sendSilently() -> sendSilently
    122:122:boolean isSendSilently() -> isSendSilently
    132:133:org.acra.builder.ReportBuilder endApplication() -> endApplication
    137:137:boolean isEndApplication() -> isEndApplication
    146:151:void build(org.acra.builder.ReportExecutor) -> build
org.acra.builder.ReportExecutor -> org.acra.builder.ReportExecutor:
    int THREAD_SLEEP_INTERVAL_MILLIS -> THREAD_SLEEP_INTERVAL_MILLIS
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    org.acra.collector.CrashReportDataFactory crashReportDataFactory -> crashReportDataFactory
    org.acra.builder.LastActivityManager lastActivityManager -> lastActivityManager
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> defaultExceptionHandler
    org.acra.builder.ReportPrimer reportPrimer -> reportPrimer
    boolean enabled -> enabled
    int mNotificationCounter -> mNotificationCounter
    56:71:void <init>(android.content.Context,org.acra.config.ACRAConfiguration,org.acra.collector.CrashReportDataFactory,org.acra.builder.LastActivityManager,java.lang.Thread$UncaughtExceptionHandler,org.acra.builder.ReportPrimer) -> <init>
    93:102:void handReportToDefaultExceptionHandler(java.lang.Thread,java.lang.Throwable) -> handReportToDefaultExceptionHandler
    105:105:boolean isEnabled() -> isEnabled
    109:110:void setEnabled(boolean) -> setEnabled
    119:223:void execute(org.acra.builder.ReportBuilder) -> execute
    226:241:void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean) -> dialogAndEnd
    247:273:void endApplication(java.lang.Thread,java.lang.Throwable) -> endApplication
    281:287:void startSendingReports(boolean) -> startSendingReports
    299:336:void createNotification(java.io.File,org.acra.builder.ReportBuilder) -> createNotification
    340:346:java.io.File getReportFileName(org.acra.collector.CrashReportData) -> getReportFileName
    366:372:void saveCrashReportFile(java.io.File,org.acra.collector.CrashReportData) -> saveCrashReportFile
    383:388:android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder) -> createCrashReportDialogIntent
    41:41:android.content.Context access$100(org.acra.builder.ReportExecutor) -> access$100
    41:41:org.acra.config.ACRAConfiguration access$200(org.acra.builder.ReportExecutor) -> access$200
    41:41:void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean) -> access$400
    61:61:void <clinit>() -> <clinit>
org.acra.builder.ReportExecutor$1 -> org.acra.builder.ReportExecutor$1:
    org.acra.builder.ReportExecutor$TimeHelper val$sentToastTimeMillis -> val$sentToastTimeMillis
    org.acra.builder.ReportExecutor this$0 -> this$0
    149:149:void <init>(org.acra.builder.ReportExecutor,org.acra.builder.ReportExecutor$TimeHelper) -> <init>
    158:162:void run() -> run
org.acra.builder.ReportExecutor$2 -> org.acra.builder.ReportExecutor$2:
    org.acra.builder.ReportExecutor$TimeHelper val$sentToastTimeMillis -> val$sentToastTimeMillis
    org.acra.builder.ReportBuilder val$reportBuilder -> val$reportBuilder
    java.io.File val$reportFile -> val$reportFile
    boolean val$showDirectDialog -> val$showDirectDialog
    org.acra.builder.ReportExecutor this$0 -> this$0
    200:200:void <init>(org.acra.builder.ReportExecutor,org.acra.builder.ReportExecutor$TimeHelper,org.acra.builder.ReportBuilder,java.io.File,boolean) -> <init>
    204:218:void run() -> run
org.acra.builder.ReportExecutor$TimeHelper -> org.acra.builder.ReportExecutor$TimeHelper:
    java.lang.Long initialTimeMillis -> initialTimeMillis
    76:76:void <init>() -> <init>
    81:82:void setInitialTimeMillis(long) -> setInitialTimeMillis
    88:88:long getElapsedTime() -> getElapsedTime
    76:76:void <init>(org.acra.builder.ReportExecutor$1) -> <init>
    76:76:java.lang.Long access$300(org.acra.builder.ReportExecutor$TimeHelper) -> access$300
org.acra.builder.ReportPrimer -> org.acra.builder.ReportPrimer:
    void primeReport(android.content.Context,org.acra.builder.ReportBuilder) -> primeReport
org.acra.collections.BoundedLinkedList -> org.acra.collections.BoundedLinkedList:
    int maxSize -> maxSize
    35:37:void <init>(int) -> <init>
    46:49:boolean add(java.lang.Object) -> add
    59:63:void add(int,java.lang.Object) -> add
    72:85:boolean addAll(java.util.Collection) -> addAll
    101:104:boolean addAll(int,java.util.Collection) -> addAll
    115:115:void addFirst(java.lang.Object) -> addFirst
    125:126:void addLast(java.lang.Object) -> addLast
    136:140:java.lang.String toString() -> toString
    145:145:boolean offer(java.lang.Object) -> offer
    150:151:boolean offerFirst(java.lang.Object) -> offerFirst
    156:156:boolean offerLast(java.lang.Object) -> offerLast
    161:162:void push(java.lang.Object) -> push
org.acra.collections.ImmutableList -> org.acra.collections.ImmutableList:
    java.util.List mList -> mList
    39:40:void <init>(java.lang.Object[]) -> <init>
    42:44:void <init>(java.util.Collection) -> <init>
    48:48:void add(int,java.lang.Object) -> add
    53:53:boolean add(java.lang.Object) -> add
    58:58:boolean addAll(int,java.util.Collection) -> addAll
    63:63:boolean addAll(java.util.Collection) -> addAll
    68:68:void clear() -> clear
    73:73:boolean contains(java.lang.Object) -> contains
    78:78:boolean containsAll(java.util.Collection) -> containsAll
    83:83:java.lang.Object get(int) -> get
    88:88:int indexOf(java.lang.Object) -> indexOf
    93:93:boolean isEmpty() -> isEmpty
    99:99:java.util.Iterator iterator() -> iterator
    104:104:int lastIndexOf(java.lang.Object) -> lastIndexOf
    109:109:java.util.ListIterator listIterator() -> listIterator
    115:115:java.util.ListIterator listIterator(int) -> listIterator
    120:120:java.lang.Object remove(int) -> remove
    125:125:boolean remove(java.lang.Object) -> remove
    130:130:boolean removeAll(java.util.Collection) -> removeAll
    135:135:boolean retainAll(java.util.Collection) -> retainAll
    140:140:java.lang.Object set(int,java.lang.Object) -> set
    145:145:int size() -> size
    151:151:java.util.List subList(int,int) -> subList
    157:157:java.lang.Object[] toArray() -> toArray
    164:164:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.acra.collections.ImmutableMap -> org.acra.collections.ImmutableMap:
    java.util.Map mMap -> mMap
    36:38:void <init>(java.util.Map) -> <init>
    42:42:void clear() -> clear
    47:47:boolean containsKey(java.lang.Object) -> containsKey
    52:52:boolean containsValue(java.lang.Object) -> containsValue
    58:63:java.util.Set entrySet() -> entrySet
    68:68:java.lang.Object get(java.lang.Object) -> get
    73:73:boolean isEmpty() -> isEmpty
    79:79:java.util.Set keySet() -> keySet
    84:84:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    89:89:void putAll(java.util.Map) -> putAll
    94:94:java.lang.Object remove(java.lang.Object) -> remove
    99:99:int size() -> size
    105:105:java.util.Collection values() -> values
org.acra.collections.ImmutableMap$ImmutableEntryWrapper -> org.acra.collections.ImmutableMap$ImmutableEntryWrapper:
    java.util.Map$Entry mEntry -> mEntry
    111:113:void <init>(java.util.Map$Entry) -> <init>
    117:117:java.lang.Object getKey() -> getKey
    122:122:java.lang.Object getValue() -> getValue
    127:127:java.lang.Object setValue(java.lang.Object) -> setValue
org.acra.collections.ImmutableSet -> org.acra.collections.ImmutableSet:
    java.util.Set mSet -> mSet
    38:39:void <init>(java.lang.Object[]) -> <init>
    41:43:void <init>(java.util.Collection) -> <init>
    47:47:boolean add(java.lang.Object) -> add
    52:52:boolean addAll(java.util.Collection) -> addAll
    57:57:void clear() -> clear
    62:62:boolean contains(java.lang.Object) -> contains
    67:67:boolean containsAll(java.util.Collection) -> containsAll
    72:72:boolean isEmpty() -> isEmpty
    78:78:java.util.Iterator iterator() -> iterator
    83:83:boolean remove(java.lang.Object) -> remove
    88:88:boolean removeAll(java.util.Collection) -> removeAll
    93:93:boolean retainAll(java.util.Collection) -> retainAll
    98:98:int size() -> size
    104:104:java.lang.Object[] toArray() -> toArray
    111:111:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.acra.collections.ImmutableSet$Builder -> org.acra.collections.ImmutableSet$Builder:
    java.util.Set mSet -> mSet
    117:119:void <init>() -> <init>
    122:123:void add(java.lang.Object) -> add
    126:126:org.acra.collections.ImmutableSet build() -> build
org.acra.collections.UnmodifiableIteratorWrapper -> org.acra.collections.UnmodifiableIteratorWrapper:
    java.util.Iterator mIterator -> mIterator
    29:31:void <init>(java.util.Iterator) -> <init>
    35:35:boolean hasNext() -> hasNext
    40:40:java.lang.Object next() -> next
    45:45:void remove() -> remove
org.acra.collections.UnmodifiableListIteratorWrapper -> org.acra.collections.UnmodifiableListIteratorWrapper:
    java.util.ListIterator mIterator -> mIterator
    29:31:void <init>(java.util.ListIterator) -> <init>
    35:35:void add(java.lang.Object) -> add
    40:40:boolean hasNext() -> hasNext
    45:45:boolean hasPrevious() -> hasPrevious
    50:50:java.lang.Object next() -> next
    55:55:int nextIndex() -> nextIndex
    60:60:java.lang.Object previous() -> previous
    65:65:int previousIndex() -> previousIndex
    70:70:void remove() -> remove
    75:75:void set(java.lang.Object) -> set
org.acra.collector.ConfigurationCollector -> org.acra.collector.ConfigurationCollector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    java.util.Map mValueArrays -> mValueArrays
    60:114:void <init>() -> <init>
    127:146:java.lang.String toString(android.content.res.Configuration) -> toString
    165:184:java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    203:218:java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
    230:235:java.lang.String collectConfiguration(android.content.Context) -> collectConfiguration
org.acra.collector.CrashReportData -> org.acra.collector.CrashReportData:
    long serialVersionUID -> serialVersionUID
    44:45:void <init>() -> <init>
    54:54:java.lang.String getProperty(org.acra.ReportField) -> getProperty
    59:59:org.json.JSONObject toJSON() -> toJSON
org.acra.collector.CrashReportDataFactory -> org.acra.collector.CrashReportDataFactory:
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    android.content.SharedPreferences prefs -> prefs
    java.util.Map customParameters -> customParameters
    java.util.Calendar appStartDate -> appStartDate
    java.lang.String initialConfiguration -> initialConfiguration
    102:114:void <init>(android.content.Context,org.acra.config.ACRAConfiguration,android.content.SharedPreferences,java.util.Calendar,java.lang.String) -> <init>
    131:131:java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    141:141:java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    148:149:void clearCustomData() -> clearCustomData
    158:158:java.lang.String getCustomData(java.lang.String) -> getCustomData
    169:544:org.acra.collector.CrashReportData createCrashData(org.acra.builder.ReportBuilder) -> createCrashData
    555:577:java.lang.String createCustomInfoString(java.util.Map) -> createCustomInfoString
    582:599:java.lang.String getStackTrace(java.lang.String,java.lang.Throwable) -> getStackTrace
    604:615:java.lang.String getStackTraceHash(java.lang.Throwable) -> getStackTraceHash
    620:632:java.lang.Class getBuildConfigClass() -> getBuildConfigClass
org.acra.collector.DeviceFeaturesCollector -> org.acra.collector.DeviceFeaturesCollector:
    33:33:void <init>() -> <init>
    38:57:java.lang.String getFeatures(android.content.Context) -> getFeatures
org.acra.collector.DisplayManagerCollector -> org.acra.collector.DisplayManagerCollector:
    android.util.SparseArray mFlagsNames -> mFlagsNames
    18:18:void <init>() -> <init>
    25:44:java.lang.String collectDisplays(android.content.Context) -> collectDisplays
    49:67:java.lang.Object collectDisplayData(android.view.Display) -> collectDisplayData
    72:75:java.lang.String collectIsValid(android.view.Display) -> collectIsValid
    80:80:java.lang.String collectRotation(android.view.Display) -> collectRotation
    85:95:java.lang.String rotationToString(int) -> rotationToString
    101:107:java.lang.String collectRectSize(android.view.Display) -> collectRectSize
    112:118:java.lang.String collectSize(android.view.Display) -> collectSize
    122:128:java.lang.String collectRealSize(android.view.Display) -> collectRealSize
    133:140:java.lang.String collectCurrentSizeRange(android.view.Display) -> collectCurrentSizeRange
    145:157:java.lang.String collectFlags(android.view.Display) -> collectFlags
    162:165:java.lang.String collectName(android.view.Display) -> collectName
    170:172:java.lang.String collectMetrics(android.view.Display) -> collectMetrics
    177:182:java.lang.String collectRealMetrics(android.view.Display) -> collectRealMetrics
    187:187:java.lang.String collectMetrics(java.lang.String,android.util.DisplayMetrics) -> collectMetrics
    209:222:java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
    20:20:void <clinit>() -> <clinit>
org.acra.collector.DropBoxCollector -> org.acra.collector.DropBoxCollector:
    java.lang.String[] SYSTEM_TAGS -> SYSTEM_TAGS
    java.lang.String NO_RESULT -> NO_RESULT
    java.text.SimpleDateFormat dateFormat -> dateFormat
    44:52:void <init>() -> <init>
    65:113:java.lang.String read(android.content.Context,org.acra.config.ACRAConfiguration) -> read
    46:46:void <clinit>() -> <clinit>
org.acra.collector.DumpSysCollector -> org.acra.collector.DumpSysCollector:
    36:36:void <init>() -> <init>
    47:61:java.lang.String collectMemInfo() -> collectMemInfo
org.acra.collector.LogCatCollector -> org.acra.collector.LogCatCollector:
    int DEFAULT_TAIL_COUNT -> DEFAULT_TAIL_COUNT
    44:44:void <init>() -> <init>
    65:127:java.lang.String collectLogCat(org.acra.config.ACRAConfiguration,java.lang.String) -> collectLogCat
org.acra.collector.LogCatCollector$1 -> org.acra.collector.LogCatCollector$1:
    java.lang.Process val$process -> val$process
    org.acra.collector.LogCatCollector this$0 -> this$0
    105:105:void <init>(org.acra.collector.LogCatCollector,java.lang.Process) -> <init>
    109:112:void run() -> run
org.acra.collector.LogCatCollector$2 -> org.acra.collector.LogCatCollector$2:
    java.lang.String val$finalMyPidStr -> val$finalMyPidStr
    org.acra.collector.LogCatCollector this$0 -> this$0
    116:116:void <init>(org.acra.collector.LogCatCollector,java.lang.String) -> <init>
    119:119:boolean apply(java.lang.String) -> apply
    116:116:boolean apply(java.lang.Object) -> apply
org.acra.collector.LogFileCollector -> org.acra.collector.LogFileCollector:
    37:37:void <init>() -> <init>
    53:53:java.lang.String collectLogFile(android.content.Context,java.lang.String,int) -> collectLogFile
    60:73:java.io.InputStream getStream(android.content.Context,java.lang.String) -> getStream
org.acra.collector.MediaCodecListCollector -> org.acra.collector.MediaCodecListCollector:
    java.lang.String COLOR_FORMAT_PREFIX -> COLOR_FORMAT_PREFIX
    java.lang.String[] MPEG4_TYPES -> MPEG4_TYPES
    java.lang.String[] AVC_TYPES -> AVC_TYPES
    java.lang.String[] H263_TYPES -> H263_TYPES
    java.lang.String[] AAC_TYPES -> AAC_TYPES
    android.util.SparseArray mColorFormatValues -> mColorFormatValues
    android.util.SparseArray mAVCLevelValues -> mAVCLevelValues
    android.util.SparseArray mAVCProfileValues -> mAVCProfileValues
    android.util.SparseArray mH263LevelValues -> mH263LevelValues
    android.util.SparseArray mH263ProfileValues -> mH263ProfileValues
    android.util.SparseArray mMPEG4LevelValues -> mMPEG4LevelValues
    android.util.SparseArray mMPEG4ProfileValues -> mMPEG4ProfileValues
    android.util.SparseArray mAACProfileValues -> mAACProfileValues
    38:38:void <init>() -> <init>
    114:145:java.lang.String collectMediaCodecList() -> collectMediaCodecList
    161:221:java.lang.String collectCapabilitiesForType(android.media.MediaCodecInfo,java.lang.String) -> collectCapabilitiesForType
    234:256:org.acra.collector.MediaCodecListCollector$CodecType identifyCodecType(android.media.MediaCodecInfo) -> identifyCodecType
    45:103:void <clinit>() -> <clinit>
org.acra.collector.MediaCodecListCollector$1 -> org.acra.collector.MediaCodecListCollector$1:
    int[] $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType -> $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType
    194:194:void <clinit>() -> <clinit>
org.acra.collector.MediaCodecListCollector$CodecType -> org.acra.collector.MediaCodecListCollector$CodecType:
    org.acra.collector.MediaCodecListCollector$CodecType AVC -> AVC
    org.acra.collector.MediaCodecListCollector$CodecType H263 -> H263
    org.acra.collector.MediaCodecListCollector$CodecType MPEG4 -> MPEG4
    org.acra.collector.MediaCodecListCollector$CodecType AAC -> AAC
    org.acra.collector.MediaCodecListCollector$CodecType[] $VALUES -> $VALUES
    39:39:org.acra.collector.MediaCodecListCollector$CodecType[] values() -> values
    39:39:org.acra.collector.MediaCodecListCollector$CodecType valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:40:void <clinit>() -> <clinit>
org.acra.collector.ReflectionCollector -> org.acra.collector.ReflectionCollector:
    37:37:void <init>() -> <init>
    49:74:java.lang.String collectConstants(java.lang.Class,java.lang.String) -> collectConstants
    85:106:java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
    111:111:java.lang.String collectConstants(java.lang.Class) -> collectConstants
org.acra.collector.SettingsCollector -> org.acra.collector.SettingsCollector:
    java.lang.String ERROR -> ERROR
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    48:51:void <init>(android.content.Context,org.acra.config.ACRAConfiguration) -> <init>
    62:82:java.lang.String collectSystemSettings() -> collectSystemSettings
    94:111:java.lang.String collectSecureSettings() -> collectSecureSettings
    123:145:java.lang.String collectGlobalSettings() -> collectGlobalSettings
    149:157:boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
org.acra.collector.SharedPreferencesCollector -> org.acra.collector.SharedPreferencesCollector:
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    42:45:void <init>(android.content.Context,org.acra.config.ACRAConfiguration) -> <init>
    58:96:java.lang.String collect() -> collect
    107:112:boolean filteredKey(java.lang.String) -> filteredKey
org.acra.collector.ThreadCollector -> org.acra.collector.ThreadCollector:
    29:29:void <init>() -> <init>
    40:51:java.lang.String collect(java.lang.Thread) -> collect
org.acra.config.ACRAConfiguration -> org.acra.config.ACRAConfiguration:
    org.acra.collections.ImmutableSet additionalDropBoxTags -> additionalDropBoxTags
    org.acra.collections.ImmutableSet additionalSharedPreferences -> additionalSharedPreferences
    int connectionTimeout -> connectionTimeout
    org.acra.collections.ImmutableSet reportContent -> reportContent
    boolean deleteUnapprovedReportsOnApplicationStart -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart -> deleteOldUnsentReportsOnApplicationStart
    int dropboxCollectionMinutes -> dropboxCollectionMinutes
    boolean alsoReportToAndroidFramework -> alsoReportToAndroidFramework
    java.lang.String formUri -> formUri
    java.lang.String formUriBasicAuthLogin -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword -> formUriBasicAuthPassword
    boolean includeDropBoxSystemTags -> includeDropBoxSystemTags
    org.acra.collections.ImmutableList logcatArguments -> logcatArguments
    java.lang.String mailTo -> mailTo
    org.acra.ReportingInteractionMode reportingInteractionMode -> reportingInteractionMode
    java.lang.Class reportDialogClass -> reportDialogClass
    java.lang.Class reportPrimerClass -> reportPrimerClass
    int resDialogPositiveButtonText -> resDialogPositiveButtonText
    int resDialogNegativeButtonText -> resDialogNegativeButtonText
    int resDialogCommentPrompt -> resDialogCommentPrompt
    int resDialogEmailPrompt -> resDialogEmailPrompt
    int resDialogIcon -> resDialogIcon
    int resDialogOkToast -> resDialogOkToast
    int resDialogText -> resDialogText
    int resDialogTitle -> resDialogTitle
    int resDialogTheme -> resDialogTheme
    int resNotifIcon -> resNotifIcon
    int resNotifText -> resNotifText
    int resNotifTickerText -> resNotifTickerText
    int resNotifTitle -> resNotifTitle
    int resToastText -> resToastText
    int sharedPreferencesMode -> sharedPreferencesMode
    java.lang.String sharedPreferencesName -> sharedPreferencesName
    int socketTimeout -> socketTimeout
    boolean logcatFilterByPid -> logcatFilterByPid
    boolean sendReportsInDevMode -> sendReportsInDevMode
    org.acra.collections.ImmutableSet excludeMatchingSharedPreferencesKeys -> excludeMatchingSharedPreferencesKeys
    org.acra.collections.ImmutableSet excludeMatchingSettingsKeys -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass -> buildConfigClass
    java.lang.String applicationLogFile -> applicationLogFile
    int applicationLogFileLines -> applicationLogFileLines
    org.acra.sender.HttpSender$Method httpMethod -> httpMethod
    org.acra.sender.HttpSender$Type reportType -> reportType
    org.acra.collections.ImmutableMap httpHeaders -> httpHeaders
    java.lang.Class keyStoreFactoryClass -> keyStoreFactoryClass
    org.acra.collections.ImmutableSet reportSenderFactoryClasses -> reportSenderFactoryClasses
    int resCertificate -> resCertificate
    java.lang.String certificatePath -> certificatePath
    java.lang.String certificateType -> certificateType
    118:168:void <init>(org.acra.config.ConfigurationBuilder) -> <init>
    179:179:org.acra.collections.ImmutableMap getHttpHeaders() -> getHttpHeaders
    187:187:org.acra.collections.ImmutableSet getReportFields() -> getReportFields
    192:192:org.acra.collections.ImmutableSet additionalDropBoxTags() -> additionalDropBoxTags
    197:197:org.acra.collections.ImmutableSet additionalSharedPreferences() -> additionalSharedPreferences
    201:201:int connectionTimeout() -> connectionTimeout
    205:205:boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    209:209:boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    213:213:int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    217:217:boolean alsoReportToAndroidFramework() -> alsoReportToAndroidFramework
    222:222:java.lang.String formUri() -> formUri
    227:227:java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    232:232:java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    236:236:boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    241:241:org.acra.collections.ImmutableList logcatArguments() -> logcatArguments
    246:246:java.lang.String mailTo() -> mailTo
    251:251:org.acra.ReportingInteractionMode mode() -> mode
    256:256:int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    261:261:int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    266:266:int resDialogCommentPrompt() -> resDialogCommentPrompt
    271:271:int resDialogEmailPrompt() -> resDialogEmailPrompt
    276:276:int resDialogIcon() -> resDialogIcon
    281:281:int resDialogOkToast() -> resDialogOkToast
    286:286:int resDialogText() -> resDialogText
    291:291:int resDialogTitle() -> resDialogTitle
    296:296:int resDialogTheme() -> resDialogTheme
    301:301:int resNotifIcon() -> resNotifIcon
    306:306:int resNotifText() -> resNotifText
    311:311:int resNotifTickerText() -> resNotifTickerText
    316:316:int resNotifTitle() -> resNotifTitle
    321:321:int resToastText() -> resToastText
    325:325:int sharedPreferencesMode() -> sharedPreferencesMode
    330:330:java.lang.String sharedPreferencesName() -> sharedPreferencesName
    334:334:int socketTimeout() -> socketTimeout
    338:338:boolean logcatFilterByPid() -> logcatFilterByPid
    342:342:boolean sendReportsInDevMode() -> sendReportsInDevMode
    347:347:org.acra.collections.ImmutableSet excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    352:352:org.acra.collections.ImmutableSet excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    363:363:java.lang.Class buildConfigClass() -> buildConfigClass
    368:368:java.lang.String applicationLogFile() -> applicationLogFile
    372:372:int applicationLogFileLines() -> applicationLogFileLines
    377:377:java.lang.Class reportDialogClass() -> reportDialogClass
    382:382:java.lang.Class reportPrimerClass() -> reportPrimerClass
    387:387:org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    392:392:org.acra.sender.HttpSender$Type reportType() -> reportType
    397:397:org.acra.collections.ImmutableSet reportSenderFactoryClasses() -> reportSenderFactoryClasses
    402:402:java.lang.Class keyStoreFactoryClass() -> keyStoreFactoryClass
    407:407:int resCertificate() -> resCertificate
    411:411:java.lang.String certificatePath() -> certificatePath
    415:415:java.lang.String certificateType() -> certificateType
org.acra.config.ACRAConfigurationException -> org.acra.config.ACRAConfigurationException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>(java.lang.String) -> <init>
org.acra.config.ConfigurationBuilder -> org.acra.config.ConfigurationBuilder:
    java.lang.Class annotationType -> annotationType
    java.lang.String[] additionalDropBoxTags -> additionalDropBoxTags
    java.lang.String[] additionalSharedPreferences -> additionalSharedPreferences
    java.lang.Integer connectionTimeout -> connectionTimeout
    org.acra.ReportField[] customReportContent -> customReportContent
    java.util.Map reportContentChanges -> reportContentChanges
    java.lang.Boolean deleteUnapprovedReportsOnApplicationStart -> deleteUnapprovedReportsOnApplicationStart
    java.lang.Boolean deleteOldUnsentReportsOnApplicationStart -> deleteOldUnsentReportsOnApplicationStart
    java.lang.Integer dropboxCollectionMinutes -> dropboxCollectionMinutes
    java.lang.Boolean alsoReportToAndroidFramework -> alsoReportToAndroidFramework
    java.lang.String formUri -> formUri
    java.lang.String formUriBasicAuthLogin -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword -> formUriBasicAuthPassword
    java.lang.Boolean includeDropBoxSystemTags -> includeDropBoxSystemTags
    java.lang.String[] logcatArguments -> logcatArguments
    java.lang.String mailTo -> mailTo
    org.acra.ReportingInteractionMode reportingInteractionMode -> reportingInteractionMode
    java.lang.Class reportDialogClass -> reportDialogClass
    java.lang.Class reportPrimerClass -> reportPrimerClass
    java.lang.Integer resDialogPositiveButtonText -> resDialogPositiveButtonText
    java.lang.Integer resDialogNegativeButtonText -> resDialogNegativeButtonText
    java.lang.Integer resDialogCommentPrompt -> resDialogCommentPrompt
    java.lang.Integer resDialogEmailPrompt -> resDialogEmailPrompt
    java.lang.Integer resDialogIcon -> resDialogIcon
    java.lang.Integer resDialogOkToast -> resDialogOkToast
    java.lang.Integer resDialogText -> resDialogText
    java.lang.Integer resDialogTitle -> resDialogTitle
    java.lang.Integer resDialogTheme -> resDialogTheme
    java.lang.Integer resNotifIcon -> resNotifIcon
    java.lang.Integer resNotifText -> resNotifText
    java.lang.Integer resNotifTickerText -> resNotifTickerText
    java.lang.Integer resNotifTitle -> resNotifTitle
    java.lang.Integer resToastText -> resToastText
    java.lang.Integer sharedPreferencesMode -> sharedPreferencesMode
    java.lang.String sharedPreferencesName -> sharedPreferencesName
    java.lang.Integer socketTimeout -> socketTimeout
    java.lang.Boolean logcatFilterByPid -> logcatFilterByPid
    java.lang.Boolean sendReportsInDevMode -> sendReportsInDevMode
    java.lang.String[] excludeMatchingSharedPreferencesKeys -> excludeMatchingSharedPreferencesKeys
    java.lang.String[] excludeMatchingSettingsKeys -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass -> buildConfigClass
    java.lang.String applicationLogFile -> applicationLogFile
    java.lang.Integer applicationLogFileLines -> applicationLogFileLines
    org.acra.sender.HttpSender$Method httpMethod -> httpMethod
    org.acra.sender.HttpSender$Type reportType -> reportType
    java.util.Map httpHeaders -> httpHeaders
    java.lang.Class keyStoreFactoryClass -> keyStoreFactoryClass
    java.lang.Class[] reportSenderFactoryClasses -> reportSenderFactoryClasses
    java.lang.Integer resCertificate -> resCertificate
    java.lang.String certificatePath -> certificatePath
    java.lang.String certificateType -> certificateType
    70:187:void <init>(android.app.Application) -> <init>
    201:224:org.acra.config.ACRAConfiguration build() -> build
    236:238:org.acra.config.ConfigurationBuilder setHttpHeaders(java.util.Map) -> setHttpHeaders
    247:248:org.acra.config.ConfigurationBuilder setAdditionalDropboxTags(java.lang.String[]) -> setAdditionalDropboxTags
    257:258:org.acra.config.ConfigurationBuilder setAdditionalSharedPreferences(java.lang.String[]) -> setAdditionalSharedPreferences
    267:268:org.acra.config.ConfigurationBuilder setConnectionTimeout(int) -> setConnectionTimeout
    277:278:org.acra.config.ConfigurationBuilder setCustomReportContent(org.acra.ReportField[]) -> setCustomReportContent
    290:291:org.acra.config.ConfigurationBuilder setReportField(org.acra.ReportField,boolean) -> setReportField
    300:301:org.acra.config.ConfigurationBuilder setDeleteUnapprovedReportsOnApplicationStart(boolean) -> setDeleteUnapprovedReportsOnApplicationStart
    310:311:org.acra.config.ConfigurationBuilder setDeleteOldUnsentReportsOnApplicationStart(boolean) -> setDeleteOldUnsentReportsOnApplicationStart
    320:321:org.acra.config.ConfigurationBuilder setDropboxCollectionMinutes(int) -> setDropboxCollectionMinutes
    332:333:org.acra.config.ConfigurationBuilder setAlsoReportToAndroidFramework(boolean) -> setAlsoReportToAndroidFramework
    344:345:org.acra.config.ConfigurationBuilder setFormUri(java.lang.String) -> setFormUri
    354:355:org.acra.config.ConfigurationBuilder setFormUriBasicAuthLogin(java.lang.String) -> setFormUriBasicAuthLogin
    364:365:org.acra.config.ConfigurationBuilder setFormUriBasicAuthPassword(java.lang.String) -> setFormUriBasicAuthPassword
    374:375:org.acra.config.ConfigurationBuilder setIncludeDropboxSystemTags(boolean) -> setIncludeDropboxSystemTags
    384:385:org.acra.config.ConfigurationBuilder setLogcatArguments(java.lang.String[]) -> setLogcatArguments
    396:397:org.acra.config.ConfigurationBuilder setMailTo(java.lang.String) -> setMailTo
    409:410:org.acra.config.ConfigurationBuilder setMode(org.acra.ReportingInteractionMode) -> setMode
    421:422:org.acra.config.ConfigurationBuilder setReportingInteractionMode(org.acra.ReportingInteractionMode) -> setReportingInteractionMode
    427:428:org.acra.config.ConfigurationBuilder setResDialogPositiveButtonText(int) -> setResDialogPositiveButtonText
    433:434:org.acra.config.ConfigurationBuilder setResDialogNegativeButtonText(int) -> setResDialogNegativeButtonText
    439:440:org.acra.config.ConfigurationBuilder setReportDialogClass(java.lang.Class) -> setReportDialogClass
    453:454:org.acra.config.ConfigurationBuilder setResDialogCommentPrompt(int) -> setResDialogCommentPrompt
    467:468:org.acra.config.ConfigurationBuilder setResDialogEmailPrompt(int) -> setResDialogEmailPrompt
    481:482:org.acra.config.ConfigurationBuilder setResDialogIcon(int) -> setResDialogIcon
    495:496:org.acra.config.ConfigurationBuilder setResDialogOkToast(int) -> setResDialogOkToast
    509:510:org.acra.config.ConfigurationBuilder setResDialogText(int) -> setResDialogText
    523:524:org.acra.config.ConfigurationBuilder setResDialogTitle(int) -> setResDialogTitle
    533:534:org.acra.config.ConfigurationBuilder setResDialogTheme(int) -> setResDialogTheme
    547:548:org.acra.config.ConfigurationBuilder setResNotifIcon(int) -> setResNotifIcon
    561:562:org.acra.config.ConfigurationBuilder setResNotifText(int) -> setResNotifText
    576:577:org.acra.config.ConfigurationBuilder setResNotifTickerText(int) -> setResNotifTickerText
    590:591:org.acra.config.ConfigurationBuilder setResNotifTitle(int) -> setResNotifTitle
    604:605:org.acra.config.ConfigurationBuilder setResToastText(int) -> setResToastText
    614:615:org.acra.config.ConfigurationBuilder setSharedPreferenceMode(int) -> setSharedPreferenceMode
    624:625:org.acra.config.ConfigurationBuilder setSharedPreferenceName(java.lang.String) -> setSharedPreferenceName
    634:635:org.acra.config.ConfigurationBuilder setSocketTimeout(int) -> setSocketTimeout
    645:646:org.acra.config.ConfigurationBuilder setLogcatFilterByPid(boolean) -> setLogcatFilterByPid
    656:657:org.acra.config.ConfigurationBuilder setSendReportsInDevMode(boolean) -> setSendReportsInDevMode
    667:667:org.acra.config.ConfigurationBuilder setSendReportsAtShutdown(boolean) -> setSendReportsAtShutdown
    678:679:org.acra.config.ConfigurationBuilder setExcludeMatchingSharedPreferencesKeys(java.lang.String[]) -> setExcludeMatchingSharedPreferencesKeys
    690:691:org.acra.config.ConfigurationBuilder setExcludeMatchingSettingsKeys(java.lang.String[]) -> setExcludeMatchingSettingsKeys
    696:697:org.acra.config.ConfigurationBuilder setBuildConfigClass(java.lang.Class) -> setBuildConfigClass
    707:708:org.acra.config.ConfigurationBuilder setApplicationLogFile(java.lang.String) -> setApplicationLogFile
    719:720:org.acra.config.ConfigurationBuilder setApplicationLogFileLines(int) -> setApplicationLogFileLines
    729:730:org.acra.config.ConfigurationBuilder setHttpMethod(org.acra.sender.HttpSender$Method) -> setHttpMethod
    740:741:org.acra.config.ConfigurationBuilder setReportType(org.acra.sender.HttpSender$Type) -> setReportType
    750:751:org.acra.config.ConfigurationBuilder setKeyStoreFactoryClass(java.lang.Class) -> setKeyStoreFactoryClass
    760:761:org.acra.config.ConfigurationBuilder setCertificate(int) -> setCertificate
    770:771:org.acra.config.ConfigurationBuilder setCertificate(java.lang.String) -> setCertificate
    780:781:org.acra.config.ConfigurationBuilder setCertificateType(java.lang.String) -> setCertificateType
    787:788:org.acra.config.ConfigurationBuilder setReportSenderFactoryClasses(java.lang.Class[]) -> setReportSenderFactoryClasses
    793:794:org.acra.config.ConfigurationBuilder setReportPrimerClass(java.lang.Class) -> setReportPrimerClass
    802:805:java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    810:813:java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    821:821:java.lang.Class annotationType() -> annotationType
    825:828:int connectionTimeout() -> connectionTimeout
    833:853:java.util.Set reportContent() -> reportContent
    857:860:boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    864:867:boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    871:874:int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    878:881:boolean alsoReportToAndroidFramework() -> alsoReportToAndroidFramework
    886:889:java.lang.String formUri() -> formUri
    894:897:java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    902:905:java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    909:912:boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    917:920:java.lang.String[] logcatArguments() -> logcatArguments
    925:928:java.lang.String mailTo() -> mailTo
    933:936:org.acra.ReportingInteractionMode reportingInteractionMode() -> reportingInteractionMode
    941:944:int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    949:952:int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    957:960:int resDialogCommentPrompt() -> resDialogCommentPrompt
    965:968:int resDialogEmailPrompt() -> resDialogEmailPrompt
    973:976:int resDialogIcon() -> resDialogIcon
    981:984:int resDialogOkToast() -> resDialogOkToast
    989:992:int resDialogText() -> resDialogText
    997:1000:int resDialogTitle() -> resDialogTitle
    1005:1008:int resDialogTheme() -> resDialogTheme
    1013:1016:int resNotifIcon() -> resNotifIcon
    1021:1024:int resNotifText() -> resNotifText
    1029:1032:int resNotifTickerText() -> resNotifTickerText
    1037:1040:int resNotifTitle() -> resNotifTitle
    1045:1048:int resToastText() -> resToastText
    1052:1055:int sharedPreferencesMode() -> sharedPreferencesMode
    1060:1064:java.lang.String sharedPreferencesName() -> sharedPreferencesName
    1068:1071:int socketTimeout() -> socketTimeout
    1075:1078:boolean logcatFilterByPid() -> logcatFilterByPid
    1082:1085:boolean sendReportsInDevMode() -> sendReportsInDevMode
    1090:1093:java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    1098:1101:java.lang.String[] excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    1110:1113:java.lang.Class buildConfigClass() -> buildConfigClass
    1118:1121:java.lang.String applicationLogFile() -> applicationLogFile
    1125:1128:int applicationLogFileLines() -> applicationLogFileLines
    1133:1136:java.lang.Class reportDialogClass() -> reportDialogClass
    1141:1144:java.lang.Class reportPrimerClass() -> reportPrimerClass
    1149:1152:org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    1157:1160:org.acra.sender.HttpSender$Type reportType() -> reportType
    1165:1169:java.lang.Class[] reportSenderFactoryClasses() -> reportSenderFactoryClasses
    1174:1177:java.lang.Class keyStoreFactoryClass() -> keyStoreFactoryClass
    1182:1185:int resCertificate() -> resCertificate
    1190:1193:java.lang.String certificatePath() -> certificatePath
    1198:1201:java.lang.String certificateType() -> certificateType
    1206:1206:java.util.Map httpHeaders() -> httpHeaders
org.acra.config.ConfigurationBuilder$1 -> org.acra.config.ConfigurationBuilder$1:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> $SwitchMap$org$acra$ReportingInteractionMode
    201:201:void <clinit>() -> <clinit>
org.acra.dialog.BaseCrashReportDialog -> org.acra.dialog.BaseCrashReportDialog:
    java.io.File reportFile -> reportFile
    org.acra.config.ACRAConfiguration config -> config
    java.lang.Throwable exception -> exception
    42:42:void <init>() -> <init>
    58:83:void onCreate(android.os.Bundle) -> onCreate
    93:93:void init(android.os.Bundle) -> init
    100:101:void cancelReports() -> cancelReports
    111:131:void sendCrash(java.lang.String,java.lang.String) -> sendCrash
    134:134:org.acra.config.ACRAConfiguration getConfig() -> getConfig
    138:138:java.lang.Throwable getException() -> getException
org.acra.dialog.CrashReportDialog -> org.acra.dialog.CrashReportDialog:
    java.lang.String STATE_EMAIL -> STATE_EMAIL
    java.lang.String STATE_COMMENT -> STATE_COMMENT
    int PADDING -> PADDING
    android.widget.LinearLayout scrollable -> scrollable
    android.widget.EditText userCommentView -> userCommentView
    android.widget.EditText userEmailView -> userEmailView
    org.acra.prefs.SharedPreferencesFactory sharedPreferencesFactory -> sharedPreferencesFactory
    android.app.AlertDialog mDialog -> mDialog
    29:29:void <init>() -> <init>
    45:52:void init(android.os.Bundle) -> init
    60:76:void buildAndShowDialog(android.os.Bundle) -> buildAndShowDialog
    80:114:android.view.View buildCustomView(android.os.Bundle) -> buildCustomView
    123:124:void addViewToDialog(android.view.View) -> addViewToDialog
    133:138:android.view.View getMainView() -> getMainView
    148:154:android.view.View getCommentLabel() -> getCommentLabel
    165:170:android.widget.EditText getCommentPrompt(java.lang.CharSequence) -> getCommentPrompt
    180:186:android.view.View getEmailLabel() -> getEmailLabel
    197:207:android.widget.EditText getEmailPrompt(java.lang.CharSequence) -> getEmailPrompt
    212:233:void onClick(android.content.DialogInterface,int) -> onClick
    243:250:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    256:256:android.app.AlertDialog getDialog() -> getDialog
org.acra.file.BulkReportDeleter -> org.acra.file.BulkReportDeleter:
    org.acra.file.ReportLocator reportLocator -> reportLocator
    21:23:void <init>(android.content.Context) -> <init>
    30:39:void deleteReports(boolean,int) -> deleteReports
org.acra.file.CrashReportFileNameParser -> org.acra.file.CrashReportFileNameParser:
    29:29:void <init>() -> <init>
    38:38:boolean isSilent(java.lang.String) -> isSilent
    55:55:boolean isApproved(java.lang.String) -> isApproved
org.acra.file.CrashReportPersister -> org.acra.file.CrashReportPersister:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    39:39:void <init>() -> <init>
    54:58:org.acra.collector.CrashReportData load(java.io.File) -> load
    73:90:void store(org.acra.collector.CrashReportData,java.io.File) -> store
    122:290:org.acra.collector.CrashReportData load(java.io.Reader) -> load
    302:339:void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> dumpString
org.acra.file.LastModifiedComparator -> org.acra.file.LastModifiedComparator:
    11:11:void <init>() -> <init>
    14:14:int compare(java.io.File,java.io.File) -> compare
    11:11:int compare(java.lang.Object,java.lang.Object) -> compare
org.acra.file.ReportLocator -> org.acra.file.ReportLocator:
    java.lang.String UNAPPROVED_FOLDER_NAME -> UNAPPROVED_FOLDER_NAME
    java.lang.String APPROVED_FOLDER_NAME -> APPROVED_FOLDER_NAME
    android.content.Context context -> context
    23:25:void <init>(android.content.Context) -> <init>
    29:29:java.io.File getUnapprovedFolder() -> getUnapprovedFolder
    34:38:java.io.File[] getUnapprovedReports() -> getUnapprovedReports
    43:43:java.io.File getApprovedFolder() -> getApprovedFolder
    51:56:java.io.File[] getApprovedReports() -> getApprovedReports
org.acra.legacy.ReportMigrator -> org.acra.legacy.ReportMigrator:
    android.content.Context context -> context
    org.acra.file.CrashReportFileNameParser fileNameParser -> fileNameParser
    org.acra.file.ReportLocator reportLocator -> reportLocator
    22:29:void <init>(android.content.Context) -> <init>
    32:50:void migrate() -> migrate
    59:75:java.io.File[] getCrashReportFiles() -> getCrashReportFiles
org.acra.legacy.ReportMigrator$1 -> org.acra.legacy.ReportMigrator$1:
    org.acra.legacy.ReportMigrator this$0 -> this$0
    68:68:void <init>(org.acra.legacy.ReportMigrator) -> <init>
    71:71:boolean accept(java.io.File,java.lang.String) -> accept
org.acra.log.ACRALog -> org.acra.log.ACRALog:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.AndroidLogDelegate -> org.acra.log.AndroidLogDelegate:
    12:12:void <init>() -> <init>
    15:15:int v(java.lang.String,java.lang.String) -> v
    19:19:int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    23:23:int d(java.lang.String,java.lang.String) -> d
    27:27:int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    31:31:int i(java.lang.String,java.lang.String) -> i
    35:35:int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    39:39:int w(java.lang.String,java.lang.String) -> w
    43:43:int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    48:48:int w(java.lang.String,java.lang.Throwable) -> w
    52:52:int e(java.lang.String,java.lang.String) -> e
    56:56:int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    60:60:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.HollowLog -> org.acra.log.HollowLog:
    9:9:void <init>() -> <init>
    12:12:int v(java.lang.String,java.lang.String) -> v
    17:17:int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    22:22:int d(java.lang.String,java.lang.String) -> d
    27:27:int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    32:32:int i(java.lang.String,java.lang.String) -> i
    37:37:int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    42:42:int w(java.lang.String,java.lang.String) -> w
    47:47:int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    52:52:int w(java.lang.String,java.lang.Throwable) -> w
    57:57:int e(java.lang.String,java.lang.String) -> e
    62:62:int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    68:68:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.prefs.PrefUtils -> org.acra.prefs.PrefUtils:
    8:8:void <init>() -> <init>
    11:16:void save(android.content.SharedPreferences$Editor) -> save
org.acra.prefs.SharedPreferencesFactory -> org.acra.prefs.SharedPreferencesFactory:
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    25:28:void <init>(android.content.Context,org.acra.config.ACRAConfiguration) -> <init>
    36:41:android.content.SharedPreferences create() -> create
org.acra.security.AssetKeyStoreFactory -> org.acra.security.AssetKeyStoreFactory:
    java.lang.String assetName -> assetName
    44:46:void <init>(java.lang.String,java.lang.String) -> <init>
    51:55:java.io.InputStream getInputStream(android.content.Context) -> getInputStream
org.acra.security.BaseKeyStoreFactory -> org.acra.security.BaseKeyStoreFactory:
    java.lang.String certificateType -> certificateType
    58:59:void <init>() -> <init>
    66:68:void <init>(java.lang.String) -> <init>
    java.io.InputStream getInputStream(android.content.Context) -> getInputStream
    73:73:java.lang.String getKeyStoreType() -> getKeyStoreType
    77:77:org.acra.security.BaseKeyStoreFactory$Type getStreamType() -> getStreamType
    81:81:char[] getPassword() -> getPassword
    87:115:java.security.KeyStore create(android.content.Context) -> create
org.acra.security.BaseKeyStoreFactory$1 -> org.acra.security.BaseKeyStoreFactory$1:
    int[] $SwitchMap$org$acra$security$BaseKeyStoreFactory$Type -> $SwitchMap$org$acra$security$BaseKeyStoreFactory$Type
    92:92:void <clinit>() -> <clinit>
org.acra.security.BaseKeyStoreFactory$Type -> org.acra.security.BaseKeyStoreFactory$Type:
    org.acra.security.BaseKeyStoreFactory$Type CERTIFICATE -> CERTIFICATE
    org.acra.security.BaseKeyStoreFactory$Type KEYSTORE -> KEYSTORE
    org.acra.security.BaseKeyStoreFactory$Type[] $VALUES -> $VALUES
    47:47:org.acra.security.BaseKeyStoreFactory$Type[] values() -> values
    47:47:org.acra.security.BaseKeyStoreFactory$Type valueOf(java.lang.String) -> valueOf
    47:47:void <init>(java.lang.String,int) -> <init>
    47:49:void <clinit>() -> <clinit>
org.acra.security.FileKeyStoreFactory -> org.acra.security.FileKeyStoreFactory:
    java.lang.String filePath -> filePath
    45:47:void <init>(java.lang.String,java.lang.String) -> <init>
    52:56:java.io.InputStream getInputStream(android.content.Context) -> getInputStream
org.acra.security.KeyStoreFactory -> org.acra.security.KeyStoreFactory:
    java.security.KeyStore create(android.content.Context) -> create
org.acra.security.KeyStoreHelper -> org.acra.security.KeyStoreHelper:
    java.lang.String ASSET_PREFIX -> ASSET_PREFIX
    39:40:void <init>() -> <init>
    50:74:java.security.KeyStore getKeyStore(android.content.Context,org.acra.config.ACRAConfiguration) -> getKeyStore
org.acra.security.NoKeyStoreFactory -> org.acra.security.NoKeyStoreFactory:
    30:30:void <init>() -> <init>
    34:34:java.security.KeyStore create(android.content.Context) -> create
org.acra.security.ResourceKeyStoreFactory -> org.acra.security.ResourceKeyStoreFactory:
    int rawRes -> rawRes
    41:43:void <init>(java.lang.String,int) -> <init>
    47:47:java.io.InputStream getInputStream(android.content.Context) -> getInputStream
org.acra.sender.DefaultReportSenderFactory -> org.acra.sender.DefaultReportSenderFactory:
    20:20:void <init>() -> <init>
    25:46:org.acra.sender.ReportSender create(android.content.Context,org.acra.config.ACRAConfiguration) -> create
org.acra.sender.EmailIntentSender -> org.acra.sender.EmailIntentSender:
    org.acra.config.ACRAConfiguration config -> config
    43:45:void <init>(org.acra.config.ACRAConfiguration) -> <init>
    50:59:void send(android.content.Context,org.acra.collector.CrashReportData) -> send
    62:73:java.lang.String buildBody(org.acra.collector.CrashReportData) -> buildBody
org.acra.sender.EmailIntentSenderFactory -> org.acra.sender.EmailIntentSenderFactory:
    11:11:void <init>() -> <init>
    16:16:org.acra.sender.ReportSender create(android.content.Context,org.acra.config.ACRAConfiguration) -> create
org.acra.sender.HttpSender -> org.acra.sender.HttpSender:
    org.acra.config.ACRAConfiguration config -> config
    android.net.Uri mFormUri -> mFormUri
    java.util.Map mMapping -> mMapping
    org.acra.sender.HttpSender$Method mMethod -> mMethod
    org.acra.sender.HttpSender$Type mType -> mType
    java.lang.String mUsername -> mUsername
    java.lang.String mPassword -> mPassword
    139:140:void <init>(org.acra.config.ACRAConfiguration,org.acra.sender.HttpSender$Method,org.acra.sender.HttpSender$Type,java.util.Map) -> <init>
    168:176:void <init>(org.acra.config.ACRAConfiguration,org.acra.sender.HttpSender$Method,org.acra.sender.HttpSender$Type,java.lang.String,java.util.Map) -> <init>
    191:193:void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    199:244:void send(android.content.Context,org.acra.collector.CrashReportData) -> send
    249:262:java.util.Map remap(java.util.Map) -> remap
    266:266:boolean isNull(java.lang.String) -> isNull
org.acra.sender.HttpSender$1 -> org.acra.sender.HttpSender$1:
    int[] $SwitchMap$org$acra$sender$HttpSender$Type -> $SwitchMap$org$acra$sender$HttpSender$Type
    int[] $SwitchMap$org$acra$sender$HttpSender$Method -> $SwitchMap$org$acra$sender$HttpSender$Method
    214:226:void <clinit>() -> <clinit>
org.acra.sender.HttpSender$Method -> org.acra.sender.HttpSender$Method:
    org.acra.sender.HttpSender$Method POST -> POST
    org.acra.sender.HttpSender$Method PUT -> PUT
    org.acra.sender.HttpSender$Method[] $VALUES -> $VALUES
    68:68:org.acra.sender.HttpSender$Method[] values() -> values
    68:68:org.acra.sender.HttpSender$Method valueOf(java.lang.String) -> valueOf
    68:68:void <init>(java.lang.String,int) -> <init>
    68:69:void <clinit>() -> <clinit>
org.acra.sender.HttpSender$Type -> org.acra.sender.HttpSender$Type:
    org.acra.sender.HttpSender$Type FORM -> FORM
    org.acra.sender.HttpSender$Type JSON -> JSON
    org.acra.sender.HttpSender$Type[] $VALUES -> $VALUES
    76:76:org.acra.sender.HttpSender$Type[] values() -> values
    76:76:org.acra.sender.HttpSender$Type valueOf(java.lang.String) -> valueOf
    76:76:void <init>(java.lang.String,int) -> <init>
    java.lang.String getContentType() -> getContentType
    76:76:void <init>(java.lang.String,int,org.acra.sender.HttpSender$1) -> <init>
    76:91:void <clinit>() -> <clinit>
org.acra.sender.HttpSender$Type$1 -> org.acra.sender.HttpSender$Type$1:
    81:81:void <init>(java.lang.String,int) -> <init>
    85:85:java.lang.String getContentType() -> getContentType
org.acra.sender.HttpSender$Type$2 -> org.acra.sender.HttpSender$Type$2:
    91:91:void <init>(java.lang.String,int) -> <init>
    95:95:java.lang.String getContentType() -> getContentType
org.acra.sender.HttpSenderFactory -> org.acra.sender.HttpSenderFactory:
    11:11:void <init>() -> <init>
    16:16:org.acra.sender.ReportSender create(android.content.Context,org.acra.config.ACRAConfiguration) -> create
org.acra.sender.NullSender -> org.acra.sender.NullSender:
    14:14:void <init>() -> <init>
    17:18:void send(android.content.Context,org.acra.collector.CrashReportData) -> send
org.acra.sender.ReportDistributor -> org.acra.sender.ReportDistributor:
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    java.util.List reportSenders -> reportSenders
    53:57:void <init>(android.content.Context,org.acra.config.ACRAConfiguration,java.util.List) -> <init>
    66:84:void distribute(java.io.File) -> distribute
    95:125:void sendCrashReport(org.acra.collector.CrashReportData) -> sendCrashReport
    128:132:void deleteFile(java.io.File) -> deleteFile
    140:144:boolean isDebuggable() -> isDebuggable
org.acra.sender.ReportSender -> org.acra.sender.ReportSender:
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
org.acra.sender.ReportSenderException -> org.acra.sender.ReportSenderException:
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    49:50:void <init>(java.lang.String) -> <init>
org.acra.sender.ReportSenderFactory -> org.acra.sender.ReportSenderFactory:
    org.acra.sender.ReportSender create(android.content.Context,org.acra.config.ACRAConfiguration) -> create
org.acra.sender.SenderService -> org.acra.sender.SenderService:
    java.lang.String EXTRA_ONLY_SEND_SILENT_REPORTS -> EXTRA_ONLY_SEND_SILENT_REPORTS
    java.lang.String EXTRA_APPROVE_REPORTS_FIRST -> EXTRA_APPROVE_REPORTS_FIRST
    java.lang.String EXTRA_REPORT_SENDER_FACTORIES -> EXTRA_REPORT_SENDER_FACTORIES
    java.lang.String EXTRA_ACRA_CONFIG -> EXTRA_ACRA_CONFIG
    org.acra.file.ReportLocator locator -> locator
    26:30:void <init>() -> <init>
    35:77:void onHandleIntent(android.content.Intent) -> onHandleIntent
    81:93:java.util.List getSenderInstances(org.acra.config.ACRAConfiguration,java.util.List) -> getSenderInstances
    100:108:void markReportsAsApproved() -> markReportsAsApproved
org.acra.sender.SenderServiceStarter -> org.acra.sender.SenderServiceStarter:
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    22:25:void <init>(android.content.Context,org.acra.config.ACRAConfiguration) -> <init>
    34:43:void startService(boolean,boolean) -> startService
org.acra.util.ApplicationStartupProcessor -> org.acra.util.ApplicationStartupProcessor:
    android.content.Context context -> context
    org.acra.config.ACRAConfiguration config -> config
    28:31:void <init>(android.content.Context,org.acra.config.ACRAConfiguration) -> <init>
    37:50:void deleteUnsentReportsFromOldAppVersion() -> deleteUnsentReportsFromOldAppVersion
    60:61:void deleteAllUnapprovedReportsBarOne() -> deleteAllUnapprovedReportsBarOne
    69:84:void sendApprovedReports() -> sendApprovedReports
    90:92:int getAppVersion() -> getAppVersion
    96:102:boolean hasNonSilentApprovedReports(java.io.File[]) -> hasNonSilentApprovedReports
org.acra.util.HttpRequest -> org.acra.util.HttpRequest:
    java.lang.String UTF8 -> UTF8
    int HTTP_SUCCESS -> HTTP_SUCCESS
    int HTTP_REDIRECT -> HTTP_REDIRECT
    int HTTP_CLIENT_ERROR -> HTTP_CLIENT_ERROR
    int HTTP_UNAUTHORIZED -> HTTP_UNAUTHORIZED
    int HTTP_FORBIDDEN -> HTTP_FORBIDDEN
    int HTTP_METHOD_NOT_ALLOWED -> HTTP_METHOD_NOT_ALLOWED
    int HTTP_CONFLICT -> HTTP_CONFLICT
    int MAX_HTTP_CODE -> MAX_HTTP_CODE
    org.acra.config.ACRAConfiguration config -> config
    java.lang.String login -> login
    java.lang.String password -> password
    int connectionTimeOut -> connectionTimeOut
    int socketTimeOut -> socketTimeOut
    java.util.Map headers -> headers
    53:59:void <init>(org.acra.config.ACRAConfiguration) -> <init>
    62:63:void setLogin(java.lang.String) -> setLogin
    66:67:void setPassword(java.lang.String) -> setPassword
    70:71:void setConnectionTimeOut(int) -> setConnectionTimeOut
    74:75:void setSocketTimeOut(int) -> setSocketTimeOut
    78:79:void setHeaders(java.util.Map) -> setHeaders
    91:187:void send(android.content.Context,java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type) -> send
    199:211:java.lang.String getParamsAsFormString(java.util.Map) -> getParamsAsFormString
org.acra.util.IOUtils -> org.acra.util.IOUtils:
    com.android.internal.util.Predicate DEFAULT_FILTER -> DEFAULT_FILTER
    int NO_LIMIT -> NO_LIMIT
    49:50:void <init>() -> <init>
    59:66:void safeClose(java.io.Closeable) -> safeClose
    77:77:java.lang.String streamToString(java.io.InputStream) -> streamToString
    90:90:java.lang.String streamToString(java.io.InputStream,com.android.internal.util.Predicate) -> streamToString
    103:103:java.lang.String streamToString(java.io.InputStream,int) -> streamToString
    117:128:java.lang.String streamToString(java.io.InputStream,com.android.internal.util.Predicate,int) -> streamToString
    41:41:void <clinit>() -> <clinit>
org.acra.util.IOUtils$1 -> org.acra.util.IOUtils$1:
    41:41:void <init>() -> <init>
    44:44:boolean apply(java.lang.String) -> apply
    41:41:boolean apply(java.lang.Object) -> apply
org.acra.util.Installation -> org.acra.util.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    32:32:void <init>() -> <init>
    39:54:java.lang.String id(android.content.Context) -> id
    59:66:java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    70:77:void writeInstallationFile(java.io.File) -> writeInstallationFile
org.acra.util.JSONReportBuilder -> org.acra.util.JSONReportBuilder:
    22:22:void <init>() -> <init>
    72:101:org.json.JSONObject buildJSONReport(org.acra.collector.CrashReportData) -> buildJSONReport
    143:160:void addJSONFromProperty(org.json.JSONObject,java.lang.String) -> addJSONFromProperty
    164:177:java.lang.Object guessType(java.lang.String) -> guessType
    194:228:void addJSONSubTree(org.json.JSONObject,java.lang.String[],java.lang.Object) -> addJSONSubTree
org.acra.util.JSONReportBuilder$JSONReportException -> org.acra.util.JSONReportBuilder$JSONReportException:
    long serialVersionUID -> serialVersionUID
    234:235:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.acra.util.PackageManagerWrapper -> org.acra.util.PackageManagerWrapper:
    android.content.Context context -> context
    33:35:void <init>(android.content.Context) -> <init>
    42:52:boolean hasPermission(java.lang.String) -> hasPermission
    61:74:android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
org.acra.util.ReportUtils -> org.acra.util.ReportUtils:
    31:31:void <init>() -> <init>
    40:53:long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    63:77:long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    89:93:java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    99:105:java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    110:129:java.lang.String getLocalIpAddress() -> getLocalIpAddress
    134:135:java.lang.String getTimeString(java.util.Calendar) -> getTimeString
org.acra.util.ToastSender -> org.acra.util.ToastSender:
    20:20:void <init>() -> <init>
    31:35:void sendToast(android.content.Context,int,int) -> sendToast
org.apache.commons.io.Charsets -> org.a.a.a.a:
    java.nio.charset.Charset ISO_8859_1 -> a
    java.nio.charset.Charset US_ASCII -> b
    java.nio.charset.Charset UTF_16 -> c
    java.nio.charset.Charset UTF_16BE -> d
    java.nio.charset.Charset UTF_16LE -> e
    java.nio.charset.Charset UTF_8 -> f
    94:94:java.nio.charset.Charset toCharset(java.nio.charset.Charset) -> a
    120:191:void <clinit>() -> <clinit>
org.apache.commons.io.FileUtils -> org.a.a.a.b:
    java.math.BigInteger ONE_KB_BI -> a
    java.math.BigInteger ONE_MB_BI -> b
    java.math.BigInteger ONE_GB_BI -> c
    java.math.BigInteger ONE_TB_BI -> d
    java.math.BigInteger ONE_PB_BI -> e
    java.math.BigInteger ONE_EB_BI -> f
    java.math.BigInteger ONE_ZB -> g
    java.math.BigInteger ONE_YB -> h
    java.io.File[] EMPTY_FILE_ARRAY -> i
    284:294:java.io.FileInputStream openInputStream(java.io.File) -> a
    345:360:java.io.FileOutputStream openOutputStream(java.io.File,boolean) -> a
    1763:1768:java.lang.String readFileToString(java.io.File,java.nio.charset.Charset) -> a
    1800:1800:java.lang.String readFileToString(java.io.File) -> b
    1979:1987:void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean) -> a
    2017:2018:void writeStringToFile(java.io.File,java.lang.String) -> a
    93:173:void <clinit>() -> <clinit>
org.apache.commons.io.IOUtils -> org.a.a.a.c:
    char DIR_SEPARATOR -> a
    java.lang.String LINE_SEPARATOR -> b
    270:271:void closeQuietly(java.io.InputStream) -> a
    298:299:void closeQuietly(java.io.OutputStream) -> a
    338:344:void closeQuietly(java.io.Closeable) -> a
    1040:1042:java.lang.String toString(java.io.InputStream,java.nio.charset.Charset) -> a
    1856:1859:void write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset) -> a
    2272:2274:void copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset) -> a
    2325:2329:int copy(java.io.Reader,java.io.Writer) -> a
    2348:2348:long copyLarge(java.io.Reader,java.io.Writer) -> b
    2367:2373:long copyLarge(java.io.Reader,java.io.Writer,char[]) -> a
    122:143:void <clinit>() -> <clinit>
org.apache.commons.io.output.StringBuilderWriter -> org.a.a.a.a.a:
    java.lang.StringBuilder builder -> a
    42:44:void <init>() -> <init>
    51:53:void <init>(int) -> <init>
    74:75:java.io.Writer append(char) -> append
    86:87:java.io.Writer append(java.lang.CharSequence) -> append
    100:101:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    110:110:void close() -> close
    118:118:void flush() -> flush
    128:131:void write(java.lang.String) -> write
    142:145:void write(char[],int,int) -> write
    163:163:java.lang.String toString() -> toString
    34:34:java.lang.Appendable append(char) -> append
    34:34:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    34:34:java.lang.Appendable append(java.lang.CharSequence) -> append
org.jsoup.Jsoup -> org.b.a:
    31:31:org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> a
    118:118:org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String) -> a
org.jsoup.SerializationException -> org.b.b:
    12:13:void <init>() -> <init>
    34:35:void <init>(java.lang.Throwable) -> <init>
org.jsoup.helper.DataUtil -> org.b.a.a:
    java.util.regex.Pattern charsetPattern -> a
    char[] mimeBoundaryChars -> b
    53:54:org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String) -> a
    90:146:org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> a
    157:176:java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int) -> a
    180:180:java.nio.ByteBuffer readToByteBuffer(java.io.InputStream) -> a
    207:222:java.lang.String getCharsetFromContentType(java.lang.String) -> a
    21:26:void <clinit>() -> <clinit>
org.jsoup.helper.StringUtil -> org.b.a.b:
    java.lang.String[] padding -> a
    23:23:java.lang.String join(java.util.Collection,java.lang.String) -> a
    33:45:java.lang.String join(java.util.Iterator,java.lang.String) -> a
    54:63:java.lang.String padding(int) -> a
    72:80:boolean isBlank(java.lang.String) -> a
    89:97:boolean isNumeric(java.lang.String) -> b
    106:106:boolean isWhitespace(int) -> b
    116:118:java.lang.String normaliseWhitespace(java.lang.String) -> c
    128:147:void appendNormalisedWhitespace(java.lang.StringBuilder,java.lang.String,boolean) -> a
    150:154:boolean in(java.lang.String,java.lang.String[]) -> a
    158:158:boolean inSorted(java.lang.String,java.lang.String[]) -> b
    170:176:java.net.URL resolve(java.net.URL,java.lang.String) -> a
    189:197:java.lang.String resolve(java.lang.String,java.lang.String) -> a
    14:14:void <clinit>() -> <clinit>
org.jsoup.helper.Validate -> org.b.a.c:
    15:17:void notNull(java.lang.Object) -> a
    25:27:void notNull(java.lang.Object,java.lang.String) -> a
    34:36:void isTrue(boolean) -> a
    44:46:void isTrue(boolean,java.lang.String) -> a
    53:55:void isFalse(boolean) -> b
    63:65:void isFalse(boolean,java.lang.String) -> b
    72:73:void noNullElements(java.lang.Object[]) -> a
    81:84:void noNullElements(java.lang.Object[],java.lang.String) -> a
    91:93:void notEmpty(java.lang.String) -> a
    101:103:void notEmpty(java.lang.String,java.lang.String) -> a
    110:110:void fail(java.lang.String) -> b
org.jsoup.nodes.Attribute -> org.jsoup.nodes.a:
    java.lang.String[] booleanAttributes -> a
    java.lang.String key -> b
    java.lang.String value -> c
    31:36:void <init>(java.lang.String,java.lang.String) -> <init>
    43:43:java.lang.String getKey() -> a
    60:60:java.lang.String getValue() -> b
    68:71:java.lang.String setValue(java.lang.String) -> a
    79:86:java.lang.String html() -> c
    90:96:void html(java.lang.Appendable,org.jsoup.nodes.Document$OutputSettings) -> a
    104:104:java.lang.String toString() -> toString
    129:131:boolean shouldCollapseAttribute(org.jsoup.nodes.Document$OutputSettings) -> a
    135:135:boolean isBooleanAttribute() -> d
    140:146:boolean equals(java.lang.Object) -> equals
    151:153:int hashCode() -> hashCode
    159:161:org.jsoup.nodes.Attribute clone() -> e
    14:14:java.lang.Object clone() -> clone
    14:14:java.lang.Object setValue(java.lang.Object) -> setValue
    14:14:java.lang.Object getValue() -> getValue
    14:14:java.lang.Object getKey() -> getKey
    15:15:void <clinit>() -> <clinit>
org.jsoup.nodes.Attributes -> org.jsoup.nodes.b:
    java.util.LinkedHashMap attributes -> a
    21:220:void <init>() -> <init>
    35:41:java.lang.String get(java.lang.String) -> a
    50:52:void put(java.lang.String,java.lang.String) -> a
    71:75:void put(org.jsoup.nodes.Attribute) -> a
    94:94:boolean hasKey(java.lang.String) -> b
    102:104:int size() -> a
    112:117:void addAll(org.jsoup.nodes.Attributes) -> a
    120:120:java.util.Iterator iterator() -> iterator
    129:136:java.util.List asList() -> b
    154:160:java.lang.String html() -> c
    164:172:void html(java.lang.Appendable,org.jsoup.nodes.Document$OutputSettings) -> a
    176:176:java.lang.String toString() -> toString
    186:191:boolean equals(java.lang.Object) -> equals
    200:200:int hashCode() -> hashCode
    205:217:org.jsoup.nodes.Attributes clone() -> d
    21:21:java.lang.Object clone() -> clone
org.jsoup.nodes.BooleanAttribute -> org.jsoup.nodes.c:
    12:13:void <init>(java.lang.String) -> <init>
    17:17:boolean isBooleanAttribute() -> d
org.jsoup.nodes.Comment -> org.jsoup.nodes.d:
    18:20:void <init>(java.lang.String,java.lang.String) -> <init>
    23:23:java.lang.String nodeName() -> a
    31:31:java.lang.String getData() -> b
    35:41:void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    43:43:void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    47:47:java.lang.String toString() -> toString
org.jsoup.nodes.DataNode -> org.jsoup.nodes.e:
    18:20:void <init>(java.lang.String,java.lang.String) -> <init>
    23:23:java.lang.String nodeName() -> a
    31:31:java.lang.String getWholeData() -> b
    45:46:void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    48:48:void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    52:52:java.lang.String toString() -> toString
org.jsoup.nodes.Document -> org.jsoup.nodes.f:
    org.jsoup.nodes.Document$OutputSettings outputSettings -> f
    org.jsoup.nodes.Document$QuirksMode quirksMode -> g
    java.lang.String location -> h
    boolean updateMetaCharset -> i
    18:32:void <init>(java.lang.String) -> <init>
    194:194:java.lang.String outerHtml() -> a_
    210:210:java.lang.String nodeName() -> a
    286:288:org.jsoup.nodes.Document clone() -> c
    539:539:org.jsoup.nodes.Document$OutputSettings outputSettings() -> d
    558:558:org.jsoup.nodes.Document$QuirksMode quirksMode() -> e
    562:563:org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode) -> a
    17:17:org.jsoup.nodes.Element clone() -> f
    17:17:org.jsoup.nodes.Node clone() -> g
    17:17:java.lang.Object clone() -> clone
org.jsoup.nodes.Document$OutputSettings -> org.jsoup.nodes.f$a:
    org.jsoup.nodes.Entities$EscapeMode escapeMode -> a
    java.nio.charset.Charset charset -> b
    java.nio.charset.CharsetEncoder charsetEncoder -> c
    boolean prettyPrint -> d
    boolean outline -> e
    int indentAmount -> f
    org.jsoup.nodes.Document$OutputSettings$Syntax syntax -> g
    373:381:void <init>() -> <init>
    392:392:org.jsoup.nodes.Entities$EscapeMode escapeMode() -> a
    424:426:org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset) -> a
    435:436:org.jsoup.nodes.Document$OutputSettings charset(java.lang.String) -> a
    440:440:java.nio.charset.CharsetEncoder encoder() -> b
    448:448:org.jsoup.nodes.Document$OutputSettings$Syntax syntax() -> c
    468:468:boolean prettyPrint() -> d
    487:487:boolean outline() -> e
    505:505:int indentAmount() -> f
    523:530:org.jsoup.nodes.Document$OutputSettings clone() -> g
    367:367:java.lang.Object clone() -> clone
org.jsoup.nodes.Document$OutputSettings$Syntax -> org.jsoup.nodes.f$a$a:
    org.jsoup.nodes.Document$OutputSettings$Syntax html -> a
    org.jsoup.nodes.Document$OutputSettings$Syntax xml -> b
    org.jsoup.nodes.Document$OutputSettings$Syntax[] $VALUES -> c
    371:371:org.jsoup.nodes.Document$OutputSettings$Syntax[] values() -> values
    371:371:org.jsoup.nodes.Document$OutputSettings$Syntax valueOf(java.lang.String) -> valueOf
    371:371:void <init>(java.lang.String,int) -> <init>
    371:371:void <clinit>() -> <clinit>
org.jsoup.nodes.Document$QuirksMode -> org.jsoup.nodes.f$b:
    org.jsoup.nodes.Document$QuirksMode noQuirks -> a
    org.jsoup.nodes.Document$QuirksMode quirks -> b
    org.jsoup.nodes.Document$QuirksMode limitedQuirks -> c
    org.jsoup.nodes.Document$QuirksMode[] $VALUES -> d
    553:553:org.jsoup.nodes.Document$QuirksMode[] values() -> values
    553:553:org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String) -> valueOf
    553:553:void <init>(java.lang.String,int) -> <init>
    553:554:void <clinit>() -> <clinit>
org.jsoup.nodes.DocumentType -> org.jsoup.nodes.g:
    25:30:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String nodeName() -> a
    39:52:void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    56:56:void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    59:59:boolean has(java.lang.String) -> a
org.jsoup.nodes.Element -> org.jsoup.nodes.h:
    org.jsoup.parser.Tag tag -> f
    java.util.regex.Pattern classSplit -> g
    49:53:void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes) -> <init>
    64:65:void <init>(org.jsoup.parser.Tag,java.lang.String) -> <init>
    69:69:java.lang.String nodeName() -> a
    78:78:java.lang.String tagName() -> h
    100:100:org.jsoup.parser.Tag tag() -> i
    110:110:boolean isBlock() -> j
    119:119:java.lang.String id() -> k
    129:130:org.jsoup.nodes.Element attr(java.lang.String,java.lang.String) -> a
    167:167:org.jsoup.nodes.Element parent() -> l
    200:200:org.jsoup.nodes.Element child(int) -> a
    214:219:org.jsoup.select.Elements children() -> m
    286:286:org.jsoup.select.Elements select(java.lang.String) -> a
    296:303:org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node) -> a
    441:441:org.jsoup.nodes.Element before(org.jsoup.nodes.Node) -> b
    523:531:org.jsoup.select.Elements siblingElements() -> n
    560:567:org.jsoup.nodes.Element previousElementSibling() -> o
    586:587:java.lang.Integer elementSiblingIndex() -> p
    600:608:java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List) -> a
    876:876:org.jsoup.select.Elements getAllElements() -> q
    889:907:java.lang.String text() -> r
    922:924:java.lang.String ownText() -> s
    928:936:void ownText(java.lang.StringBuilder) -> a
    939:945:void appendNormalisedText(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> b
    948:950:void appendWhitespaceIfBr(org.jsoup.nodes.Element,java.lang.StringBuilder) -> a
    954:959:boolean preserveWhitespace(org.jsoup.nodes.Node) -> c
    1066:1076:boolean hasClass(java.lang.String) -> b
    1152:1174:void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    1177:1184:void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    1194:1196:java.lang.String html() -> t
    1200:1202:void html(java.lang.StringBuilder) -> b
    1228:1228:java.lang.String toString() -> toString
    1233:1233:org.jsoup.nodes.Element clone() -> f
    34:34:org.jsoup.nodes.Node clone() -> g
    34:34:org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> d
    34:34:org.jsoup.nodes.Node parent() -> u
    34:34:org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> b
    34:34:java.lang.Object clone() -> clone
    34:34:void access$000(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> a
    34:34:org.jsoup.parser.Tag access$100(org.jsoup.nodes.Element) -> a
    37:37:void <clinit>() -> <clinit>
org.jsoup.nodes.Element$1 -> org.jsoup.nodes.h$1:
    java.lang.StringBuilder val$accum -> a
    org.jsoup.nodes.Element this$0 -> b
    890:890:void <init>(org.jsoup.nodes.Element,java.lang.StringBuilder) -> <init>
    892:902:void head(org.jsoup.nodes.Node,int) -> a
    905:905:void tail(org.jsoup.nodes.Node,int) -> b
org.jsoup.nodes.Entities -> org.jsoup.nodes.i:
    java.util.Map full -> a
    java.util.Map xhtmlByVal -> b
    java.util.Map base -> c
    java.util.Map baseByVal -> d
    java.util.Map fullByVal -> e
    java.lang.Object[][] xhtmlArray -> f
    43:43:void <init>() -> <init>
    51:51:boolean isNamedEntity(java.lang.String) -> a
    61:61:boolean isBaseNamedEntity(java.lang.String) -> b
    70:70:java.lang.Character getCharacterByName(java.lang.String) -> c
    87:160:void escape(java.lang.Appendable,java.lang.String,org.jsoup.nodes.Document$OutputSettings,boolean,boolean,boolean) -> a
    192:198:boolean canEncode(org.jsoup.nodes.Entities$CoreCharset,char,java.nio.charset.CharsetEncoder) -> a
    237:252:java.util.Map loadEntities(java.lang.String) -> d
    256:269:java.util.Map toCharacterKey(java.util.Map) -> a
    17:17:java.util.Map access$000() -> a
    17:17:java.util.Map access$100() -> b
    17:17:java.util.Map access$200() -> c
    216:234:void <clinit>() -> <clinit>
org.jsoup.nodes.Entities$1 -> org.jsoup.nodes.i$1:
    int[] $SwitchMap$org$jsoup$nodes$Entities$CoreCharset -> a
    192:192:void <clinit>() -> <clinit>
org.jsoup.nodes.Entities$CoreCharset -> org.jsoup.nodes.i$a:
    org.jsoup.nodes.Entities$CoreCharset ascii -> a
    org.jsoup.nodes.Entities$CoreCharset utf -> b
    org.jsoup.nodes.Entities$CoreCharset fallback -> c
    org.jsoup.nodes.Entities$CoreCharset[] $VALUES -> d
    202:202:org.jsoup.nodes.Entities$CoreCharset[] values() -> values
    202:202:org.jsoup.nodes.Entities$CoreCharset valueOf(java.lang.String) -> valueOf
    202:202:void <init>(java.lang.String,int) -> <init>
    206:210:org.jsoup.nodes.Entities$CoreCharset byName(java.lang.String) -> b
    202:202:org.jsoup.nodes.Entities$CoreCharset access$300(java.lang.String) -> a
    202:203:void <clinit>() -> <clinit>
org.jsoup.nodes.Entities$EscapeMode -> org.jsoup.nodes.i$b:
    org.jsoup.nodes.Entities$EscapeMode xhtml -> a
    org.jsoup.nodes.Entities$EscapeMode base -> b
    org.jsoup.nodes.Entities$EscapeMode extended -> c
    java.util.Map map -> d
    org.jsoup.nodes.Entities$EscapeMode[] $VALUES -> e
    18:18:org.jsoup.nodes.Entities$EscapeMode[] values() -> values
    18:18:org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String) -> valueOf
    28:30:void <init>(java.lang.String,int,java.util.Map) -> <init>
    33:33:java.util.Map getMap() -> a
    18:24:void <clinit>() -> <clinit>
org.jsoup.nodes.FormElement -> org.jsoup.nodes.j:
    org.jsoup.select.Elements elements -> f
    18:29:void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes) -> <init>
    45:46:org.jsoup.nodes.FormElement addElement(org.jsoup.nodes.Element) -> b
org.jsoup.nodes.Node -> org.jsoup.nodes.k:
    java.util.List EMPTY_NODES -> f
    org.jsoup.nodes.Node parentNode -> a
    java.util.List childNodes -> b
    org.jsoup.nodes.Attributes attributes -> c
    java.lang.String baseUri -> d
    int siblingIndex -> e
    33:40:void <init>(java.lang.String,org.jsoup.nodes.Attributes) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    49:52:void <init>() -> <init>
    java.lang.String nodeName() -> a
    76:82:java.lang.String attr(java.lang.String) -> c
    90:90:org.jsoup.nodes.Attributes attributes() -> v
    100:101:org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> b
    110:117:boolean hasAttr(java.lang.String) -> d
    144:154:void setBaseUri(java.lang.String) -> e
    180:185:java.lang.String absUrl(java.lang.String) -> f
    195:195:org.jsoup.nodes.Node childNode(int) -> b
    204:204:java.util.List childNodes() -> w
    225:225:int childNodeSize() -> x
    237:237:org.jsoup.nodes.Node parent() -> u
    245:245:org.jsoup.nodes.Node parentNode() -> y
    253:258:org.jsoup.nodes.Document ownerDocument() -> z
    265:267:void remove() -> A
    287:291:org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> d
    402:405:void setParentNode(org.jsoup.nodes.Node) -> e
    421:426:void removeChild(org.jsoup.nodes.Node) -> f
    439:447:void addChildren(int,org.jsoup.nodes.Node[]) -> a
    450:453:void ensureChildNodes() -> B
    456:459:void reparentChild(org.jsoup.nodes.Node) -> g
    462:465:void reindexChildren(int) -> a
    473:481:java.util.List siblingNodes() -> C
    489:497:org.jsoup.nodes.Node nextSibling() -> D
    521:521:int siblingIndex() -> E
    525:526:void setSiblingIndex(int) -> c
    534:537:org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor) -> a
    545:547:java.lang.String outerHtml() -> a_
    551:552:void outerHtml(java.lang.Appendable) -> a
    556:556:org.jsoup.nodes.Document$OutputSettings getOutputSettings() -> F
    void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    580:580:java.lang.String toString() -> toString
    584:585:void indent(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> c
    596:596:boolean equals(java.lang.Object) -> equals
    624:640:org.jsoup.nodes.Node clone() -> g
    651:665:org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node) -> h
    20:20:java.lang.Object clone() -> clone
    21:21:void <clinit>() -> <clinit>
org.jsoup.nodes.Node$1 -> org.jsoup.nodes.k$1:
    java.lang.String val$baseUri -> a
    org.jsoup.nodes.Node this$0 -> b
    146:146:void <init>(org.jsoup.nodes.Node,java.lang.String) -> <init>
    148:149:void head(org.jsoup.nodes.Node,int) -> a
    152:152:void tail(org.jsoup.nodes.Node,int) -> b
org.jsoup.nodes.Node$OuterHtmlVisitor -> org.jsoup.nodes.k$a:
    java.lang.Appendable accum -> a
    org.jsoup.nodes.Document$OutputSettings out -> b
    672:675:void <init>(java.lang.Appendable,org.jsoup.nodes.Document$OutputSettings) -> <init>
    679:683:void head(org.jsoup.nodes.Node,int) -> a
    686:693:void tail(org.jsoup.nodes.Node,int) -> b
org.jsoup.nodes.TextNode -> org.jsoup.nodes.l:
    java.lang.String text -> f
    28:31:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String nodeName() -> a
    43:43:java.lang.String text() -> c
    63:63:java.lang.String getWholeText() -> d
    71:71:boolean isBlank() -> e
    95:101:void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    103:103:void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    107:107:java.lang.String toString() -> toString
    122:123:java.lang.String normaliseWhitespace(java.lang.String) -> a
    131:131:boolean lastCharIsWhitespace(java.lang.StringBuilder) -> a
    136:140:void ensureAttributes() -> f
    144:145:java.lang.String attr(java.lang.String) -> c
    150:151:org.jsoup.nodes.Attributes attributes() -> v
    156:157:org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> b
    162:163:boolean hasAttr(java.lang.String) -> d
    174:175:java.lang.String absUrl(java.lang.String) -> f
org.jsoup.nodes.XmlDeclaration -> org.jsoup.nodes.m:
    boolean isProcessingInstruction -> f
    26:26:java.lang.String nodeName() -> a
    34:53:java.lang.String getWholeDeclaration() -> c
    58:63:void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> a
    65:65:void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings) -> b
    69:69:java.lang.String toString() -> toString
org.jsoup.parser.CharacterReader -> org.b.b.a:
    char[] input -> a
    int length -> b
    int pos -> c
    int mark -> d
    java.lang.String[] stringCache -> e
    17:25:void <init>(java.lang.String) -> <init>
    28:28:int pos() -> a
    32:32:boolean isEmpty() -> b
    36:36:char current() -> c
    40:42:char consume() -> d
    46:47:void unconsume() -> e
    50:51:void advance() -> f
    54:55:void mark() -> g
    58:59:void rewindToMark() -> h
    72:76:int nextIndexOf(char) -> a
    87:100:int nextIndexOf(java.lang.CharSequence) -> a
    104:110:java.lang.String consumeTo(char) -> b
    115:121:java.lang.String consumeTo(java.lang.String) -> a
    126:138:java.lang.String consumeToAny(char[]) -> a
    142:152:java.lang.String consumeToAnySorted(char[]) -> b
    157:168:java.lang.String consumeData() -> i
    173:184:java.lang.String consumeTagName() -> j
    188:190:java.lang.String consumeToEnd() -> k
    194:203:java.lang.String consumeLetterSequence() -> l
    207:223:java.lang.String consumeLetterThenDigitSequence() -> m
    227:235:java.lang.String consumeHexSequence() -> n
    239:247:java.lang.String consumeDigitSequence() -> o
    251:251:boolean matches(char) -> c
    256:263:boolean matches(java.lang.String) -> b
    267:277:boolean matchesIgnoreCase(java.lang.String) -> c
    281:289:boolean matchesAny(char[]) -> c
    293:293:boolean matchesAnySorted(char[]) -> d
    297:300:boolean matchesLetter() -> p
    304:307:boolean matchesDigit() -> q
    311:315:boolean matchConsume(java.lang.String) -> d
    320:324:boolean matchConsumeIgnoreCase(java.lang.String) -> e
    330:332:boolean containsIgnoreCase(java.lang.String) -> f
    337:337:java.lang.String toString() -> toString
    348:377:java.lang.String cacheString(int,int) -> a
    384:394:boolean rangeEquals(int,int,java.lang.String) -> a
org.jsoup.parser.HtmlTreeBuilder -> org.b.b.b:
    java.lang.String[] TagsScriptStyle -> j
    java.lang.String[] TagsSearchInScope -> a
    java.lang.String[] TagSearchList -> k
    java.lang.String[] TagSearchButton -> l
    java.lang.String[] TagSearchTableScope -> m
    java.lang.String[] TagSearchSelectScope -> n
    java.lang.String[] TagSearchEndTags -> o
    java.lang.String[] TagSearchSpecial -> p
    org.jsoup.parser.HtmlTreeBuilderState state -> q
    org.jsoup.parser.HtmlTreeBuilderState originalState -> r
    boolean baseUriSetFromDoc -> s
    org.jsoup.nodes.Element headElement -> t
    org.jsoup.nodes.FormElement formElement -> u
    org.jsoup.nodes.Element contextElement -> v
    java.util.ArrayList formattingElements -> w
    java.util.List pendingTableCharacters -> x
    org.jsoup.parser.Token$EndTag emptyEnd -> y
    boolean framesetOk -> z
    boolean fosterInserts -> A
    boolean fragmentParsing -> B
    java.lang.String[] specificScopeTarget -> C
    boolean $assertionsDisabled -> b
    35:432:void <init>() -> <init>
    51:53:org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    109:110:boolean process(org.jsoup.parser.Token) -> a
    114:115:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState) -> a
    119:120:void transition(org.jsoup.parser.HtmlTreeBuilderState) -> a
    123:123:org.jsoup.parser.HtmlTreeBuilderState state() -> a
    127:128:void markInsertionMode() -> b
    131:131:org.jsoup.parser.HtmlTreeBuilderState originalState() -> c
    135:136:void framesetOk(boolean) -> a
    139:139:boolean framesetOk() -> d
    143:143:org.jsoup.nodes.Document getDocument() -> e
    147:147:java.lang.String getBaseUri() -> f
    151:160:void maybeSetBaseUri(org.jsoup.nodes.Element) -> a
    163:163:boolean isFragmentParsing() -> g
    167:169:void error(org.jsoup.parser.HtmlTreeBuilderState) -> b
    174:184:org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag) -> a
    188:190:org.jsoup.nodes.Element insertStartTag(java.lang.String) -> a
    194:196:void insert(org.jsoup.nodes.Element) -> b
    199:211:org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag) -> b
    215:221:org.jsoup.nodes.FormElement insertForm(org.jsoup.parser.Token$StartTag,boolean) -> a
    225:227:void insert(org.jsoup.parser.Token$Comment) -> a
    232:238:void insert(org.jsoup.parser.Token$Character) -> a
    242:254:void insertNode(org.jsoup.nodes.Node) -> b
    257:258:org.jsoup.nodes.Element pop() -> h
    262:263:void push(org.jsoup.nodes.Element) -> c
    266:266:java.util.ArrayList getStack() -> i
    270:270:boolean onStack(org.jsoup.nodes.Element) -> d
    274:280:boolean isElementInQueue(java.util.ArrayList,org.jsoup.nodes.Element) -> a
    284:290:org.jsoup.nodes.Element getFromStack(java.lang.String) -> b
    294:301:boolean removeFromStack(org.jsoup.nodes.Element) -> e
    305:311:void popStackToClose(java.lang.String) -> c
    314:320:void popStackToClose(java.lang.String[]) -> a
    323:331:void popStackToBefore(java.lang.String) -> d
    334:335:void clearStackToTableContext() -> j
    338:339:void clearStackToTableBodyContext() -> k
    342:343:void clearStackToTableRowContext() -> l
    346:353:void clearStackToContext(java.lang.String[]) -> c
    356:363:org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element) -> f
    367:370:void insertOnStackAfter(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    373:374:void replaceOnStack(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    377:380:void replaceInQueue(java.util.ArrayList,org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    383:429:void resetInsertionMode() -> m
    435:436:boolean inSpecificScope(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    440:451:boolean inSpecificScope(java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    455:455:boolean inScope(java.lang.String[]) -> b
    459:459:boolean inScope(java.lang.String) -> e
    463:463:boolean inScope(java.lang.String,java.lang.String[]) -> a
    469:469:boolean inListItemScope(java.lang.String) -> f
    473:473:boolean inButtonScope(java.lang.String) -> g
    477:477:boolean inTableScope(java.lang.String) -> h
    481:490:boolean inSelectScope(java.lang.String) -> i
    494:495:void setHeadElement(org.jsoup.nodes.Element) -> g
    498:498:org.jsoup.nodes.Element getHeadElement() -> n
    502:502:boolean isFosterInserts() -> o
    506:507:void setFosterInserts(boolean) -> b
    510:510:org.jsoup.nodes.FormElement getFormElement() -> p
    514:515:void setFormElement(org.jsoup.nodes.FormElement) -> a
    518:519:void newPendingTableCharacters() -> q
    522:522:java.util.List getPendingTableCharacters() -> r
    539:542:void generateImpliedEndTags(java.lang.String) -> j
    545:546:void generateImpliedEndTags() -> s
    551:552:boolean isSpecial(org.jsoup.nodes.Element) -> h
    556:556:org.jsoup.nodes.Element lastFormattingElement() -> t
    560:564:org.jsoup.nodes.Element removeLastFormattingElement() -> u
    569:584:void pushActiveFormattingElements(org.jsoup.nodes.Element) -> i
    588:590:boolean isSameFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> d
    595:630:void reconstructFormattingElements() -> v
    633:638:void clearFormattingElementsToLastMarker() -> w
    641:648:void removeFromActiveFormattingElements(org.jsoup.nodes.Element) -> j
    651:651:boolean isInActiveFormattingElements(org.jsoup.nodes.Element) -> k
    655:662:org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String) -> k
    666:667:void replaceActiveFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> c
    670:671:void insertMarkerToFormattingElements() -> x
    675:693:void insertInFosterParent(org.jsoup.nodes.Node) -> a
    697:700:java.lang.String toString() -> toString
    14:14:boolean processStartTag(java.lang.String,org.jsoup.nodes.Attributes) -> a
    14:23:void <clinit>() -> <clinit>
org.jsoup.parser.HtmlTreeBuilderState -> org.b.b.c:
    org.jsoup.parser.HtmlTreeBuilderState Initial -> a
    org.jsoup.parser.HtmlTreeBuilderState BeforeHtml -> b
    org.jsoup.parser.HtmlTreeBuilderState BeforeHead -> c
    org.jsoup.parser.HtmlTreeBuilderState InHead -> d
    org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript -> e
    org.jsoup.parser.HtmlTreeBuilderState AfterHead -> f
    org.jsoup.parser.HtmlTreeBuilderState InBody -> g
    org.jsoup.parser.HtmlTreeBuilderState Text -> h
    org.jsoup.parser.HtmlTreeBuilderState InTable -> i
    org.jsoup.parser.HtmlTreeBuilderState InTableText -> j
    org.jsoup.parser.HtmlTreeBuilderState InCaption -> k
    org.jsoup.parser.HtmlTreeBuilderState InColumnGroup -> l
    org.jsoup.parser.HtmlTreeBuilderState InTableBody -> m
    org.jsoup.parser.HtmlTreeBuilderState InRow -> n
    org.jsoup.parser.HtmlTreeBuilderState InCell -> o
    org.jsoup.parser.HtmlTreeBuilderState InSelect -> p
    org.jsoup.parser.HtmlTreeBuilderState InSelectInTable -> q
    org.jsoup.parser.HtmlTreeBuilderState AfterBody -> r
    org.jsoup.parser.HtmlTreeBuilderState InFrameset -> s
    org.jsoup.parser.HtmlTreeBuilderState AfterFrameset -> t
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody -> u
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset -> v
    org.jsoup.parser.HtmlTreeBuilderState ForeignContent -> w
    java.lang.String nullString -> x
    org.jsoup.parser.HtmlTreeBuilderState[] $VALUES -> y
    11:11:org.jsoup.parser.HtmlTreeBuilderState[] values() -> values
    11:11:org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String) -> valueOf
    11:1488:void <init>(java.lang.String,int) -> <init>
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    1455:1459:boolean isWhitespace(org.jsoup.parser.Token) -> b
    1464:1469:boolean isWhitespace(java.lang.String) -> b
    1473:1477:void handleRcData(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> c
    1480:1484:void handleRawtext(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> d
    11:11:void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1) -> <init>
    11:11:boolean access$100(org.jsoup.parser.Token) -> a
    11:11:void access$200(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> a
    11:11:void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> b
    11:11:java.lang.String access$400() -> a
    11:11:boolean access$2200(java.lang.String) -> a
    11:1450:void <clinit>() -> <clinit>
org.jsoup.parser.HtmlTreeBuilderState$1 -> org.b.b.c$1:
    12:12:void <init>(java.lang.String,int) -> <init>
    14:32:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$10 -> org.b.b.c$2:
    901:901:void <init>(java.lang.String,int) -> <init>
    903:935:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$11 -> org.b.b.c$3:
    938:938:void <init>(java.lang.String,int) -> <init>
    940:970:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$12 -> org.b.b.c$4:
    973:973:void <init>(java.lang.String,int) -> <init>
    975:1018:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    1022:1025:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$13 -> org.b.b.c$5:
    1028:1028:void <init>(java.lang.String,int) -> <init>
    1030:1070:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    1074:1081:boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    1085:1085:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> c
org.jsoup.parser.HtmlTreeBuilderState$14 -> org.b.b.c$6:
    1088:1088:void <init>(java.lang.String,int) -> <init>
    1090:1134:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    1138:1138:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    1142:1146:boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$15 -> org.b.b.c$7:
    1149:1149:void <init>(java.lang.String,int) -> <init>
    1151:1192:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    1196:1196:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    1200:1204:void closeCell(org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$16 -> org.b.b.c$8:
    1206:1206:void <init>(java.lang.String,int) -> <init>
    1208:1286:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    1290:1291:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$17 -> org.b.b.c$9:
    1294:1294:void <init>(java.lang.String,int) -> <init>
    1296:1308:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$18 -> org.b.b.c$10:
    1312:1312:void <init>(java.lang.String,int) -> <init>
    1314:1337:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$19 -> org.b.b.c$11:
    1340:1340:void <init>(java.lang.String,int) -> <init>
    1342:1383:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$2 -> org.b.b.c$12:
    35:35:void <init>(java.lang.String,int) -> <init>
    37:55:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    59:61:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$20 -> org.b.b.c$13:
    1386:1386:void <init>(java.lang.String,int) -> <init>
    1388:1407:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$21 -> org.b.b.c$14:
    1410:1410:void <init>(java.lang.String,int) -> <init>
    1412:1423:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$22 -> org.b.b.c$15:
    1426:1426:void <init>(java.lang.String,int) -> <init>
    1428:1440:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$23 -> org.b.b.c$16:
    1443:1443:void <init>(java.lang.String,int) -> <init>
    1445:1445:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$24 -> org.b.b.c$17:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
    98:98:void <clinit>() -> <clinit>
org.jsoup.parser.HtmlTreeBuilderState$3 -> org.b.b.c$18:
    64:64:void <init>(java.lang.String,int) -> <init>
    66:89:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$4 -> org.b.b.c$19:
    92:92:void <init>(java.lang.String,int) -> <init>
    94:156:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    160:161:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$5 -> org.b.b.c$20:
    164:164:void <init>(java.lang.String,int) -> <init>
    166:184:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    188:190:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$6 -> org.b.b.c$21:
    193:193:void <init>(java.lang.String,int) -> <init>
    195:235:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    239:241:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$7 -> org.b.b.c$22:
    244:244:void <init>(java.lang.String,int) -> <init>
    246:758:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    762:779:boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$8 -> org.b.b.c$23:
    782:782:void <init>(java.lang.String,int) -> <init>
    785:798:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$9 -> org.b.b.c$24:
    801:801:void <init>(java.lang.String,int) -> <init>
    803:885:boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    889:898:boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$Constants -> org.b.b.c$a:
    java.lang.String[] InBodyStartToHead -> a
    java.lang.String[] InBodyStartPClosers -> b
    java.lang.String[] Headings -> c
    java.lang.String[] InBodyStartPreListing -> d
    java.lang.String[] InBodyStartLiBreakers -> e
    java.lang.String[] DdDt -> f
    java.lang.String[] Formatters -> g
    java.lang.String[] InBodyStartApplets -> h
    java.lang.String[] InBodyStartEmptyFormatters -> i
    java.lang.String[] InBodyStartMedia -> j
    java.lang.String[] InBodyStartInputAttribs -> k
    java.lang.String[] InBodyStartOptions -> l
    java.lang.String[] InBodyStartRuby -> m
    java.lang.String[] InBodyStartDrop -> n
    java.lang.String[] InBodyEndClosers -> o
    java.lang.String[] InBodyEndAdoptionFormatters -> p
    java.lang.String[] InBodyEndTableFosters -> q
    1488:1488:java.lang.String[] access$500() -> a
    1488:1488:java.lang.String[] access$600() -> b
    1488:1488:java.lang.String[] access$700() -> c
    1488:1488:java.lang.String[] access$800() -> d
    1488:1488:java.lang.String[] access$900() -> e
    1488:1488:java.lang.String[] access$1000() -> f
    1488:1488:java.lang.String[] access$1100() -> g
    1488:1488:java.lang.String[] access$1200() -> h
    1488:1488:java.lang.String[] access$1300() -> i
    1488:1488:java.lang.String[] access$1400() -> j
    1488:1488:java.lang.String[] access$1500() -> k
    1488:1488:java.lang.String[] access$1600() -> l
    1488:1488:java.lang.String[] access$1700() -> m
    1488:1488:java.lang.String[] access$1800() -> n
    1488:1488:java.lang.String[] access$1900() -> o
    1488:1488:java.lang.String[] access$2000() -> p
    1488:1488:java.lang.String[] access$2100() -> q
    1489:1509:void <clinit>() -> <clinit>
org.jsoup.parser.ParseError -> org.b.b.d:
    int pos -> a
    java.lang.String errorMsg -> b
    10:13:void <init>(int,java.lang.String) -> <init>
    15:18:void <init>(int,java.lang.String,java.lang.Object[]) -> <init>
    38:38:java.lang.String toString() -> toString
org.jsoup.parser.ParseErrorList -> org.b.b.e:
    int maxSize -> a
    15:17:void <init>(int,int) -> <init>
    20:20:boolean canAddError() -> a
    28:28:org.jsoup.parser.ParseErrorList noTracking() -> b
    32:32:org.jsoup.parser.ParseErrorList tracking(int) -> a
org.jsoup.parser.Parser -> org.b.b.f:
    org.jsoup.parser.TreeBuilder treeBuilder -> a
    int maxErrors -> b
    org.jsoup.parser.ParseErrorList errors -> c
    17:26:void <init>(org.jsoup.parser.TreeBuilder) -> <init>
    29:30:org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String) -> a
    57:57:boolean isTrackErrors() -> a
    88:89:org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> b
    171:171:org.jsoup.parser.Parser htmlParser() -> b
org.jsoup.parser.Tag -> org.b.b.g:
    java.util.Map tags -> a
    java.lang.String tagName -> b
    boolean isBlock -> c
    boolean formatAsBlock -> d
    boolean canContainBlock -> e
    boolean canContainInline -> f
    boolean empty -> g
    boolean selfClosing -> h
    boolean preserveWhitespace -> i
    boolean formList -> j
    boolean formSubmit -> k
    java.lang.String[] blockTags -> l
    java.lang.String[] inlineTags -> m
    java.lang.String[] emptyTags -> n
    java.lang.String[] formatAsInlineTags -> o
    java.lang.String[] preserveWhitespaceTags -> p
    java.lang.String[] formListedTags -> q
    java.lang.String[] formSubmitTags -> r
    17:29:void <init>(java.lang.String) -> <init>
    37:37:java.lang.String getName() -> a
    50:65:org.jsoup.parser.Tag valueOf(java.lang.String) -> a
    74:74:boolean isBlock() -> b
    83:83:boolean formatAsBlock() -> c
    119:119:boolean isEmpty() -> d
    128:128:boolean isSelfClosing() -> e
    137:137:boolean isKnownTag() -> f
    156:156:boolean preserveWhitespace() -> g
    164:164:boolean isFormListed() -> h
    176:177:org.jsoup.parser.Tag setSelfClosing() -> i
    182:196:boolean equals(java.lang.Object) -> equals
    201:211:int hashCode() -> hashCode
    216:216:java.lang.String toString() -> toString
    306:307:void register(org.jsoup.parser.Tag) -> a
    14:303:void <clinit>() -> <clinit>
org.jsoup.parser.Token -> org.b.b.h:
    org.jsoup.parser.Token$TokenType type -> a
    14:15:void <init>() -> <init>
    18:18:java.lang.String tokenType() -> a
    org.jsoup.parser.Token reset() -> b
    28:31:void reset(java.lang.StringBuilder) -> a
    299:299:boolean isDoctype() -> c
    303:303:org.jsoup.parser.Token$Doctype asDoctype() -> d
    307:307:boolean isStartTag() -> e
    311:311:org.jsoup.parser.Token$StartTag asStartTag() -> f
    315:315:boolean isEndTag() -> g
    319:319:org.jsoup.parser.Token$EndTag asEndTag() -> h
    323:323:boolean isComment() -> i
    327:327:org.jsoup.parser.Token$Comment asComment() -> j
    331:331:boolean isCharacter() -> k
    335:335:org.jsoup.parser.Token$Character asCharacter() -> l
    339:339:boolean isEOF() -> m
    11:11:void <init>(org.jsoup.parser.Token$1) -> <init>
org.jsoup.parser.Token$1 -> org.b.b.h$1:
org.jsoup.parser.Token$Character -> org.b.b.h$a:
    java.lang.String data -> b
    262:264:void <init>() -> <init>
    268:269:org.jsoup.parser.Token reset() -> b
    273:274:org.jsoup.parser.Token$Character data(java.lang.String) -> a
    278:278:java.lang.String getData() -> n
    283:283:java.lang.String toString() -> toString
org.jsoup.parser.Token$Comment -> org.b.b.h$b:
    java.lang.StringBuilder data -> b
    boolean bogus -> c
    239:241:org.jsoup.parser.Token reset() -> b
    234:246:void <init>() -> <init>
    249:249:java.lang.String getData() -> n
    254:254:java.lang.String toString() -> toString
org.jsoup.parser.Token$Doctype -> org.b.b.h$c:
    java.lang.StringBuilder name -> b
    java.lang.StringBuilder publicIdentifier -> c
    java.lang.StringBuilder systemIdentifier -> d
    boolean forceQuirks -> e
    34:41:void <init>() -> <init>
    45:49:org.jsoup.parser.Token reset() -> b
    53:53:java.lang.String getName() -> n
    57:57:java.lang.String getPublicIdentifier() -> o
    61:61:java.lang.String getSystemIdentifier() -> p
    65:65:boolean isForceQuirks() -> q
org.jsoup.parser.Token$EOF -> org.b.b.h$d:
    288:290:void <init>() -> <init>
    294:294:org.jsoup.parser.Token reset() -> b
org.jsoup.parser.Token$EndTag -> org.b.b.h$e:
    223:225:void <init>() -> <init>
    229:229:java.lang.String toString() -> toString
org.jsoup.parser.Token$StartTag -> org.b.b.h$f:
    193:196:void <init>() -> <init>
    200:203:org.jsoup.parser.Token$Tag reset() -> n
    207:209:org.jsoup.parser.Token$StartTag nameAttr(java.lang.String,org.jsoup.nodes.Attributes) -> a
    214:217:java.lang.String toString() -> toString
    191:191:org.jsoup.parser.Token reset() -> b
org.jsoup.parser.Token$Tag -> org.b.b.h$g:
    java.lang.String tagName -> b
    java.lang.String pendingAttributeName -> e
    java.lang.StringBuilder pendingAttributeValue -> f
    java.lang.String pendingAttributeValueS -> g
    boolean hasEmptyAttributeValue -> h
    boolean hasPendingAttributeValue -> i
    boolean selfClosing -> c
    org.jsoup.nodes.Attributes attributes -> d
    69:76:void <init>() -> <init>
    81:89:org.jsoup.parser.Token$Tag reset() -> n
    93:112:void newAttribute() -> o
    116:120:void finaliseTag() -> p
    123:124:java.lang.String name() -> q
    128:129:org.jsoup.parser.Token$Tag name(java.lang.String) -> a
    133:133:boolean isSelfClosing() -> r
    138:138:org.jsoup.nodes.Attributes getAttributes() -> s
    143:144:void appendTagName(java.lang.String) -> b
    147:148:void appendTagName(char) -> a
    151:152:void appendAttributeName(java.lang.String) -> c
    155:156:void appendAttributeName(char) -> b
    159:165:void appendAttributeValue(java.lang.String) -> d
    168:170:void appendAttributeValue(char) -> c
    173:175:void appendAttributeValue(char[]) -> a
    178:179:void setEmptyAttributeValue() -> t
    182:188:void ensureAttributeValue() -> u
    69:69:org.jsoup.parser.Token reset() -> b
org.jsoup.parser.Token$TokenType -> org.b.b.h$h:
    org.jsoup.parser.Token$TokenType Doctype -> a
    org.jsoup.parser.Token$TokenType StartTag -> b
    org.jsoup.parser.Token$TokenType EndTag -> c
    org.jsoup.parser.Token$TokenType Comment -> d
    org.jsoup.parser.Token$TokenType Character -> e
    org.jsoup.parser.Token$TokenType EOF -> f
    org.jsoup.parser.Token$TokenType[] $VALUES -> g
    342:342:org.jsoup.parser.Token$TokenType[] values() -> values
    342:342:org.jsoup.parser.Token$TokenType valueOf(java.lang.String) -> valueOf
    342:342:void <init>(java.lang.String,int) -> <init>
    342:348:void <clinit>() -> <clinit>
org.jsoup.parser.TokenQueue -> org.b.b.i:
    java.lang.String queue -> a
    int pos -> b
    13:24:void <init>(java.lang.String) -> <init>
    31:31:boolean isEmpty() -> a
    35:35:int remainingLength() -> i
    70:70:boolean matches(java.lang.String) -> a
    89:93:boolean matchesAny(java.lang.String[]) -> a
    97:104:boolean matchesAny(char[]) -> a
    119:123:boolean matchChomp(java.lang.String) -> b
    132:132:boolean matchesWhitespace() -> b
    140:140:boolean matchesWord() -> c
    155:155:char consume() -> d
    166:173:void consume(java.lang.String) -> c
    181:187:java.lang.String consumeTo(java.lang.String) -> d
    223:228:java.lang.String consumeToAny(java.lang.String[]) -> b
    240:242:java.lang.String chompTo(java.lang.String) -> e
    261:283:java.lang.String chompBalanced(char,char) -> a
    292:303:java.lang.String unescape(java.lang.String) -> f
    311:316:boolean consumeWhitespace() -> e
    349:353:java.lang.String consumeElementSelector() -> f
    362:366:java.lang.String consumeCssIdentifier() -> g
    386:388:java.lang.String remainder() -> h
    393:393:java.lang.String toString() -> toString
org.jsoup.parser.Tokeniser -> org.b.b.j:
    char[] notCharRefCharsSorted -> h
    org.jsoup.parser.CharacterReader reader -> i
    org.jsoup.parser.ParseErrorList errors -> j
    org.jsoup.parser.TokeniserState state -> k
    org.jsoup.parser.Token emitPending -> l
    boolean isEmitPending -> m
    java.lang.String charsString -> n
    java.lang.StringBuilder charsBuilder -> o
    java.lang.StringBuilder dataBuffer -> a
    org.jsoup.parser.Token$Tag tagPending -> b
    org.jsoup.parser.Token$StartTag startPending -> c
    org.jsoup.parser.Token$EndTag endPending -> d
    org.jsoup.parser.Token$Character charPending -> e
    org.jsoup.parser.Token$Doctype doctypePending -> f
    org.jsoup.parser.Token$Comment commentPending -> g
    java.lang.String lastStartTag -> p
    boolean selfClosingFlagAcknowledged -> q
    char[] charRefHolder -> r
    22:125:void <init>(org.jsoup.parser.CharacterReader,org.jsoup.parser.ParseErrorList) -> <init>
    44:64:org.jsoup.parser.Token read() -> a
    69:84:void emit(org.jsoup.parser.Token) -> a
    89:98:void emit(java.lang.String) -> a
    101:102:void emit(char[]) -> a
    105:106:void emit(char) -> a
    113:114:void transition(org.jsoup.parser.TokeniserState) -> a
    117:119:void advanceTransition(org.jsoup.parser.TokeniserState) -> b
    122:123:void acknowledgeSelfClosingFlag() -> b
    127:186:char[] consumeCharacterReference(java.lang.Character,boolean) -> a
    191:192:org.jsoup.parser.Token$Tag createTagPending(boolean) -> a
    196:198:void emitTagPending() -> c
    201:202:void createCommentPending() -> d
    205:206:void emitCommentPending() -> e
    209:210:void createDoctypePending() -> f
    213:214:void emitDoctypePending() -> g
    217:218:void createTempBuffer() -> h
    221:221:boolean isAppropriateEndTagToken() -> i
    225:227:java.lang.String appropriateEndTagName() -> j
    231:233:void error(org.jsoup.parser.TokeniserState) -> c
    236:238:void eofError(org.jsoup.parser.TokeniserState) -> d
    241:243:void characterReferenceError(java.lang.String) -> b
    246:248:void error(java.lang.String) -> c
    13:17:void <clinit>() -> <clinit>
org.jsoup.parser.TokeniserState -> org.b.b.k:
    org.jsoup.parser.TokeniserState Data -> a
    org.jsoup.parser.TokeniserState CharacterReferenceInData -> b
    org.jsoup.parser.TokeniserState Rcdata -> c
    org.jsoup.parser.TokeniserState CharacterReferenceInRcdata -> d
    org.jsoup.parser.TokeniserState Rawtext -> e
    org.jsoup.parser.TokeniserState ScriptData -> f
    org.jsoup.parser.TokeniserState PLAINTEXT -> g
    org.jsoup.parser.TokeniserState TagOpen -> h
    org.jsoup.parser.TokeniserState EndTagOpen -> i
    org.jsoup.parser.TokeniserState TagName -> j
    org.jsoup.parser.TokeniserState RcdataLessthanSign -> k
    org.jsoup.parser.TokeniserState RCDATAEndTagOpen -> l
    org.jsoup.parser.TokeniserState RCDATAEndTagName -> m
    org.jsoup.parser.TokeniserState RawtextLessthanSign -> n
    org.jsoup.parser.TokeniserState RawtextEndTagOpen -> o
    org.jsoup.parser.TokeniserState RawtextEndTagName -> p
    org.jsoup.parser.TokeniserState ScriptDataLessthanSign -> q
    org.jsoup.parser.TokeniserState ScriptDataEndTagOpen -> r
    org.jsoup.parser.TokeniserState ScriptDataEndTagName -> s
    org.jsoup.parser.TokeniserState ScriptDataEscapeStart -> t
    org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash -> u
    org.jsoup.parser.TokeniserState ScriptDataEscaped -> v
    org.jsoup.parser.TokeniserState ScriptDataEscapedDash -> w
    org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash -> x
    org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign -> y
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen -> z
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName -> A
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart -> B
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped -> C
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash -> D
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash -> E
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign -> F
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd -> G
    org.jsoup.parser.TokeniserState BeforeAttributeName -> H
    org.jsoup.parser.TokeniserState AttributeName -> I
    org.jsoup.parser.TokeniserState AfterAttributeName -> J
    org.jsoup.parser.TokeniserState BeforeAttributeValue -> K
    org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted -> L
    org.jsoup.parser.TokeniserState AttributeValue_singleQuoted -> M
    org.jsoup.parser.TokeniserState AttributeValue_unquoted -> N
    org.jsoup.parser.TokeniserState AfterAttributeValue_quoted -> O
    org.jsoup.parser.TokeniserState SelfClosingStartTag -> P
    org.jsoup.parser.TokeniserState BogusComment -> Q
    org.jsoup.parser.TokeniserState MarkupDeclarationOpen -> R
    org.jsoup.parser.TokeniserState CommentStart -> S
    org.jsoup.parser.TokeniserState CommentStartDash -> T
    org.jsoup.parser.TokeniserState Comment -> U
    org.jsoup.parser.TokeniserState CommentEndDash -> V
    org.jsoup.parser.TokeniserState CommentEnd -> W
    org.jsoup.parser.TokeniserState CommentEndBang -> X
    org.jsoup.parser.TokeniserState Doctype -> Y
    org.jsoup.parser.TokeniserState BeforeDoctypeName -> Z
    org.jsoup.parser.TokeniserState DoctypeName -> aa
    org.jsoup.parser.TokeniserState AfterDoctypeName -> ab
    org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword -> ac
    org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier -> ad
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted -> ae
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted -> af
    org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier -> ag
    org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers -> ah
    org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword -> ai
    org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier -> aj
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted -> ak
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted -> al
    org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier -> am
    org.jsoup.parser.TokeniserState BogusDoctype -> an
    org.jsoup.parser.TokeniserState CdataSection -> ao
    char[] attributeSingleValueCharsSorted -> ap
    char[] attributeDoubleValueCharsSorted -> aq
    char[] attributeNameCharsSorted -> ar
    char[] attributeValueUnquoted -> as
    java.lang.String replacementStr -> at
    org.jsoup.parser.TokeniserState[] $VALUES -> au
    8:8:org.jsoup.parser.TokeniserState[] values() -> values
    8:8:org.jsoup.parser.TokeniserState valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    1678:1715:void handleDataEndTag(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader,org.jsoup.parser.TokeniserState) -> b
    1718:1744:void handleDataDoubleEscapeTag(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader,org.jsoup.parser.TokeniserState,org.jsoup.parser.TokeniserState) -> b
    8:8:void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1) -> <init>
    8:8:java.lang.String access$100() -> a
    8:8:void access$200(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader,org.jsoup.parser.TokeniserState) -> a
    8:8:void access$300(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader,org.jsoup.parser.TokeniserState,org.jsoup.parser.TokeniserState) -> a
    8:8:char[] access$400() -> b
    8:8:char[] access$500() -> c
    8:8:char[] access$600() -> d
    8:8:char[] access$700() -> e
    8:1671:void <clinit>() -> <clinit>
org.jsoup.parser.TokeniserState$1 -> org.b.b.k$1:
    9:9:void <init>(java.lang.String,int) -> <init>
    12:31:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$10 -> org.b.b.k$2:
    183:183:void <init>(java.lang.String,int) -> <init>
    188:214:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$11 -> org.b.b.k$3:
    216:216:void <init>(java.lang.String,int) -> <init>
    219:233:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$12 -> org.b.b.k$4:
    235:235:void <init>(java.lang.String,int) -> <init>
    237:246:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$13 -> org.b.b.k$5:
    248:248:void <init>(java.lang.String,int) -> <init>
    250:286:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    289:292:void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$14 -> org.b.b.k$6:
    294:294:void <init>(java.lang.String,int) -> <init>
    296:303:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$15 -> org.b.b.k$7:
    305:305:void <init>(java.lang.String,int) -> <init>
    307:314:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$16 -> org.b.b.k$8:
    316:316:void <init>(java.lang.String,int) -> <init>
    318:319:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$17 -> org.b.b.k$9:
    321:321:void <init>(java.lang.String,int) -> <init>
    323:337:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$18 -> org.b.b.k$10:
    339:339:void <init>(java.lang.String,int) -> <init>
    341:349:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$19 -> org.b.b.k$11:
    351:351:void <init>(java.lang.String,int) -> <init>
    353:354:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$2 -> org.b.b.k$12:
    33:33:void <init>(java.lang.String,int) -> <init>
    36:42:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$20 -> org.b.b.k$13:
    356:356:void <init>(java.lang.String,int) -> <init>
    358:364:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$21 -> org.b.b.k$14:
    366:366:void <init>(java.lang.String,int) -> <init>
    368:374:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$22 -> org.b.b.k$15:
    376:376:void <init>(java.lang.String,int) -> <init>
    378:401:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$23 -> org.b.b.k$16:
    403:403:void <init>(java.lang.String,int) -> <init>
    405:429:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$24 -> org.b.b.k$17:
    431:431:void <init>(java.lang.String,int) -> <init>
    433:460:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$25 -> org.b.b.k$18:
    462:462:void <init>(java.lang.String,int) -> <init>
    464:476:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$26 -> org.b.b.k$19:
    478:478:void <init>(java.lang.String,int) -> <init>
    480:489:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$27 -> org.b.b.k$20:
    491:491:void <init>(java.lang.String,int) -> <init>
    493:494:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$28 -> org.b.b.k$21:
    496:496:void <init>(java.lang.String,int) -> <init>
    498:499:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$29 -> org.b.b.k$22:
    501:501:void <init>(java.lang.String,int) -> <init>
    503:526:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$3 -> org.b.b.k$23:
    44:44:void <init>(java.lang.String,int) -> <init>
    47:67:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$30 -> org.b.b.k$24:
    528:528:void <init>(java.lang.String,int) -> <init>
    530:553:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$31 -> org.b.b.k$25:
    555:555:void <init>(java.lang.String,int) -> <init>
    557:583:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$32 -> org.b.b.k$26:
    585:585:void <init>(java.lang.String,int) -> <init>
    587:594:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$33 -> org.b.b.k$27:
    596:596:void <init>(java.lang.String,int) -> <init>
    598:599:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$34 -> org.b.b.k$28:
    601:601:void <init>(java.lang.String,int) -> <init>
    604:643:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$35 -> org.b.b.k$29:
    645:645:void <init>(java.lang.String,int) -> <init>
    648:685:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$36 -> org.b.b.k$30:
    687:687:void <init>(java.lang.String,int) -> <init>
    689:730:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$37 -> org.b.b.k$31:
    732:732:void <init>(java.lang.String,int) -> <init>
    734:779:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$38 -> org.b.b.k$32:
    781:781:void <init>(java.lang.String,int) -> <init>
    783:811:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$39 -> org.b.b.k$33:
    813:813:void <init>(java.lang.String,int) -> <init>
    815:843:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$4 -> org.b.b.k$34:
    69:69:void <init>(java.lang.String,int) -> <init>
    71:77:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$40 -> org.b.b.k$35:
    845:845:void <init>(java.lang.String,int) -> <init>
    847:890:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$41 -> org.b.b.k$36:
    893:893:void <init>(java.lang.String,int) -> <init>
    895:921:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$42 -> org.b.b.k$37:
    923:923:void <init>(java.lang.String,int) -> <init>
    925:940:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$43 -> org.b.b.k$38:
    942:942:void <init>(java.lang.String,int) -> <init>
    946:953:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$44 -> org.b.b.k$39:
    955:955:void <init>(java.lang.String,int) -> <init>
    957:971:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$45 -> org.b.b.k$40:
    973:973:void <init>(java.lang.String,int) -> <init>
    975:999:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$46 -> org.b.b.k$41:
    1001:1001:void <init>(java.lang.String,int) -> <init>
    1003:1027:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$47 -> org.b.b.k$42:
    1029:1029:void <init>(java.lang.String,int) -> <init>
    1031:1049:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$48 -> org.b.b.k$43:
    1051:1051:void <init>(java.lang.String,int) -> <init>
    1053:1072:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$49 -> org.b.b.k$44:
    1074:1074:void <init>(java.lang.String,int) -> <init>
    1076:1105:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$5 -> org.b.b.k$45:
    79:79:void <init>(java.lang.String,int) -> <init>
    81:98:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$50 -> org.b.b.k$46:
    1107:1107:void <init>(java.lang.String,int) -> <init>
    1109:1133:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$51 -> org.b.b.k$47:
    1135:1135:void <init>(java.lang.String,int) -> <init>
    1137:1160:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$52 -> org.b.b.k$48:
    1162:1162:void <init>(java.lang.String,int) -> <init>
    1164:1195:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$53 -> org.b.b.k$49:
    1197:1197:void <init>(java.lang.String,int) -> <init>
    1199:1230:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$54 -> org.b.b.k$50:
    1232:1232:void <init>(java.lang.String,int) -> <init>
    1234:1256:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$55 -> org.b.b.k$51:
    1258:1258:void <init>(java.lang.String,int) -> <init>
    1260:1296:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$56 -> org.b.b.k$52:
    1298:1298:void <init>(java.lang.String,int) -> <init>
    1300:1333:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$57 -> org.b.b.k$53:
    1335:1335:void <init>(java.lang.String,int) -> <init>
    1337:1361:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$58 -> org.b.b.k$54:
    1363:1363:void <init>(java.lang.String,int) -> <init>
    1365:1389:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$59 -> org.b.b.k$55:
    1391:1391:void <init>(java.lang.String,int) -> <init>
    1393:1427:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$6 -> org.b.b.k$56:
    100:100:void <init>(java.lang.String,int) -> <init>
    102:119:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$60 -> org.b.b.k$57:
    1429:1429:void <init>(java.lang.String,int) -> <init>
    1431:1464:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$61 -> org.b.b.k$58:
    1466:1466:void <init>(java.lang.String,int) -> <init>
    1468:1504:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$62 -> org.b.b.k$59:
    1506:1506:void <init>(java.lang.String,int) -> <init>
    1508:1541:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$63 -> org.b.b.k$60:
    1543:1543:void <init>(java.lang.String,int) -> <init>
    1545:1569:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$64 -> org.b.b.k$61:
    1571:1571:void <init>(java.lang.String,int) -> <init>
    1573:1597:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$65 -> org.b.b.k$62:
    1599:1599:void <init>(java.lang.String,int) -> <init>
    1601:1624:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$66 -> org.b.b.k$63:
    1626:1626:void <init>(java.lang.String,int) -> <init>
    1628:1642:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$67 -> org.b.b.k$64:
    1644:1644:void <init>(java.lang.String,int) -> <init>
    1646:1650:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$7 -> org.b.b.k$65:
    121:121:void <init>(java.lang.String,int) -> <init>
    123:137:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$8 -> org.b.b.k$66:
    139:139:void <init>(java.lang.String,int) -> <init>
    142:163:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$9 -> org.b.b.k$67:
    165:165:void <init>(java.lang.String,int) -> <init>
    167:181:void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TreeBuilder -> org.b.b.l:
    org.jsoup.parser.CharacterReader reader -> c
    org.jsoup.parser.Tokeniser tokeniser -> d
    org.jsoup.nodes.Document doc -> e
    java.util.ArrayList stack -> f
    java.lang.String baseUri -> g
    org.jsoup.parser.Token currentToken -> h
    org.jsoup.parser.ParseErrorList errors -> i
    org.jsoup.parser.Token$StartTag start -> a
    org.jsoup.parser.Token$EndTag end -> b
    13:23:void <init>() -> <init>
    26:35:void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> b
    42:44:org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    49:56:void runParser() -> y
    boolean process(org.jsoup.parser.Token) -> a
    61:64:boolean processStartTag(java.lang.String) -> l
    68:73:boolean processStartTag(java.lang.String,org.jsoup.nodes.Attributes) -> a
    77:80:boolean processEndTag(java.lang.String) -> m
    85:86:org.jsoup.nodes.Element currentElement() -> z
org.jsoup.select.Collector -> org.b.c.a:
    23:25:org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element) -> a
org.jsoup.select.Collector$Accumulator -> org.b.c.a$a:
    org.jsoup.nodes.Element root -> a
    org.jsoup.select.Elements elements -> b
    org.jsoup.select.Evaluator eval -> c
    33:37:void <init>(org.jsoup.nodes.Element,org.jsoup.select.Elements,org.jsoup.select.Evaluator) -> <init>
    40:45:void head(org.jsoup.nodes.Node,int) -> a
    49:49:void tail(org.jsoup.nodes.Node,int) -> b
org.jsoup.select.CombiningEvaluator -> org.b.c.b:
    java.util.ArrayList evaluators -> a
    int num -> b
    15:20:void <init>() -> <init>
    23:26:void <init>(java.util.Collection) -> <init>
    29:29:org.jsoup.select.Evaluator rightMostEvaluator() -> a
    33:34:void replaceRightMostEvaluator(org.jsoup.select.Evaluator) -> a
    38:39:void updateNumEvaluators() -> b
org.jsoup.select.CombiningEvaluator$And -> org.b.c.b$a:
    43:44:void <init>(java.util.Collection) -> <init>
    47:48:void <init>(org.jsoup.select.Evaluator[]) -> <init>
    52:57:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    62:62:java.lang.String toString() -> toString
org.jsoup.select.CombiningEvaluator$Or -> org.b.c.b$b:
    81:82:void <init>() -> <init>
    85:87:void add(org.jsoup.select.Evaluator) -> b
    91:96:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    101:101:java.lang.String toString() -> toString
org.jsoup.select.Elements -> org.b.c.c:
    18:19:void <init>() -> <init>
    22:23:void <init>(int) -> <init>
    30:31:void <init>(java.util.List) -> <init>
    43:48:org.jsoup.select.Elements clone() -> a
    226:232:java.lang.String outerHtml() -> b
    243:243:java.lang.String toString() -> toString
    394:397:org.jsoup.select.Elements remove() -> c
    465:465:org.jsoup.nodes.Element first() -> d
    17:17:java.lang.Object clone() -> clone
org.jsoup.select.Evaluator -> org.b.c.d:
    20:21:void <init>() -> <init>
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
org.jsoup.select.Evaluator$AllElements -> org.b.c.d$a:
    294:294:void <init>() -> <init>
    298:298:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    303:303:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Attribute -> org.b.c.d$b:
    java.lang.String key -> a
    104:106:void <init>(java.lang.String) -> <init>
    110:110:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    115:115:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeKeyPair -> org.b.c.d$c:
    java.lang.String key -> a
    java.lang.String value -> b
    278:288:void <init>(java.lang.String,java.lang.String) -> <init>
org.jsoup.select.Evaluator$AttributeStarting -> org.b.c.d$d:
    java.lang.String keyPrefix -> a
    126:128:void <init>(java.lang.String) -> <init>
    132:137:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    142:142:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValue -> org.b.c.d$e:
    152:153:void <init>(java.lang.String,java.lang.String) -> <init>
    157:157:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    162:162:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueContaining -> org.b.c.d$f:
    232:233:void <init>(java.lang.String,java.lang.String) -> <init>
    237:237:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    242:242:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueEnding -> org.b.c.d$g:
    212:213:void <init>(java.lang.String,java.lang.String) -> <init>
    217:217:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    222:222:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueMatching -> org.b.c.d$h:
    java.lang.String key -> a
    java.util.regex.Pattern pattern -> b
    254:257:void <init>(java.lang.String,java.util.regex.Pattern) -> <init>
    261:261:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    266:266:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueNot -> org.b.c.d$i:
    172:173:void <init>(java.lang.String,java.lang.String) -> <init>
    177:177:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    182:182:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueStarting -> org.b.c.d$j:
    192:193:void <init>(java.lang.String,java.lang.String) -> <init>
    197:197:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    202:202:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Class -> org.b.c.d$k:
    java.lang.String className -> a
    82:84:void <init>(java.lang.String) -> <init>
    88:88:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    93:93:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsOwnText -> org.b.c.d$l:
    java.lang.String searchText -> a
    649:651:void <init>(java.lang.String) -> <init>
    655:655:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    660:660:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsText -> org.b.c.d$m:
    java.lang.String searchText -> a
    628:630:void <init>(java.lang.String) -> <init>
    634:634:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    639:639:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$CssNthEvaluator -> org.b.c.d$n:
    int a -> a
    int b -> b
    407:410:void <init>(int,int) -> <init>
    417:423:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    428:432:java.lang.String toString() -> toString
    java.lang.String getPseudoClass() -> a
    int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
org.jsoup.select.Evaluator$Id -> org.b.c.d$o:
    java.lang.String id -> a
    60:62:void <init>(java.lang.String) -> <init>
    66:66:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    71:71:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEquals -> org.b.c.d$p:
    352:353:void <init>(int) -> <init>
    357:357:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    362:362:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEvaluator -> org.b.c.d$q:
    int index -> a
    617:619:void <init>(int) -> <init>
org.jsoup.select.Evaluator$IndexGreaterThan -> org.b.c.d$r:
    332:333:void <init>(int) -> <init>
    337:337:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    342:342:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexLessThan -> org.b.c.d$s:
    312:313:void <init>(int) -> <init>
    317:317:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    322:322:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsEmpty -> org.b.c.d$t:
    593:593:void <init>() -> <init>
    596:601:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    605:605:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstChild -> org.b.c.d$u:
    532:532:void <init>() -> <init>
    535:536:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    541:541:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstOfType -> org.b.c.d$v:
    385:386:void <init>() -> <init>
    389:389:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastChild -> org.b.c.d$w:
    370:370:void <init>() -> <init>
    373:374:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    379:379:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastOfType -> org.b.c.d$x:
    395:396:void <init>() -> <init>
    399:399:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsNthChild -> org.b.c.d$y:
    448:449:void <init>(int,int) -> <init>
    452:452:int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    457:457:java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthLastChild -> org.b.c.d$z:
    468:469:void <init>(int,int) -> <init>
    473:473:int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    478:478:java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthLastOfType -> org.b.c.d$aa:
    510:511:void <init>(int,int) -> <init>
    515:520:int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    525:525:java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthOfType -> org.b.c.d$ab:
    488:489:void <init>(int,int) -> <init>
    492:498:int calculatePosition(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    503:503:java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsOnlyChild -> org.b.c.d$ac:
    562:562:void <init>() -> <init>
    565:566:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    570:570:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsOnlyOfType -> org.b.c.d$ad:
    574:574:void <init>() -> <init>
    577:585:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    589:589:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsRoot -> org.b.c.d$ae:
    550:550:void <init>() -> <init>
    553:554:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    558:558:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Matches -> org.b.c.d$af:
    java.util.regex.Pattern pattern -> a
    670:672:void <init>(java.util.regex.Pattern) -> <init>
    676:677:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    682:682:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$MatchesOwn -> org.b.c.d$ag:
    java.util.regex.Pattern pattern -> a
    692:694:void <init>(java.util.regex.Pattern) -> <init>
    698:699:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    704:704:java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Tag -> org.b.c.d$ah:
    java.lang.String tagName -> a
    39:41:void <init>(java.lang.String) -> <init>
    45:45:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    50:50:java.lang.String toString() -> toString
org.jsoup.select.NodeTraversor -> org.b.c.e:
    org.jsoup.select.NodeVisitor visitor -> a
    18:20:void <init>(org.jsoup.select.NodeVisitor) -> <init>
    27:47:void traverse(org.jsoup.nodes.Node) -> a
org.jsoup.select.NodeVisitor -> org.b.c.f:
    void head(org.jsoup.nodes.Node,int) -> a
    void tail(org.jsoup.nodes.Node,int) -> b
org.jsoup.select.QueryParser -> org.b.c.g:
    java.lang.String[] combinators -> a
    java.lang.String[] AttributeEvals -> b
    org.jsoup.parser.TokenQueue tq -> c
    java.lang.String query -> d
    java.util.List evals -> e
    java.util.regex.Pattern NTH_AB -> f
    java.util.regex.Pattern NTH_B -> g
    21:30:void <init>(java.lang.String) -> <init>
    38:39:org.jsoup.select.Evaluator parse(java.lang.String) -> a
    47:72:org.jsoup.select.Evaluator parse() -> a
    76:125:void combinator(char) -> a
    128:139:java.lang.String consumeSubQuery() -> b
    143:198:void findElements() -> c
    201:204:void byId() -> d
    207:210:void byClass() -> e
    213:221:void byTag() -> f
    224:255:void byAttribute() -> g
    258:259:void allElements() -> h
    263:264:void indexLessThan() -> i
    267:268:void indexGreaterThan() -> j
    271:272:void indexEquals() -> k
    279:309:void cssNthChild(boolean,boolean) -> a
    312:314:int consumeIndex() -> l
    319:323:void has() -> m
    327:334:void contains(boolean) -> a
    338:346:void matches(boolean) -> b
    350:355:void not() -> n
    16:276:void <clinit>() -> <clinit>
org.jsoup.select.Selector -> org.b.c.h:
    org.jsoup.select.Evaluator evaluator -> a
    org.jsoup.nodes.Element root -> b
    78:87:void <init>(java.lang.String,org.jsoup.nodes.Element) -> <init>
    106:106:org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element) -> a
    148:148:org.jsoup.select.Elements select() -> a
org.jsoup.select.Selector$SelectorParseException -> org.b.c.h$a:
    170:171:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jsoup.select.StructuralEvaluator -> org.b.c.i:
    org.jsoup.select.Evaluator evaluator -> a
    8:122:void <init>() -> <init>
org.jsoup.select.StructuralEvaluator$Has -> org.b.c.i$a:
    18:20:void <init>(org.jsoup.select.Evaluator) -> <init>
    23:27:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    32:32:java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediateParent -> org.b.c.i$b:
    78:80:void <init>(org.jsoup.select.Evaluator) -> <init>
    83:87:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    92:92:java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling -> org.b.c.i$c:
    123:125:void <init>(org.jsoup.select.Evaluator) -> <init>
    128:132:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    137:137:java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Not -> org.b.c.i$d:
    37:39:void <init>(org.jsoup.select.Evaluator) -> <init>
    42:42:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    47:47:java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Parent -> org.b.c.i$e:
    52:54:void <init>(org.jsoup.select.Evaluator) -> <init>
    57:68:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    73:73:java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$PreviousSibling -> org.b.c.i$f:
    97:99:void <init>(org.jsoup.select.Evaluator) -> <init>
    102:113:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    118:118:java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Root -> org.b.c.i$g:
    11:11:void <init>() -> <init>
    13:13:boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
